[1,["ecpdLyjvZBwrvm+cedCcQy","f0BIwQ8D5Ml7nTNQbh1YlS","a2MjXRFdtLlYQ5ouAFv/+R","27I5oi35dJup9fBJOedvhD","e97GVMl6JHh5Ml5qEDdSGa","29FYIk+N1GYaeWH/q1NxQO","ec6LVSim9KbpE7sP22tQK+","71VhFCTINJM6/Ky3oX9nBT","afUMEfbGdLl69MGzYmB5uM","02delMVqdBD70a/HSD99FK","e8pm9732JNMZP7b3bTA4+b","a1uZIhu5xIwI6p1AF7c8zB","b4P/PCArtIdIH38t6mlw8Y","e8Ueib+qJEhL6mXAHdnwbi","afJYn+OZpL/Zql6zfLOmMc","12NXH2oOtAhKhYcE6cgMmW","52LD0cDVVAjb0gwineV8yU","c46mKwv3ZEQJcVCFkvFJBC","f3Fj2IABpP4YffLmtzblgp","e4qPaS+KFPYqLvdFQTQAsY","d6gsoi/AtPqKoBggk2jTCm","a65NkGSHFFBZI4gjnzH86I"],["node","_spriteFrame","_textureSetter","_parent","_effectAsset","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite","bg","shadowCamera","shadow","ray","camera","graphics","scene"],[["cc.Node",["_name","_active","_objFlags","_id","_opacity","_components","_contentSize","_parent","_trs","_children","_color","_anchorPoint"],-2,9,5,1,7,2,5,5],"cc.SpriteFrame",["cc.Sprite",["_sizeMode","_isTrimmedMode","_type","_dstBlendFactor","_materials","node","_spriteFrame"],-1,3,1,6],["cc.Node",["_name","_active","_parent","_components","_contentSize","_trs","_anchorPoint"],1,1,2,5,7,5],["cc.Widget",["_alignFlags","_left","_right","_top","_bottom","alignMode","_originalWidth","_originalHeight","node"],-5,1],["cc.Camera",["_cullingMask","_clearFlags","_depth","_zoomRatio","_nearClip","node"],-2,1],["cc.Graphics",["_materials","node"],3,3,1],["cc.Material",["_name","_techniqueData"],1],["cc.Material",["_name","_techniqueData"],2,11],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Canvas",["_fitWidth","node","_designResolution"],2,1,5],["f27abc9Kq9M9YY+mw/i2T6U",["node","graphics","camera","ray","shadow","shadowCamera","bg"],3,1,1,1,1,1,1,1],["cc.Button",["_N$transition","node","clickEvents","_N$normalColor","_N$pressedColor","_N$disabledColor","_N$target","_N$normalSprite","_N$pressedSprite","_N$hoverSprite","_N$disabledSprite"],2,1,9,5,5,5,1,6,6,6,6],["cc.ClickEvent",["_componentId","handler","target"],1,1],["cc.Scene",["_name","_active","autoReleaseAssets","_children","_anchorPoint","_trs"],0,2,5,7],["cc.Label",["_string","_fontSize","_enableWrapText","_N$horizontalAlign","_N$verticalAlign","_N$overflow","_N$cacheMode","node","_materials"],-4,1,3]],[[2,0,1,5,4,6,3],[9,0,1,2,4],[7,0,1,3],[0,0,2,9,5,6,3],[0,0,7,9,5,6,8,2],[0,0,1,7,5,6,3],[0,0,1,7,5,6,8,3],[0,0,2,7,5,10,6,3],[3,0,1,2,3,4,3],[4,0,8,2],[4,5,0,6,7,8,5],[2,2,0,1,5,4,6,4],[13,0,1,2,3,4,5,6,7,8,9,10,2],[14,0,1,2,3],[16,0,1,2,3,4,5,6,7,8,8],[8,0,1,2],[10,0,1,3],[0,0,3,9,5,6,8,3],[0,0,9,5,6,2],[0,0,7,9,2],[0,0,7,5,10,6,2],[0,0,1,7,5,6,11,8,3],[0,0,7,5,6,8,2],[0,0,4,7,5,10,6,8,3],[3,0,2,3,4,5,2],[3,0,2,3,5,2],[3,0,2,3,6,2],[11,0,1,2,2],[4,0,1,2,3,4,8,6],[12,0,1,2,3,4,5,6,1],[2,0,5,4,6,2],[2,0,1,4,3],[2,0,1,5,4,3],[2,3,0,5,4,6,3],[15,0,1,2,3,4,5,4],[5,0,1,2,3,5,5],[5,0,1,4,5,4],[6,1,0,1],[6,0,1]],[[[{"name":"monster016","rect":[0,0,21,21],"offset":[0,0],"originalSize":[21,21],"capInsets":[0,0,0,0]}],[1],0,[0],[2],[6]],[[{"name":"default_btn_disabled","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[1],0,[0],[2],[7]],[[[2,"NewSightMat",{"0":{"defines":{"USE_ALPHA_TEST":true},"props":{"alphaThreshold":0.1}}}]],0,0,[0],[4],[8]],[[{"name":"default_sprite_splash","rect":[0,0,2,2],"offset":[0,0],"originalSize":[2,2],"capInsets":[0,0,0,0]}],[1],0,[0],[2],[9]],[[[1,"WaterEffect",[{"hash":2605889600,"record":null,"name":"WaterEffect|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform ARGS{\n  vec2 center;\n  vec2 canvas_size;\n  float wave_radius;\n  float wave_offset;\n  float wh_ratio;\n};\nvoid main () {\n  vec2 st = gl_FragCoord.xy / canvas_size.xy;\n  float scaleWH = canvas_size.x/canvas_size.y;\n  vec2 distance_vec = st - center;\n  float rx = abs(distance_vec.x);\n  float ry = abs(distance_vec.y);\n  float distance = length(vec2(rx * wh_ratio, ry / scaleWH * wh_ratio));\n  float sin_factor = sin(distance * 100.0 + cc_time.x) * 0.05;\n  float discard_factor = clamp(wave_radius - abs(wave_offset - distance), 0.0, 1.0);\n  vec2 offset = normalize(distance_vec) * sin_factor * discard_factor;\n  vec2 uv = offset + v_uv0;\n  gl_FragColor = texture(texture, uv);\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nuniform vec4 cc_time;\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform vec2 center;\nuniform vec2 canvas_size;\nuniform float wave_radius;\nuniform float wave_offset;\nuniform float wh_ratio;\nvoid main () {\n  vec2 st = gl_FragCoord.xy / canvas_size.xy;\n  float scaleWH = canvas_size.x/canvas_size.y;\n  vec2 distance_vec = st - center;\n  float rx = abs(distance_vec.x);\n  float ry = abs(distance_vec.y);\n  float distance = length(vec2(rx * wh_ratio, ry / scaleWH * wh_ratio));\n  float sin_factor = sin(distance * 100.0 + cc_time.x) * 0.05;\n  float discard_factor = clamp(wave_radius - abs(wave_offset - distance), 0.0, 1.0);\n  vec2 offset = normalize(distance_vec) * sin_factor * discard_factor;\n  vec2 uv = offset + v_uv0;\n  gl_FragColor = texture2D(texture, uv);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","binding":1,"members":[{"name":"center","type":14,"count":1},{"name":"canvas_size","type":14,"count":1},{"name":"wave_radius","type":13,"count":1},{"name":"wave_offset","type":13,"count":1},{"name":"wh_ratio","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"WaterEffect|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"canvas_size":{"type":14,"value":[1280,720]},"center":{"type":14,"value":[0.5,0.5]},"wave_radius":{"type":13,"value":[0.05]},"wave_offset":{"type":13,"value":[2]},"wh_ratio":{"type":13,"value":[1]}}}]}]]],0,0,[],[],[]],[[[1,"NewSight",[{"hash":1594810393,"record":null,"name":"NewSight|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\nin float a_dist;\nout float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}","frag":"\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_color;\nin float v_dist;\nuniform Props {\n  vec2 screen;\n  vec2 lightPos;\n  float maxRadius;\n  float whRatio;\n};\nvoid main () {\n  vec4 o = v_color;\n  vec2 st = gl_FragCoord.xy / screen.xy;\n  float scaleWH = screen.x/screen.y;\n  ALPHA_TEST(o);\n  vec2 uv = st - lightPos;\n  float rx = abs(uv.x);\n  float ry = abs(uv.y);\n  float fade = o.a;\n  float radius = length(vec2(rx * whRatio, ry / scaleWH * whRatio));\n  float radiusX = length(vec2(rx * whRatio, 0.0));\n  float radiusY = length(vec2(0.0, ry / scaleWH * whRatio));\n  float radiusXy = radiusX;\n  if(radiusX<radiusY){\n    radiusXy = radiusY;\n  }\n  o.a = 1.0 - smoothstep(0.05, maxRadius, radiusXy);\n  o.a *= fade;\n  #if CC_SUPPORT_standard_derivatives\n    float aa = fwidth(v_dist);\n  #else\n    float aa = 0.05;\n  #endif\n  float alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\n  o.rgb *= o.a;\n  o *= alpha;\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\nattribute float a_dist;\nvarying float v_dist;\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  pos = cc_matViewProj * cc_matWorld * pos;\n  v_color = a_color;\n  v_dist = a_dist;\n  gl_Position = pos;\n}","frag":"\n#if CC_SUPPORT_standard_derivatives\n  #extension GL_OES_standard_derivatives : enable\n#endif\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_color;\nvarying float v_dist;\nuniform vec2 screen;\nuniform vec2 lightPos;\nuniform float maxRadius;\nuniform float whRatio;\nvoid main () {\n  vec4 o = v_color;\n  vec2 st = gl_FragCoord.xy / screen.xy;\n  float scaleWH = screen.x/screen.y;\n  ALPHA_TEST(o);\n  vec2 uv = st - lightPos;\n  float rx = abs(uv.x);\n  float ry = abs(uv.y);\n  float fade = o.a;\n  float radius = length(vec2(rx * whRatio, ry / scaleWH * whRatio));\n  float radiusX = length(vec2(rx * whRatio, 0.0));\n  float radiusY = length(vec2(0.0, ry / scaleWH * whRatio));\n  float radiusXy = radiusX;\n  if(radiusX<radiusY){\n    radiusXy = radiusY;\n  }\n  o.a = 1.0 - smoothstep(0.05, maxRadius, radiusXy);\n  o.a *= fade;\n  #if CC_SUPPORT_standard_derivatives\n    float aa = fwidth(v_dist);\n  #else\n    float aa = 0.05;\n  #endif\n  float alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);\n  o.rgb *= o.a;\n  o *= alpha;\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_SUPPORT_standard_derivatives","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Props","binding":1,"members":[{"name":"screen","type":14,"count":1},{"name":"lightPos","type":14,"count":1},{"name":"maxRadius","type":13,"count":1},{"name":"whRatio","type":13,"count":1}],"defines":[]}],"samplers":[]}],[{"passes":[{"program":"NewSight|vs|fs","blendState":{"targets":[{"blend":true,"blendSrc":775,"blendDst":1,"blendSrcAlpha":775,"blendDstAlpha":1}]},"rasterizerState":{"cullMode":0},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"screen":{"type":14,"value":[400,400]},"lightPos":{"type":14,"value":[0.5,0.5]},"maxRadius":{"type":13,"value":[0.75]},"whRatio":{"type":13,"value":[1]}}}]}]]],0,0,[],[],[]],[[[15,"FogMat",[{},"0",11,[{"defines":{"USE_TEXTURE":true}},"props",11,[{"radius":0.5,"wh_ratio":1},"center",8,[0,0.5,0.5]]]]]],0,0,[0],[4],[10]],[[{"name":"startbg00","rect":[0,0,128,64],"offset":[0,0],"originalSize":[128,64],"capInsets":[0,0,0,0]}],[1],0,[0],[2],[11]],[[[1,"FogEffect",[{"hash":2819043487,"record":null,"name":"FogEffect|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\nuniform Properties{\n  float wh_ratio;\n  float radius;\n  vec2 center;\n};\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  o *= texture(texture, v_uv0);\n  o *= v_color;\n  float circle = radius * radius;\n  float rx = center.x * wh_ratio;\n  float ry = center.y;\n  float blur = radius;\n  float dis = (v_uv0.x * wh_ratio - rx) * (v_uv0.x * wh_ratio - rx) + (v_uv0.y  - ry) * (v_uv0.y - ry);\n  float alpha = o.a;\n  o.a = smoothstep(circle, circle - blur, dis);\n  o.a*=alpha;\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\nuniform float wh_ratio;\nuniform float radius;\nuniform vec2 center;\n#endif\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  o *= texture2D(texture, v_uv0);\n  o *= v_color;\n  float circle = radius * radius;\n  float rx = center.x * wh_ratio;\n  float ry = center.y;\n  float blur = radius;\n  float dis = (v_uv0.x * wh_ratio - rx) * (v_uv0.x * wh_ratio - rx) + (v_uv0.y  - ry) * (v_uv0.y - ry);\n  float alpha = o.a;\n  o.a = smoothstep(circle, circle - blur, dis);\n  o.a*=alpha;\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Properties","binding":1,"members":[{"name":"wh_ratio","type":13,"count":1},{"name":"radius","type":13,"count":1},{"name":"center","type":14,"count":1}],"defines":["USE_TEXTURE"]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"FogEffect|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"wh_ratio":{"type":13,"value":[1]},"radius":{"type":13,"value":[0.5]},"center":{"type":14,"value":[0.5,0.5]}}}]}]]],0,0,[],[],[]],[[{"name":"default_btn_pressed","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[1],0,[0],[2],[12]],[[{"name":"default_btn_normal","rect":[0,0,40,40],"offset":[0,0],"originalSize":[40,40],"capInsets":[12,12,12,12]}],[1],0,[0],[2],[13]],[[[2,"WaterMat",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[4],[14]],[[[16,"test",null],[17,"Canvas","a5esZu+45LA5mBpvttspPD",[-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15],[[27,true,-1,[5,1280,720]],[9,45,-2]],[5,1280,720],[640,360,0,0,0,0,1,1,1,1]],[18,"Sight",[-24],[[29,-22,-21,-20,-19,-18,-17,-16],[28,45,-640,-640,-360,-360,-23]],[5,1280,720]],[3,"Background",512,[-27],[[11,1,0,false,-25,[15],16],[10,0,45,100,40,-26]],[5,100,40]],[3,"Background",512,[-30],[[11,1,0,false,-28,[22],23],[10,0,45,100,40,-29]],[5,100,40]],[19,"Dungeon",1,[2,-31,-32]],[20,"bg",1,[[0,0,false,-33,[0],1],[9,45,-34]],[4,4281282351],[5,1280,720]],[21,"startbg00",false,1,[[30,0,-35,[5],6]],[5,1280,720],[0,0,0],[-640,-360,0,0,0,0,1,1,1,1]],[4,"ZoomButton",1,[3],[[12,2,-36,[[13,"f27abc9Kq9M9YY+mw/i2T6U","changeZoom",2]],[4,4293322470],[4,4291348680],[4,3363338360],3,17,18,19,20]],[5,100,40],[567.768,431.162,0,0,0,0,1,1,1,1]],[4,"CastButton",1,[4],[[12,2,-37,[[13,"f27abc9Kq9M9YY+mw/i2T6U","changeRayCast",2]],[4,4293322470],[4,4291348680],[4,3363338360],4,24,25,26,27]],[5,100,40],[429.516,431.162,0,0,0,0,1,1,1,1]],[34,"New Node",false,true,[1],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[24,"Main Camera",1,[-38],[5,1280,720],[0,0,232.09480821422957,0,0,0,1,1,1,1]],[35,-65,7,10,0.5,11],[25,"ShadowCamera",1,[-39],[0,0,554.2562584220408,0,0,0,1,1,1,1]],[36,64,7,0.1,13],[26,"graphics",2,[-40],[0,0,0]],[37,15,[2]],[38,[3]],[8,"ray",false,5,[17],[5,1280,720]],[31,0,false,[4]],[8,"shadow",false,1,[19],[5,1280,720]],[5,"New Sprite(Splash)",false,5,[[0,0,false,-41,[7],8]],[5,100,100]],[22,"monster016",1,[[0,0,false,-42,[9],10]],[5,100,100],[113.508,31.238,0,0,0,0,1,1,1,1]],[6,"monster017",false,1,[[0,0,false,-43,[11],12]],[5,100,100],[-28.319,30.678,0,0,0,0,1,1,1,1]],[5,"sprite",false,1,[[32,0,false,-44,[13]]],[5,1280,720]],[7,"Label",512,3,[[14,"Zoom",20,false,1,1,1,1,-45,[14]]],[4,4278190080],[5,100,40]],[7,"Label",512,4,[[14,"Cast",20,false,1,1,1,1,-46,[21]]],[4,4278190080],[5,100,40]],[6,"chapter04disable",false,1,[[0,0,false,-47,[28],29]],[5,21,21],[0,0,0,0,0,0,1,4,4,1]],[23,"New Sprite(Splash)",128,1,[[33,775,0,-48,[30],31]],[4,4278190080],[5,200,200],[114.536,54.977,0,0,0,0,1,1,1,1]]],0,[0,0,1,0,0,1,0,-1,6,0,-2,11,0,-3,13,0,-4,5,0,-5,22,0,-6,23,0,-7,24,0,-8,20,0,-9,8,0,-10,9,0,-11,27,0,-12,7,0,-13,28,0,9,7,0,10,14,0,11,19,0,12,17,0,13,12,0,14,16,0,0,2,0,0,2,0,-1,15,0,0,3,0,0,3,0,-1,25,0,0,4,0,0,4,0,-1,26,0,-2,18,0,-3,21,0,0,6,0,0,6,0,0,7,0,0,8,0,0,9,0,-1,12,0,-1,14,0,-1,16,0,0,21,0,0,22,0,0,23,0,0,24,0,0,25,0,0,26,0,0,27,0,0,28,0,15,10,1,3,10,2,3,5,3,3,8,4,3,9,17,0,18,19,0,20,48],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,1,-1,-1,-1,-1,1,-1,1,-1,1,-1,1,-1,-1,-1,1,5,6,7,8,-1,-1,1,5,6,7,8,-1,1,-1,1],[0,2,15,16,17,18,19,20,2,0,3,0,3,0,0,0,1,1,4,1,5,0,0,1,1,4,1,5,21,3,0,2]]]]