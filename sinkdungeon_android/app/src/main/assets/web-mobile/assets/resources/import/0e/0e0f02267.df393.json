[1,["31jfTdC7RMNp89uuQ40/vC","ecpdLyjvZBwrvm+cedCcQy","07hE6NNDZMz62f4o1yMeNM","3bsBu/7sxGkpdS7ka1o1uk","a4/JsixPZJJILnzP9CSAw/"],["node","_spriteFrame","_effectAsset","root","data"],[["cc.Node",["_name","_groupIndex","_opacity","_components","_prefab","_contentSize","_parent","_anchorPoint","_trs","_children"],0,9,4,5,1,5,7,2],["cc.PrefabInfo",["fileId","root"],2,1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],1],["cc.Prefab",["_name"],2],["cc.RigidBody",["_gravityScale","_linearDamping","_fixedRotation","enabledContactListener","node"],-1,1],["cc.PhysicsBoxCollider",["tag","_density","node","_size"],1,1,5],["cc.BoxCollider",["tag","node","_size"],2,1,5],["7b8abAQqgxLbKCSpiTgLOQk",["node"],3,1],["cc.Sprite",["node","_materials","_spriteFrame"],3,1,3,6]],[[1,0,1,2],[9,0,1,2,1],[2,0,1,2,4],[3,0,1,3],[4,0,2],[0,0,1,9,3,4,5,3],[0,0,2,1,6,3,4,5,7,8,4],[0,0,1,6,3,4,5,7,8,3],[5,0,1,2,3,4,5],[6,0,1,2,3,3],[7,0,1,2,2],[8,0,1],[1,1,1]],[[[[2,"ColorOutlineEffect",[{"hash":3667455959,"record":null,"name":"ColorOutlineEffect|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform Properties{\n  vec4 addColor;\n  vec4 outlineColor;\n  float outlineSize;\n  float textureSizeWidth;\n  float textureSizeHeight;\n  float openOutline;\n};\nint getIsStrokeWithAngel(float angel)\n{\n  int stroke = 0;\n  vec2 textureSize = vec2(textureSizeWidth,textureSizeHeight);\n  float rad = angel * 0.01745329252;\n  vec2 unit = 1.0 / textureSize.xy;\n  vec2 offset = vec2(outlineSize * cos(rad) * unit.x, outlineSize * sin(rad) * unit.y);\n  vec2 v = v_uv0 + offset;\n  float a = texture2D(texture, v).a;\n  if (a < 0.5 )\n  {\n      stroke = 1;\n  }\n  return stroke;\n}\nvoid main () {\n  vec4 curr_color = texture2D(texture, v_uv0);\n  if (curr_color.a < 0.5||openOutline < 0.9)\n  {\n      gl_FragColor = v_color*curr_color;\n      return;\n  }\n  if (openOutline < 0.9)\n  {\n      gl_FragColor = v_color*curr_color;\n      return;\n  }\n  int strokeCount = 0;\n  strokeCount += getIsStrokeWithAngel(0.0);\n  strokeCount += getIsStrokeWithAngel(30.0);\n  strokeCount += getIsStrokeWithAngel(60.0);\n  strokeCount += getIsStrokeWithAngel(90.0);\n  strokeCount += getIsStrokeWithAngel(120.0);\n  strokeCount += getIsStrokeWithAngel(150.0);\n  strokeCount += getIsStrokeWithAngel(180.0);\n  strokeCount += getIsStrokeWithAngel(210.0);\n  strokeCount += getIsStrokeWithAngel(240.0);\n  strokeCount += getIsStrokeWithAngel(270.0);\n  strokeCount += getIsStrokeWithAngel(300.0);\n  strokeCount += getIsStrokeWithAngel(330.0);\n  if (strokeCount > 0)\n  {\n      curr_color = outlineColor;\n  }\n  vec4 o = v_color * curr_color;\n  o.rgb = o.rgb + addColor.rgb;\n  gl_FragColor = o;\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform vec4 addColor;\nuniform vec4 outlineColor;\nuniform float outlineSize;\nuniform float textureSizeWidth;\nuniform float textureSizeHeight;\nuniform float openOutline;\nint getIsStrokeWithAngel(float angel)\n{\n  int stroke = 0;\n  vec2 textureSize = vec2(textureSizeWidth,textureSizeHeight);\n  float rad = angel * 0.01745329252;\n  vec2 unit = 1.0 / textureSize.xy;\n  vec2 offset = vec2(outlineSize * cos(rad) * unit.x, outlineSize * sin(rad) * unit.y);\n  vec2 v = v_uv0 + offset;\n  float a = texture2D(texture, v).a;\n  if (a < 0.5 )\n  {\n      stroke = 1;\n  }\n  return stroke;\n}\nvoid main () {\n  vec4 curr_color = texture2D(texture, v_uv0);\n  if (curr_color.a < 0.5||openOutline < 0.9)\n  {\n      gl_FragColor = v_color*curr_color;\n      return;\n  }\n  if (openOutline < 0.9)\n  {\n      gl_FragColor = v_color*curr_color;\n      return;\n  }\n  int strokeCount = 0;\n  strokeCount += getIsStrokeWithAngel(0.0);\n  strokeCount += getIsStrokeWithAngel(30.0);\n  strokeCount += getIsStrokeWithAngel(60.0);\n  strokeCount += getIsStrokeWithAngel(90.0);\n  strokeCount += getIsStrokeWithAngel(120.0);\n  strokeCount += getIsStrokeWithAngel(150.0);\n  strokeCount += getIsStrokeWithAngel(180.0);\n  strokeCount += getIsStrokeWithAngel(210.0);\n  strokeCount += getIsStrokeWithAngel(240.0);\n  strokeCount += getIsStrokeWithAngel(270.0);\n  strokeCount += getIsStrokeWithAngel(300.0);\n  strokeCount += getIsStrokeWithAngel(330.0);\n  if (strokeCount > 0)\n  {\n      curr_color = outlineColor;\n  }\n  vec4 o = v_color * curr_color;\n  o.rgb = o.rgb + addColor.rgb;\n  gl_FragColor = o;\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"Properties","binding":1,"members":[{"name":"addColor","type":16,"count":1},{"name":"outlineColor","type":16,"count":1},{"name":"outlineSize","type":13,"count":1},{"name":"textureSizeWidth","type":13,"count":1},{"name":"textureSizeHeight","type":13,"count":1},{"name":"openOutline","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"ColorOutlineEffect|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"outlineSize":{"type":13,"value":[2]},"openOutline":{"type":13,"value":[0]},"textureSizeWidth":{"type":13,"value":[1]},"textureSizeHeight":{"type":13,"value":[1]},"addColor":{"type":16,"value":[0,0,0,0],"inspector":{"type":"color"}},"outlineColor":{"type":16,"value":[0,0,0,0],"inspector":{"type":"color"}}}}]}]]],0,0,[],[],[]],[[[3,"ColorOutlineMat",{"0":{"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[2],[0]],[[[4,"InteractBuilding"],[5,"Decorate",3,[-6,-7],[[8,0,5,true,true,-2],[9,8,300,-3,[5,60,62]],[10,8,-4,[5,60,62]],[11,-5]],[12,-1],[5,128,128]],[6,"shadow",128,3,1,[[1,-8,[0],1]],[0,"ee+3mZJy5JJ6qawmGmRI84",1],[5,16,16],[0,0.5,0.25],[0,-32,0,0,0,0,1,4,4,1]],[7,"sprite",3,1,[[1,-9,[2],3]],[0,"08IUoMGRZN1b/WW1yAyHGC",1],[5,15,31],[0,0.5,0.25],[0,0,0,0,0,0,1,4,4,1]]],0,[0,3,1,0,0,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,-2,3,0,0,2,0,0,3,0,4,1,9],[0,0,0,0],[-1,1,-1,1],[1,2,3,4]]]]