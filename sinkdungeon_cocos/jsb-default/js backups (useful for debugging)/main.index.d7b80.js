window.__require = function t(e, i, o) {
function a(r, s) {
if (!i[r]) {
if (!e[r]) {
var l = r.split("/");
l = l[l.length - 1];
if (!e[l]) {
var c = "function" == typeof __require && __require;
if (!s && c) return c(l, !0);
if (n) return n(l, !0);
throw new Error("Cannot find module '" + r + "'");
}
r = l;
}
var u = i[r] = {
exports: {}
};
e[r][0].call(u.exports, function(t) {
return a(e[r][1][t] || t);
}, u, u.exports, t, e, i, o);
}
return i[r].exports;
}
for (var n = "function" == typeof __require && __require, r = 0; r < o.length; r++) a(o[r]);
return a;
}({
AchievementData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6a835W88Z5L36Zxiky/P1I6", "AchievementData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.index = 0;
this.monsters = {};
this.items = {};
this.equips = {};
this.npcs = {};
this.maps = {};
this.challenges = {};
this.furnitures = {};
this.playerLifes = 0;
}
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t);
this.monsters = t.monsters ? t.monsters : {};
this.items = t.items ? t.items : {};
this.equips = t.equips ? t.equips : {};
this.npcs = t.npcs ? t.npcs : {};
this.maps = t.maps ? t.maps : {};
this.challenges = t.challenges ? t.challenges : {};
this.furnitures = t.furnitures ? t.furnitures : {};
}
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
AchievementItemDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "96567VnqW1J7rI4r4v/kGbc", "AchievementItemDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../manager/EquipmentManager"), s = t("../../utils/AudioPlayer"), l = t("./BaseDialog"), c = t("./EquipmentAndItemDialog"), u = cc._decorator, p = u.ccclass, h = u.property, d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.equipmentAndItemDialogPrefab = null;
e.equipmentAndItemDialog = null;
e.icon = null;
e.infoLabel = null;
return e;
}
i = e;
e.prototype.onLoad = function() {
this.equipmentAndItemDialog = this.initDialog();
};
e.prototype.initDialog = function() {
var t = cc.instantiate(this.equipmentAndItemDialogPrefab);
t.parent = this.node;
var e = t.getComponent(c.default);
e.changeBgAndAnchor(c.default.BG_TYPE_NONE);
e.hideDialog();
return e;
};
e.prototype.start = function() {};
e.prototype.show = function(e, o, a, n, s, l) {
t.prototype.show.call(this);
if (s) {
this.icon.spriteFrame = s;
this.icon.node.width = 160;
this.icon.node.height = 160 / s.getOriginalSize().width * s.getOriginalSize().height;
}
if (l > 0) {
var c = l % 20;
l > 100 && (c = 20);
for (var u = "", p = 0; p < c; p += 4) u += "★";
this.infoLabel.string = u;
var h = Math.floor(l / 20);
h > i.COLORS.length - 1 && (h = i.COLORS.length - 1);
this.infoLabel.node.color = cc.Color.WHITE.fromHEX(i.COLORS[h]);
}
a && (a = r.default.getOriginEquipData(a.img));
this.equipmentAndItemDialog.showDialog(cc.v3(80, 150), e, o, a, n);
};
e.prototype.close = function() {
s.default.play(s.default.SELECT);
this.dismiss();
};
var i;
e.COLORS = [ "#ffffff", "#00ff00", "#0000ff", "#800080", "#ffa500" ];
n([ h(cc.Prefab) ], e.prototype, "equipmentAndItemDialogPrefab", void 0);
n([ h(cc.Sprite) ], e.prototype, "icon", void 0);
n([ h(cc.Label) ], e.prototype, "infoLabel", void 0);
return i = n([ p ], e);
}(l.default);
i.default = d;
cc._RF.pop();
}, {
"../../manager/EquipmentManager": "EquipmentManager",
"../../utils/AudioPlayer": "AudioPlayer",
"./BaseDialog": "BaseDialog",
"./EquipmentAndItemDialog": "EquipmentAndItemDialog"
} ],
AchievementItem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "769e5+ojuhFiYvxDanjxQKn", "AchievementItem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/AudioPlayer"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isSelect = !1;
e.sprite = null;
e.index = 0;
e.parentIndex = 0;
e.count = 0;
e.spriteFrame = null;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.node.on(cc.Node.EventType.TOUCH_START, function() {}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function() {
if (t.node && t.count > 0) {
r.default.play(r.default.SELECT);
t.achievements.achievementItemDialog.show(t.nonPlayerData, t.itemData, t.equipData, t.furnitureData, t.sprite.spriteFrame, t.count);
} else r.default.play(r.default.SELECT_FAIL);
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {}, this);
};
e.prototype.init = function(t, e, i, o, a, n, r, s, l) {
this.nonPlayerData = n;
this.itemData = r;
this.equipData = s;
this.furnitureData = l;
this.achievements = t;
this.parentIndex = e;
this.index = i;
this.count = o;
this.spriteFrame = a;
this.isSelect = !1;
this.updateData();
};
e.prototype.updateData = function() {
this.isSelect = !1;
this.sprite.spriteFrame = null;
if (this.spriteFrame) {
this.sprite.spriteFrame = this.spriteFrame;
var t = this.spriteFrame.getOriginalSize().width, e = this.spriteFrame.getOriginalSize().height;
this.sprite.node.width = 4 * t;
this.sprite.node.height = 4 * e;
if (this.sprite.node.height > 96) {
this.sprite.node.height = 96;
this.sprite.node.width = 96 / this.spriteFrame.getOriginalSize().height * this.spriteFrame.getOriginalSize().width;
}
var i = 4;
e > 96 && (i = .5);
this.mat || (this.mat = this.sprite.getMaterial(0));
this.mat.setProperty("textureSizeWidth", this.spriteFrame.getTexture().width * i);
this.mat.setProperty("textureSizeHeight", this.spriteFrame.getTexture().height * i);
this.mat.setProperty("outlineColor", cc.color(200, 200, 200));
this.mat.setProperty("blackBg", this.count > 0 ? 0 : 1);
this.mat.setProperty("openOutline", this.count > 0 ? 0 : 1);
}
};
e.prototype.setEmpty = function() {
this.sprite.spriteFrame = null;
};
e.prototype.start = function() {};
e.TYPE_EMPTY = 0;
e.TYPE_CHALLENGE = 1;
e.TYPE_MAP = 2;
e.TYPE_FURNITURE = 3;
e.TYPE_NPC = 4;
e.TYPE_BOSS = 5;
e.TYPE_MONSTER = 6;
e.TYPE_EQUIP = 7;
e.TYPE_ITEM = 8;
n([ c(cc.Sprite) ], e.prototype, "sprite", void 0);
return n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../utils/AudioPlayer": "AudioPlayer"
} ],
Achievement: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "5607byYvNBEQ4yBaPsgf0sF", "Achievement");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/EquipmentData"), s = t("../data/FurnitureData"), l = t("../data/ItemData"), c = t("../data/NonPlayerData"), u = t("./Logic"), p = t("../manager/InventoryManager"), h = t("../manager/LoadingManager"), d = t("../ui/AchievementItem"), f = t("../ui/dialog/AchievementItemDialog"), g = t("../utils/AudioPlayer"), y = t("../utils/LocalStorage"), m = t("../ui/LoadingIcon"), v = t("./EventHelper"), E = t("../ui/CursorArea"), _ = cc._decorator, T = _.ccclass, D = _.property, S = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.content = null;
e.prefab = null;
e.lifesLabel = null;
e.coinLabel = null;
e.goldLabel = null;
e.loadingBackground = null;
e.achievementItemDialog = null;
e.loadingIconPrefab = null;
e.cursorAreaPrefab = null;
e.bossSpriteFrames = null;
e.currentListIndex = 0;
e.currentItemIndex = -1;
e.loadingManager = new h.default();
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
E.default.init(this.cursorAreaPrefab);
this.loadingManager.init();
this.removeContent();
this.data = y.default.getAchievementData();
this.lifesLabel && this.data.playerLifes && (this.lifesLabel.string = "DIED " + this.data.playerLifes);
if (this.coinLabel) {
var e = y.default.getValueFromData(y.default.KEY_REAL_COINS);
this.coinLabel.string = "" + (e ? parseInt(e) : 0);
}
this.achievementItemDialog && (this.achievementItemDialog.node.active = !1);
v.EventHelper.on(v.EventHelper.HUD_CANCEL_OR_PAUSE, function() {
t.node && t.node.isValid && t.cancelOrPause();
});
this.loadingIcon = cc.instantiate(this.loadingIconPrefab).getComponent(m.default);
this.loadingIcon.node.parent = this.loadingBackground;
this.loadingIcon.init([ m.default.TYPE_TEXTURE_AUTO, m.default.TYPE_TEXTURE, m.default.TYPE_ITEM, m.default.TYPE_EQUIP, m.default.TYPE_NPC ]);
};
e.prototype.start = function() {
this.loadingManager.loadEquipment();
this.loadingManager.loadAutoSpriteFrames();
this.loadingManager.loadSpriteAtlas(h.default.KEY_TEXTURES, "singleColor");
this.loadingManager.loadSpriteAtlas(h.default.KEY_ITEM, "ammo");
this.loadingManager.loadSpriteAtlas(h.default.KEY_EQUIPMENT, "emptyequipment");
this.loadingManager.loadSpriteAtlas(h.default.KEY_BOSS, "iconboss000");
this.loadingManager.loadMonsters();
this.loadingManager.loadBosses();
this.loadingManager.loadItems();
this.loadingManager.loadNonplayer();
this.loadingManager.loadSuits();
this.loadingManager.loadFurnitures();
this.loadingBackground.active = !0;
};
e.prototype.removeContent = function() {
this.content.removeAllChildren();
};
e.prototype.addItem = function(t) {
this.content.addChild(t.node);
};
e.prototype.changeList = function(t, e) {
this.currentListIndex = parseInt(e);
this.unscheduleAllCallbacks();
switch (this.currentListIndex) {
case i.TYPE_CHALLENGE:
case i.TYPE_MAP:
this.removeContent();
break;

case i.TYPE_FURNITURE:
this.showFurnitureList();
break;

case i.TYPE_NPC:
this.showNpcList();
break;

case i.TYPE_BOSS:
this.showBossList();
break;

case i.TYPE_MONSTER:
this.showMonsterList();
break;

case i.TYPE_EQUIP:
this.showEquipList();
break;

case i.TYPE_ITEM:
this.showItemList();
}
};
e.prototype.showMonsterList = function() {
var t = this;
this.removeContent();
var e = 0, i = function(i) {
h.default.loadNpcSpriteAtlas(i, function() {
var o = new c.default();
o.valueCopy(u.default.monsters[i]);
var a = cc.instantiate(t.prefab).getComponent(d.default);
a.init(t, t.currentListIndex, e++, t.data.monsters[o.resName], u.default.spriteFrameRes(o.resName + "anim000"), o, null, null, null);
t.addItem(a);
});
};
for (var o in u.default.monsters) i(o);
};
e.prototype.showBossList = function() {
this.removeContent();
var t = 0;
for (var e in u.default.bosses) {
var i = new c.default();
i.valueCopy(u.default.bosses[e]);
var o = cc.instantiate(this.prefab).getComponent(d.default);
o.init(this, this.currentListIndex, t++, this.data.npcs[i.resName], u.default.spriteFrameRes("icon" + i.resName), i, null, null, null);
this.addItem(o);
}
};
e.prototype.showNpcList = function() {
var t = this;
this.removeContent();
var e = 0, i = function(i) {
h.default.loadNpcSpriteAtlas(i, function() {
var o = new c.default();
o.valueCopy(u.default.nonplayers[i]);
var a = cc.instantiate(t.prefab).getComponent(d.default);
a.init(t, t.currentListIndex, e++, t.data.npcs[o.resName], u.default.spriteFrameRes(o.resName + "anim000"), o, null, null, null);
t.addItem(a);
});
};
for (var o in u.default.nonplayers) i(o);
};
e.prototype.showItemList = function() {
this.removeContent();
var t = 0;
for (var e in u.default.items) {
var i = new l.default();
i.valueCopy(u.default.items[e]);
var o = cc.instantiate(this.prefab).getComponent(d.default);
o.init(this, this.currentListIndex, t++, this.data.items[i.resName], u.default.spriteFrameRes(i.resName), null, i, null, null);
t > 5 && this.addItem(o);
}
};
e.prototype.showEquipList = function() {
this.removeContent();
var t = 0;
for (var e in u.default.equipments) {
var i = new r.default();
i.valueCopy(u.default.equipments[e]);
var o = cc.instantiate(this.prefab).getComponent(d.default), a = u.default.spriteFrameRes(i.img);
i.equipmetType == p.default.CLOTHES ? a = u.default.spriteFrameRes(i.img + "anim0") : i.equipmetType == p.default.HELMET ? a = u.default.spriteFrameRes(i.img + "anim0") : i.equipmetType == p.default.REMOTE && (a = u.default.spriteFrameRes(i.img + "anim0"));
o.init(this, this.currentListIndex, t++, this.data.equips[i.img], a, null, null, i, null);
t > 1 && this.addItem(o);
}
};
e.prototype.showFurnitureList = function() {
this.removeContent();
var t = 0;
for (var e in u.default.furnitures) {
var i = new s.default();
i.valueCopy(u.default.furnitures[e]);
var o = cc.instantiate(this.prefab).getComponent(d.default);
o.init(this, this.currentListIndex, t++, this.data.furnitures[i.id], u.default.spriteFrameRes(i.resName), null, null, null, i);
this.addItem(o);
}
};
e.prototype.show = function() {
var t = this;
this.loadingIcon && this.loadingIcon.isFirst ? cc.tween(this.loadingBackground).to(.5, {
opacity: 0
}).call(function() {
t.loadingBackground.active = !1;
}).start() : this.loadingBackground.active = !1;
this.changeList(null, "0");
};
e.prototype.backToHome = function() {
cc.director.loadScene("start");
g.default.play(g.default.SELECT);
};
e.prototype.cancelOrPause = function() {
if (this.achievementItemDialog && this.achievementItemDialog.isShow) {
g.default.play(g.default.SELECT);
this.achievementItemDialog.dismiss();
} else this.backToHome();
};
e.addMonsterKillAchievement = function(t) {
var e = y.default.getAchievementData();
if (e.monsters[t]) {
e.monsters[t] = e.monsters[t] + 1;
e.monsters[t] > 9999 && (e.monsters[t] = 9999);
} else e.monsters[t] = 1;
y.default.saveAchievementData(e);
};
e.addPlayerDiedLifesAchievement = function() {
var t = y.default.getAchievementData();
if (t.playerLifes) {
t.playerLifes = t.playerLifes + 1;
t.playerLifes > 9999 && (t.playerLifes = 9999);
} else t.playerLifes = 1;
y.default.saveAchievementData(t);
};
e.addItemAchievement = function(t) {
var e = y.default.getAchievementData();
if (e.items[t]) {
e.items[t] = e.items[t] + 1;
e.items[t] > 9999 && (e.items[t] = 9999);
} else e.items[t] = 1;
y.default.saveAchievementData(e);
};
e.addEquipsAchievement = function(t) {
var e = y.default.getAchievementData();
if (e.equips[t]) {
e.equips[t] = e.equips[t] + 1;
e.equips[t] > 9999 && (e.equips[t] = 9999);
} else e.equips[t] = 1;
y.default.saveAchievementData(e);
};
e.addNpcsAchievement = function(t) {
var e = y.default.getAchievementData();
if (e.npcs[t]) {
e.npcs[t] = e.npcs[t] + 1;
e.npcs[t] > 9999 && (e.npcs[t] = 9999);
} else e.npcs[t] = 1;
y.default.saveAchievementData(e);
};
e.addMapsAchievement = function(t) {
var e = y.default.getAchievementData();
if (e.maps[t]) {
e.maps[t] = e.maps[t] + 1;
e.maps[t] > 9999 && (e.maps[t] = 9999);
} else e.maps[t] = 1;
y.default.saveAchievementData(e);
};
e.addChallengesAchievement = function(t) {
var e = y.default.getAchievementData();
if (e.challenges[t]) {
e.challenges[t] = e.challenges[t] + 1;
e.challenges[t] > 9999 && (e.challenges[t] = 9999);
} else e.challenges[t] = 1;
y.default.saveAchievementData(e);
};
e.addFurnituresAchievement = function(t) {
var e = y.default.getAchievementData();
if (e.furnitures[t]) {
e.furnitures[t] = e.furnitures[t] + 1;
e.furnitures[t] > 9999 && (e.furnitures[t] = 9999);
} else e.furnitures[t] = 1;
y.default.saveAchievementData(e);
};
e.prototype.update = function() {
if (this.loadingManager.isEquipmentLoaded && this.loadingManager.isAllSpriteFramesLoaded() && this.loadingManager.isMonsterLoaded && this.loadingManager.isNonplayerLoaded && this.loadingManager.isItemsLoaded && this.loadingManager.isFurnituresLoaded && this.loadingManager.isSuitsLoaded) {
this.loadingManager.reset();
this.show();
}
};
var i;
e.MONSTER_SIZE = 33;
e.BOSS_SIZE = 9;
e.TYPE_CHALLENGE = 0;
e.TYPE_MAP = 1;
e.TYPE_FURNITURE = 2;
e.TYPE_NPC = 3;
e.TYPE_BOSS = 4;
e.TYPE_MONSTER = 5;
e.TYPE_EQUIP = 6;
e.TYPE_ITEM = 7;
n([ D(cc.Node) ], e.prototype, "content", void 0);
n([ D(cc.Prefab) ], e.prototype, "prefab", void 0);
n([ D(cc.Label) ], e.prototype, "lifesLabel", void 0);
n([ D(cc.Label) ], e.prototype, "coinLabel", void 0);
n([ D(cc.Label) ], e.prototype, "goldLabel", void 0);
n([ D(cc.Node) ], e.prototype, "loadingBackground", void 0);
n([ D(f.default) ], e.prototype, "achievementItemDialog", void 0);
n([ D(cc.Prefab) ], e.prototype, "loadingIconPrefab", void 0);
n([ D(cc.Prefab) ], e.prototype, "cursorAreaPrefab", void 0);
return i = n([ T ], e);
}(cc.Component);
i.default = S;
cc._RF.pop();
}, {
"../data/EquipmentData": "EquipmentData",
"../data/FurnitureData": "FurnitureData",
"../data/ItemData": "ItemData",
"../data/NonPlayerData": "NonPlayerData",
"../manager/InventoryManager": "InventoryManager",
"../manager/LoadingManager": "LoadingManager",
"../ui/AchievementItem": "AchievementItem",
"../ui/CursorArea": "CursorArea",
"../ui/LoadingIcon": "LoadingIcon",
"../ui/dialog/AchievementItemDialog": "AchievementItemDialog",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/LocalStorage": "LocalStorage",
"./EventHelper": "EventHelper",
"./Logic": "Logic"
} ],
ActionSettingDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "10e70WblgRHSrX7aalDj8Q8", "ActionSettingDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../data/SettingsData"), s = t("../../logic/EventHelper"), l = t("../../logic/Logic"), c = t("../../utils/AudioPlayer"), u = t("../../utils/LocalStorage"), p = t("./BaseDialog"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.attack = null;
e.remote = null;
e.dash = null;
e.jump = null;
e.interact = null;
e.skill1 = null;
e.skill2 = null;
e.actions = null;
e.layout = null;
e.equipment = null;
e.isPressed = !1;
e.pressedIndex = -1;
e.buttonArr = [];
e.startPos = cc.Vec2.ZERO;
e.layoutrect = cc.rect();
e.equipmentrect = cc.rect();
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.setAllPos();
this.buttonArr.push(this.attack);
this.buttonArr.push(this.remote);
this.buttonArr.push(this.dash);
this.buttonArr.push(this.jump);
this.buttonArr.push(this.interact);
this.buttonArr.push(this.skill1);
this.buttonArr.push(this.skill2);
this.layoutrect = cc.rect(-this.layout.width / 2, -this.layout.height / 2, this.layout.width, this.layout.height);
this.equipmentrect = cc.rect(this.equipment.x - this.equipment.width / 2, this.equipment.y - this.equipment.height, this.equipment.width, this.equipment.height);
this.layout.on(cc.Node.EventType.TOUCH_START, function(e) {
t.startPos = t.layout.convertToNodeSpaceAR(e.getLocation());
t.pressedIndex = -1;
for (var i = 0; i < t.buttonArr.length; i++) {
var o = t.buttonArr[i];
if (cc.rect(o.x - o.width / 2, o.y - o.height / 2, o.width, o.height).contains(t.startPos)) {
t.pressedIndex = i;
break;
}
}
});
this.layout.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
if (t.pressedIndex > -1 && t.pressedIndex < t.buttonArr.length) {
var i = t.layout.convertToNodeSpaceAR(e.getLocation()), o = t.buttonArr[t.pressedIndex], a = t.checkButtonInRectAndSet(o, i);
a || (a = t.checkButtonInRectAndSet(o, cc.v2(i.x, o.y))) || (a = t.checkButtonInRectAndSet(o, cc.v2(o.x, i.y)));
}
});
};
e.prototype.checkButtonInRectAndSet = function(t, e) {
var i = cc.rect(e.x - t.width / 2, e.y - t.height / 2, t.width, t.height), o = this.layoutrect.containsRect(i) && !this.equipmentrect.intersects(i) && !this.equipmentrect.containsRect(i);
o && (t.position = cc.v3(e));
return o;
};
e.prototype.start = function() {};
e.prototype.getSettingsButtonPos = function(t) {
return cc.v3(this.layout.convertToNodeSpaceAR(this.actions.convertToWorldSpaceAR(t)));
};
e.prototype.getSaveButtonPos = function(t) {
return cc.v2(this.actions.convertToNodeSpaceAR(this.layout.convertToWorldSpaceAR(t)));
};
e.prototype.show = function() {
t.prototype.show.call(this);
};
e.prototype.setAllPos = function() {
this.attack.position = this.getSettingsButtonPos(l.default.settings.buttonPosAttack);
this.remote.position = this.getSettingsButtonPos(l.default.settings.buttonPosRemote);
this.dash.position = this.getSettingsButtonPos(l.default.settings.buttonPosDash);
this.jump.position = this.getSettingsButtonPos(l.default.settings.buttonPosJump);
this.interact.position = this.getSettingsButtonPos(l.default.settings.buttonPosInteract);
this.skill1.position = this.getSettingsButtonPos(l.default.settings.buttonPosSkill1);
this.skill2.position = this.getSettingsButtonPos(l.default.settings.buttonPosSkill2);
};
e.prototype.close = function() {
c.default.play(c.default.SELECT);
this.dismiss();
};
e.prototype.save = function() {
c.default.play(c.default.SELECT);
l.default.settings.buttonPosAttack = this.getSaveButtonPos(this.attack.position);
l.default.settings.buttonPosRemote = this.getSaveButtonPos(this.remote.position);
l.default.settings.buttonPosJump = this.getSaveButtonPos(this.jump.position);
l.default.settings.buttonPosDash = this.getSaveButtonPos(this.dash.position);
l.default.settings.buttonPosInteract = this.getSaveButtonPos(this.interact.position);
l.default.settings.buttonPosSkill1 = this.getSaveButtonPos(this.skill1.position);
l.default.settings.buttonPosSkill2 = this.getSaveButtonPos(this.skill2.position);
u.default.saveSystemSettings(l.default.settings);
s.EventHelper.emit(s.EventHelper.HUD_CONTROLLER_UPDATE_GAMEPAD);
this.dismiss();
};
e.prototype.reset = function() {
this.attack.position = this.getSettingsButtonPos(r.default.BPA);
this.remote.position = this.getSettingsButtonPos(r.default.BPR);
this.dash.position = this.getSettingsButtonPos(r.default.BPD);
this.jump.position = this.getSettingsButtonPos(r.default.BPJ);
this.interact.position = this.getSettingsButtonPos(r.default.BPI);
this.skill1.position = this.getSettingsButtonPos(r.default.BPS1);
this.skill2.position = this.getSettingsButtonPos(r.default.BPS2);
c.default.play(c.default.SELECT);
};
e.BUTTON_ATTACK = 0;
e.BUTTON_REMOTE = 1;
e.BUTTON_JUMP = 2;
e.BUTTON_DASH = 3;
e.BUTTON_INTERACT = 4;
e.BUTTON_SKILL1 = 5;
e.BUTTON_SKILL2 = 6;
n([ f(cc.Node) ], e.prototype, "attack", void 0);
n([ f(cc.Node) ], e.prototype, "remote", void 0);
n([ f(cc.Node) ], e.prototype, "dash", void 0);
n([ f(cc.Node) ], e.prototype, "jump", void 0);
n([ f(cc.Node) ], e.prototype, "interact", void 0);
n([ f(cc.Node) ], e.prototype, "skill1", void 0);
n([ f(cc.Node) ], e.prototype, "skill2", void 0);
n([ f(cc.Node) ], e.prototype, "actions", void 0);
n([ f(cc.Node) ], e.prototype, "layout", void 0);
n([ f(cc.Node) ], e.prototype, "equipment", void 0);
return n([ d ], e);
}(p.default);
i.default = g;
cc._RF.pop();
}, {
"../../data/SettingsData": "SettingsData",
"../../logic/EventHelper": "EventHelper",
"../../logic/Logic": "Logic",
"../../utils/AudioPlayer": "AudioPlayer",
"../../utils/LocalStorage": "LocalStorage",
"./BaseDialog": "BaseDialog"
} ],
ActorAttackBox: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "c5bd3A3tgpJso8uoa83DjVW", "ActorAttackBox");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/FromData"), s = t("../base/Actor"), l = t("../utils/ActorUtils"), c = t("../utils/Utils"), u = t("../collider/CCollider"), p = t("../data/NonPlayerData"), h = t("../logic/Logic"), d = t("../manager/StatusManager"), f = cc._decorator, g = f.ccclass, y = (f.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isEnemy = !1;
e.attackType = 0;
e.isAttacking = !1;
e.hv = cc.v2(1, 0);
e.isSpecial = !1;
e.isLarge = !1;
e.data = new p.default();
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.node.getChildByName("sprite");
this.sprite && (this.collider = this.sprite.getComponent(u.default));
};
e.prototype.init = function(t, e) {
if (!this.sprite) {
this.sprite = this.node.getChildByName("sprite");
this.collider = this.sprite.getComponent(u.default);
}
this.sprite.opacity = 0;
this.isEnemy = e.isEnemy > 0;
this.actor = t;
this.data = e;
this.isEnemy ? this.collider.setTargetTags([ u.default.TAG.GOODNONPLAYER, u.default.TAG.PLAYER, u.default.TAG.PLAYER_HIT ]) : this.collider.setTargetTags([ u.default.TAG.NONPLAYER, u.default.TAG.BOSS ]);
};
e.prototype.start = function() {};
e.prototype.show = function(t, e, i, o, a) {
if (this.actor) {
this.setHv(o);
this.collider.enabled = !0;
this.isSpecial = e;
this.sprite.opacity = 40;
var n = t.split(",");
this.sprite.position = cc.v3(parseInt(n[0]), parseInt(n[1]));
var r = parseInt(n[2]);
a && (r /= 2);
var s = parseInt(n[3]), l = i - r;
l < 0 && (l = 0);
this.sprite.stopAllActions();
this.sprite.width = 0;
cc.tween(this.sprite).to(.1, {
width: r
}).delay(.1).to(.1, {
width: r + l
}).start();
this.sprite.height = s;
this.collider.offset = cc.v2(r / 2, 0);
this.collider.w = r;
this.collider.h = s;
this.collider.zHeight = parseInt(n[4]);
} else cc.log("attackBox not init");
};
e.prototype.hide = function(t) {
this.isAttacking = !t;
this.sprite.opacity = 0;
};
e.prototype.finish = function() {
this.sprite.opacity = 0;
this.isAttacking = !1;
this.isSpecial = !1;
this.collider.enabled = !1;
};
e.prototype.onColliderStay = function(t) {
if (this.isAttacking && this.actor) {
if (t.tag == u.default.TAG.PLAYER_HIT) {
this.isAttacking = !1;
return;
}
var e = t.getComponent(s.default), i = this.actor;
if (l.default.getEnemyCollisionTarget(t, !this.isEnemy)) {
this.actor.sc.isDashing = !1;
this.isAttacking = !1;
var o = r.default.getClone(this.data.nameCn, this.data.resName + "anim000"), a = this.data.getAttackPoint();
a.isBackAttack = l.default.isBehindTarget(i, e) && this.data.FinalCommon.DamageBack > 0;
a.isBackAttack && (a.realDamage += this.data.FinalCommon.DamageBack);
a.isMelee = !0;
this.isSpecial && (a.physicalDamage = 2 * a.physicalDamage);
e.takeDamage(a, o, this.actor) && this.addBaseStatus(e, this.data, o);
this.isSpecial = !1;
}
}
};
e.prototype.addBaseStatus = function(t, e, i) {
h.default.getRandomNum(0, 100) < e.FinalCommon.iceRate && t.addStatus(d.default.FROZEN, i);
h.default.getRandomNum(0, 100) < e.FinalCommon.fireRate && t.addStatus(d.default.BURNING, i);
h.default.getRandomNum(0, 100) < e.FinalCommon.lighteningRate && t.addStatus(d.default.DIZZ, i);
h.default.getRandomNum(0, 100) < e.FinalCommon.toxicRate && t.addStatus(d.default.TOXICOSIS, i);
h.default.getRandomNum(0, 100) < e.FinalCommon.curseRate && t.addStatus(d.default.CURSING, i);
h.default.getRandomNum(0, 100) < e.FinalCommon.realRate && t.addStatus(d.default.BLEEDING, i);
};
e.prototype.setHv = function(t) {
this.hv = t;
this.rotateCollider(this.hv);
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .02) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.rotateCollider = function(t) {
t.equals(cc.Vec2.ZERO) || (this.node.angle = c.default.getRotateAngle(t));
};
return n([ g ], e);
}(cc.Component));
i.default = y;
cc._RF.pop();
}, {
"../base/Actor": "Actor",
"../collider/CCollider": "CCollider",
"../data/FromData": "FromData",
"../data/NonPlayerData": "NonPlayerData",
"../logic/Logic": "Logic",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/Utils": "Utils"
} ],
ActorBottomDir: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d046buWy35JEJMVpF7KtIXF", "ActorBottomDir");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/Utils"), s = t("../logic/Logic"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.circle = null;
e.base = null;
e.arrow = null;
e.currentAngle = 0;
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.init = function(t, e, i, o, a) {
this.actor = t;
i && (this.circle.width = i);
o && (this.circle.height = o);
a && (this.arrow.x = a);
if (e) {
this.circle.color = e;
this.arrow.color = e;
}
};
e.prototype.update = function(t) {
if (this.actor) {
this.rotateCollider(this.actor.hv);
this.base.angle = s.default.lerp(this.base.angle, this.currentAngle, 5 * t);
}
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .02) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.rotateCollider = function(t) {
if (!t.equals(cc.Vec2.ZERO)) {
this.currentAngle = r.default.getRotateAngle(t);
this.currentAngle < 0 && (this.currentAngle += 360);
this.currentAngle >= 0 && this.currentAngle <= 90 && this.base.angle >= 225 && this.node.angle <= 360 ? this.base.angle -= 360 : this.base.angle >= 0 && this.base.angle <= 90 && this.currentAngle >= 225 && this.currentAngle <= 360 && (this.base.angle += 360);
}
};
n([ u(cc.Node) ], e.prototype, "circle", void 0);
n([ u(cc.Node) ], e.prototype, "base", void 0);
n([ u(cc.Node) ], e.prototype, "arrow", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"../utils/Utils": "Utils"
} ],
ActorEntity: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cd28cVliS9Fy6d63F6LdqDD", "ActorEntity");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
return e;
}(t("./NodeEntity").default);
i.default = n;
cc._RF.pop();
}, {
"./NodeEntity": "NodeEntity"
} ],
ActorIconList: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "de2d6PRS3dGcLhD5AjDvSBE", "ActorIconList");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./ActorIcon"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.iconPrefab = null;
e.layout = null;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.getIcon = function(t) {
var e = cc.instantiate(this.iconPrefab);
e.parent = this.layout;
var i = e.getComponent(r.default);
i.show(t);
return i;
};
n([ c(cc.Prefab) ], e.prototype, "iconPrefab", void 0);
n([ c(cc.Node) ], e.prototype, "layout", void 0);
return n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"./ActorIcon": "ActorIcon"
} ],
ActorIcon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "82cadv95axM0ICz3dQzuxI8", "ActorIcon");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = cc._decorator, l = s.ccclass, c = (s.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.isKilled = !1;
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
};
e.prototype.start = function() {};
e.prototype.show = function(t) {
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
var e = r.default.spriteFrameRes("monstericon"), i = e.getRect(), o = e.clone(), a = parseInt(t.substring("monster".length));
o.setRect(cc.rect(i.x + 8 * a, i.y, 8, 8));
this.sprite.trim = !0;
this.sprite.spriteFrame = o;
this.sprite.node.width = 32;
this.sprite.node.height = 32;
};
e.prototype.hide = function() {
var t = this;
if (this.node && !this.isKilled) {
this.isKilled = !0;
cc.tween(this.sprite.node).to(.3, {
scale: 1.5,
opacity: 0
}).call(function() {
t.node.destroy();
}).start();
}
};
e.prototype.updateLogic = function(t) {
this.node && this.node.isValid && t.currentHealth <= 0 && this.hide();
};
return n([ l ], e);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"../logic/Logic": "Logic"
} ],
ActorUtils: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "01700dV3iVC1p7rezKVnsyV", "ActorUtils");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = t("./../ecs/component/MoveComponent"), n = t("../base/Actor"), r = t("../boss/Boss"), s = t("../collider/CCollider"), l = t("../logic/Logic"), c = t("../logic/NonPlayer"), u = t("../logic/Player"), p = t("./Utils"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function() {
function t() {}
e = t;
t.getEnemyCollisionTarget = function(t, e) {
if (e) {
if (t.tag == s.default.TAG.NONPLAYER || t.tag == s.default.TAG.BOSS) return t.node.getComponent(n.default);
} else if (t.tag == s.default.TAG.PLAYER || t.tag == s.default.TAG.GOODNONPLAYER) return t.node.getComponent(n.default);
return null;
};
t.getEnemyActorByNode = function(t, e) {
if (e) {
if ((o = t.getComponent(c.default)) && o.data.isEnemy > 0) return o;
var i = t.getComponent(r.default);
if (i) return i;
} else {
var o, a = t.getComponent(u.default);
if (a) return a;
if ((o = t.getComponent(c.default)) && o.data.isEnemy < 1) return o;
}
return null;
};
t.getPlayerPosition = function(t, i, o) {
return e.getNearestTargetPosition(t, [ n.default.TARGET_PLAYER ], i, !0, o);
};
t.getDirectionFromNearestEnemy = function(t, i, o, a, n) {
var r = e.getNearestEnemyActor(t, i, o, n);
return e.getTargetDirection(t, r, a);
};
t.getTargetDirection = function(t, i, o) {
var a = e.getTargetPosition(t, i, o);
return a.equals(cc.Vec3.ZERO) ? cc.Vec3.ZERO : a.subtract(t).normalize();
};
t.getNearestEnemyPosition = function(t, i, o, a, r) {
return e.getNearestTargetPosition(t, i ? [ n.default.TARGET_PLAYER, n.default.TARGET_NONPLAYER ] : [ n.default.TARGET_MONSTER, n.default.TARGET_NONPLAYER_ENEMY, n.default.TARGET_BOSS ], o, a, r);
};
t.getNearestTargetPosition = function(t, i, o, a, n) {
var r = e.getNearestTargetActor(t, i, o, n || 999999);
return e.getTargetPosition(t, r, a);
};
t.getTargetPosition = function(t, e, i) {
return e ? e.getCenterPosition() : i ? t.clone().addSelf(cc.v3(l.default.getRandomNum(0, 600) - 300, l.default.getRandomNum(0, 600) - 300)) : cc.Vec3.ZERO;
};
t.getNearestEnemyActor = function(t, i, o, a) {
return e.getNearestTargetActor(t, i ? [ n.default.TARGET_PLAYER, n.default.TARGET_NONPLAYER ] : [ n.default.TARGET_MONSTER, n.default.TARGET_NONPLAYER_ENEMY, n.default.TARGET_BOSS ], o, a);
};
t.getNearestTargetActor = function(t, e, i, o) {
if (!i) return null;
for (var a, r = o || 999999, s = [], c = 0, u = e; c < u.length; c++) {
var p = u[c];
if (p == n.default.TARGET_PLAYER) s.push(i.player); else if (p == n.default.TARGET_MONSTER) s = s.concat(i.monsterManager.monsterList); else if (p == n.default.TARGET_BOSS) s = s.concat(i.monsterManager.bossList); else if (p == n.default.TARGET_NONPLAYER) for (var h = 0, d = i.nonPlayerManager.nonPlayerList; h < d.length; h++) (y = d[h]) && y.node && y.node.active && y.data.isEnemy < 1 && s.push(y); else if (p == n.default.TARGET_NONPLAYER_ENEMY) for (var f = 0, g = i.nonPlayerManager.nonPlayerList; f < g.length; f++) {
var y;
(y = g[f]) && y.node && y.node.active && y.data.isEnemy > 0 && s.push(y);
}
}
for (var m = 0, v = s; m < v.length; m++) {
var E = v[m];
if (this.isTargetCanTrack(E)) {
var _ = l.default.getDistanceNoSqrt(t, E.getCenterPosition());
if (_ < r) {
r = _;
a = E;
}
}
}
return a || null;
};
t.getTargetDistance = function(t, e) {
return e ? l.default.getDistanceNoSqrt(t.node.position, e.node.position) : 999999;
};
t.isTargetAlive = function(t) {
return !(!t || t.invisible || t.sc.isDied || !t.sc.isShow);
};
t.isTargetCanTrack = function(t) {
return !!(t && t.node && t.node.active && t.isValid && !t.sc.isDied && t.sc.isShow);
};
t.isBehindTarget = function(t, e) {
var i = e.node.position.x > t.node.position.x, o = e.isFaceRight;
return i && o || !i && !o;
};
t.getDashDistance = function(t, e, i) {
if (!t || !t.entity || !t.entity.Move) {
cc.log("actor或者entity不存在");
return 0;
}
return p.default.getDashDistanceByTime(e, t.entity.Move.damping, i) * a.MoveComponent.PIXELS_PER_UNIT;
};
t.getDashTime = function(t, e) {
return p.default.getDashTime(e, t.entity.Move.damping);
};
var e;
return e = o([ d ], t);
}());
i.default = f;
cc._RF.pop();
}, {
"../base/Actor": "Actor",
"../boss/Boss": "Boss",
"../collider/CCollider": "CCollider",
"../logic/Logic": "Logic",
"../logic/NonPlayer": "NonPlayer",
"../logic/Player": "Player",
"./../ecs/component/MoveComponent": "MoveComponent",
"./Utils": "Utils"
} ],
Actor: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d1527FzjXVGUp0qJt0LJYgx", "Actor");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../ecs/component/ColliderComponent"), s = t("../collider/CCollider"), l = t("../ecs/component/MoveComponent"), c = t("../ecs/component/NodeRenderComponent"), u = t("../ecs/component/TransformComponent"), p = t("../ecs/ECS"), h = t("./StateContext"), d = t("./BaseColliderComponent"), f = cc._decorator, g = f.ccclass, y = (f.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.invisible = !1;
e.isFaceRight = !0;
e.isFaceUp = !0;
e.lights = [];
e.sc = new h.default();
e.seed = 0;
e.entity = p.ecs.createEntityWithComps(c.NodeRenderComponent, l.MoveComponent, u.TransformComponent, r.ColliderComponent);
e.hv = cc.v2(1, 0);
return e;
}
e.prototype.initCollider = function() {
this.ccolliders = [];
for (var t = 0, e = this.getComponentsInChildren(s.default); t < e.length; t++) {
var i = e[t];
i.tag == s.default.TAG.LIGHT || i.getComponent(d.default) || this.ccolliders.push(i);
}
if (this.ccolliders && this.ccolliders.length > 0) {
this.entity.Collider.colliders = this.ccolliders;
for (var o = s.default.genNonDuplicateID(), a = 0, n = this.ccolliders; a < n.length; a++) {
var l = n[a];
l.groupId = o;
l.setOnContactListener(this);
}
} else this.entity.remove(r.ColliderComponent);
};
e.prototype.registerListener = function(t) {
for (var e = 0, i = this.ccolliders; e < i.length; e++) i[e].setOnContactListener(t);
};
e.prototype.setTargetTags = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
for (var i = 0, o = this.ccolliders; i < o.length; i++) {
var a = o[i];
a.setTargetTags(t);
}
};
e.prototype.setIgnoreTags = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
for (var i = 0, o = this.ccolliders; i < o.length; i++) {
var a = o[i];
a.setIgnoreTags(t);
}
};
e.prototype.destroyEntityNode = function() {
this.entity.destroy();
this.node.destroy();
};
e.prototype.onColliderEnter = function() {};
e.prototype.onColliderStay = function() {};
e.prototype.onColliderExit = function() {};
e.prototype.onColliderPreSolve = function() {};
e.TARGET_PLAYER = 0;
e.TARGET_MONSTER = 1;
e.TARGET_BOSS = 2;
e.TARGET_NONPLAYER = 3;
e.TARGET_NONPLAYER_ENEMY = 4;
return n([ g ], e);
}(cc.Component));
i.default = y;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../ecs/ECS": "ECS",
"../ecs/component/MoveComponent": "MoveComponent",
"../ecs/component/NodeRenderComponent": "NodeRenderComponent",
"../ecs/component/TransformComponent": "TransformComponent",
"./../ecs/component/ColliderComponent": "ColliderComponent",
"./BaseColliderComponent": "BaseColliderComponent",
"./StateContext": "StateContext"
} ],
AirExit: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "091edkNmgRCZq+fEAizpd4W", "AirExit");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Player"), s = t("../logic/Logic"), l = t("./Building"), c = t("../utils/IndexZ"), u = t("../logic/Dungeon"), p = t("../collider/CCollider"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.dir = 0;
e.status = i.STATUS_CLOSE;
e.sprite = null;
return e;
}
i = e;
e.prototype.onLoad = function() {
this.sprite = this.getComponent(cc.Sprite);
this.node.zIndex = c.default.FLOOR;
};
e.prototype.init = function(t, e) {
this.dir = t;
switch (t) {
case 0:
break;

case 1:
this.node.scaleY = -8;
break;

case 2:
this.node.angle = 90;
break;

case 3:
this.node.angle = 90;
this.node.scaleY = -8;
}
this.node.opacity = 60;
this.node.width = u.default.TILE_SIZE / 8 * e;
this.setTargetTags(p.default.TAG.PLAYER, p.default.TAG.BULLET);
for (var o = 0, a = this.ccolliders; o < a.length; o++) a[o].setSize(cc.size(this.node.width, this.node.height));
this.node.zIndex = c.default.OVERHEAD;
this.changeStatus(i.STATUS_CLOSE);
};
e.prototype.changeStatus = function(t) {
this.status = t;
var e = "";
s.default.mapManager.isNeighborRoomExist(this.dir) || (this.status = i.STATUS_WAIT);
switch (this.status) {
case i.STATUS_CLOSE:
e = "outertips2";
break;

case i.STATUS_WAIT:
e = "outertips3";
break;

case i.STATUS_OPEN:
e = "outertips1";
}
for (var o = 0, a = this.ccolliders; o < a.length; o++) a[o].sensor = this.status == i.STATUS_OPEN;
this.sprite.spriteFrame = s.default.spriteFrameRes(e);
};
e.prototype.start = function() {};
e.prototype.onColliderEnter = function(t) {
var e = this;
if (t.tag == p.default.TAG.PLAYER) {
var o = t.node.getComponent(r.default);
o && this.status == i.STATUS_OPEN && this.scheduleOnce(function() {
s.default.playerData = o.data.clone();
s.default.loadingNextRoom(e.dir);
}, .1);
}
};
var i;
e.STATUS_CLOSE = 0;
e.STATUS_WAIT = 1;
e.STATUS_OPEN = 2;
return i = n([ d ], e);
}(l.default));
i.default = f;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Player": "Player",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
AoeManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "418293hoQNDuI0vvcVpCRMh", "AoeManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../actor/AreaOfEffect"), s = t("../logic/Logic"), l = t("../collider/CCollider"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.aoe = null;
return e;
}
e.prototype.clear = function() {};
e.prototype.addSpriteFramesAoe = function(t, e, i, o, a, n) {
var c = cc.instantiate(this.aoe);
e.y += 32;
var u = c.getChildByName("sprite").getComponent(cc.Sprite), p = c.getComponent(l.default);
if (o.length > 0) {
var h = s.default.spriteFrameRes(o[0]);
u.node.width = h.getOriginalSize().width;
u.node.height = h.getOriginalSize().height;
u.node.scale = 4;
u.node.scaleX = n ? 4 : -4;
p.w = 3 * u.node.width;
p.h = 3 * u.node.height;
}
for (var d = cc.tween(), f = function(t) {
d.then(cc.tween().delay(.2).call(function() {
u.spriteFrame = s.default.spriteFrameRes(t);
}));
}, g = 0, y = o; g < y.length; g++) f(y[g]);
a ? cc.tween(c).repeatForever(d).start() : cc.tween(c).then(d).delay(.2).call(function() {
u.spriteFrame = null;
}).start();
c.getComponent(r.default).show(t, e, cc.v2(1, 0), 0, i);
};
n([ p(cc.Prefab) ], e.prototype, "aoe", void 0);
return n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"../actor/AreaOfEffect": "AreaOfEffect",
"../collider/CCollider": "CCollider",
"../logic/Logic": "Logic"
} ],
AreaDetector: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "77810+lX7JF67u57+eViJLm", "AreaDetector");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../collider/CCollider"), s = t("../item/Bullet"), l = t("../logic/NonPlayer"), c = t("../utils/NextStep"), u = t("../utils/Random"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.step = new c.default();
return e;
}
e.prototype.onLoad = function() {
this.collider = this.getComponent(r.default);
};
e.prototype.start = function() {};
e.prototype.onColliderEnter = function(t) {
var e = this;
this.step.next(function() {
var i = t.getComponent(s.default), o = e.node.parent.getComponent(l.default);
if (i && (i.isFromPlayer && o.data.isEnemy > 0 || !i.isFromPlayer && o.data.isEnemy < 1)) {
var a = e.getRoate90Point(i.node.position, o.node.position, u.default.getHalfChance());
a = a.sub(o.node.position);
o.dodge(a);
}
}, 3);
};
e.prototype.getRoate90Point = function(t, e, i) {
return i ? cc.v3(e.x + t.y - e.y, e.y - t.x + e.x) : cc.v3(e.x - t.y + e.y, e.y + t.x - e.x);
};
return n([ h ], e);
}(cc.Component));
i.default = d;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../item/Bullet": "Bullet",
"../logic/NonPlayer": "NonPlayer",
"../utils/NextStep": "NextStep",
"../utils/Random": "Random"
} ],
AreaOfEffectData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "33991eUauZNwoZkS4LCMfg4", "AreaOfEffectData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("../utils/IndexZ"), n = t("./DamageData"), r = t("./FromData"), s = function() {
function t() {
this.duration = 0;
this.interval = .1;
this.delay = 0;
this.scale = 0;
this.zIndex = a.default.ACTOR;
this.isRotate = !1;
this.isFromEnemy = !1;
this.canBreakBuilding = !1;
this.canBreakBullet = !1;
this.canBeatBack = !1;
this.damage = new n.default();
this.from = new r.default();
this.statusList = [];
}
t.prototype.init = function(t, e, i, o, a, n, r, s, l, c, u, p, h) {
this.duration = t;
this.delay = i;
this.interval = e;
this.scale = o;
this.zIndex = a;
this.isFromEnemy = n;
this.canBreakBuilding = r;
this.canBreakBullet = s;
this.canBeatBack = l;
this.isRotate = c;
this.damage = u;
this.from = p;
this.statusList = h;
return this;
};
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t);
this.interval = t.interval ? t.interval : .1;
this.zIndex = t.zIndex ? t.zIndex : a.default.ACTOR;
this.statusList = t.statusList ? t.statusList : [];
this.damage.valueCopy(t.damage);
this.from.valueCopy(t.from);
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = s;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"../utils/IndexZ": "IndexZ",
"./DamageData": "DamageData",
"./FromData": "FromData"
} ],
AreaOfEffect: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6a73blWLNVEw7zhXpbo521b", "AreaOfEffect");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../boss/Boss"), s = t("../data/DamageData"), l = t("../utils/IndexZ"), c = t("../data/AreaOfEffectData"), u = t("../utils/ActorUtils"), p = t("../building/InteractBuilding"), h = t("../collider/CCollider"), d = t("../base/BaseColliderComponent"), f = t("../building/NormalBuilding"), g = cc._decorator, y = g.ccclass, m = (g.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.hasTargetMap = new Map();
e.isAttacking = !1;
e.data = new c.default();
e.usePool = !1;
e.checkTimeDelay = 0;
return e;
}
Object.defineProperty(e.prototype, "IsAttacking", {
get: function() {
return this.isAttacking;
},
enumerable: !1,
configurable: !0
});
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
};
e.prototype.onEnable = function() {
this.hasTargetMap.clear();
this.isAttacking = !1;
};
e.prototype.start = function() {};
e.prototype.AnimFinish = function() {
this.close();
};
e.prototype.close = function() {
var t = this;
this.scheduleOnce(function() {
t.node && t.node.isValid && !t.usePool && t.destroyEntityNode();
t.destoryCallBack && t.usePool && t.destoryCallBack(t.node);
}, 1);
this.isAttacking = !1;
};
e.prototype.show = function(t, e, i, o, a, n, r, s) {
var c = this;
this.data.valueCopy(a);
this.node.active = !0;
this.node.parent = t;
this.usePool = r;
this.isAttacking = !0;
this.killCallBack = n;
this.destoryCallBack = s;
this.node.setPosition(e);
this.entity.Transform.position = e;
if (this.data.scale > 0) {
this.node.scaleX = this.node.scaleX > 0 ? this.data.scale : -this.data.scale;
this.node.scaleY = this.node.scaleY > 0 ? this.data.scale : -this.data.scale;
}
if (this.data.isRotate) {
var u = this.getHv(i, o), p = cc.v2(u.x, u.y).signAngle(cc.v2(1, 0)), h = cc.misc.radiansToDegrees(p);
this.node.angle = 360 - h;
}
this.node.zIndex = this.data.zIndex ? this.data.zIndex : l.default.ACTOR;
this.scheduleOnce(function() {
c.isAttacking = !0;
}, this.data.delay);
this.data.duration > 0 && this.scheduleOnce(function() {
c.close();
}, this.data.duration);
var d = this.getComponent(cc.Animation);
d && !d.playOnLoad && d.play();
};
e.prototype.getHv = function(t, e) {
return cc.v2(t.clone().rotateSelf(e * Math.PI / 180)).normalizeSelf();
};
e.prototype.onColliderStay = function(t, e) {
if (e.isValid && this.isAttacking) if (this.hasTargetMap.has(t.id) && this.hasTargetMap.get(t.id) > 0) this.hasTargetMap.set(t.id, this.hasTargetMap.get(t.id) + 1); else {
this.hasTargetMap.set(t.id, 1);
var i = !0;
this.data.isFromEnemy || t.tag != h.default.TAG.GOODNONPLAYER && t.tag != h.default.TAG.PLAYER || (i = !1);
!this.data.isFromEnemy || t.tag != h.default.TAG.NONPLAYER && t.tag != h.default.TAG.BOSS || (i = !1);
i && this.attacking(t.node, t.tag);
}
};
e.prototype.attacking = function(t, e) {
if (t) {
var i = new s.default();
i.valueCopy(this.data.damage);
i.isRemote = !0;
if (e == h.default.TAG.PLAYER || e == h.default.TAG.NONPLAYER || e == h.default.TAG.GOODNONPLAYER || e == h.default.TAG.BOSS) {
var o = t.convertToWorldSpaceAR(cc.Vec2.ZERO).subSelf(this.node.convertToWorldSpaceAR(cc.Vec2.ZERO)).normalizeSelf(), a = u.default.getEnemyActorByNode(t, !this.data.isFromEnemy);
if (a && !a.sc.isDied) {
if (a.takeDamage(i, this.data.from)) {
a.data.currentHealth <= 0 && this.killCallBack && this.killCallBack(a);
this.data.canBeatBack && !a.getComponent(r.default) && this.beatBack(a, o);
}
for (var n = 0, l = this.data.statusList; n < l.length; n++) {
var c = l[n];
a.addStatus(c, this.data.from);
}
}
} else if (e == h.default.TAG.BUILDING) {
var d = t.getComponent(p.default);
if (this.data.canBreakBuilding && d) {
d.takeDamage(i);
return;
}
var g = t.getComponent(f.default);
this.data.canBreakBuilding && g && g.takeDamage(i);
}
}
};
e.prototype.beatBack = function(t, e) {
var i = e.clone();
i.equals(cc.Vec2.ZERO) && (i = cc.v2(1, 0));
i = i.normalizeSelf().mul(20);
this.scheduleOnce(function() {
t.entity.Move.linearVelocity = cc.v2(i.x, i.y);
}, .1);
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > this.data.interval) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.isCheckTimeDelay(t) && this.hasTargetMap.clear();
};
return n([ y ], e);
}(d.default));
i.default = m;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../boss/Boss": "Boss",
"../building/InteractBuilding": "InteractBuilding",
"../building/NormalBuilding": "NormalBuilding",
"../collider/CCollider": "CCollider",
"../data/AreaOfEffectData": "AreaOfEffectData",
"../data/DamageData": "DamageData",
"../utils/ActorUtils": "ActorUtils",
"../utils/IndexZ": "IndexZ"
} ],
AttributeData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "3df7eU5e+9JzoOx3mUEhHmJ", "AttributeData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function(t, e, i, o, a, n) {
this.name = "";
this.id = 0;
this.resName = "";
this.desc = "";
this.name1 = "";
this.desc1 = "";
this.id = t;
this.name = e;
this.resName = i;
this.desc = o;
this.desc1 = n;
this.name1 = a;
};
cc._RF.pop();
}, {} ],
AttributeSelector: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1ba37UErLJKsamr/CQR4tOg", "AttributeSelector");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.arrowLeft = null;
e.arrowRight = null;
e.label = null;
e.title = null;
e.nameList = [];
e.currentIndex = 0;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.arrowLeft.on(cc.Node.EventType.TOUCH_START, function() {
t.currentIndex--;
t.updateAttribute();
});
this.arrowRight.on(cc.Node.EventType.TOUCH_START, function() {
t.currentIndex++;
t.updateAttribute();
});
};
e.prototype.selectRandom = function() {
this.currentIndex = r.default.getRandomNum(0, this.nameList.length - 1);
this.updateAttribute();
};
e.prototype.selectNext = function(t) {
t ? this.currentIndex-- : this.currentIndex++;
this.updateAttribute();
};
e.prototype.init = function(t, e, i) {
this.title.string = t;
this.nameList = e;
this.currentIndex = i || 0;
this.updateAttribute();
};
e.prototype.updateAttribute = function() {
this.currentIndex < 0 ? this.currentIndex = this.nameList.length - 1 : this.currentIndex > this.nameList.length - 1 && (this.currentIndex = 0);
this.label.string = this.nameList[this.currentIndex].name;
this.selectorCallback && this.selectorCallback(this.nameList[this.currentIndex]);
};
Object.defineProperty(e.prototype, "CurrentData", {
get: function() {
return this.nameList[this.currentIndex];
},
enumerable: !1,
configurable: !0
});
n([ c(cc.Node) ], e.prototype, "arrowLeft", void 0);
n([ c(cc.Node) ], e.prototype, "arrowRight", void 0);
n([ c(cc.Label) ], e.prototype, "label", void 0);
n([ c(cc.Label) ], e.prototype, "title", void 0);
return n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../logic/Logic": "Logic"
} ],
AudioPlayer: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "76c8da4ThVB/L/QkXaZyrPc", "AudioPlayer");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("../logic/Logic"), l = t("../manager/LoadingManager"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.select = null;
e.selectfail = null;
e.transportship = null;
e.lastName = "";
e.isSoundNeedPause = !1;
e.lastBgmIndex = -1;
e.effectMap = new Map();
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
r.EventHelper.on(r.EventHelper.PLAY_AUDIO, function(e) {
t.playSound(e.name, e.bgm, e.loop);
});
r.EventHelper.on(r.EventHelper.STOP_ALL_AUDIO_EFFECT, function() {
t.stopAllEffect();
});
r.EventHelper.on(r.EventHelper.STOP_AUDIO_EFFECT, function(e) {
t.stopEffect(e.name);
});
cc.audioEngine.setMusicVolume(.2);
cc.audioEngine.setEffectsVolume(.4);
s.default.audioClips[i.SELECT] = this.select;
s.default.audioClips[i.SELECT_FAIL] = this.selectfail;
s.default.audioClips[i.TRANSPORTSHIP] = this.transportship;
};
e.prototype.playbg = function() {
var t = this;
l.default.loadAllBundle([ l.default.AB_BGM ], function() {
var e = [ s.default.bgmClips[i.BGM001], s.default.bgmClips[i.BGM002], s.default.bgmClips[i.BGM003] ][s.default.lastBgmIndex];
if (e && (!cc.audioEngine.isMusicPlaying() || t.lastBgmIndex != s.default.lastBgmIndex)) {
cc.audioEngine.stopMusic();
var o = cc.audioEngine.playMusic(e, !0);
t.effectMap.set(e.name, o);
t.lastBgmIndex = s.default.lastBgmIndex;
}
});
};
e.prototype.stopAllEffect = function() {
cc.audioEngine.stopAllEffects();
};
e.prototype.stopEffect = function(t) {
this.effectMap.has(t) && cc.audioEngine.stopEffect(this.effectMap.get(t));
};
e.prototype.playSound = function(t, e, o) {
var a = this;
if (t != this.lastName || t != i.COIN || !this.isSoundNeedPause) {
if (e) switch (t) {
case i.STOP_BG:
cc.audioEngine.stopMusic();
break;

case i.PLAY_BG:
this.playbg();
} else if (s.default.audioClips[t]) {
var n = cc.audioEngine.playEffect(s.default.audioClips[t], o);
this.effectMap.set(t, n);
}
this.lastName = t;
this.isSoundNeedPause = !1;
if (t == i.COIN) {
this.isSoundNeedPause = !0;
this.scheduleOnce(function() {
a.isSoundNeedPause = !1;
}, .05);
}
}
};
e.play = function(t, e, i) {
r.EventHelper.emit(r.EventHelper.PLAY_AUDIO, {
name: t,
bgm: e,
loop: i
});
};
e.stopAllEffect = function() {
r.EventHelper.emit(r.EventHelper.STOP_ALL_AUDIO_EFFECT, {});
};
e.stopEffect = function(t) {
r.EventHelper.emit(r.EventHelper.STOP_AUDIO_EFFECT, {
name: t
});
};
var i;
e.BATHING = "bathing";
e.BGM001 = "bgm001";
e.BGM002 = "bgm002";
e.BGM003 = "bgm003";
e.BLEEDING = "bleeding";
e.BUBBLE = "bubble";
e.BLINK = "blink";
e.BOOM = "boom";
e.BOSS_ICEDEMON_ATTACK = "bossicedemonattack";
e.BOSS_ICEDEMON_DASH = "bossicedemondash";
e.BOSS_ICEDEMON_DEFEND = "bossicedemondefend";
e.BOSS_ICEDEMON_HIT = "bossicedemonhit";
e.BOSS_ICEDEMON_THRON = "bossicedemonthron";
e.CASHIERING = "cashiering";
e.CAT = "cat";
e.CHICKEN = "chicken";
e.CLOSESTOOL = "closestool";
e.COIN = "coin";
e.COIN1 = "coin1";
e.COIN2 = "coin2";
e.COMPLETE = "complete";
e.DAGGER_ATTACK = "dagger";
e.DAGGER_ATTACK1 = "dagger1";
e.DAGGER_ATTACK2 = "dagger2";
e.DASH = "dash";
e.DIE = "die";
e.DOG = "dog";
e.DOLLDOWN = "dolldown";
e.DOLLMACHINE = "dollmachine";
e.DRINK = "drink";
e.ELECTRIC_ATTACK = "electricattack";
e.EXIT = "exit";
e.FEED_FISH = "feedfish";
e.FIREBALL = "fireball";
e.FISHTANK = "fishtank";
e.FIST = "fist";
e.FIST1 = "fist1";
e.FIST2 = "fist2";
e.FLASHLIGHT = "flashlight";
e.ICEBOOM = "iceboom";
e.JUMP = "jump";
e.JUMP_WATER = "jumpwater";
e.LASER = "laser";
e.LEVELUP = "levelup";
e.MELEE = "melee";
e.MELEE_PARRY = "meleeparry";
e.MELEE_REFLECT = "meleereflect";
e.MELEE_REFLECT1 = "meleereflect1";
e.MELEE_REFLECT_WALL = "meleereflectwall";
e.MELEE_REFLECT_WALL1 = "meleereflectwall1";
e.MELEE_REFLECT_WOOD1 = "meleereflectwood1";
e.MELEE_REFLECT_WOOD2 = "meleereflectwood2";
e.MELEE_REFLECT_WOOD3 = "meleereflectwood3";
e.MONSTER_HIT = "monsterhit";
e.MONSTER_HIT1 = "monsterhit1";
e.MONSTER_HIT2 = "monsterhit2";
e.MOUSE = "mouse";
e.MUTANT = "mutant";
e.OILGOLD = "oildgold";
e.PICK_ITEM = "pickitem";
e.PICK_UP = "pickup";
e.PLAYER_HIT = "playerhit";
e.PUNCH = "punch";
e.PUNCH1 = "punch1";
e.PUNCH2 = "punch2";
e.RAINDROP = "raindrop";
e.RELOAD = "reload";
e.SCARABCRAWL = "scarabcrawl";
e.SELECT = "select";
e.SELECT_FAIL = "selectfail";
e.SENBON = "senbon";
e.SHOOT = "shoot";
e.SHOOT001 = "shoot001";
e.SHOOT002 = "shoot002";
e.SHOOT003 = "shoot003";
e.SHOOT004 = "shoot004";
e.SILENCE = "silence";
e.SKILL_FIREBALL = "skillfireball";
e.SKILL_ICETHRON = "skillicethron";
e.SKILL_MAGICBALL = "skillmagicball";
e.SKILL_MAGICBALL1 = "skillmagicball1";
e.STICK_ATTACK = "stickattack";
e.STICK_ATTACK1 = "stickattack1";
e.STICK_ATTACK2 = "stickattack2";
e.STICK_ATTACK3 = "stickattack3";
e.SWIMMING = "swimming";
e.SWORD_ATTACK = "swordattack";
e.SWORD_ATTACK1 = "swordattack1";
e.SWORD_ATTACK2 = "swordattack2";
e.SWORD_HIT = "swordhit";
e.SWORD_HIT1 = "swordhit1";
e.SWORD_HIT2 = "swordhit2";
e.SWORD_SHOW = "swordshow";
e.SMOKE_BALL = "smokeball";
e.TAKEPHOTO = "takephoto";
e.TRANSPORTSHIP = "transportship";
e.TRASH = "trash";
e.TVCOLOR = "tvcolor";
e.TVWHITE = "tvwhite";
e.VOICE = "voice";
e.WALK = "walk";
e.WATERDISPENSER = "waterdispenser";
e.WATERFALL = "waterfall";
e.WELCOME = "welcome";
e.WENTLINE_OPEN = "wentlineopen";
e.WENTLINE_SHOW = "wentlineshow";
e.ZOMBIE_ATTACK = "zombieattack";
e.ZOMBIE_FALL = "zombiefall";
e.ZOMBIE_SPITTING = "zombiespitting";
e.ZOMBIE_SPITTING1 = "zombiespitting1";
e.STOP_BG = "STOP_BG";
e.PLAY_BG = "PLAY_BG";
n([ p({
type: cc.AudioClip
}) ], e.prototype, "select", void 0);
n([ p({
type: cc.AudioClip
}) ], e.prototype, "selectfail", void 0);
n([ p(cc.AudioClip) ], e.prototype, "transportship", void 0);
return i = n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/LoadingManager": "LoadingManager"
} ],
AvatarData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "78b51+ej+hHW50Cw1oQcuRl", "AvatarData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../utils/DataUtils"), r = t("./BaseData"), s = t("./ProfessionData"), l = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.organizationIndex = 0;
e.professionData = new s.default();
e.skinColor = "#ffe1c5";
e.hairResName = "avatarhair000";
e.hairColor = "#000000";
e.eyesResName = "avatareyes000";
e.eyesColor = "#000000";
e.faceResName = "avatarface000";
e.faceColor = "#FBA1DE";
e.petName = "nonplayer100";
e.isAnimFrame = !1;
e.idleFrames = [ 0, 1 ];
e.walkFrames = [ 2, 5 ];
e.hitFrames = [ 6, 7 ];
e.dieFrames = [ 8 ];
e.attackFrames = [ 9, 10 ];
e.specialFrames = [ 11, 12 ];
e.disguiseFrames = [ 13 ];
return e;
}
e.prototype.valueCopy = function(t) {
if (t) {
n.default.baseCopy(this, t, !0);
this.professionData.valueCopy(t.professionData);
this.copyArray(this.idleFrames, t.idleFrames);
this.copyArray(this.walkFrames, t.walkFrames);
this.copyArray(this.dieFrames, t.dieFrames);
this.copyArray(this.disguiseFrames, t.disguiseFrames);
this.copyArray(this.attackFrames, t.attackFrames);
this.copyArray(this.specialFrames, t.specialFrames);
this.copyArray(this.hitFrames, t.hitFrames);
}
};
e.prototype.copyArray = function(t, e) {
e && e.length;
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
e.FOLLOWER = 0;
e.HUNTER = 1;
e.GURAD = 2;
e.TECH = 3;
e.ORGANIZATION = [ "弥世逐流", "异闻猎手", "幽光守卫", "翠金科技" ];
return e;
}(r.default);
i.default = l;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData",
"./ProfessionData": "ProfessionData"
} ],
BaseAvatar: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6309a7dOXlNSYIFDbYrckXi", "BaseAvatar");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.status = i.STATE_IDLE;
e.dir = i.DIR_RIGHT;
e.isAniming = !1;
e.isInit = !1;
return e;
}
i = e;
e.prototype.getSpriteChildSprite = function(t) {
for (var e = this.node, i = 0, o = t; i < o.length; i++) {
var a = o[i];
e = e.getChildByName(a);
}
return e.getComponent(cc.Sprite);
};
e.prototype.getSpriteChildNode = function(t) {
for (var e = this.node, i = 0, o = t; i < o.length; i++) {
var a = o[i];
e = e.getChildByName(a);
}
return e;
};
var i;
e.DIR_UP = 0;
e.DIR_DOWN = 1;
e.DIR_LEFT = 2;
e.DIR_RIGHT = 3;
e.STATE_IDLE = 0;
e.STATE_WALK = 1;
e.STATE_ATTACK = 2;
e.STATE_FALL = 3;
e.STATE_DIE = 4;
e.STATE_JUMP_UP = 5;
e.STATE_JUMP_DOWN = 6;
e.STATE_AIRKICK = 7;
e.STATE_HIT = 8;
e.STATE_SPECIAL = 9;
e.STATE_DISGUISE = 10;
return i = n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
BaseColliderComponent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "902bcgBo5RK+aOrmHRVahv+", "BaseColliderComponent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../ecs/component/ColliderComponent"), s = t("../collider/CCollider"), l = t("../ecs/component/MoveComponent"), c = t("../ecs/component/NodeRenderComponent"), u = t("../ecs/component/TransformComponent"), p = t("../ecs/ECS"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.entity = p.ecs.createEntityWithComps(c.NodeRenderComponent, l.MoveComponent, u.TransformComponent, r.ColliderComponent);
return e;
}
e.prototype.resetEntity = function() {
this.entity = p.ecs.createEntityWithComps(c.NodeRenderComponent, l.MoveComponent, u.TransformComponent, r.ColliderComponent);
this.initCollider();
this.entity.NodeRender.node = this.node;
};
e.prototype.onLoad = function() {
this.initCollider();
this.entity.NodeRender.node = this.node;
};
e.prototype.initCollider = function() {
this.ccolliders = [];
for (var t = 0, e = this.getComponentsInChildren(s.default); t < e.length; t++) {
var i = e[t];
i.tag != s.default.TAG.LIGHT && this.ccolliders.push(i);
}
if (this.ccolliders && this.ccolliders.length > 0) {
this.entity.Collider.colliders = this.ccolliders;
for (var o = s.default.genNonDuplicateID(), a = 0, n = this.ccolliders; a < n.length; a++) {
var l = n[a];
l.groupId = o;
l.setOnContactListener(this);
}
} else this.entity.remove(r.ColliderComponent);
};
e.prototype.setTargetTags = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
for (var i = 0, o = this.ccolliders; i < o.length; i++) {
var a = o[i];
a.setTargetTags(t);
}
};
e.prototype.setIgnoreTags = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
for (var i = 0, o = this.ccolliders; i < o.length; i++) {
var a = o[i];
a.setIgnoreTags(t);
}
};
e.prototype.destroyEntityNode = function() {
this.entity.destroy();
this.node.destroy();
};
e.prototype.onColliderEnter = function() {};
e.prototype.onColliderStay = function() {};
e.prototype.onColliderExit = function() {};
e.prototype.onColliderPreSolve = function() {};
return n([ d ], e);
}(cc.Component));
i.default = f;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../ecs/ECS": "ECS",
"../ecs/component/ColliderComponent": "ColliderComponent",
"../ecs/component/MoveComponent": "MoveComponent",
"../ecs/component/NodeRenderComponent": "NodeRenderComponent",
"../ecs/component/TransformComponent": "TransformComponent"
} ],
BaseData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "104f7mgC6BFIYLmzL4FKFUV", "BaseData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/Random"), a = function() {
function t() {}
t.prototype.genNonDuplicateID = function() {
return Number(o.default.rand().toString().substring(3, 16) + Date.now()).toString(36);
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/Random": "Random"
} ],
BaseDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "5de11HhcHdDHbXLJONfG55W", "BaseDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.bg = null;
e.dialogBg = null;
e.cancelOutSide = !0;
e._isAniming = !1;
return e;
}
Object.defineProperty(e.prototype, "isAniming", {
get: function() {
return this._isAniming;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "isShow", {
get: function() {
return 1 == this.node.active;
},
enumerable: !1,
configurable: !0
});
e.prototype.onLoad = function() {
var t = this;
this.bg = this.node.getChildByName("bg");
this.dialogBg = this.node.getChildByName("dialogbg");
this.bg.on(cc.Node.EventType.TOUCH_END, function() {
t.cancelOutSide && t.dismiss();
}, this);
};
e.prototype.start = function() {};
e.prototype.setCanceledOnTouchOutside = function(t) {
this.cancelOutSide = t;
};
e.prototype.show = function() {
var t = this;
if (!this._isAniming) {
this._isAniming = !0;
this.node.active = !0;
this.node.opacity = 255;
this.node.scale = 0;
cc.tween(this.node).to(.1, {
scale: .1
}).to(.1, {
scaleX: 1
}).to(.1, {
scaleY: 1
}).call(function() {
t._isAniming = !1;
}).start();
}
};
e.prototype.dismiss = function() {
var t = this;
if (!this._isAniming) {
this._isAniming = !0;
cc.tween(this.node).to(.1, {
scaleY: .1
}).to(.1, {
scaleX: 0
}).to(.1, {
opacity: 0
}).call(function() {
t.node.active = !1;
t._isAniming = !1;
t.dismissCallBack && t.dismissCallBack();
}).start();
}
};
e.prototype.onDismissListener = function(t) {
this.dismissCallBack = t;
};
return n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
BaseManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "c0fb6uxoAJAR6KX1Qx/juNE", "BaseManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
return n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
BaseNodeComponent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "7dd4dWawVdLUrTa1D3zIh/7", "BaseNodeComponent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../ecs/component/MoveComponent"), s = t("../ecs/component/NodeRenderComponent"), l = t("../ecs/component/TransformComponent"), c = t("../ecs/ECS"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.entity = c.ecs.createEntityWithComps(s.NodeRenderComponent, r.MoveComponent, l.TransformComponent);
return e;
}
e.prototype.resetEntity = function() {
this.entity = c.ecs.createEntityWithComps(s.NodeRenderComponent, r.MoveComponent, l.TransformComponent);
this.entity.NodeRender.node = this.node;
};
e.prototype.onLoad = function() {
this.entity.NodeRender.node = this.node;
};
e.prototype.destroyEntityNode = function() {
this.entity.destroy();
this.node.destroy();
};
return n([ p ], e);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"../ecs/ECS": "ECS",
"../ecs/component/MoveComponent": "MoveComponent",
"../ecs/component/NodeRenderComponent": "NodeRenderComponent",
"../ecs/component/TransformComponent": "TransformComponent"
} ],
BaseNonPlayerActorState: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "920bbZwmdhLNqox7T/WQBj5", "BaseNonPlayerActorState");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = cc._decorator, n = a.ccclass, r = (a.property, function() {
function t() {
this._isRunnig = !1;
this.showLog = !0;
}
Object.defineProperty(t.prototype, "isRunnig", {
get: function() {
return this._isRunnig;
},
enumerable: !1,
configurable: !0
});
t.prototype.enter = function() {
this._isRunnig = !0;
};
t.prototype.update = function() {};
t.prototype.exit = function() {
this._isRunnig = !1;
};
t.prototype.event = function() {
this._isRunnig = !0;
return !0;
};
t.prototype.log = function(t) {
this.showLog && cc.log(t);
};
return o([ n ], t);
}());
i.default = r;
cc._RF.pop();
}, {} ],
BasePlayerActorState: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6a7a0276chJQYpA/8MgdXmI", "BasePlayerActorState");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = cc._decorator, n = a.ccclass, r = (a.property, function() {
function t() {
this._isRunnig = !1;
this.showLog = !0;
}
Object.defineProperty(t.prototype, "isRunnig", {
get: function() {
return this._isRunnig;
},
enumerable: !1,
configurable: !0
});
t.prototype.enter = function() {
this._isRunnig = !0;
};
t.prototype.update = function() {};
t.prototype.exit = function() {
this._isRunnig = !1;
};
t.prototype.event = function() {
this._isRunnig = !0;
return !0;
};
t.prototype.log = function(t) {
this.showLog && cc.log(t);
};
return o([ n ], t);
}());
i.default = r;
cc._RF.pop();
}, {} ],
BlockLight: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "200a5VPMNZOQ7QKn+qhQpb0", "BlockLight");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = cc._decorator, l = s.ccclass, c = (s.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.show = function() {
var t = this;
this.anim || (this.anim = this.getComponent(cc.Animation));
this.anim.play();
this.scheduleOnce(function() {
r.EventHelper.emit(r.EventHelper.POOL_DESTORY_BLOCKLIGHT, {
targetNode: t.node
});
}, .5);
};
return n([ l ], e);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper"
} ],
BossAttackCollider: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "955f3FE6OVI9rSVX2x0s/2h", "BossAttackCollider");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../data/FromData"), l = t("../base/Actor"), c = t("../utils/ActorUtils"), u = t("../collider/CCollider"), p = cc._decorator, h = p.ccclass, d = p.property, f = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.damage = 9;
e.parentNode = null;
e.from = new s.default();
e.isShow = !1;
return e;
}
e.prototype.onLoad = function() {
this.collider = this.getComponent(u.default);
};
e.prototype.start = function() {
this.isShow = !1;
};
e.prototype.showCollider = function(t, e) {
var i = this, o = e || 0;
this.scheduleOnce(function() {
i.isShow = !0;
}, o);
this.scheduleOnce(function() {
i.isShow = !1;
}, t);
};
e.prototype.onColliderEnter = function(t) {
var e = c.default.getEnemyCollisionTarget(t);
if (e && this.isShow && this.node.active && this.parentNode) {
this.isShow = !1;
var i = new r.default();
i.physicalDamage = this.damage;
e.takeDamage(i, this.from, this.parentNode.getComponent(l.default));
}
};
n([ d ], e.prototype, "damage", void 0);
n([ d(cc.Node) ], e.prototype, "parentNode", void 0);
return n([ h ], e);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"../base/Actor": "Actor",
"../collider/CCollider": "CCollider",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../utils/ActorUtils": "ActorUtils"
} ],
Boss: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "27ef0INO8BDnrQF5OkIl5aV", "Boss");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../logic/Dungeon"), l = t("../manager/StatusManager"), c = t("../logic/EventHelper"), u = t("../base/Actor"), p = t("../item/Item"), h = t("../utils/IndexZ"), d = t("../data/NonPlayerData"), f = cc._decorator, g = f.ccclass, y = f.property, m = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.statusManager = null;
e.healthBar = null;
e.pos = cc.v3(0, 0);
e.defaultPos = cc.v3(0, 0);
e.data = new d.default();
return e;
}
e.prototype.addStatus = function(t, e) {
this.node && !this.sc.isDied && this.statusManager && this.statusManager.addStatus(t, e);
};
e.prototype.getNearPlayerDistance = function(t, e) {
var i = this.node.position.clone();
e && i.addSelf(e);
return r.default.getDistanceNoSqrt(this.node.position, t.position);
};
e.prototype.getCenterPosition = function() {
return this.node.position.clone().addSelf(cc.v3(0, 32 * this.node.scaleY));
};
e.prototype.playHit = function(t) {
if (t) {
t.stopAllActions();
t.position = cc.v3(0, 0);
cc.tween(t).to(.1, {
position: cc.v3(2, 0)
}).to(.1, {
position: cc.v3(-2, 0)
}).to(.1, {
position: cc.v3(2, 0)
}).to(.1, {
position: cc.v3(-2, 0)
}).to(.1, {
position: cc.v3(2, 0)
}).to(.1, {
position: cc.v3(-2, 0)
}).to(.1, {
position: cc.v3(2, 0)
}).to(.1, {
position: cc.v3(0, 0)
}).start();
}
};
e.prototype.updatePlayerPos = function() {
this.entity.Transform.position = s.default.getPosInMap(this.pos);
this.node.position = this.entity.Transform.position.clone();
};
e.prototype.transportBoss = function(t, e) {
this.pos.x = t;
this.pos.y = e;
this.changeZIndex();
this.updatePlayerPos();
};
e.prototype.changeZIndex = function() {
this.node.zIndex = h.default.getActorZIndex(this.node.position);
};
e.prototype.start = function() {
var t = this;
this.changeZIndex();
this.scheduleOnce(function() {
t.healthBar && t.healthBar.refreshHealth(t.data.currentHealth, t.data.Common.MaxHealth);
}, .1);
};
e.prototype.getLoot = function(t) {
if (this.dungeon) {
var e = r.default.mapManager.getRandom4Save(this.seed);
c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_COIN, {
pos: this.node.position,
count: t ? 9 : 19
});
t || c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_OILGOLD, {
pos: this.node.position,
count: 100
});
if (r.default.getHalfChance() && t || !t) {
c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_ITEM, {
res: p.default.HEART
});
c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_ITEM, {
res: p.default.DREAM
});
}
this.dungeon.addEquipment(r.default.getRandomEquipType(e), null, null, t ? 0 : 4);
}
};
e.prototype.showBoss = function() {};
e.prototype.fireShooter = function(t, e, i, o, a) {
t.dungeon = this.dungeon;
t.actor = this;
t.data.bulletType = e;
t.data.bulletArcExNum = i;
t.data.bulletLineExNum = o;
t.fireBullet(a);
};
e.prototype.takeDizz = function() {};
e.prototype.updateStatus = function(t, e) {
this.data.StatusTotalData.valueCopy(e);
};
e.prototype.hideSelf = function() {};
e.prototype.updateDream = function() {
return 0;
};
e.prototype.updateLife = function() {};
e.prototype.setLinearVelocity = function() {};
n([ y(l.default) ], e.prototype, "statusManager", void 0);
return n([ g ], e);
}(u.default);
i.default = m;
cc._RF.pop();
}, {
"../base/Actor": "Actor",
"../data/NonPlayerData": "NonPlayerData",
"../item/Item": "Item",
"../logic/Dungeon": "Dungeon",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/StatusManager": "StatusManager",
"../utils/IndexZ": "IndexZ"
} ],
Box: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "84b7dB47rlIALRzq2ZvOGc3", "Box");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = t("./Building"), c = t("../utils/AudioPlayer"), u = t("../utils/IndexZ"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.timeDelay = 0;
e.isBreaking = !1;
e.boxType = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
this.anim = this.getComponent(cc.Animation);
this.anim.play("BoxShow");
};
e.prototype.start = function() {
var t = "box";
switch (this.boxType) {
case i.BOX:
t = "box";
break;

case i.PLANT:
t = "plant";
break;

case i.BOXBREAKABLE:
t = "box";
}
switch (s.default.chapterIndex) {
case s.default.CHAPTER00:
this.changeRes(t + "000");
break;

case s.default.CHAPTER01:
this.changeRes(t + "001");
break;

case s.default.CHAPTER02:
this.changeRes(t + "002");
break;

case s.default.CHAPTER03:
this.changeRes(t + "003");
break;

case s.default.CHAPTER04:
case s.default.CHAPTER05:
this.changeRes(t + "004");
break;

case s.default.CHAPTER099:
this.changeRes(t + "000");
}
};
e.prototype.changeRes = function(t) {
var e = this.node.getChildByName("sprite").getComponent(cc.Sprite), i = s.default.spriteFrameRes(t);
e.spriteFrame = i;
};
e.prototype.setDefaultPos = function(t) {
this.data.defaultPos = t;
this.entity.Transform.position = r.default.getPosInMap(t);
this.node.position = this.entity.Transform.position.clone();
this.node.zIndex = u.default.getActorZIndex(this.entity.Transform.position);
};
e.prototype.BreakingFinish = function() {
this.reset();
};
e.prototype.breakBox = function() {
if (!this.isBreaking) {
var t = [ c.default.MONSTER_HIT, c.default.MONSTER_HIT1, c.default.MONSTER_HIT2 ];
c.default.play(t[s.default.getRandomNum(0, 2)]);
this.anim || (this.anim = this.getComponent(cc.Animation));
this.anim.play("BoxBroken");
this.isBreaking = !0;
}
};
e.prototype.reset = function() {
this.entity.Transform.position = r.default.getPosInMap(this.data.defaultPos);
this.node.position = this.entity.Transform.position.clone();
this.isBreaking = !1;
};
e.prototype.update = function(t) {
this.timeDelay += t;
if (this.timeDelay > .2) {
this.data.position = this.entity.Transform.position;
var e = s.default.mapManager.getCurrentMapBuilding(this.data.defaultPos);
e && (e.position = this.data.position);
this.node.zIndex = u.default.getActorZIndex(this.entity.Transform.position);
}
};
var i;
e.BOX = 0;
e.PLANT = 1;
e.BOXBREAKABLE = 2;
return i = n([ h ], e);
}(l.default));
i.default = d;
cc._RF.pop();
}, {
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
BrightnessBar: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cd2d8XSihFHJ5/ASmPsHcdm", "BrightnessBar");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.slider = null;
return e;
}
i = e;
e.prototype.onLoad = function() {};
e.prototype.init = function() {};
e.prototype.setSelectorCallback = function(t) {
this.selectorCallback = t;
this.updateAttribute();
};
e.prototype.selectRandom = function() {
this.slider.progress = r.default.getRandomNum(0, 10) / 10;
this.updateAttribute();
};
e.prototype.updateAttribute = function() {
if (this.selectorCallback) {
var t = i.SKIN_COLORS, e = Math.floor(10 * this.slider.progress);
this.selectorCallback(cc.Color.WHITE.fromHEX(t[e]));
}
};
var i;
e.SKIN = 0;
e.SKIN_COLORS = [ "#ffe8d2", "#ffe1c5", "#ebcaac", "#e0c1a4", "#ccad8f", "#ad9075", "#997E5B", "#664e38", "#473524", "#291404", "#1f1711" ];
n([ c(cc.Slider) ], e.prototype, "slider", void 0);
return i = n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../logic/Logic": "Logic"
} ],
BuildingData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "78dc5pt0FFGDaglLh5AJv4K", "BuildingData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("./EquipmentData"), n = t("./ItemData"), r = function() {
function t() {
this.isOpen = !1;
this.quality = 1;
this.price = 60;
this.shopType = 0;
this.isSaled = !1;
this.maxHealth = 1;
this.currentHealth = 1;
this.generatorList = [];
this.generatorCount = 0;
this.generatorInterval = 0;
this.breakEquipItems = "";
this.interact = 0;
this.rollover = 0;
this.nameCn = "";
this.nameEn = "";
this.id = "";
this.resName = "";
this.scale = 1;
this.collider = "";
this.spritePos = "";
this.z = 0;
this.breakZ = 0;
this.indexZ = 0;
this.custom = !1;
this.info = "";
this.desc = "";
}
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t, !0);
this.defaultPos = t.defaultPos ? cc.v3(t.defaultPos.x, t.defaultPos.y) : cc.v3(0, 0);
this.position = t.position ? cc.v3(t.position.x, t.position.y) : cc.v3(0, 0);
if (t.equipdata) {
this.equipdata = new a.default();
this.equipdata.valueCopy(t.equipdata);
}
if (t.itemdata) {
this.itemdata = new n.default();
this.itemdata.valueCopy(t.itemdata);
}
this.quality = t.quality ? t.quality : 1;
this.generatorList = [];
t.generatorList && (this.generatorList = t.generatorList);
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = r;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./EquipmentData": "EquipmentData",
"./ItemData": "ItemData"
} ],
BuildingManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "ac92cjzIYlNDKOIneo1Pkvl", "BuildingManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = t("../building/FootBoard"), c = t("../utils/IndexZ"), u = t("../building/Saw"), p = t("../building/Emplacement"), h = t("../building/DecorationFloor"), d = t("../building/Chest"), f = t("../building/Box"), g = t("../building/ShopTable"), y = t("../building/FallStone"), m = t("../building/MagicLightening"), v = t("../building/ExitDoor"), E = t("../building/Door"), _ = t("../building/Wall"), T = t("../building/AirExit"), D = t("../building/Portal"), S = t("../building/RoomBed"), O = t("../building/Building"), A = t("../data/ExitData"), R = t("./BaseManager"), C = t("../boss/DryadGrass"), P = t("../utils/Utils"), L = t("../effect/ShadowOfSight"), b = t("./LightManager"), I = t("../building/SavePoint"), M = t("../building/MartShelves"), N = t("./NonPlayerManager"), w = t("./MonsterManager"), H = t("../building/MgWentLine"), x = t("../building/RoomStool"), F = t("../building/MgCrack"), B = t("../building/InteractBuilding"), k = t("../building/EnergyShield"), j = t("./EquipmentManager"), U = t("../building/Furniture"), G = t("../data/FurnitureData"), W = t("../building/RoomFishtank"), Y = t("../collider/CCollider"), q = t("../building/WallPaint"), V = t("../building/RoomKitchen"), Z = t("../utils/AudioPlayer"), K = t("../data/NonPlayerData"), z = t("../data/BuildingData"), X = t("./InventoryManager"), Q = t("../building/NormalBuilding"), J = t("../building/Stairs"), $ = t("../building/DecorationWall"), tt = t("../building/Ladder"), et = cc._decorator, it = et.ccclass, ot = (et.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.footboards = new Array();
e.exitdoors = new Array();
e.portals = new Array();
e.doors = new Array();
e.airExits = new Array();
e.monsterGeneratorList = new Array();
e.colliderCombineMap = new Map();
e.emptyMap = new Map();
e.coastColliderList = [ "128,128,0,0", "128,128,0,0", "128,128,0,0", "128,128,0,0", "128,64,0,-32", "128,64,0,32", "64,128,32,0", "64,128,-32,0", "64,64,-32,32", "64,64,32,32", "64,64,-32,-32", "64,64,32,-32" ];
e.shelvesFoodIndex = 0;
e.shelvesDrinkIndex = 0;
e.drinkList = [];
e.foodList = [];
e.interactBuildings = [];
e.buildingList = [];
e.checkTimeDelay = 0;
return e;
}
i = e;
e.prototype.clear = function() {
P.default.clearComponentArray(this.footboards);
P.default.clearComponentArray(this.exitdoors);
P.default.clearComponentArray(this.portals);
P.default.clearComponentArray(this.doors);
P.default.clearComponentArray(this.airExits);
P.default.clearComponentArray(this.interactBuildings);
this.footboards = new Array();
this.exitdoors = new Array();
this.portals = new Array();
this.doors = new Array();
this.airExits = new Array();
this.drinkList = new Array();
this.foodList = new Array();
this.interactBuildings = new Array();
this.buildingList = new Array();
this.monsterGeneratorList = new Array();
this.shelvesFoodIndex = 0;
this.shelvesDrinkIndex = 0;
this.colliderCombineMap.clear();
this.emptyMap.clear();
this.lastInteractBuilding = null;
};
e.prototype.hasThe = function(t, e) {
return !!t && -1 != t.indexOf(e);
};
e.prototype.isFirstEqual = function(t, e) {
return !!t && t[0] == e;
};
e.prototype.setAudioMaterial = function(t, e) {
if (e && t.ccolliders) for (var i = 0, o = t.ccolliders; i < o.length; i++) o[i].audioMaterial = e;
};
e.prototype.addBuilding = function(t, e, i, o, a) {
var n = cc.instantiate(t);
n.parent = this.node;
n.position = r.default.getPosInMap(e);
n.zIndex = c.default.getActorZIndex(n.position);
var l = n.getComponent(O.default);
if (l) {
l.initCollider();
this.setAudioMaterial(l, i);
l.entity.NodeRender.node = n;
l.entity.Transform.position = r.default.getPosInMap(e);
l.entity.Move.isStatic = !a;
l.seed = s.default.mapManager.getSeedFromRoom();
o && o.length > 0 ? l.data.valueCopy(s.default.normalBuildings[o]) : l.data.custom = !0;
l.data.defaultPos = e.clone();
l.lights = l.getComponentsInChildren(L.default);
l.lights && b.default.registerLight(l.lights, l.node);
}
this.buildingList.push(l);
return n;
};
e.prototype.addBuildingsFromMap = function(t, e, o, a, n, h, d) {
var f = this;
!o || o.length < 1 || "undefined" == o ? this.emptyMap.set("x=" + a.x + "y=" + a.y, a) : "==" == o || this.isFirstEqual(o, "*") || (this.isFirstEqual(o, "#") ? this.addDirWalls(o, e, a, n, !1) : this.isFirstEqual(o, "-") ? s.default.getBuildings(i.DARKNESS, function(t) {
var e = f.addBuilding(t, a);
e.zIndex = c.default.DARKNESS;
"-0" == o && (e.zIndex = c.default.ROOF);
}) : this.isFirstEqual(o, "~") ? this.addWaterBuilding(o, a) : this.isFirstEqual(o, "+") ? this.addDecorate(t, o, a) : "@@" == o ? s.default.getBuildings(i.FOOTBOARD, function(t) {
var e = f.addBuilding(t, a);
e.zIndex = c.default.FLOOR;
f.footboards.push(e.getComponent(l.default));
}) : "@S" == o ? s.default.getBuildings(i.SAVEPOINT, function(t) {
var e = f.addBuilding(t, a);
f.savePointS = e.getComponent(I.default);
}) : "@a" == o ? this.addEquipItemBuildings(t, o, a, d) : "@b" == o ? this.addEquipItemBuildings(t, o, a, d) : this.isFirstEqual(o, "B") ? this.addBox(o, a) : this.isFirstEqual(o, "C") ? this.addChest(a) : this.isFirstEqual(o, "D") ? this.addDoor(o, a, !1) : this.isFirstEqual(o, "E") ? this.addExitDoor(o, a, h) : "F0" == o ? s.default.getBuildings(i.CAMPFIRE, function(t) {
var e = f.addBuilding(t, a);
f.setAudioMaterial(e.getComponent(O.default), Y.default.AUDIO_MATERIAL.WOOD);
var i = e.getChildByName("sprite").getChildByName("fallentree");
i.position = r.default.getPosInMap(a);
i.position = cc.v3(i.position.x, i.position.y + 40);
i.parent = f.node;
i.zIndex = c.default.getActorZIndex(i.position);
i.setScale(6, 4);
}) : "F1" == o ? s.default.getBuildings(i.AIRTRANSPORTMODEL, function(t) {
f.addBuilding(t, a);
}) : this.isFirstEqual(o, "G") ? s.default.getBuildings(i.EMPLACEMENT, function(e) {
var i = f.addBuilding(e, a).getComponent(p.default);
i.setDirType(o);
i.dungeon = t;
}) : this.isFirstEqual(o, "H") ? this.addNormalBuilding(t, o, Q.default.PREFIX_HITBUILDING, a) : "I0" == o ? s.default.getBuildings(i.WENTLINE, function(e) {
var i = f.addBuilding(e, a).getComponent(H.default);
i.init(t, 1, 6, [ w.default.MONSTER_ZOOMBIE, w.default.MONSTER_BITE_ZOMBIE ]);
f.monsterGeneratorList.push(i);
}) : "I6" == o ? s.default.getBuildings(i.CRACK, function(e) {
var i = f.addBuilding(e, a).getComponent(F.default);
i.init(t, .5, 15, [ w.default.MONSTER_SCARAB ]);
f.monsterGeneratorList.push(i);
}) : this.isFirstEqual(o, "J") ? this.addNormalBuilding(t, o, Q.default.PREFIX_PLATFORM, a) : this.isFirstEqual(o, "K") || (this.isFirstEqual(o, "L") ? this.addLamp(o, a) : this.isFirstEqual(o, "O") ? s.default.getBuildings(i.DECORATIONOVERHEAD, function(t) {
var e = f.addBuilding(t, a);
"O1" == o && (e.angle = 90);
e.opacity = 80;
e.zIndex = c.default.ROOF;
}) : this.isFirstEqual(o, "P") ? s.default.getBuildings(i.PORTAL, function(t) {
if (s.default.isCheatMode) {
for (var e = A.default.getRealWorldExitDataFromDream(s.default.chapterIndex, s.default.level), i = 0, o = h; i < o.length; i++) {
var n = o[i];
if (n.fromPos.equals(a) && n.fromRoomPos.equals(cc.v3(s.default.mapManager.getCurrentRoom().x, s.default.mapManager.getCurrentRoom().y))) {
e.valueCopy(n);
break;
}
}
var r = f.addBuilding(t, a).getComponent(D.default);
r.exitData.valueCopy(e);
f.portals.push(r);
}
}) : "Q0" == o || (this.isFirstEqual(o, "R") ? s.default.getBuildings(i.SHIPSTAIRS, function(t) {
var e = f.addBuilding(t, a);
e.setScale(16);
e.zIndex = c.default.WALLINTERNAL;
if (1 == parseInt(o[1])) {
e.setScale(-16, 16);
e.getComponent(Y.default).offset = cc.v2(-8, 0);
}
}) : "S0" == o ? this.addShopTable(a) : "S1" == o ? s.default.getBuildings(i.SHOP, function(t) {
f.addBuilding(t, a);
}) : "S2" == o ? s.default.getBuildings(i.SHOPMART, function(t) {
f.addBuilding(t, a).zIndex += 10;
}) : "S3" == o || "S4" == o || "S5" == o ? this.addMartShelves(o, a) : "S6" == o ? s.default.getBuildings(i.MARTCASHIER, function(e) {
f.addBuilding(e, a);
var i = r.default.getPosInMap(a), o = new K.default();
o.valueCopy(s.default.nonplayers[N.default.SHOP_KEEPER]);
t.nonPlayerManager.addNonPlayerFromData(o, cc.v3(i.x - 60, i.y + 180), 0, t);
}) : "S7" == o ? s.default.getBuildings(i.MARTTABLE, function(t) {
f.addBuilding(t, a);
}) : "T000" == o ? s.default.getBuildings(i.TRAP, function(t) {
f.addBuilding(t, a);
}) : "T002" == o ? s.default.getBuildings(i.SAW, function(t) {
f.addBuilding(t, a).getComponent(u.default).setPos(a);
}) : "T003" == o ? this.addFallStone(a, !1) : "T004" == o ? this.addLighteningFall(r.default.getPosInMap(a), !0, !0, !0) : this.isFirstEqual(o, "U") ? s.default.getBuildings(i.WALLPAINT, function(t) {
var e = f.addBuilding(t, a).getComponent(q.default);
e.node.zIndex = c.default.getActorZIndex(e.node.position.add(cc.v3(0, 120)));
e.init(o);
}) : this.isFirstEqual(o, "V") ? this.addStairs(o, a) : this.isFirstEqual(o, "W") ? this.addInteractBuilding(o, a) : this.isFirstEqual(o, "X") ? s.default.getBuildings(i.DECORATIONWALL, function(t) {
var e = f.addBuilding(t, a).getComponent($.default);
e.node.zIndex = c.default.getActorZIndex(e.node.position.add(cc.v3(0, 120)));
e.init(o);
}) : this.isFirstEqual(o, "Y") ? this.addLadder(o, a) : this.isFirstEqual(o, "Z") && ("Z0" == o || "Z1" == o ? s.default.getBuildings(i.ROOMBED, function(e) {
var i = f.addBuilding(e, a, Y.default.AUDIO_MATERIAL.WOOD), n = i.getComponent(S.default);
i.zIndex -= 40;
n.init(t, "Z1" == o);
}) : this.addFurnitures(t, o, a)))));
};
e.prototype.addLadder = function(t, e) {
var o = this;
s.default.getBuildings(i.LADDER, function(i) {
var a = o.addBuilding(i, e), n = a.getComponent(tt.default);
a.zIndex = c.default.getActorZIndex(a.position.add(cc.v3(0, 120)));
n.init(t);
});
};
e.prototype.addBuildingsFromSideMap = function(t, e, o, a) {
var n = this;
this.isFirstEqual(t, "#") ? this.addDirWalls(t, e, o, a, !0) : this.isFirstEqual(t, "-") ? s.default.getBuildings(i.DARKNESS, function(e) {
var i = n.addBuilding(e, o);
i.zIndex = c.default.DARKNESS;
"-0" == t && (i.zIndex = c.default.ROOF);
}) : this.isFirstEqual(t, "~") ? this.addWaterBuilding(t, o) : "+3" == t ? s.default.getBuildings(i.AIRTRANSPORTMODEL, function(t) {
n.addBuilding(t, o);
}) : this.isFirstEqual(t, "D") && this.addDoor(t, o, !0);
};
e.prototype.addStairs = function(t, e) {
var o = this, a = new Map();
a.set(J.default.TYPE_FRONT, i.STAIRS0);
a.set(J.default.TYPE_BEHIND, i.STAIRS1);
a.set(J.default.TYPE_LEFT, i.STAIRS2);
a.set(J.default.TYPE_RIGHT, i.STAIRS3);
a.set(J.default.TYPE_PLATFORM, i.STAIRS4);
a.forEach(function(i, a) {
o.hasThe(t, a) && s.default.getBuildings(i, function(i) {
var a = o.addBuilding(i, e).getComponent(J.default);
a.data.z = 0;
a.init(t);
});
});
};
e.prototype.addNormalBuilding = function(t, e, o, a) {
var n = this;
s.default.getBuildings(i.NORMAL_BUILDING, function(i) {
var r = n.addBuilding(i, a, Y.default.AUDIO_MATERIAL.METAL, "" + o + e.substring(1)).getComponent(Q.default), l = s.default.mapManager.getCurrentMapBuilding(r.data.defaultPos);
r.data.valueCopy(l);
r.init(t);
});
};
e.prototype.addInteractBuilding = function(t, e) {
var o = this;
s.default.getBuildings(i.INTERACTBUILDING, function(i) {
var a = s.default.mapManager.getCurrentMapBuilding(e), n = s.default.mapManager.getCurrentRoom().isReborn;
if (a) {
if (a.currentHealth > 0 || n) {
(l = o.addBuilding(i, e, Y.default.AUDIO_MATERIAL.WOOD, "", !0).getComponent(B.default)).node.position = a.position.clone();
l.data.valueCopy(a);
if (n) {
l.node.position = r.default.getPosInMap(l.data.defaultPos);
l.data.currentHealth = l.data.maxHealth;
}
l.init(!0, parseInt(t[1]));
o.interactBuildings.push(l);
}
} else {
var l;
(l = o.addBuilding(i, e, Y.default.AUDIO_MATERIAL.WOOD, "", !0).getComponent(B.default)).data.currentHealth = 5;
s.default.mapManager.setCurrentBuildingData(l.data.clone());
l.init(!0, parseInt(t[1]));
o.interactBuildings.push(l);
}
});
};
e.prototype.addBox = function(t, e) {
var o = this;
s.default.getBuildings(i.BOX, function(i) {
var a = o.addBuilding(i, e, Y.default.AUDIO_MATERIAL.WOOD, "", !0).getComponent(f.default);
a.setDefaultPos(e);
"B001" == t && (a.boxType = f.default.PLANT);
var n = s.default.mapManager.getCurrentMapBuilding(a.data.defaultPos);
n ? a.node.position = n.position.clone() : s.default.mapManager.setCurrentBuildingData(a.data.clone());
});
};
e.prototype.addShopTable = function(t) {
var e = this;
s.default.getBuildings(i.SHOPTABLE, function(i) {
var o = e.addBuilding(i, t, Y.default.AUDIO_MATERIAL.WOOD).getComponent(g.default);
o.setDefaultPos(t);
var a = s.default.mapManager.getCurrentRoom().isReborn, n = s.default.mapManager.getRandom4Save(o.seed);
o.data.shopType = n.getRandomNum(0, 100) > 10 ? g.default.EQUIPMENT : g.default.ITEM;
var r = s.default.mapManager.getCurrentMapBuilding(o.data.defaultPos);
if (r) {
if (a && r.isSaled) {
r.isSaled = !1;
r.equipdata = null;
r.itemdata = null;
n = s.default.mapManager.getRandom4Save(s.default.mapManager.getRebornSeed(o.seed));
r.shopType = n.getRandomNum(0, 100) > 10 ? g.default.EQUIPMENT : g.default.ITEM;
}
o.data.valueCopy(r);
} else s.default.mapManager.setCurrentBuildingData(o.data.clone());
o.showItem();
});
};
e.prototype.addChest = function(t) {
var e = this;
s.default.getBuildings(i.CHEST, function(i) {
var o = e.addBuilding(i, t, Y.default.AUDIO_MATERIAL.WOOD).getComponent(d.default);
o.seDefaultPos(t);
var a = s.default.mapManager.getRandom4Save(o.seed).rand(), n = 1;
a > .5 && a < .7 ? n = 2 : a > .7 && a < .8 ? n = 3 : a > .8 && a < .85 && (n = 4);
o.setQuality(n, !1);
var r = s.default.mapManager.getCurrentMapBuilding(o.data.defaultPos);
r ? o.setQuality(r.quality, r.isOpen) : s.default.mapManager.setCurrentBuildingData(o.data.clone());
});
};
e.prototype.addEquipItemBuildings = function(t, e, i, o) {
var a = new z.default(), n = "@b" == e;
a.defaultPos = i.clone();
a.isOpen = !0;
if (!n) {
var l = s.default.mapManager.getCurrentMapBuilding(a.defaultPos);
if (l && l.isOpen) return;
s.default.mapManager.setCurrentBuildingData(a.clone());
}
for (var c = 0, u = o; c < u.length; c++) {
var p = u[c];
if (p.fromPos.equals(i) && p.fromRoomPos.equals(cc.v3(s.default.mapManager.getCurrentRoom().x, s.default.mapManager.getCurrentRoom().y))) {
X.default.isEquipTag(p.resName) ? t.addEquipment(p.resName, r.default.getPosInMap(i)) : t.addItem(r.default.getPosInMap(i), p.resName);
break;
}
}
};
e.prototype.addDecorate = function(t, e, o) {
var a = this;
"+++0" == e ? s.default.getBuildings(i.GRASS01, function(t) {
a.addBuilding(t, o, Y.default.AUDIO_MATERIAL.WOOD);
}) : "+++1" == e ? s.default.getBuildings(i.GRASS02, function(t) {
a.addBuilding(t, o, Y.default.AUDIO_MATERIAL.WOOD);
}) : "+++2" == e ? s.default.getBuildings(i.GRASS03, function(t) {
a.addBuilding(t, o, Y.default.AUDIO_MATERIAL.WOOD);
}) : "+++3" == e ? s.default.getBuildings(i.GRASS04, function(t) {
a.addBuilding(t, o, Y.default.AUDIO_MATERIAL.WOOD);
}) : s.default.getBuildings(i.DECORATIONFLOOR, function(i) {
var n = a.addBuilding(i, o, Y.default.AUDIO_MATERIAL.WOOD).getComponent(h.default);
"+1" == e ? n.init(t, "floor_exitarrow", 4, 0) : "+2" == e ? n.init(t, "floor_exitarrow", 4, 45) : "+3" == e ? n.init(t, "floor_exitarrow", 4, 90) : "+4" == e ? n.init(t, "floor_exitarrow", 4, -45) : "+5" == e ? n.init(t, "floor_final", 4) : "+6" == e ? n.init(t, "floor_ladder", 4) : "+7" == e ? n.init(t, "floor_whiteline", 4) : "++0" == e ? n.init(t, "floor_roomoutside0", 32, 0, 1, cc.v3(.7, .5), 255, c.default.BASE) : "++1" == e ? n.init(t, "floor_roomoutside1", 32, 0, 1, cc.v3(.7, .5), 255, c.default.BASE) : "++2" == e ? n.init(t, "floor_roomoutside2", 32, 0, 1, cc.v3(0, .5), 255, c.default.BASE) : n.init(t, "floor_dev", 4);
});
};
e.prototype.addWaterBuilding = function(t, e) {
var o = this;
this.hasThe(t, "~#") ? s.default.getBuildings(i.COAST, function(i) {
var a = parseInt(t.substring(2)), n = o.addBuilding(i, e, Y.default.AUDIO_MATERIAL.WOOD);
n.zIndex = c.default.ACTOR;
n.getChildByName("sprite").getComponent(cc.Sprite).spriteFrame = s.default.spriteFrameRes("coast" + P.default.getNumberStr3(a));
}) : this.hasThe(t, "~~") && s.default.getBuildings(i.WATERFALL, function(t) {
Z.default.play(Z.default.WATERFALL, !1, !0);
o.addBuilding(t, e, Y.default.AUDIO_MATERIAL.WOOD);
});
};
e.prototype.addLamp = function(t, e) {
var o = this, a = i.LAMPLIGHT, n = !1, l = !1, u = !1, p = !1;
switch (t) {
case "L0":
a = i.LAMPOVALLIGHT;
break;

case "L1":
a = i.LAMPSUN;
n = !0;
break;

case "L2":
a = i.LAMPSHIP;
n = !0;
break;

case "L3":
a = i.MUSHROOM01;
break;

case "L4":
a = i.MUSHROOM02;
break;

case "L5":
a = i.MUSHROOM03;
break;

case "L6":
a = i.MUSHROOM04;
break;

case "L7":
a = i.LAMPSEARCH;
n = !0;
break;

case "L8":
a = i.LAMPTORCH;
n = !0;
break;

case "L9":
a = i.LAMPFIREPAN;
break;

case "L10":
a = i.LAMPROAD;
break;

case "L11":
a = i.LAMPFIREFLY;
break;

case "L12":
a = i.LAMPEXIT;
p = !0;
break;

case "L13":
a = i.LAMPOVALLIGHTOUTSIDE;
break;

case "LL020":
case "LL021":
case "LL022":
case "LL023":
a = i.LAMPDIRECT;
break;

case "LL010":
case "LL011":
case "LL012":
case "LL013":
case "LL014":
case "LL015":
case "LL016":
case "LL017":
case "LL018":
case "LL019":
a = i.LAMPLIGHT;
u = !0;
break;

case "LL000":
case "LL001":
case "LL002":
case "LL003":
case "LL004":
case "LL005":
case "LL006":
case "LL007":
case "LL008":
case "LL009":
a = i.LAMPLIGHT;
u = !0;
l = !0;
break;

case "LO010":
case "LO011":
case "LO012":
case "LO013":
case "LO014":
case "LO015":
case "LO016":
case "LO017":
case "LO018":
case "LO019":
a = i.LAMPLIGHTOUTSIDE;
u = !0;
break;

case "LO000":
case "LO001":
case "LO002":
case "LO003":
case "LO004":
case "LO005":
case "LO006":
case "LO007":
case "LO008":
case "LO009":
a = i.LAMPLIGHTOUTSIDE;
u = !0;
l = !0;
}
s.default.getBuildings(a, function(i) {
var a = o.addBuilding(i, e, Y.default.AUDIO_MATERIAL.WOOD);
n && (a.zIndex = c.default.OVERHEAD + 100);
p && (a.zIndex = c.default.getActorZIndex(a.position.add(cc.v3(0, 120))));
if (u) {
var s = a.getComponent(O.default);
if (s.lights.length > 0) {
var h = parseInt(t[4]), d = r.default.TILE_SIZE * h;
s.lights[0].setCustomColliderStyle(l, d, d, d / 2, 0, 0);
}
}
});
};
e.prototype.getGoodsList = function(t) {
if (this.foodList.length < 1 && this.drinkList.length < 1) for (var e = 0, i = s.default.goodsNameList; e < i.length; e++) {
var o = i[e], a = o.substring("goods".length, "goods".length + 1);
"0" == a ? this.drinkList.push(o) : "1" == a && this.foodList.push(o);
}
if (t == M.default.TYPE_FRIDGE) {
for (var n = [], r = this.shelvesDrinkIndex % M.default.SIZE_FRIDGE; r < M.default.SIZE_FRIDGE; r++) this.shelvesDrinkIndex < this.drinkList.length && n.push(this.drinkList[this.shelvesDrinkIndex++]);
return n;
}
var l = [];
for (r = this.shelvesFoodIndex % M.default.SIZE_NORMAL; r < M.default.SIZE_NORMAL; r++) this.shelvesFoodIndex < this.foodList.length && l.push(this.foodList[this.shelvesFoodIndex++]);
return l;
};
e.prototype.addMartShelves = function(t, e) {
var o = this;
t == M.default.TYPE_FRIDGE ? s.default.getBuildings(i.MARTFRIDGE, function(i) {
o.addBuilding(i, e, Y.default.AUDIO_MATERIAL.WOOD).getComponent(M.default).init(t, o.getGoodsList(t));
}) : s.default.getBuildings(i.MARTSHELVES, function(i) {
o.addBuilding(i, e, Y.default.AUDIO_MATERIAL.WOOD).getComponent(M.default).init(t, o.getGoodsList(t));
});
};
e.prototype.addExitDoor = function(t, e, o) {
var a = this;
s.default.getBuildings(i.EXITDOOR, function(i) {
for (var n = parseInt(t[3]), r = parseInt(t.substring(1, 3)), l = A.default.getRealWorldExitDataFromDream(s.default.chapterIndex, s.default.level), c = 0, u = o; c < u.length; c++) {
var p = u[c];
if (p.fromPos.equals(e) && p.fromRoomPos.equals(cc.v3(s.default.mapManager.getCurrentRoom().x, s.default.mapManager.getCurrentRoom().y))) {
l.valueCopy(p);
break;
}
}
var h = a.addBuilding(i, e).getComponent(v.default);
h.init(r, n, l);
a.exitdoors.push(h);
});
};
e.prototype.addAirExit = function(t) {
var e = this;
s.default.getBuildings(i.AIREXIT, function(i) {
var o = e.addBuilding(i, cc.v3(Math.floor(t.length / 2), t[0].length)).getComponent(T.default), a = e.addBuilding(i, cc.v3(Math.floor(t.length / 2), -1)).getComponent(T.default), n = e.addBuilding(i, cc.v3(-1, Math.floor(t[0].length / 2))).getComponent(T.default), r = e.addBuilding(i, cc.v3(t.length, Math.floor(t[0].length / 2))).getComponent(T.default);
e.airExits.push(o);
e.airExits.push(a);
e.airExits.push(n);
e.airExits.push(r);
for (var s = 0; s < e.airExits.length; s++) e.airExits[s].init(s, s < 2 ? t.length + 2 : t[0].length + 2);
});
};
e.prototype.addDoor = function(t, e, o) {
var a = this;
s.default.getBuildings(i.DOOR, function(i) {
var n = parseInt(t[3]), r = parseInt(t.substring(1, 3)), l = a.addBuilding(i, e).getComponent(E.default);
l.isDoor = !0;
l.dir = n % 4;
l.isLock = 1 == r && !s.default.isCheatMode;
l.isEmpty = 2 == r;
l.isTransparent = 3 == r;
l.isHidden = 4 == r;
l.isDecorate = o;
a.doors.push(l);
});
};
e.prototype.setDoors = function(t, e) {
for (var i = 0, o = this.doors; i < o.length; i++) o[i].setOpen(t, e);
for (var a = 0, n = this.airExits; a < n.length; a++) n[a].changeStatus(t ? T.default.STATUS_OPEN : T.default.STATUS_CLOSE);
if (this.exitdoors.length > 0) for (var r = 0, s = this.exitdoors; r < s.length; r++) {
var l = s[r];
t ? l.openGate() : l.closeGate();
}
if (this.portals.length > 0) for (var c = 0, u = this.portals; c < u.length; c++) {
l = u[c];
t ? l.openGate() : l.closeGate();
}
};
e.prototype.getReachDir = function() {
for (var t = new Map(), e = 0, i = this.doors; e < i.length; e++) {
var o = i[e];
o.isLock || o.isDecorate || (s.default.mapManager.isNeighborRoomNew(o.dir) ? t.set(o.dir, !0) : s.default.mapManager.isNeighborRoomExist(o.dir) && t.set(o.dir, !1));
}
for (var a = 0, n = this.exitdoors; a < n.length; a++) {
var r = n[a];
r.dir < 8 && t.set(r.dir % 4, !0);
}
return t;
};
e.prototype.addDirWalls = function(t, e, o, a, n) {
var r = this;
s.default.getBuildings(i.WALL, function(i) {
var s = r.addBuilding(i, o).getComponent(_.default), l = 0, c = r.colliderCombineMap.has("i" + o.x + "j" + o.y);
c && (s.combineWall = r.colliderCombineMap.get("i" + o.x + "j" + o.y));
if (!c && !n) for (var u = o.x + 1; u < e.length; u++) {
var p = e[u][o.y];
if (!P.default.isFirstEqual(p, "#")) break;
r.colliderCombineMap.set("i" + u + "j" + o.y, s);
l++;
}
s.init(t, a, n || c, l, 0);
});
};
e.prototype.addFurnitures = function(t, e, o) {
var a, n, r = this, l = new G.default();
switch (e) {
case "Z2":
l.valueCopy(s.default.furnitures[U.default.DESK]);
break;

case "Z3":
l.valueCopy(s.default.furnitures[U.default.TV]);
break;

case "Z4":
l.valueCopy(s.default.furnitures[U.default.SOFA]);
break;

case "Z5":
l.valueCopy(s.default.furnitures[U.default.DINNER_TABLE]);
break;

case "Z6":
l.valueCopy(s.default.furnitures[U.default.FRIDGE]);
break;

case "Z7":
l.valueCopy(s.default.furnitures[U.default.WASHING_MACHINE]);
break;

case "Z8":
l.valueCopy(s.default.furnitures[U.default.CUPBOARD]);
break;

case "Z9":
l.valueCopy(s.default.furnitures[U.default.STOOL]);
break;

case "Z10":
l.valueCopy(s.default.furnitures[U.default.COOKING_BENCH]);
break;

case "Z11":
l.valueCopy(s.default.furnitures[U.default.DOLL_MACHINE]);
break;

case "Z12":
l.valueCopy(s.default.furnitures[U.default.COOKING_BENCH_2]);
break;

case "Z13":
l.valueCopy(s.default.furnitures[U.default.COOKING_BENCH_3]);
break;

case "Z14":
l.valueCopy(s.default.furnitures[U.default.BATH]);
break;

case "Z15":
l.valueCopy(s.default.furnitures[U.default.LITTLE_TABLE]);
break;

case "Z16":
l.valueCopy(s.default.furnitures[U.default.LITTLE_TABLE_1]);
break;

case "Z17":
l.valueCopy(s.default.furnitures[U.default.LITTLE_TABLE_2]);
break;

case "Z18":
l.valueCopy(s.default.furnitures[U.default.FISHTANK]);
break;

case "Z19":
l.valueCopy(s.default.furnitures[U.default.BOOKSHELF]);
break;

case "Z20":
l.valueCopy(s.default.furnitures[U.default.WATERDISPENER]);
break;

case "Z21":
l.valueCopy(s.default.furnitures[U.default.TRASHCAN]);
}
"Z3" == e ? s.default.getBuildings(i.ROOMTV, function(t) {
a = r.addBuilding(t, o);
(n = a.getComponent(U.default)).init(l, !1);
}) : "Z4" == e ? s.default.getBuildings(i.ROOMSOFA, function(t) {
(a = r.addBuilding(t, o, Y.default.AUDIO_MATERIAL.WOOD)).zIndex = c.default.ACTOR;
(n = a.getComponent(U.default)).init(l, !1);
}) : "Z9" == e ? s.default.getBuildings(i.ROOMSTOOL, function(e) {
(a = r.addBuilding(e, o)).getComponent(x.default).init(t);
(n = a.getComponent(U.default)).init(l, !1);
}) : "Z10" == e ? s.default.getBuildings(i.ROOMKITCHEN, function(t) {
(a = r.addBuilding(t, o)).getComponent(V.default).init(o);
(n = a.getComponent(U.default)).init(l, !1);
}) : "Z17" == e ? s.default.getBuildings(i.ROOMCLOCK, function(t) {
a = r.addBuilding(t, o, Y.default.AUDIO_MATERIAL.WOOD);
(n = a.getComponent(U.default)).init(l, !1);
}) : "Z18" == e ? s.default.getBuildings(i.ROOMFISHTANK, function(e) {
(a = r.addBuilding(e, o, Y.default.AUDIO_MATERIAL.WOOD)).getComponent(W.default).init(t);
(n = a.getComponent(U.default)).init(l, !1);
}) : "Z20" == e ? s.default.getBuildings(i.ROOMWATERDISPENSER, function(t) {
a = r.addBuilding(t, o, Y.default.AUDIO_MATERIAL.WOOD);
(n = a.getComponent(U.default)).init(l, !1);
}) : "Z21" == e ? s.default.getBuildings(i.ROOMTRASHCAN, function(t) {
a = r.addBuilding(t, o, Y.default.AUDIO_MATERIAL.WOOD);
(n = a.getComponent(U.default)).init(l, !1);
}) : s.default.getBuildings(i.FURNITURE, function(t) {
a = r.addBuilding(t, o, Y.default.AUDIO_MATERIAL.WOOD);
(n = a.getComponent(U.default)).init(l, !0);
});
if (n) {
var u = s.default.mapManager.getCurrentMapBuilding(n.data.defaultPos);
u && (n.data.isOpen = u.isOpen);
}
};
e.prototype.addFallStone = function(t, e, o) {
var a = this;
this.node && s.default.getBuildings(i.FALLSTONE, function(i) {
var n = a.addBuilding(i, t), r = n.getComponent(y.default);
r.isAuto = e;
n.zIndex = c.default.ACTOR;
r.isAuto && r.fall(o);
});
};
e.prototype.addLighteningFall = function(t, e, o, a, n) {
var l = this;
this.node && s.default.getBuildings(i.LIGHTENINGFALL, function(i) {
var s = l.addBuilding(i, r.default.getIndexInMap(t)), u = s.getComponent(m.default);
s.zIndex = c.default.ACTOR;
u.isTrigger = e;
u.isTrigger || u.fall(o, a, n);
});
};
e.prototype.addTwineGrass = function(t, e) {
var o = this;
this.node && s.default.getBuildings(i.DRYADTWINE, function(i) {
var a = o.addBuilding(i, t), n = a.getComponent(C.default);
n.isAuto = e;
a.zIndex = c.default.getActorZIndex(t);
n.isAuto && n.fall();
});
};
e.prototype.addEnergyShield = function(t, e) {
var o = this;
this.node || e && e(null);
s.default.getBuildings(i.ENERGYSHIELD, function(i) {
var a = o.addBuilding(i, t.pos);
a.position = t.node.position.clone();
var n = a.getComponent(k.default);
n.entity.Transform.position = a.position.clone();
var r = 8 + Math.floor(s.default.playerData.OilGoldData.level / 5);
n.init(t, 20 + 5 * s.default.playerData.OilGoldData.level, r);
e && e(n);
});
};
e.prototype.addPracticeEquipItem = function(t, e) {
if (t) {
t.addEquipment(j.default.WEAPON_WOOD_SWORD, r.default.getPosInMap(e.add(cc.v3(-2, 0))));
t.addEquipment(j.default.WEAPON_WOOD_SPEAR, r.default.getPosInMap(e.add(cc.v3(-1, 0))));
t.addEquipment(j.default.WEAPON_WOOD_DAGGER, r.default.getPosInMap(e));
t.addEquipment(j.default.WEAPON_WOOD_HAMMER, r.default.getPosInMap(e.add(cc.v3(1, 0))));
t.addEquipment(j.default.WEAPON_WOOD_LONG_CROSS, r.default.getPosInMap(e.add(cc.v3(2, 0))));
t.addEquipment(j.default.WEAPON_WOOD_LONG_STICK, r.default.getPosInMap(e.add(cc.v3(-3, 0))));
}
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t, e) {
if (this.isCheckTimeDelay(t)) {
for (var i = 200, o = null, a = this.interactBuildings.length - 1; a >= 0; a--) {
var n = this.interactBuildings[a];
n.highLight(!1);
if (!(n.isTaken || !n.isValid || n.data.currentHealth <= 0)) {
var r = s.default.getDistanceNoSqrt(n.node.position, e.node.position);
if (r < i) {
i = r;
o = n;
}
}
}
if (i < 96 && o) {
o.highLight(!0);
this.lastInteractBuilding = o;
} else this.lastInteractBuilding = null;
}
};
var i;
e.AIREXIT = "AirExit";
e.AIRTRANSPORT = "AirTransport";
e.AIRTRANSPORTMODEL = "AirTransportModel";
e.BED = "Bed";
e.BOX = "Box";
e.CAMPFIRE = "CampFire";
e.CHEST = "Chest";
e.COAST = "Coast";
e.DARKNESS = "Darkness";
e.INTERACTBUILDING = "InteractBuilding";
e.DECORATIONFLOOR = "DecorationFloor";
e.DECORATIONOVERHEAD = "DecorationOverHead";
e.DECORATIONWALL = "DecorationWall";
e.DOOR = "Door";
e.DRYADTWINE = "DryadTwine";
e.EMPLACEMENT = "Emplacement";
e.EXITDOOR = "ExitDoor";
e.FALLSTONE = "FallStone";
e.FOOTBOARD = "FootBoard";
e.HITBUILDING = "HitBuilding";
e.ICEDEMONTHRON = "IceDemonThron";
e.LIGHTENINGFALL = "LighteningFall";
e.LADDER = "Ladder";
e.MARTCASHIER = "MartCashier";
e.MARTFRIDGE = "MartFridge";
e.MARTSHELVES = "MartShelves";
e.MARTTABLE = "MartTable";
e.MIST = "Mist";
e.PORTAL = "Portal";
e.ROOMBED = "RoomBed";
e.ROOMTV = "RoomTv";
e.ROOMSTOOL = "RoomStool";
e.ROOMSOFA = "RoomSofa";
e.ROOMFISHTANK = "RoomFishtank";
e.ROOMWATERDISPENSER = "RoomWaterDispenser";
e.ROOMCLOCK = "RoomClock";
e.ROOMTRASHCAN = "RoomTrashCan";
e.ROOMKITCHEN = "RoomKitchen";
e.SAVEPOINT = "SavePoint";
e.SAW = "Saw";
e.SHIPSTAIRS = "Shipstairs";
e.SHOP = "Shop";
e.SHOPMART = "ShopMart";
e.SHOPTABLE = "ShopTable";
e.TAROTTABLE = "TarotTable";
e.TRAP = "Trap";
e.WALL = "Wall";
e.WATER = "Water";
e.LAMPLIGHT = "LampLight";
e.LAMPLIGHTOUTSIDE = "LampLightOutside";
e.LAMPOVALLIGHT = "LampOvalLight";
e.LAMPOVALLIGHTOUTSIDE = "LampOvalLightOutside";
e.LAMPSUN = "LampSun";
e.LAMPSHIP = "LampShip";
e.LAMPSEARCH = "LampSearch";
e.LAMPFIREPAN = "LampFirePan";
e.LAMPTORCH = "LampTorch";
e.LAMPROAD = "LampRoad";
e.LAMPFIREFLY = "LampFireFly";
e.LAMPEXIT = "LampExit";
e.LAMPDIRECT = "LampDirectLight";
e.MUSHROOM01 = "MushRoom01";
e.MUSHROOM02 = "MushRoom02";
e.MUSHROOM03 = "MushRoom03";
e.MUSHROOM04 = "MushRoom04";
e.GRASS01 = "Grass01";
e.GRASS02 = "Grass02";
e.GRASS03 = "Grass03";
e.GRASS04 = "Grass04";
e.WENTLINE = "WentLine";
e.CRACK = "Crack";
e.WATERFALL = "WaterFall";
e.ENERGYSHIELD = "EnergyShield";
e.FURNITURE = "Furniture";
e.WALLPAINT = "WallPaint";
e.NORMAL_BUILDING = "NormalBuilding";
e.STAIRS0 = "Stairs0";
e.STAIRS1 = "Stairs1";
e.STAIRS2 = "Stairs2";
e.STAIRS3 = "Stairs3";
e.STAIRS4 = "Stairs4";
return i = n([ it ], e);
}(R.default));
i.default = ot;
cc._RF.pop();
}, {
"../boss/DryadGrass": "DryadGrass",
"../building/AirExit": "AirExit",
"../building/Box": "Box",
"../building/Building": "Building",
"../building/Chest": "Chest",
"../building/DecorationFloor": "DecorationFloor",
"../building/DecorationWall": "DecorationWall",
"../building/Door": "Door",
"../building/Emplacement": "Emplacement",
"../building/EnergyShield": "EnergyShield",
"../building/ExitDoor": "ExitDoor",
"../building/FallStone": "FallStone",
"../building/FootBoard": "FootBoard",
"../building/Furniture": "Furniture",
"../building/InteractBuilding": "InteractBuilding",
"../building/Ladder": "Ladder",
"../building/MagicLightening": "MagicLightening",
"../building/MartShelves": "MartShelves",
"../building/MgCrack": "MgCrack",
"../building/MgWentLine": "MgWentLine",
"../building/NormalBuilding": "NormalBuilding",
"../building/Portal": "Portal",
"../building/RoomBed": "RoomBed",
"../building/RoomFishtank": "RoomFishtank",
"../building/RoomKitchen": "RoomKitchen",
"../building/RoomStool": "RoomStool",
"../building/SavePoint": "SavePoint",
"../building/Saw": "Saw",
"../building/ShopTable": "ShopTable",
"../building/Stairs": "Stairs",
"../building/Wall": "Wall",
"../building/WallPaint": "WallPaint",
"../collider/CCollider": "CCollider",
"../data/BuildingData": "BuildingData",
"../data/ExitData": "ExitData",
"../data/FurnitureData": "FurnitureData",
"../data/NonPlayerData": "NonPlayerData",
"../effect/ShadowOfSight": "ShadowOfSight",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/Utils": "Utils",
"./BaseManager": "BaseManager",
"./EquipmentManager": "EquipmentManager",
"./InventoryManager": "InventoryManager",
"./LightManager": "LightManager",
"./MonsterManager": "MonsterManager",
"./NonPlayerManager": "NonPlayerManager"
} ],
Building: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "255a9MnBFxLp4C3tatPRINn", "Building");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../base/Actor"), s = t("../data/BuildingData"), l = t("../utils/Random"), c = cc._decorator, u = c.ccclass, p = (c.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.data = new s.default();
return e;
}
e.prototype.takeDamage = function() {
return !1;
};
e.prototype.addStatus = function() {};
e.prototype.getCenterPosition = function() {
return this.entity.Transform.position.clone();
};
e.prototype.actorName = function() {
return "";
};
e.prototype.takeDizz = function() {};
e.prototype.updateStatus = function() {};
e.prototype.hideSelf = function() {};
e.prototype.updateDream = function() {
return 0;
};
e.prototype.setLinearVelocity = function() {};
e.prototype.updateLife = function() {};
e.prototype.disappear = function() {
cc.tween(this.node).to(.5 + l.default.rand(), {
scaleY: 0
}).start();
};
return n([ u ], e);
}(r.default));
i.default = p;
cc._RF.pop();
}, {
"../base/Actor": "Actor",
"../data/BuildingData": "BuildingData",
"../utils/Random": "Random"
} ],
BulletData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "081a6xA9tZAiZxbsh2+6iXp", "BulletData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("./DamageData"), n = t("./FromData"), r = function() {
function t() {
this.speed = 0;
this.isRect = 0;
this.isRotate = 0;
this.rotateAngle = 0;
this.isLaser = 0;
this.laserRange = 0;
this.isDecelerate = 0;
this.decelerateDelta = 0;
this.delayDecelerate = 0;
this.isBoom = 0;
this.isPhysical = 0;
this.delaytrack = 0;
this.isTracking = 0;
this.lifeTime = 0;
this.size = 1;
this.resName = "";
this.lightName = "";
this.lightColor = "#ffffff";
this.fixedRotation = 0;
this.statusType = "";
this.statusRate = 0;
this.canBreakBuilding = 0;
this.isInvincible = 0;
this.splitBulletType = "";
this.splitTime = 0;
this.splitArcExNum = 0;
this.splitLineExNum = 0;
this.damage = new a.default();
this.from = new n.default();
}
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t);
this.size = t.size ? t.size : 1;
this.lightColor = t.lightColor ? t.lightColor : "#ffffff";
this.damage.valueCopy(t.damage);
this.from.valueCopy(t.from);
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = r;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./DamageData": "DamageData",
"./FromData": "FromData"
} ],
Bullet: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d243aeNu+tEJJbz1ng6i61f", "Bullet");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("../logic/NonPlayer"), l = t("../logic/Player"), c = t("../data/DamageData"), u = t("../logic/Logic"), p = t("../boss/Boss"), h = t("../data/BulletData"), d = t("../manager/StatusManager"), f = t("../utils/AudioPlayer"), g = t("../data/FromData"), y = t("../building/Wall"), m = t("../actor/AreaOfEffect"), v = t("../data/AreaOfEffectData"), E = t("../utils/IndexZ"), _ = t("../building/ExitDoor"), T = t("../utils/ActorUtils"), D = t("../building/InteractBuilding"), S = t("../building/EnergyShield"), O = t("../utils/Utils"), A = t("../logic/MeleeShadowWeapon"), R = t("../logic/Shield"), C = t("../collider/CCollider"), P = t("../base/BaseColliderComponent"), L = t("../data/TriggerData"), b = t("../logic/MeleeCollideHelper"), I = t("../building/AirExit"), M = t("../effect/ShadowOfSight"), N = t("../manager/LightManager"), w = t("../building/NormalBuilding"), H = cc._decorator, x = H.ccclass, F = H.property, B = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.boom = null;
e.root = null;
e.shadow = null;
e.data = new h.default();
e.dir = 0;
e.tagetPos = cc.v3(0, 0);
e.hv = cc.v2(0, 0);
e.isFromPlayer = !1;
e.startPos = cc.v3(0, 0);
e.isTrackDelay = !1;
e.isDecelerateDelay = !1;
e.isHit = !1;
e.isReserved = !1;
e.aoeData = new v.default();
e.currentLinearVelocity = cc.v2(0, 0);
e.ignoreEmptyWall = !1;
e.lights = [];
e.timeDelay = 0;
e.checkTimeDelay = 0;
e.trackCount = 0;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.anim = this.getComponent(cc.Animation);
this.collider = this.getComponentInChildren(C.default);
this.base = this.root.getChildByName("base");
this.base.angle = 0;
this.sprite = this.base.getChildByName("sprite").getComponent(cc.Sprite);
this.sprite.node.opacity = 255;
this.light = this.base.getChildByName("light").getComponent(cc.Sprite);
this.light.node.opacity = 0;
this.entity.Move.gravity = 0;
this.lights = this.getComponentsInChildren(M.default);
N.default.registerLight(this.lights, this.node);
};
e.prototype.onEnable = function() {
this.tagetPos = cc.v3(0, 0);
this.entity.Move.linearVelocity = cc.v2(0, 0);
this.currentLinearVelocity = cc.v2(0, 0);
if (!this.base) {
this.base = this.root.getChildByName("base");
this.sprite = this.base.getChildByName("sprite").getComponent(cc.Sprite);
this.light = this.base.getChildByName("light").getComponent(cc.Sprite);
}
this.sprite.node.angle = 0;
this.sprite.node.opacity = 255;
this.light.node.opacity = 0;
this.changeAngle(0);
this.isTrackDelay = !1;
this.isDecelerateDelay = !1;
this.isHit = !1;
this.isReserved = !1;
N.default.unRegisterLight(this.lights);
N.default.registerLight(this.lights, this.node);
};
e.prototype.changeAngle = function(t) {
this.base.angle = t;
this.shadow.angle = t;
};
e.prototype.update = function(t) {
if (u.default.isGamePause) this.entity.Move.linearVelocity = cc.v2(0, 0); else {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .5) {
this.checkTraking();
this.checkTimeDelay = 0;
}
1 == this.data.fixedRotation && this.changeAngle(0);
if (1 == this.data.isDecelerate && this.isDecelerateDelay) {
this.timeDelay += t;
if (this.timeDelay > .016) {
this.timeDelay = 0;
var e = this.data.decelerateDelta > 0 ? this.data.decelerateDelta : 1;
this.currentLinearVelocity = this.currentLinearVelocity.lerp(cc.v2(0, 0), e * t);
}
}
this.entity.Move.linearVelocity = this.currentLinearVelocity;
var i = this.root.y - this.entity.Transform.base;
i < 0 && (i = 0);
var o = 1 - i / 64;
this.shadow.scale = o < .5 ? .5 : o;
this.shadow.y = this.entity.Transform.base;
this.entity.Move.linearVelocityZ = 0;
}
};
e.prototype.checkTraking = function() {
if (1 == this.data.isTracking && this.isTrackDelay && !this.isHit) {
var t = this.hasNearEnemy();
if (!t.equals(cc.Vec3.ZERO)) {
this.rotateCollider(cc.v2(t.x, t.y));
this.hv = cc.v2(t.x, t.y).normalize();
this.currentLinearVelocity = cc.v2(this.data.speed * this.hv.x, this.data.speed * this.hv.y);
}
}
};
e.prototype.changeBullet = function(t, e) {
this.entity.NodeRender.node = this.node;
this.entity.NodeRender.root = this.root;
this.data = t;
this.changeRes(t.resName, t.lightName, t.lightColor);
this.collider.type = C.default.TYPE.RECT;
this.light.node.position = 1 == t.isRect ? cc.v3(8, 0) : cc.v3(0, 0);
this.node.scale = t.size > 0 ? t.size : 1;
if (1 == t.isRect) {
this.collider.w = 16;
this.collider.h = 12;
} else {
this.collider.w = 24;
this.collider.h = 16;
}
this.collider.sensor = 0 == t.isPhysical;
if (this.shooter && this.shooter.actor) {
this.entity.Transform.base = this.shooter.actor.entity.Transform.base;
this.entity.Transform.z = e / this.node.scale;
}
this.entity.Move.gravity = 0;
};
e.prototype.changeRes = function(t, e, i, o) {
this.sprite || (this.sprite = this.root.getChildByName("sprite").getComponent(cc.Sprite));
if (this.sprite && !(t.length < 1)) {
var a = this.getSpriteFrameByName(t, o), n = this.getSpriteFrameByName(e, o);
a && (this.sprite.spriteFrame = a);
if (n) {
this.light.spriteFrame = n;
var r = cc.color(255, 255, 255).fromHEX(i);
this.light.node.color = r;
this.shadow.color = cc.color(255, 0, 0);
this.shadow.opacity = 60;
}
}
};
e.prototype.getSpriteFrameByName = function(t, e, i) {
var o = u.default.spriteFrameRes(t + e);
o || (o = u.default.spriteFrameRes(i ? t + "anim000" : t));
return o;
};
e.prototype.MeleeFinish = function() {
this.shooter.addDestroyBullet(this.node);
};
e.prototype.showBullet = function(t) {
this.hv = t;
this.rotateCollider(cc.v2(this.hv.x, this.hv.y));
this.fire(this.hv.clone());
};
e.prototype.BulletDestory = function() {
this.sprite && (this.sprite.spriteFrame = null);
N.default.unRegisterLight(this.lights);
this.shooter.addDestroyBullet(this.node);
};
e.prototype.fire = function(t) {
var e = this;
this.currentLinearVelocity = cc.v2(t.x, t.y).mul(this.data.speed);
this.entity.Move.linearVelocity = this.currentLinearVelocity;
this.startPos = this.node.convertToWorldSpaceAR(cc.v3(0, 0));
this.sprite.node.stopAllActions();
this.node.stopAllActions();
var i = this.sprite, o = cc.tween().delay(.1).call(function() {
i.spriteFrame = e.getSpriteFrameByName(e.data.resName, "anim000", !0);
}).delay(.1).call(function() {
i.spriteFrame = e.getSpriteFrameByName(e.data.resName, "anim001", !0);
}).delay(.1).call(function() {
i.spriteFrame = e.getSpriteFrameByName(e.data.resName, "anim002", !0);
}), a = cc.tween().by(.3, {
angle: this.data.rotateAngle > 0 ? this.data.rotateAngle : 15
}), n = cc.tween().parallel(o, a);
this.data.isRotate > 0 ? cc.tween(this.sprite.node).repeatForever(n).start() : cc.tween(this.sprite.node).repeatForever(o).start();
this.unscheduleAllCallbacks();
this.data.lifeTime > 0 ? this.scheduleOnce(function() {
e.bulletHit();
}, this.data.lifeTime) : this.scheduleOnce(function() {
e.bulletHit();
}, 30);
this.isTrackDelay = !1;
1 == this.data.isTracking && this.scheduleOnce(function() {
e.isTrackDelay = !0;
}, this.data.delaytrack);
this.isDecelerateDelay = !1;
1 == this.data.isDecelerate && this.scheduleOnce(function() {
e.isDecelerateDelay = !0;
}, this.data.delayDecelerate);
this.data.splitTime > 0 && this.data.splitBulletType.length > 0 && this.scheduleOnce(function() {
e.bulletHit();
var t = e.node.convertToWorldSpaceAR(cc.Vec3.ZERO);
e.shooter.fireSplitBullet(e.data.splitBulletType, e.base.angle, e.shooter.node.convertToNodeSpaceAR(t), e.data.splitArcExNum, e.data.splitLineExNum);
}, this.data.splitTime);
};
e.prototype.start = function() {};
e.prototype.onColliderPreSolve = function(t, e) {
this.isFromPlayer || t.tag != C.default.TAG.NONPLAYER && t.tag != C.default.TAG.BOSS || (e.disabledOnce = !0);
!this.isFromPlayer || t.tag != C.default.TAG.PLAYER && t.tag != C.default.TAG.GOODNONPLAYER || (e.disabledOnce = !0);
};
e.prototype.onColliderEnter = function(t) {
if (!t.sensor) {
var e = !0;
(t.tag == C.default.TAG.PLAYER || t.tag == C.default.TAG.NONPLAYER || t.tag == C.default.TAG.BOSS || t.tag == C.default.TAG.BOSS_HIT || t.tag == C.default.TAG.BULLET || t.tag == C.default.TAG.WARTER || t.sensor || this.data.isInvincible > 0 || t.tag == C.default.TAG.WALL_TOP || t.tag == C.default.TAG.WALL || t.tag == C.default.TAG.BUILDING) && (e = !1);
if (e) {
this.bulletHit();
return;
}
}
var i = !0;
this.isFromPlayer || t.tag != C.default.TAG.NONPLAYER && t.tag != C.default.TAG.BOSS || (i = !1);
!this.isFromPlayer || t.tag != C.default.TAG.PLAYER && t.tag != C.default.TAG.GOODNONPLAYER || (i = !1);
t.tag == C.default.TAG.BULLET && (i = !1);
i && this.attacking(t.node, t.tag, t.sensor);
};
e.prototype.attacking = function(t, e, i) {
if (t && !this.isHit) {
var o = new c.default(), a = !1;
o.valueCopy(this.data.damage);
o.isRemote = !0;
var n = !1;
if (this.data.isInvincible > 0) n = !1; else if (e == C.default.TAG.NONPLAYER || e == C.default.TAG.GOODNONPLAYER) {
var r = t.getComponent(s.default);
if (r && !r.sc.isDied) {
if (a = r.takeDamage(o)) {
this.addTargetAllStatus(r, new g.default());
this.shooter.player && this.shooter.player.exTrigger(L.default.GROUP_HIT, o.isCriticalStrike ? L.default.TYPE_HIT_CRIT_REMOTE : L.default.TYPE_HIT_REMOTE, new g.default(), r);
}
n = !0;
}
} else if (e == C.default.TAG.PLAYER) {
var u = t.getComponent(l.default);
if (u && !u.sc.isDied) {
var h = !1;
u.shield.Status == R.default.STATUS_PARRY && 1 == u.shield.data.isReflect && (h = this.revserseBullet(u.node.convertToWorldSpaceAR(cc.Vec2.ZERO)));
if (!h) {
(a = u.takeDamage(o, this.data.from)) && this.addTargetAllStatus(u, this.data.from);
n = !0;
}
}
} else if (e == C.default.TAG.AOE) {
var d = t.getComponent(m.default);
d && d.IsAttacking && d.data.canBreakBullet && (n = !0);
} else if (e == C.default.TAG.BOSS) {
var f = t.getComponent(p.default);
if (f && !f.sc.isDied) {
if (a = f.takeDamage(o)) {
this.addTargetAllStatus(f, new g.default());
this.shooter.player && this.shooter.player.exTrigger(L.default.GROUP_HIT, o.isCriticalStrike ? L.default.TYPE_HIT_CRIT_REMOTE : L.default.TYPE_HIT_REMOTE, new g.default(), f);
}
n = !0;
}
} else if (e == C.default.TAG.PLAYER_HIT) {
var v = t.getComponent(b.default), E = void 0;
v && (E = v.meleeWeapon);
var T = void 0;
E || (T = t.getComponent(A.default)) && (E = T.meleeWeapon);
if (E && E.IsAttacking && !this.isFromPlayer) {
h = !1;
if (E.IsReflect) {
var O = T ? T.meleeWeapon.node : E.node;
h = this.revserseBullet(O.convertToWorldSpaceAR(cc.Vec2.ZERO));
}
h || (n = !0);
}
} else if (e == C.default.TAG.BUILDING || e == C.default.TAG.WALL || e == C.default.TAG.WALL_TOP) {
var P = t.getComponent(D.default);
if (1 == this.data.canBreakBuilding && P) {
a = !0;
P.takeDamage(o);
}
if (!a) {
var M = t.getComponent(w.default);
if (1 == this.data.canBreakBuilding && M) {
a = !0;
M.takeDamage(o);
}
}
if (!a) {
var N = t.getComponent(y.default);
if (N) {
n = !i;
this.ignoreEmptyWall && N.isEmptyWall() && (n = !1);
}
n && t.getComponent(_.default) && (n = !1);
}
a || t.getComponent(I.default) && (n = !this.ignoreEmptyWall);
} else if (!this.isFromPlayer && e == C.default.TAG.ENERGY_SHIELD) {
var H = t.getComponent(S.default);
H && H.isValid && (a = H.takeDamage(o));
a && (n = !0);
}
n && this.bulletHit();
}
};
e.prototype.revserseBullet = function() {
if (this.isReserved) {
this.isReserved = !0;
return !1;
}
var t = -180 + u.default.getRandomNum(0, 10) - 20;
this.changeAngle(this.sprite.node.angle + t);
this.currentLinearVelocity = this.currentLinearVelocity.rotate(t * Math.PI / 180);
this.isFromPlayer = !0;
this.data.isTracking = 0;
return !0;
};
e.prototype.bulletHit = function() {
if (!this.isHit) {
this.isHit = !0;
if (this.anim && !this.anim.getAnimationState("Bullet001Hit").isPlaying) {
this.currentLinearVelocity = cc.v2(0, 0);
this.entity.Move.linearVelocity = cc.v2(0, 0);
this.anim.play("Bullet001Hit");
}
if (this.data.isBoom > 0) {
var t = this.node.convertToWorldSpaceAR(cc.Vec3.ZERO);
t = this.shooter.node.convertToNodeSpaceAR(t);
this.shooter.fireAoe(this.boom, new v.default().init(1, .2, 0, 0, E.default.OVERHEAD, !this.isFromPlayer, !0, !0, !1, !1, new c.default(2), g.default.getClone("爆炸", "boom000anim004"), []), t, 0, null, !0);
f.default.play(f.default.BOOM);
r.EventHelper.emit(r.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: !0
});
}
if (this.aoePrefab) {
var e = cc.instantiate(this.aoePrefab).getComponent(m.default);
e && e.show(this.node.parent, this.node.position, this.hv, 0, this.aoeData);
}
}
};
e.prototype.hasNearEnemy = function() {
if (1 != this.data.isTracking || !this.dungeon) return cc.Vec3.ZERO;
var t = this.trackCount > 10;
this.trackCount > 10 && (this.trackCount = 0);
return this.getTrackDirection(t);
};
e.prototype.getTrackDirection = function(t) {
this.trackCount++;
T.default.isTargetCanTrack(this.currentTrackActor) && !t || (this.currentTrackActor = T.default.getNearestEnemyActor(this.node.position, !this.isFromPlayer, this.dungeon, 500));
return T.default.getTargetDirection(this.node.position, this.currentTrackActor, !1);
};
e.prototype.rotateCollider = function(t) {
t.equals(cc.Vec2.ZERO) || 1 != this.data.fixedRotation && this.changeAngle(O.default.getRotateAngle(t, this.node.scaleX < 0));
};
e.prototype.addTargetAllStatus = function(t, e) {
this.addTargetStatus(this.data.damage.iceRate, t, d.default.FROZEN, e);
this.addTargetStatus(this.data.damage.fireRate, t, d.default.BURNING, e);
this.addTargetStatus(this.data.damage.lighteningRate, t, d.default.DIZZ, e);
this.addTargetStatus(this.data.damage.toxicRate, t, d.default.TOXICOSIS, e);
this.addTargetStatus(this.data.damage.curseRate, t, d.default.CURSING, e);
this.addTargetStatus(this.data.damage.realRate, t, d.default.BLEEDING, e);
this.addTargetStatus(this.data.statusRate, t, this.data.statusType, e);
};
e.prototype.addTargetStatus = function(t, e, i, o) {
u.default.getRandomNum(0, 100) < t && e.addStatus(i, o);
};
n([ F(cc.Prefab) ], e.prototype, "boom", void 0);
n([ F(cc.Node) ], e.prototype, "root", void 0);
n([ F(cc.Node) ], e.prototype, "shadow", void 0);
return n([ x ], e);
}(P.default);
i.default = B;
cc._RF.pop();
}, {
"../actor/AreaOfEffect": "AreaOfEffect",
"../base/BaseColliderComponent": "BaseColliderComponent",
"../boss/Boss": "Boss",
"../building/AirExit": "AirExit",
"../building/EnergyShield": "EnergyShield",
"../building/ExitDoor": "ExitDoor",
"../building/InteractBuilding": "InteractBuilding",
"../building/NormalBuilding": "NormalBuilding",
"../building/Wall": "Wall",
"../collider/CCollider": "CCollider",
"../data/AreaOfEffectData": "AreaOfEffectData",
"../data/BulletData": "BulletData",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../data/TriggerData": "TriggerData",
"../effect/ShadowOfSight": "ShadowOfSight",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../logic/MeleeCollideHelper": "MeleeCollideHelper",
"../logic/MeleeShadowWeapon": "MeleeShadowWeapon",
"../logic/NonPlayer": "NonPlayer",
"../logic/Player": "Player",
"../logic/Shield": "Shield",
"../manager/LightManager": "LightManager",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/Utils": "Utils"
} ],
CCollider: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "8b89bNPNd5CPpD7MGNVsQ0f", "CCollider");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/Random"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.audioMaterial = i.AUDIO_MATERIAL.METAL;
e.tag = i.TAG.DEFAULT;
e.offsetX = 0;
e.offsetY = 0;
e.type = i.TYPE.RECT;
e.radius = 64;
e.w = 128;
e.h = 128;
e.zHeight = 32;
e.bounce = 0;
e.sensor = !1;
e.isStatic = !1;
e.ignoreSameTag = !1;
e.targetTagList = [];
e.ignoreTagList = [];
e.inColliders = new Map();
e.id = i.genNonDuplicateID();
e.targetTags = new Map();
e.ignoreTags = new Map();
e.isStaying = !1;
e._points = [];
e.isRotate = !1;
e.baseChangedCount = 0;
e._disableOnce = !1;
return e;
}
i = e;
Object.defineProperty(e.prototype, "disabledOnce", {
get: function() {
return this._disableOnce;
},
set: function(t) {
this._disableOnce = t;
},
enumerable: !1,
configurable: !0
});
e.prototype.setSize = function(t, e) {
this.w = t.width;
this.h = t.height;
e && (this.zHeight = e);
};
Object.defineProperty(e.prototype, "offset", {
get: function() {
return cc.v2(this.offsetX, this.offsetY);
},
set: function(t) {
this.offsetX = t.x;
this.offsetY = t.y;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "w_radius", {
get: function() {
return this._radius;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "w_center", {
get: function() {
return cc.v2(this._center);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "points", {
get: function() {
return this._points;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "z", {
get: function() {
return this.entity.Transform.z;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "isEmpty", {
get: function() {
return this.type == i.TYPE.CIRCLE && 0 == this.radius || this.type == i.TYPE.RECT && (0 == this.w || 0 == this.h);
},
enumerable: !1,
configurable: !0
});
e.prototype.setOnContactListener = function(t) {
this.onContactListener = t;
};
e.prototype.setEntityNode = function(t) {
this.entity.NodeRender.node = t;
};
e.prototype.fixCenterAndScale = function() {
this.isStaying = !1;
this.baseChangedCount = 0;
var t = cc.v3(this.offsetX, this.offsetY);
this._center = this.node.convertToWorldSpaceAR(cc.v3(this.offsetX, this.offsetY));
var e = this.node.convertToWorldSpaceAR(t);
this._radius = this.node.convertToWorldSpaceAR(t.add(cc.v3(this.radius, 0))).sub(e).mag();
var i = this.node.convertToWorldSpaceAR(t.add(cc.v3(this.w, 0))).sub(e).mag(), o = this.node.convertToWorldSpaceAR(t.add(cc.v3(this.h, 0))).sub(e).mag();
if (this.isCircle) {
this.isRotate = !1;
this._points = [];
this._aabb = cc.rect(this._center.x - this._radius, this._center.y - this._radius, 2 * this._radius, 2 * this._radius);
} else {
this._aabb = cc.rect(this._center.x - i / 2, this._center.y - o / 2, i, o);
var a = this.node.convertToWorldSpaceAR(t.add(cc.v3(-this.w / 2, -this.h / 2))), n = this.node.convertToWorldSpaceAR(t.add(cc.v3(-this.w / 2, this.h / 2))), r = this.node.convertToWorldSpaceAR(t.add(cc.v3(this.w / 2, this.h / 2))), s = this.node.convertToWorldSpaceAR(t.add(cc.v3(this.w / 2, -this.h / 2)));
this._points = [ cc.v2(a), cc.v2(n), cc.v2(r), cc.v2(s) ];
this.isRotate = a.x != n.x;
if (this.isRotate) {
for (var l = [], c = this._points[0].clone(), u = 0, p = 1; p < this._points.length; p++) if (this._points[p].x < c.x) {
c = this._points[p].clone();
u = p;
}
for (p = u; p < this._points.length; p++) l.push(this._points[p].clone());
for (p = 0; p < u; p++) l.push(this._points[p].clone());
var h = Math.abs(l[0].x - l[2].x), d = Math.abs(l[1].y - l[3].y);
this._aabb = cc.rect(l[0].x, l[1].y < l[3].y ? l[1].y : l[3].y, h, d);
}
}
};
e.prototype.updateChildOffset = function() {};
e.prototype.onLoad = function() {
this.setTargetTags(this.targetTagList);
this.setIgnoreTags(this.ignoreTagList);
};
e.prototype.setTargetTags = function(t, e) {
for (var i = 0, o = t; i < o.length; i++) {
var a = o[i];
e ? this.targetTags.delete(a) : this.targetTags.set(a, !0);
}
};
e.prototype.setIgnoreTags = function(t, e) {
for (var i = 0, o = t; i < o.length; i++) {
var a = o[i];
e ? this.ignoreTags.delete(a) : this.ignoreTags.set(a, !0);
}
};
e.prototype.isBelowOther = function(t) {
return this.z + this.zHeight < t.z;
};
e.prototype.isAboveOther = function(t) {
return this.z >= t.z + t.zHeight;
};
e.prototype.isHeightNotCollid = function(t) {
return this.isBelowOther(t) || this.isAboveOther(t);
};
e.prototype.preSolve = function(t) {
this.isHeightNotCollid(t) || this.onContactListener && this.onContactListener.onColliderPreSolve(t, this);
};
e.prototype.contact = function(t) {
if (!(this._disableOnce || t.disabledOnce || this.isHeightNotCollid(t))) if (this.inColliders.has(t.id)) {
this.isStaying = !0;
this.onContactListener && this.onContactListener.onColliderStay(t, this);
} else {
this.inColliders.set(t.id, !0);
this.onContactListener && this.onContactListener.onColliderEnter(t, this);
}
};
e.prototype.physicTest = function(t) {
if (!(this._disableOnce || t.disabledOnce || !this.entity || !t.entity || this.sensor || t.sensor || this.isStatic)) {
var e = this._points, o = t._points;
(this.isRotate || this.type == i.TYPE.CIRCLE || this.node.scaleX < 0 || this.node.scaleY < 0) && (e = [ cc.v2(this.Aabb.x, this.Aabb.y), cc.v2(this.Aabb.x, this.Aabb.y + this.Aabb.height), cc.v2(this.Aabb.x + this.Aabb.width, this.Aabb.y + this.Aabb.height), cc.v2(this.Aabb.x + this.Aabb.width, this.Aabb.y) ]);
(t.isRotate || t.type == i.TYPE.CIRCLE || t.node.scaleX < 0 || t.node.scaleY < 0) && (o = [ cc.v2(t.Aabb.x, t.Aabb.y), cc.v2(t.Aabb.x, t.Aabb.y + t.Aabb.height), cc.v2(t.Aabb.x + t.Aabb.width, t.Aabb.y + t.Aabb.height), cc.v2(t.Aabb.x + t.Aabb.width, t.Aabb.y) ]);
var a = e[3].x - e[0].x, n = o[3].x - o[0].x, r = e[1].y - e[0].y, s = o[1].y - o[0].y, l = cc.v2(e[0].x + a / 2, e[0].y + r / 2), c = cc.v2(o[0].x + n / 2, o[0].y + s / 2), u = cc.rect(e[0].x, e[0].y, a, r), p = cc.rect(o[0].x, o[0].y, n, s), h = e[0].x < o[0].x, d = e[2].x > o[2].x, f = e[1].y > o[1].y, g = e[0].y < o[0].y, y = this.entity.Move.linearVelocity.clone(), m = this.bounce > 0 ? this.bounce : 1, v = (r + s) / 2 - Math.abs(l.y - c.y), E = (a + n) / 2 - Math.abs(l.x - c.x);
if (this.isAboveOther(t)) {
this.entity.Transform.base = t.z + t.zHeight;
this.baseChangedCount++;
} else if (this.z < t.z) {
if (this.z + this.zHeight >= t.z) {
this.entity.Transform.z = t.z - this.zHeight;
this.entity.Move.linearVelocityZ > 0 && (this.entity.Move.linearVelocityZ = 0);
}
} else u.contains(c) || p.contains(l) ? y = l.sub(c).normalizeSelf().mul(m) : h && y.x >= 0 && E > 0 && E < v ? y.x = -m : d && y.x <= 0 && E > 0 && E < v ? y.x = m : f && y.y <= 0 && v > 0 && E > v ? y.y = m : g && y.y >= 0 && v > 0 && E > v && (y.y = -m);
if (this.entity.Move.linearVelocityZ <= 0 && this.z + i.MIN_HEIGHT >= t.z + t.zHeight && this.z < t.z + t.zHeight) {
y.mulSelf(.5);
this.entity.Move.linearVelocityZ = 5;
}
this.entity.Move.linearVelocity = y;
}
};
e.prototype.exit = function(t) {
if (this.inColliders.has(t.id)) {
this.inColliders.delete(t.id);
this.disabledOnce = !1;
this.onContactListener && this.onContactListener.onColliderExit(t, this);
}
};
e.prototype.drawDebug = function(t) {
if (t) {
t.strokeColor = cc.color(255, 255, 255, 160);
t.fillColor = cc.color(255, 255, 255, 60);
t.lineWidth = 4;
var e = t.node.convertToNodeSpaceAR(this.w_center);
if (this.type == i.TYPE.CIRCLE) {
var o = t.node.convertToNodeSpaceAR(cc.v3(this.w_radius, 0)), a = t.node.convertToNodeSpaceAR(cc.v3(0, 0));
t.circle(e.x, e.y, o.sub(a).mag());
this.isStaying && t.fill();
t.stroke();
} else {
var n = t.node.convertToNodeSpaceAR(this.points[0]);
t.moveTo(n.x, n.y);
for (var r = 1; r < this.points.length; r++) {
var s = t.node.convertToNodeSpaceAR(this.points[r]);
t.lineTo(s.x, s.y);
}
t.close();
this.isStaying && t.fill();
t.stroke();
}
t.strokeColor = cc.color(255, 0, 0, 160);
var l = this.Aabb, c = t.node.convertToNodeSpaceAR(cc.v3(l.x, l.y)), u = t.node.convertToNodeSpaceAR(cc.v3(0, 0)), p = t.node.convertToNodeSpaceAR(cc.v3(l.width, 0)), h = t.node.convertToNodeSpaceAR(cc.v3(l.height, 0)), d = p.sub(u).mag(), f = h.sub(u).mag();
t.rect(c.x, c.y, d, f);
t.stroke();
if (!this.sensor) {
var g = t.node.convertToNodeSpaceAR(cc.v3(this.zHeight, 0)).sub(u).mag();
t.strokeColor = cc.color(0, 0, 255, 40);
t.moveTo(c.x + .25 * d, c.y);
t.lineTo(c.x + .25 * d, c.y + g);
t.stroke();
t.strokeColor = cc.color(0, 255, 0, 40);
t.moveTo(c.x + .75 * d, c.y + f);
t.lineTo(c.x + .75 * d, c.y + f + g);
t.stroke();
t.strokeColor = cc.color(0, 255, 255, 40);
t.moveTo(c.x + .25 * d, c.y + g);
t.lineTo(c.x + .75 * d, c.y + f + g);
t.stroke();
}
}
};
Object.defineProperty(e.prototype, "Aabb", {
get: function() {
return this._aabb;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "isCircle", {
get: function() {
return this.type == i.TYPE.CIRCLE;
},
enumerable: !1,
configurable: !0
});
e.prototype.start = function() {};
e.genNonDuplicateID = function() {
return Number(~~(1e6 * r.default.rand()) + Date.now());
};
var i;
e.TYPE = cc.Enum({
CIRCLE: 0,
RECT: 1
});
e.GROUP = cc.Enum({
DEFAULT: 0,
ACTOR: 1
});
e.TAG = cc.Enum({
DEFAULT: 0,
WALL: 1,
WALL_TOP: 2,
PLAYER: 3,
PLAYER_HIT: 4,
NONPLAYER: 5,
NONPLAYER_HIT: 6,
GOODNONPLAYER: 7,
GOODNONPLAYER_HIT: 8,
BOSS: 9,
BOSS_HIT: 10,
BULLET: 11,
BUILDING: 12,
AOE: 13,
ITEM: 14,
EQUIPMENT: 15,
COIN: 16,
TIPS: 17,
WARTER: 18,
ENERGY_SHIELD: 19,
LIGHT: 20,
PLAYER_INTERACT: 21,
INTERACT: 22,
EFFECT: 23
});
e.AUDIO_MATERIAL = cc.Enum({
METAL: 0,
WOOD: 1,
STONE: 2,
PLASTIC: 3,
MEAT: 4
});
e.MIN_HEIGHT = 17;
n([ c({
type: i.TAG,
displayName: "Collider Tag"
}) ], e.prototype, "tag", void 0);
n([ c ], e.prototype, "offsetX", void 0);
n([ c ], e.prototype, "offsetY", void 0);
n([ c({
type: i.TYPE,
displayName: "Shape Type"
}) ], e.prototype, "type", void 0);
n([ c({
visible: function() {
return this.type == i.TYPE.CIRCLE;
}
}) ], e.prototype, "radius", void 0);
n([ c({
visible: function() {
return this.type == i.TYPE.RECT;
}
}) ], e.prototype, "w", void 0);
n([ c({
visible: function() {
return this.type == i.TYPE.RECT;
}
}) ], e.prototype, "h", void 0);
n([ c ], e.prototype, "zHeight", void 0);
n([ c ], e.prototype, "bounce", void 0);
n([ c ], e.prototype, "sensor", void 0);
n([ c ], e.prototype, "isStatic", void 0);
n([ c ], e.prototype, "ignoreSameTag", void 0);
n([ c({
type: [ i.TAG ],
displayName: "Target Tag"
}) ], e.prototype, "targetTagList", void 0);
n([ c({
type: [ i.TAG ],
displayName: "Ignore Tag",
visible: function() {
return this.targetTagList.length < 1;
}
}) ], e.prototype, "ignoreTagList", void 0);
return i = n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../utils/Random": "Random"
} ],
CameraControl: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "aaca098lw9M94SueX+ajVM7", "CameraControl");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Dungeon"), s = t("./EventHelper"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.dungeon = null;
e.isShaking = !1;
e.isHeavyShaking = !1;
e.addOffset = cc.v3(0, 0);
e.offsetIndex = 0;
e.offsetArr = [ cc.v3(0, 2), cc.v3(0, 2), cc.v3(0, -3), cc.v3(0, -3), cc.v3(1, 2), cc.v3(1, 2), cc.v3(-1, -1), cc.v3(-1, -1) ];
e.offsetArr1 = [ cc.v3(0, 3), cc.v3(0, 3), cc.v3(0, -6), cc.v3(0, -6), cc.v3(3, 6), cc.v3(3, 6), cc.v3(-3, -3), cc.v3(-3, -3) ];
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.camera = this.getComponent(cc.Camera);
s.EventHelper.on(s.EventHelper.CAMERA_SHAKE, function(e) {
t.shakeCamera(e.isHeavyShaking);
});
s.EventHelper.on(s.EventHelper.CAMERA_LOOK, function() {
t.addOffset = cc.v3(0, 0);
t.followTarget(!0);
});
s.EventHelper.on(s.EventHelper.HUD_CAMERA_ZOOM_IN, function() {
t.dungeon && (t.dungeon.CameraZoom = r.default.DEFAULT_ZOOM_MAX);
});
s.EventHelper.on(s.EventHelper.HUD_CAMERA_ZOOM_OUT, function() {
t.dungeon && (t.dungeon.CameraZoom = t.dungeon.needZoomIn ? r.default.DEFAULT_ZOOM_MIN : r.default.DEFAULT_ZOOM);
});
};
e.prototype.onEnable = function() {};
e.prototype.onDisable = function() {};
e.prototype.start = function() {};
e.prototype.lateUpdate = function() {
this.dungeon.cameraTargetActor && this.followTarget(!1);
this.camera.zoomRatio = this.lerpNumber(this.camera.zoomRatio, this.dungeon.CameraZoom, .05);
};
e.prototype.followTarget = function(t) {
if (this.dungeon && this.dungeon.cameraTargetActor) {
var e = cc.v3(0, 0), i = this.dungeon.node.convertToWorldSpaceAR(this.dungeon.cameraTargetActor.node.position.clone().addSelf(e)), o = this.node.parent.convertToNodeSpaceAR(i);
this.dungeon.cameraTargetActor.entity && this.dungeon.cameraTargetActor.entity.Transform.z > 2 * r.default.TILE_SIZE && (o.y += this.dungeon.cameraTargetActor.entity.Transform.z);
this.node.position = t ? o : this.lerp(this.node.position, o, .1);
if (this.isShaking) {
this.offsetIndex > this.offsetArr.length - 1 && (this.offsetIndex = 0);
this.node.position = this.node.position.addSelf(this.isHeavyShaking ? this.offsetArr1[this.offsetIndex] : this.offsetArr[this.offsetIndex]);
this.offsetIndex++;
}
}
};
e.prototype.shakeCamera = function(t) {
var e = this;
if (this.node) {
this.isHeavyShaking = t;
this.isShaking = !0;
this.scheduleOnce(function() {
e.isShaking = !1;
}, .2);
}
};
e.prototype.lerpNumber = function(t, e, i) {
return t + (e - t) * i;
};
e.prototype.lerp = function(t, e, i) {
var o = cc.v3(0, 0), a = t.x, n = t.y;
o.x = a + (e.x - a) * i;
o.y = n + (e.y - n) * i;
return o;
};
n([ u(r.default) ], e.prototype, "dungeon", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"./Dungeon": "Dungeon",
"./EventHelper": "EventHelper"
} ],
CampFire: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1c424MJYhhGnYiXSF5IIdkC", "CampFire");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Building"), s = t("../collider/CCollider"), l = t("../data/FromData"), c = t("../logic/Player"), u = t("../manager/StatusManager"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isAddTime = !0;
e.timeDelay = 0;
return e;
}
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > 5) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.isTimeDelay(t) && (this.isAddTime = !0);
};
e.prototype.onColliderEnter = function() {};
e.prototype.onColliderStay = function(t, e) {
if (e.sensor && t.tag == s.default.TAG.PLAYER && this.isAddTime) {
this.isAddTime = !1;
var i = t.getComponent(c.default);
i && i.addStatus(u.default.CAMP_FIRE, new l.default());
}
};
e.prototype.onColliderExit = function() {};
return n([ h ], e);
}(r.default));
i.default = d;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/FromData": "FromData",
"../logic/Player": "Player",
"../manager/StatusManager": "StatusManager",
"./Building": "Building"
} ],
CaptainSword: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e541b/KaoRBdL9VgXHoN6dM", "CaptainSword");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../data/FromData"), l = t("./Captain"), c = t("../utils/ActorUtils"), u = t("../base/BaseColliderComponent"), p = cc._decorator, h = p.ccclass, d = p.property, f = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.damage = 12;
e.parentNode = null;
e.isShow = !1;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.entity && this.entity.Move && (this.entity.Move.isStatic = !0);
};
e.prototype.start = function() {
this.isShow = !1;
};
e.prototype.onColliderEnter = function(t) {
var e = c.default.getEnemyCollisionTarget(t);
if (e && this.isShow && this.node.active) {
this.isShow = !1;
var i = new r.default();
i.physicalDamage = this.damage;
e.takeDamage(i, s.default.getClone(this.actorName(), "captain_head"), this.parentNode.getComponent(l.default));
}
};
e.prototype.actorName = function() {
return "邪恶船长";
};
n([ d ], e.prototype, "damage", void 0);
n([ d(cc.Node) ], e.prototype, "parentNode", void 0);
return n([ h ], e);
}(u.default);
i.default = f;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../utils/ActorUtils": "ActorUtils",
"./Captain": "Captain"
} ],
Captain: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6d826iFR+pBDJHGFIoYZ400", "Captain");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./CaptainSword"), s = t("../logic/Dungeon"), l = t("../logic/Shooter"), c = t("../data/DamageData"), u = t("./Boss"), p = t("../utils/NextStep"), h = t("../utils/AudioPlayer"), d = t("../data/FromData"), f = t("../logic/Achievement"), g = t("../utils/ActorUtils"), y = t("../logic/Logic"), m = t("../collider/CCollider"), v = cc._decorator, E = v.ccclass, _ = v.property, T = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sword = null;
e.healthBar = null;
e.isFaceRight = !0;
e.isMoving = !1;
e.timeDelay = 0;
e.isFall = !1;
e.shooter = null;
e.exshooter = null;
e.attackSkill = new p.default();
e.fireSkill = new p.default();
e.jumpSkill = new p.default();
return e;
}
e.prototype.init = function() {};
e.prototype.onLoad = function() {
this.attackSkill.IsExcuting = !1;
this.sc.isDied = !1;
this.anim = this.getComponent(cc.Animation);
this.shooter = this.node.getChildByName("Shooter").getComponent(l.default);
this.exshooter = this.node.getChildByName("ExShooter").getComponent(l.default);
this.shooter.from.valueCopy(d.default.getClone(this.actorName(), "captain_head"));
this.exshooter.from.valueCopy(d.default.getClone(this.actorName(), "captain_head"));
this.updatePlayerPos();
this.entity.NodeRender.node = this.node;
this.entity.Move.damping = 1;
};
e.prototype.start = function() {
t.prototype.start.call(this);
};
e.prototype.AttackDamageStart = function() {
this.sword.isShow = !0;
};
e.prototype.AttackDamageFinish = function() {
this.sword.isShow = !1;
};
e.prototype.AttackStart = function() {
this.attackSkill.IsExcuting = !0;
h.default.play(h.default.MELEE);
};
e.prototype.AttackFinish = function() {
this.attackSkill.IsExcuting = !1;
};
e.prototype.JumpStart = function() {
this.jumpSkill.IsExcuting = !0;
this.getComponent(m.default).sensor = !0;
};
e.prototype.FireSwordLight = function() {
this.shooter.setHv(cc.v2(this.isFaceRight ? 1 : -1, 0));
this.shooter.dungeon = this.dungeon;
this.shooter.actor = this;
this.shooter.data.bulletType = "bullet043";
this.shooter.fireBullet(0, cc.v3(16, 0));
};
e.prototype.JumpFinish = function() {
var t = this;
this.jumpSkill.IsExcuting = !1;
this.isFall = !0;
this.scheduleOnce(function() {
t.isFall = !1;
}, .1);
this.getComponent(m.default).sensor = !1;
if (this.dungeon && this.exshooter) {
var e = this.dungeon.player.getCenterPosition().sub(this.node.position);
if (!e.equals(cc.Vec3.ZERO)) {
e = e.normalizeSelf();
this.exshooter.setHv(cc.v2(e));
this.exshooter.dungeon = this.dungeon;
this.exshooter.actor = this;
this.exshooter.data.bulletType = "bullet033";
this.exshooter.data.bulletArcOffsetX = 64;
this.exshooter.data.bulletArcExNum = 99;
this.exshooter.data.bulletArcOffsetX = 32;
this.exshooter.data.bulletLineInterval = 1;
this.data.currentHealth < this.data.Common.MaxHealth / 2 && (this.exshooter.data.bulletLineExNum = 1);
this.exshooter.fireBullet(0, cc.v3(16, 0));
}
}
};
e.prototype.fireWithGun = function() {
if (this.dungeon && this.shooter) {
var t = this.dungeon.player.getCenterPosition().sub(this.entity.Transform.position);
if (!t.equals(cc.Vec3.ZERO)) {
this.shooter.setHv(cc.v2(t).normalize());
this.shooter.dungeon = this.dungeon;
this.shooter.actor = this;
this.shooter.data.bulletType = "bullet102";
this.shooter.fireBullet(0, cc.v3(16, 0));
}
}
};
e.prototype.OpenFire = function() {
var t = this;
if (this.dungeon && this.shooter) {
this.shooter.data.bulletArcExNum = 0;
this.fireWithGun();
this.data.currentHealth < this.data.Common.MaxHealth / 2 && this.scheduleOnce(function() {
t.fireWithGun();
}, .5);
}
};
e.prototype.onColliderStay = function(t, e) {
if (e.tag == m.default.TAG.BOSS_HIT) {
var i = g.default.getEnemyCollisionTarget(t);
if (i && this.isFall && !this.sc.isDied) {
this.isFall = !1;
var o = new c.default();
o.physicalDamage = 10;
i.takeDamage(o, d.default.getClone(this.actorName(), "captain_head"), this);
}
}
};
e.prototype.updateLogic = function(t) {
if (!y.default.isGamePause) {
this.healthBar.node.active = !this.sc.isDied;
this.timeDelay += t;
if (this.timeDelay > .016) {
this.timeDelay = 0;
this.bossAction();
this.JumpMove();
}
this.dungeon && this.getNearPlayerDistance(this.dungeon.player.node) < 96 && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
this.sc.isDied && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
this.healthBar.node.active = !this.sc.isDied;
this.data.currentHealth < 1 && this.killed();
this.node.scaleX = this.isFaceRight ? 1 : -1;
}
};
e.prototype.takeDamage = function(t) {
var e = this.anim.getAnimationState("CaptainJump").isPlaying;
if (this.sc.isDied || e) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
var i = [ h.default.MONSTER_HIT, h.default.MONSTER_HIT1, h.default.MONSTER_HIT2 ];
h.default.play(i[y.default.getRandomNum(0, 2)]);
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
f.default.addMonsterKillAchievement(this.data.resName);
this.sc.isDied = !0;
this.anim.play("CaptainDie");
this.getComponent(m.default).sensor = !0;
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
this.getLoot();
}
};
e.prototype.bossAction = function() {
var t = this;
if (!this.sc.isDied && this.dungeon) {
this.entity.Transform.position = s.default.fixOuterMap(this.entity.Transform.position);
this.pos = s.default.getIndexInMap(this.entity.Transform.position);
this.changeZIndex();
var e = this.dungeon.player.pos.clone(), i = s.default.getPosInMap(e).sub(this.entity.Transform.position), o = this.getNearPlayerDistance(this.dungeon.player.node), a = this.anim.getAnimationState("CaptainJump").isPlaying, n = this.anim.getAnimationState("CaptainFire").isPlaying, r = i.x, l = i.y;
Math.abs(r), Math.abs(l);
this.isFaceRight = r > 0;
if (!a && !n) {
var c = 4;
a || this.fireSkill.next(function() {
c = 1;
t.anim.play("CaptainFire");
}, 5);
if (o < 140 && !this.dungeon.player.sc.isDied) this.attackSkill.next(function() {
t.attackSkill.IsExcuting = !0;
t.anim.play("CaptainAttack");
}, 1); else {
o > 300 && this.jumpSkill.next(function() {
t.anim.play("CaptainJump");
a = !0;
}, 8);
if (!i.equals(cc.Vec3.ZERO) && !a && !this.attackSkill.IsExcuting) {
i = i.normalizeSelf();
this.move(i, c);
}
}
}
}
};
e.prototype.JumpMove = function() {
if (this.dungeon && this.jumpSkill.IsExcuting) {
var t = this.dungeon.player.pos.clone(), e = s.default.getPosInMap(t).sub(this.entity.Transform.position);
e.equals(cc.Vec3.ZERO) || (this.pos = s.default.getIndexInMap(this.entity.Transform.position));
var i = e.x, o = e.y, a = (Math.abs(i), Math.abs(o), cc.v2(i, o)), n = 4;
this.data.currentHealth < this.data.Common.MaxHealth / 2 && (n = 5);
a = a.normalize().mul(n);
this.entity.Move.linearVelocity = a;
this.isMoving = 0 != i || 0 != o;
}
};
e.prototype.move = function(t, e) {
if (!this.sc.isDied) {
this.attackSkill.IsExcuting && !t.equals(cc.Vec3.ZERO) && (t = t.mul(.5));
t.equals(cc.Vec3.ZERO) || (this.pos = s.default.getIndexInMap(this.entity.Transform.position));
var i = t.x, o = t.y, a = (Math.abs(i), Math.abs(o), cc.v2(i, o));
a = a.normalize().mul(e);
this.entity.Move.linearVelocity = a;
this.isMoving = 0 != i || 0 != o;
this.isMoving && (this.isFaceRight = i > 0);
this.isMoving ? this.anim.getAnimationState("CaptainMove").isPlaying || this.anim.playAdditive("CaptainMove") : this.anim.getAnimationState("CaptainMove").isPlaying && this.anim.play("CaptainIdle");
this.changeZIndex();
}
};
e.prototype.actorName = function() {
return "邪恶船长";
};
n([ _(r.default) ], e.prototype, "sword", void 0);
return n([ E ], e);
}(u.default);
i.default = T;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/NextStep": "NextStep",
"./Boss": "Boss",
"./CaptainSword": "CaptainSword"
} ],
CellphoneData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "ca606JzDZxBpJXGyzhO8Xom", "CellphoneData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../utils/DataUtils"), r = t("./BaseData"), s = t("./FurnitureData"), l = t("./ItemData"), c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.createTime = 0;
e.type = 0;
return e;
}
e.prototype.valueCopy = function(t) {
if (t) {
n.default.baseCopy(this, t);
if (t.furnitureData) {
this.furnitureData = new s.default();
this.furnitureData.valueCopy(t.furnitureData);
this.price = this.furnitureData.price;
}
if (t.itemData) {
this.itemData = new l.default();
this.itemData.valueCopy(t.itemData);
}
this.itemData = t.itemData;
}
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
e.prototype.setEmpty = function() {
this.type = 0;
this.furnitureData = null;
this.itemData = null;
this.createTime = 0;
this.price = 0;
};
return e;
}(r.default);
i.default = c;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData",
"./FurnitureData": "FurnitureData",
"./ItemData": "ItemData"
} ],
CellphoneDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "7e27cFOFVVGe4YHWxa4+CC5", "CellphoneDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../logic/Achievement"), s = t("../../data/CellphoneData"), l = t("../../data/FurnitureData"), c = t("../../logic/EventHelper"), u = t("../../logic/Logic"), p = t("../../utils/AudioPlayer"), h = t("../../utils/LocalStorage"), d = t("../../utils/Utils"), f = t("../CellphoneItem"), g = t("./BaseDialog"), y = t("./EquipmentAndItemDialog"), m = cc._decorator, v = m.ccclass, E = m.property, _ = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.item = null;
e.content = null;
e.equipmentAndItemDialogPrefab = null;
e.buyButton = null;
e.list = [];
e.itemSelect = null;
e.title = null;
e.priceLabel = null;
e.hourLabel = null;
e.dayLabel = null;
e.layer = null;
e.flashLightSprite = null;
e.top = null;
e.bottom = null;
e.equipmentAndItemDialog = null;
e.itemList = [];
e.appIndex = 0;
e.checkTimeChangeDelay = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.itemSelect.opacity = 0;
this.layer.active = !1;
this.equipmentAndItemDialog = this.initDialog();
this.dayLabel.string = d.default.getDay(u.default.realTime);
this.hourLabel.string = d.default.getHour(u.default.realTime);
this.updateList(this.appIndex);
c.EventHelper.on(c.EventHelper.PLAYER_SHOW_FLASHLIGHT, function(e) {
t.node && t.changeFlashLightSprite(e.isOpen);
});
this.flashLightSprite.node.on(cc.Node.EventType.TOUCH_END, function() {
i.changeFlashLight();
});
this.changeFlashLightSprite(u.default.settings.isFlashLightOpen);
};
e.changeFlashLight = function() {
p.default.play(p.default.FLASHLIGHT);
u.default.settings.isFlashLightOpen = !u.default.settings.isFlashLightOpen;
h.default.saveSystemSettings(u.default.settings);
c.EventHelper.emit(c.EventHelper.PLAYER_SHOW_FLASHLIGHT, {
isOpen: u.default.settings.isFlashLightOpen
});
};
e.prototype.changeFlashLightSprite = function(t) {
this.changeSwitchSprite(this.flashLightSprite, t, "cellphone_flashlight1", "cellphone_flashlight0");
};
e.prototype.changeSwitchSprite = function(t, e, i, o) {
t.spriteFrame = u.default.spriteFrameRes(e ? i : o);
};
e.prototype.initDialog = function() {
var t = cc.instantiate(this.equipmentAndItemDialogPrefab);
t.parent = this.node;
var e = t.getComponent(y.default);
e.changeBgAndAnchor(y.default.BG_TYPE_ARROW_NONE);
e.hideDialog();
return e;
};
e.prototype.getItem = function(t, e) {
var i = cc.instantiate(this.item);
i.parent = this.content;
var o = i.getComponent(f.default);
o.init(this, t, e);
return o;
};
e.prototype.start = function() {};
e.prototype.show = function() {
t.prototype.show.call(this);
this.updateList(this.appIndex);
};
e.prototype.home = function() {
var t = this;
p.default.play(p.default.SELECT);
this.layer.stopAllActions();
cc.tween(this.layer).to(.2, {
opacity: 0
}).call(function() {
t.layer.active = !1;
}).start();
};
e.prototype.openApp = function(t, e) {
var i = "#FFFFFF", o = parseInt(e);
switch (o) {
case 0:
this.title.string = "吃饱啦";
i = "#03418d";
break;

case 1:
this.title.string = "宜住家";
i = "#b56300";
break;

case 2:
this.title.string = "萌宠乐园";
i = "#940011";
break;

case 3:
this.title.string = "生活到家";
i = "#a18000";
break;

case 4:
this.title.string = "他们聊";
i = "#00801c";
}
this.top.color = cc.color().fromHEX(i);
this.bottom.color = cc.color().fromHEX(i);
this.layer.stopAllActions();
this.layer.active = !0;
cc.tween(this.layer).to(.2, {
opacity: 255
}).start();
p.default.play(p.default.SELECT);
this.updateList(o);
};
e.prototype.clearSelect = function() {
this.currentSelectIndex = -1;
this.equipmentAndItemDialog.hideDialog();
this.buyButton.active = !1;
this.priceLabel.string = "";
this.itemSelect.opacity = 0;
};
e.prototype.showSelect = function(t) {
this.currentSelectIndex = t.index;
this.itemSelect.parent = t.node;
this.itemSelect.position = cc.Vec3.ZERO;
this.itemSelect.opacity = 200;
p.default.play(p.default.SELECT);
this.priceLabel.string = "" + Math.floor(t.data.price);
this.buyButton.active = !0;
this.equipmentAndItemDialog.showDialog(cc.v3(-240, 160), null, t.data.itemData, null, t.data.furnitureData);
};
e.prototype.updateList = function(t) {
this.clearSelect();
this.list = [];
this.content.removeAllChildren();
this.appIndex = t;
var e = [];
if (1 == t) {
var i = [], o = [], a = 0;
for (var n in u.default.furnitures) {
var r = new l.default();
r.valueCopy(u.default.furnitures[n]);
if (!(r.price <= 0)) {
var c = h.default.getFurnitureData(r.id);
if (c) {
r.isOpen = c.isOpen;
r.purchased = c.purchased;
}
var p = new s.default();
p.createTime = new Date().getTime();
p.type = f.default.TYPE_FURNITURE;
p.furnitureData = r;
r.purchased ? o.push(p) : i.push(p);
this.list.push(this.getItem(a++, p));
}
}
e = i.concat(o);
for (var d = 0; d < this.list.length; d++) this.list[d].updateData(e[d]);
}
};
e.prototype.sale = function() {
if (-1 != this.currentSelectIndex && this.list[this.currentSelectIndex].data.type != f.default.TYPE_EMPTY) {
var t = this.list[this.currentSelectIndex];
if (t.data.type == f.default.TYPE_FURNITURE) {
var e = t.data.furnitureData;
if (!e.purchased && u.default.coins >= e.price) {
c.EventHelper.emit(c.EventHelper.HUD_ADD_COIN, {
count: -e.price
});
p.default.play(p.default.COIN);
t.data.furnitureData.purchased = !0;
t.updateData();
r.default.addFurnituresAchievement(e.id);
h.default.saveFurnitureData(e);
this.clearSelect();
d.default.toast("购买成功,快去看看是否已经到家", !0, !0);
p.default.play(p.default.CASHIERING);
c.EventHelper.emit(c.EventHelper.HUD_FURNITURE_REFRESH, {
id: e.id
});
} else {
d.default.toast("购买失败，余额不足", !0, !0);
p.default.play(p.default.SELECT_FAIL);
}
}
}
};
e.prototype.update = function(t) {
if (this.isCheckTimeChangeDelay(t)) {
this.dayLabel.string = d.default.getDay(u.default.realTime);
this.hourLabel.string = d.default.getHour(u.default.realTime);
}
};
e.prototype.isCheckTimeChangeDelay = function(t) {
this.checkTimeChangeDelay += t;
if (this.checkTimeChangeDelay > 1) {
this.checkTimeChangeDelay = 0;
return !0;
}
return !1;
};
e.prototype.close = function() {
p.default.play(p.default.SELECT);
this.dismiss();
this.content.removeAllChildren();
};
e.prototype.waitOneHour = function() {
u.default.realTime += 36e5;
this.dayLabel.string = d.default.getDay(u.default.realTime);
this.hourLabel.string = d.default.getHour(u.default.realTime);
};
var i;
n([ E(cc.Prefab) ], e.prototype, "item", void 0);
n([ E(cc.Node) ], e.prototype, "content", void 0);
n([ E(cc.Prefab) ], e.prototype, "equipmentAndItemDialogPrefab", void 0);
n([ E(cc.Node) ], e.prototype, "buyButton", void 0);
n([ E(cc.Node) ], e.prototype, "itemSelect", void 0);
n([ E(cc.Node) ], e.prototype, "title", void 0);
n([ E(cc.Label) ], e.prototype, "priceLabel", void 0);
n([ E(cc.Label) ], e.prototype, "hourLabel", void 0);
n([ E(cc.Label) ], e.prototype, "dayLabel", void 0);
n([ E(cc.Node) ], e.prototype, "layer", void 0);
n([ E(cc.Sprite) ], e.prototype, "flashLightSprite", void 0);
n([ E(cc.Node) ], e.prototype, "top", void 0);
n([ E(cc.Node) ], e.prototype, "bottom", void 0);
return i = n([ v ], e);
}(g.default);
i.default = _;
cc._RF.pop();
}, {
"../../data/CellphoneData": "CellphoneData",
"../../data/FurnitureData": "FurnitureData",
"../../logic/Achievement": "Achievement",
"../../logic/EventHelper": "EventHelper",
"../../logic/Logic": "Logic",
"../../utils/AudioPlayer": "AudioPlayer",
"../../utils/LocalStorage": "LocalStorage",
"../../utils/Utils": "Utils",
"../CellphoneItem": "CellphoneItem",
"./BaseDialog": "BaseDialog",
"./EquipmentAndItemDialog": "EquipmentAndItemDialog"
} ],
CellphoneItem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "998cfMDHbFCeYkBTaoitXnc", "CellphoneItem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/CellphoneData"), s = t("../logic/Logic"), l = t("../utils/AudioPlayer"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isSelect = !1;
e.sprite = null;
e.label = null;
e.disableCover = null;
e.index = 0;
e.data = new r.default();
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.node.on(cc.Node.EventType.TOUCH_END, function() {
t.isSelect && t.index == t.dialog.currentSelectIndex ? t.isSelect = !1 : t.isSelect = t.data.type != i.TYPE_EMPTY;
t.data.type == i.TYPE_FURNITURE && t.data.furnitureData && t.data.furnitureData.purchased && (t.isSelect = !1);
t.dialog.clearSelect();
t.isSelect ? t.dialog.showSelect(t) : l.default.play(l.default.SELECT_FAIL);
}, this);
};
e.prototype.init = function(t, e, i) {
this.dialog = t;
this.index = e;
this.isSelect = !1;
this.updateData(i);
};
e.prototype.updateData = function(t) {
this.isSelect = !1;
this.data.valueCopy(t);
this.label.string = "";
this.sprite.spriteFrame = null;
this.disableCover.active = !1;
var e = null;
if (this.data.type == i.TYPE_ITEM && this.data.itemData) {
this.label.string = this.data.itemData.nameCn + "\n" + this.data.itemData.price;
e = s.default.spriteFrameRes(this.data.itemData.resName);
} else if (this.data.type == i.TYPE_FURNITURE && this.data.furnitureData) {
e = s.default.spriteFrameRes(this.data.furnitureData.resName);
this.label.string = this.data.furnitureData.nameCn + "\n" + this.data.furnitureData.price;
this.disableCover.active = this.data.furnitureData.purchased;
}
if (e) {
this.sprite.spriteFrame = e;
var o = e.getOriginalSize().width, a = e.getOriginalSize().height;
this.sprite.node.width = 4 * o;
this.sprite.node.height = 4 * a;
if (this.sprite.node.height > 128) {
this.sprite.node.height = 128;
this.sprite.node.width = 128 / e.getOriginalSize().height * e.getOriginalSize().width;
}
}
};
e.prototype.setEmpty = function() {
this.label.string = "";
this.sprite.spriteFrame = null;
};
e.prototype.start = function() {};
var i;
e.TYPE_EMPTY = 0;
e.TYPE_FURNITURE = 1;
e.TYPE_ITEM = 2;
n([ p(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ p(cc.Label) ], e.prototype, "label", void 0);
n([ p(cc.Node) ], e.prototype, "disableCover", void 0);
return i = n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"../data/CellphoneData": "CellphoneData",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer"
} ],
ChapterData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "fb6073McgVKOpRjZZ5su/Nf", "ChapterData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function(t) {
this.chapter = 0;
this.list = [];
this.chapter = t;
};
cc._RF.pop();
}, {} ],
Chapter: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e966c6tQ3FASbN1WCJi24PI", "Chapter");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("../utils/AudioPlayer"), l = t("../ui/StartBackground"), c = t("../ui/CursorArea"), u = t("../utils/LocalStorage"), p = cc._decorator, h = p.ccclass, d = p.property, f = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.chapter00 = null;
e.chapter01 = null;
e.chapter02 = null;
e.chapter03 = null;
e.chapter04 = null;
e.cursorAreaPrefab = null;
e.timeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
c.default.init(this.cursorAreaPrefab);
};
e.prototype.start = function() {};
e.prototype.clickChapter = function(t, e) {
if (e) {
r.default.jumpSlotIndex = u.default.getLastSaveSlotKey();
r.default.jumpChapter = parseInt(e);
s.default.play(s.default.SELECT);
var i = this.getComponentInChildren(l.default);
i && i.startPressed();
this.scheduleOnce(function() {
cc.director.loadScene("pickavatar");
}, 1);
}
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .016) {
this.timeDelay = 0;
return !0;
}
return !1;
};
n([ d(cc.Button) ], e.prototype, "chapter00", void 0);
n([ d(cc.Button) ], e.prototype, "chapter01", void 0);
n([ d(cc.Button) ], e.prototype, "chapter02", void 0);
n([ d(cc.Button) ], e.prototype, "chapter03", void 0);
n([ d(cc.Button) ], e.prototype, "chapter04", void 0);
n([ d(cc.Prefab) ], e.prototype, "cursorAreaPrefab", void 0);
return n([ h ], e);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"../ui/CursorArea": "CursorArea",
"../ui/StartBackground": "StartBackground",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/LocalStorage": "LocalStorage",
"./Logic": "Logic"
} ],
Chest: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a259fOC11hFpJCy2hycs7kH", "Chest");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = t("./Building"), c = t("../utils/AudioPlayer"), u = t("../utils/IndexZ"), p = t("../collider/CCollider"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.openSpriteFrame = null;
e.closeSpriteFrame = null;
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.node.getChildByName("sprite");
};
e.prototype.start = function() {};
e.prototype.setQuality = function(t, e) {
this.data.quality = t;
this.data.isOpen = e;
this.sprite || (this.sprite = this.node.getChildByName("sprite"));
var i = "chest001", o = "chestopen001";
switch (t) {
case 1:
i = "chest001";
o = "chestopen001";
break;

case 2:
i = "chest003";
o = "chestopen003";
break;

case 3:
case 4:
i = "chest002";
o = "chestopen002";
}
var a = s.default.spriteFrameRes(i), n = s.default.spriteFrameRes(o);
this.openSpriteFrame = a;
this.closeSpriteFrame = n;
this.sprite.getComponent(cc.Sprite).spriteFrame = this.openSpriteFrame;
e && (this.sprite.getComponent(cc.Sprite).spriteFrame = this.closeSpriteFrame);
};
e.prototype.seDefaultPos = function(t) {
this.data.defaultPos = t;
this.entity.Transform.position = r.default.getPosInMap(t);
this.node.position = this.entity.Transform.position.clone();
this.node.zIndex = u.default.getActorZIndex(this.entity.Transform.position);
};
e.prototype.openChest = function() {
var t = this;
if (!this.data.isOpen) {
this.data.isOpen = !0;
c.default.play(c.default.PICK_UP);
cc.tween(this.sprite).to(.1, {
position: cc.v3(5, 16)
}).to(.1, {
position: cc.v3(-5, 0)
}).to(.1, {
position: cc.v3(5, 0)
}).to(.1, {
position: cc.v3(-5, 0)
}).to(.1, {
position: cc.v3(0, 0)
}).call(function() {
t.sprite.getComponent(cc.Sprite).spriteFrame = t.closeSpriteFrame;
if (t.node.parent) {
var e = t.node.parent.getComponent(r.default);
if (e) {
var i = s.default.mapManager.getRandom4Save(t.seed);
s.default.isCheatMode;
e.addEquipment(s.default.getRandomEquipType(i), r.default.getPosInMap(t.data.defaultPos), null, t.data.quality);
}
}
}).start();
var e = s.default.mapManager.getCurrentMapBuilding(this.data.defaultPos);
if (e) {
e.isOpen = this.data.isOpen;
e.quality = this.data.quality;
} else s.default.mapManager.setCurrentBuildingData(this.data.clone());
}
};
e.prototype.onColliderStay = function(t) {
t.tag == p.default.TAG.PLAYER && (this.data.isOpen || this.openChest());
};
n([ f(cc.SpriteFrame) ], e.prototype, "openSpriteFrame", void 0);
n([ f(cc.SpriteFrame) ], e.prototype, "closeSpriteFrame", void 0);
return n([ d ], e);
}(l.default);
i.default = g;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
ChunkData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "2e5707we6VLmaJfbSZnGeFv", "ChunkData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function() {};
cc._RF.pop();
}, {} ],
ChunkLookCamera: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "86753OU1JJLlZ74OEo6fP9C", "ChunkLookCamera");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.target = null;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.camera = this.getComponent(cc.Camera);
r.EventHelper.on(r.EventHelper.CAMERA_LOOK, function(e) {
t.lookAt(e.position);
});
};
e.prototype.lookAt = function(t) {
this.targetPosition = t;
};
e.prototype.lateUpdate = function() {
this.targetPosition;
this.node.position = this.lerp(this.node.position, this.node.parent.convertToNodeSpaceAR(this.target.convertToWorldSpaceAR(cc.Vec3.ZERO)), .1);
};
e.prototype.lerp = function(t, e, i) {
var o = cc.v3(0, 0), a = t.x, n = t.y;
o.x = a + (e.x - a) * i;
o.y = n + (e.y - n) * i;
return o;
};
n([ c(cc.Node) ], e.prototype, "target", void 0);
return n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper"
} ],
ChunkWorld: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "8888aikYhVNfJXCQphMoSyV", "ChunkWorld");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Chunk"), s = t("../logic/EventHelper"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.chunkPrefab = null;
e.worldMap = new Array();
e.currentMap = new Array();
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
Math.floor(i.SIZE / 2);
s.EventHelper.on(s.EventHelper.CHUNK_LOAD, function(e) {
var o = e.pos, a = i.getIndexInMap(o, t.currentMap[0][0].targetPosition);
cc.log(a);
t.changeMap(a.x, a.y);
});
this.initMap();
};
e.prototype.initMap = function() {
for (var t = 0; t < i.SIZE; t++) {
this.currentMap[t] = new Array(t);
for (var e = 0; e < i.SIZE; e++) {
var o = cc.instantiate(this.chunkPrefab);
o.parent = this.node;
o.position = i.getPosInMap(cc.v3(t, e));
o.zIndex = 100;
var a = o.getComponent(r.default);
a.data.x = t;
a.data.y = e;
this.currentMap[t][e] = a;
a.targetPosition = o.position.clone();
a.loadMap();
}
}
this.printMapIndex();
};
e.prototype.getTargetChunkPos = function() {
cc.v3(this.currentMap[0][0].data.x, this.currentMap[0][0].data.y);
};
e.prototype.changeMap = function(t, e) {
var o = Math.floor(i.SIZE / 2);
if (t != o || e != o) {
for (var a = this.currentMap[t][e].targetPosition.clone(), n = new Array(), r = 0; r < i.SIZE; r++) {
n[r] = new Array(r);
for (var s = 0; s < i.SIZE; s++) {
var l = this.getCorrectIndex(cc.v3(t, e), cc.v3(r, s));
n[r][s] = this.currentMap[l.x][l.y];
n[r][s].data.x = r;
n[r][s].data.y = s;
if (1 == l.z) {
var c = cc.v3(r, s).subSelf(cc.v3(o, o)), u = i.getPosInMap(c);
n[r][s].targetPosition = a.clone().addSelf(u);
n[r][s].loadMap();
}
}
}
this.printMapIndex();
this.currentMap = n;
}
};
e.prototype.printMapIndex = function() {
for (var t = i.SIZE - 1; t >= 0; t--) for (var e = 0; e < i.SIZE; e++) this.currentMap[e][t].data.x, 
this.currentMap[e][t].data.y;
};
e.prototype.getCorrectIndex = function(t, e) {
var o = Math.floor(i.SIZE / 2), a = e.clone(), n = t.x - o, r = t.y - o;
a.x = a.x + n;
a.y = a.y + r;
var s = !1;
if (a.x < 0) {
a.x = a.x + i.SIZE;
s = !0;
} else if (a.x >= i.SIZE) {
a.x = a.x - i.SIZE;
s = !0;
}
if (a.y < 0) {
a.y = a.y + i.SIZE;
s = !0;
} else if (a.y >= i.SIZE) {
a.y = a.y - i.SIZE;
s = !0;
}
return new cc.Vec3(a.x, a.y, s ? 1 : 0);
};
e.getPosInMap = function(t) {
var e = t.x * r.default.WIDTH * r.default.TILE_SCALE * r.default.TILE_SIZE, i = t.y * r.default.HEIGHT * r.default.TILE_SCALE * r.default.TILE_SIZE;
return cc.v3(e, i);
};
e.fixOuterMap = function(t, e) {
var o = (t.x - e.x) / (r.default.WIDTH * r.default.TILE_SCALE * r.default.TILE_SIZE), a = (t.y - e.y) / (r.default.WIDTH * r.default.TILE_SCALE * r.default.TILE_SIZE);
o = Math.round(o);
a = Math.round(a);
var n = !1;
if (o < 0) {
o = 0;
n = !0;
}
if (o >= i.SIZE) {
o = i.SIZE - 1;
n = !0;
}
if (a < 0) {
a = 0;
n = !0;
}
if (a >= i.SIZE) {
a = i.SIZE - 1;
n = !0;
}
return n ? i.getPosInMap(cc.v3(o, a)) : t;
};
e.getIndexInMap = function(t, e) {
var o = (t.x - e.x) / (r.default.WIDTH * r.default.TILE_SCALE * r.default.TILE_SIZE), a = (t.y - e.y) / (r.default.WIDTH * r.default.TILE_SCALE * r.default.TILE_SIZE);
o = Math.round(o);
a = Math.round(a);
o < 0 && (o = 0);
o >= i.SIZE && (o = i.SIZE - 1);
a < 0 && (a = 0);
a >= i.SIZE && (a = i.SIZE - 1);
return cc.v3(o, a);
};
e.prototype.start = function() {};
var i;
e.SIZE = 5;
n([ u(cc.Prefab) ], e.prototype, "chunkPrefab", void 0);
return i = n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper",
"./Chunk": "Chunk"
} ],
Chunk: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f8d511RPE5CG7SWZpmVYfu9", "Chunk");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/ChunkData"), s = t("../utils/Random"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.floor = null;
e.label = null;
e.select = null;
e.wall = null;
e.data = new r.default();
e.targetPosition = cc.v3(0, 0);
return e;
}
i = e;
e.prototype.onLoad = function() {
this.layer = this.node.getChildByName("layer");
this.floor.scale = i.TILE_SCALE;
this.floor.width = i.TILE_SIZE * i.WIDTH;
this.floor.height = i.TILE_SIZE * i.HEIGHT;
this.select.scale = i.TILE_SCALE;
this.select.width = i.TILE_SIZE * i.WIDTH;
this.select.height = i.TILE_SIZE * i.HEIGHT;
this.node.width = i.TILE_SCALE * i.TILE_SIZE * i.WIDTH;
this.node.height = i.TILE_SCALE * i.TILE_SIZE * i.HEIGHT;
};
e.prototype.onClicked = function() {
var t = this;
this.floor.color = cc.Color.GREEN;
this.scheduleOnce(function() {
t.floor.color = cc.Color.WHITE;
}, 1);
};
e.prototype.loadMap = function() {
this.label.node.position = cc.v3(this.node.width / 2, this.node.height / 2);
this.label.string = this.targetPosition.x + "," + this.targetPosition.y;
this.node.position = this.targetPosition.clone();
this.layer.removeAllChildren();
for (var t = 0; t < 2; t++) {
var e = cc.instantiate(this.wall);
e.parent = this.layer;
e.position = cc.v3(s.default.getRandomNum(0, this.node.width), s.default.getRandomNum(0, this.node.height));
e.zIndex = 100;
}
};
e.prototype.lateUpdate = function() {};
e.prototype.lerp = function(t, e, i) {
var o = cc.v3(0, 0), a = t.x, n = t.y;
o.x = a + (e.x - a) * i;
o.y = n + (e.y - n) * i;
return o;
};
var i;
e.TYPE_EMPTY = 0;
e.TYPE_NORMAL = 1;
e.TYPE_WALL_VERTICAL = 2;
e.TYPE_WALL_HORIZONTAL = 3;
e.TYPE_WALL_CROSS = 4;
e.WIDTH = 5;
e.HEIGHT = 5;
e.TILE_SIZE = 16;
e.TILE_SCALE = 4;
n([ u(cc.Node) ], e.prototype, "floor", void 0);
n([ u(cc.Label) ], e.prototype, "label", void 0);
n([ u(cc.Node) ], e.prototype, "select", void 0);
n([ u(cc.Prefab) ], e.prototype, "wall", void 0);
return i = n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../data/ChunkData": "ChunkData",
"../utils/Random": "Random"
} ],
CoinCount: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "91131vqXzhODZpby3U0hjQL", "CoinCount");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("./EventHelper"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.isReal = !1;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.anim = this.getComponent(cc.Animation);
s.EventHelper.on(s.EventHelper.HUD_ADD_COIN, function(e) {
t.addCount(e.count, e.isReal);
});
};
e.prototype.start = function() {};
e.prototype.addCount = function(t, e) {
if (this.anim) {
var i = parseInt(t);
if (e && this.isReal) r.default.realCoins += i; else if (!e && !this.isReal) {
r.default.coins += i;
if (i > 0) {
r.default.coinCounts += i;
if (r.default.coinCounts >= 1) {
r.default.coinCounts = 0;
s.EventHelper.emit(s.EventHelper.PLAYER_USEDREAM, {
value: -1
});
}
}
}
}
};
e.prototype.update = function() {
this.label && (this.label.string = "" + (this.isReal ? r.default.realCoins : r.default.coins));
};
n([ u(cc.Label) ], e.prototype, "label", void 0);
n([ u ], e.prototype, "isReal", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"./EventHelper": "EventHelper",
"./Logic": "Logic"
} ],
Coin: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "586a7ZPuVJNUIhnMRyd39J4", "Coin");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../logic/EventHelper"), l = t("../utils/Random"), c = t("../utils/AudioPlayer"), u = t("../base/BaseNodeComponent"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.value = 0;
e.valueRes = [ "gem01", "gem02", "gem03", "gem04" ];
e.isReady = !1;
e.isReal = !1;
e.soundPlaying = !1;
e.zSpeed = 20;
e.checkTimeDelay = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.init();
};
e.prototype.onEnable = function() {
this.init();
};
e.prototype.init = function() {
var t = this;
this.anim = this.getComponent(cc.Animation);
var e = r.default.getRandomNum(6, 12), i = l.default.rand() * (r.default.getHalfChance() ? 1 : -1) * e, o = l.default.rand() * (r.default.getHalfChance() ? 1 : -1) * e;
this.zSpeed = 20;
this.entity.Move.linearVelocity = cc.v2(i, o);
this.entity.Move.damping = 3;
this.entity.Move.linearVelocityZ = this.zSpeed;
this.isReady = !1;
this.entity.NodeRender.root = this.node.getChildByName("root");
this.shadow = this.node.getChildByName("shadow");
this.entity.Transform.position = this.node.position.clone();
this.scheduleOnce(function() {
t.isReady = !0;
}, 2);
};
e.prototype.changeValue = function(t) {
this.value = t;
var e = 1;
if (this.value == i.FACE_VALUE) {
e = 3;
this.node.scale = 1.2;
} else {
e = 1;
this.node.scale = 1;
}
var o = this.node.getChildByName("root").getChildByName("sprite").getComponent(cc.Sprite);
o.spriteFrame = r.default.spriteFrameRes(this.valueRes[e]);
this.isReal && (o.spriteFrame = r.default.spriteFrameRes("realcoin"));
};
e.prototype.start = function() {};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
this.soundPlaying = !1;
return !0;
}
return !1;
};
e.prototype.getNearPlayerDistance = function(t) {
return r.default.getDistanceNoSqrt(this.node.position, t.position.clone().addSelf(cc.v3(0, 32)));
};
e.prototype.update = function(t) {
var e = this.entity.NodeRender.root.y - this.entity.Transform.base;
e < 0 && (e = 0);
var i = 1 - e / 64;
this.shadow.scale = i < .5 ? .5 : i;
if (0 == e) {
this.zSpeed -= 5;
this.zSpeed < 0 ? this.zSpeed = 0 : this.playSound();
this.entity.Move.linearVelocityZ = this.zSpeed;
}
if (this.isCheckTimeDelay(t) && this.player && this.getNearPlayerDistance(this.player.node) < 1600 && this.node.active && this.isReady) {
var o = this.player.node.position.clone();
o.y += 10;
var a = o.sub(this.node.position);
if (!a.equals(cc.Vec3.ZERO)) {
this.entity.Move.linearVelocity = cc.v2(a.x, a.y).normalize().mul(16);
this.entity.Move.damping = 1;
}
}
if (this.player && this.getNearPlayerDistance(this.player.node) < 64 && this.node.active && this.isReady) {
this.isReady = !1;
this.playSound();
s.EventHelper.emit(s.EventHelper.HUD_ADD_COIN, {
count: this.value,
isReal: this.isReal
});
s.EventHelper.emit("destorycoin", {
coinNode: this.node
});
}
};
e.prototype.playSound = function() {
if (!this.soundPlaying) {
this.soundPlaying = !0;
var t = [ c.default.COIN, c.default.COIN1, c.default.COIN2 ];
c.default.play(t[r.default.getRandomNum(0, t.length - 1)]);
}
};
var i;
e.FACE_VALUE = 10;
return i = n([ h ], e);
}(u.default));
i.default = d;
cc._RF.pop();
}, {
"../base/BaseNodeComponent": "BaseNodeComponent",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Random": "Random"
} ],
ColliderComponent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a502cZks55PtqeBjSSgGyf/", "ColliderComponent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.ColliderComponent = void 0;
var r = t("../ECS"), s = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.ignoreTagMap = new Map();
e.targetTagMap = new Map();
e.colliders = [];
return e;
}
e.prototype.reset = function() {
this.colliders = [];
this.ignoreTagMap = new Map();
};
return n([ r.ecs.register("Collider") ], e);
}(r.ecs.IComponent);
i.ColliderComponent = s;
cc._RF.pop();
}, {
"../ECS": "ECS"
} ],
ColliderSystem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "84262UUMLRLS4Wni7FYD6tj", "ColliderSystem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("./../component/ColliderComponent"), r = t("../ECS"), s = t("../../collider/Quadtree"), l = t("../../collider/CCollider"), c = t("./RayCastResult"), u = t("../../logic/Logic"), p = function(t) {
a(e, t);
function e(e, i) {
var o = t.call(this) || this;
o.tempColliders = new Map();
o.list = [];
o.isDebug = !1;
o.allCount = 0;
o.collisionCount = 0;
o.activeCount = 0;
o.checkTimeDelay = 0;
var a = {
x: e.x,
y: e.y,
width: e.width,
height: e.height
};
o.quadTree = new s.default(a);
o.graphics = i;
return o;
}
e.prototype.init = function() {
this.isDebug = u.default.isDebug;
};
e.prototype.filter = function() {
return r.ecs.allOf(n.ColliderComponent);
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .04) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.initCollider(t);
this.collisionCheck();
this.updateDebug();
};
e.prototype.updateDebug = function() {
if (this.isDebug && this.graphics) {
this.graphics.clear();
for (var t = 0, e = this.list; t < e.length; t++) e[t].drawDebug(this.graphics);
}
};
e.prototype.initCollider = function(t) {
this.list = [];
for (var e = 0, i = t; e < i.length; e++) for (var o = i[e], a = 0, n = o.Collider.colliders; a < n.length; a++) {
var r = n[a];
r.entity = o;
if (r.enabled && r.node && r.node.active && r.entity.NodeRender.node && r.entity.NodeRender.node.active && !r.isEmpty) {
r.fixCenterAndScale();
this.list.push(r);
this.quadTree.insert(r);
}
}
};
e.prototype.collisionCheck = function() {
this.tempColliders.clear();
for (var t = 0, e = this.list; t < e.length; t++) {
var i = e[t];
if (i.enabled) {
for (var o = 0, a = this.quadTree.retrieve(i); o < a.length; o++) {
var n = a[o];
i.tag == l.default.TAG.PLAYER && n.tag == l.default.TAG.BUILDING || n.tag == l.default.TAG.PLAYER && (i.tag, 
l.default.TAG.BUILDING);
if (n.enabled && n !== i && n.groupId != i.groupId && !(this.tempColliders.has("" + i.id + n.id) || this.tempColliders.has("" + n.id + i.id) || i.ignoreSameTag && i.tag == n.tag)) {
if (i.targetTags.size > 0) {
if (!i.targetTags.has(n.tag)) continue;
} else if (i.ignoreTags.has(n.tag)) continue;
if (n.targetTags.size > 0) {
if (!n.targetTags.has(i.tag)) continue;
} else if (n.ignoreTags.has(i.tag)) continue;
var r = !1;
i.type == l.default.TYPE.RECT && n.type == l.default.TYPE.RECT ? r = i.isRotate && n.isRotate ? this.polygonPolygon(i.points, n.points) : i.isRotate && !n.isRotate ? this.rectPolygon(n.Aabb, i.points) : !i.isRotate && n.isRotate ? this.rectPolygon(i.Aabb, n.points) : this.recHit(i.Aabb, n.Aabb) : i.type == l.default.TYPE.CIRCLE && n.type == l.default.TYPE.CIRCLE ? r = this.circleHit(i.w_center, n.w_center, i.w_radius, n.w_radius) : i.type == l.default.TYPE.RECT && n.type == l.default.TYPE.CIRCLE ? r = this.polygonCircle(i.points, n.w_center, n.w_radius) : i.type == l.default.TYPE.CIRCLE && n.type == l.default.TYPE.RECT && (r = this.polygonCircle(n.points, i.w_center, i.w_radius));
if (r) {
i.preSolve(n, this.dt);
n.preSolve(i, this.dt);
i.contact(n, this.dt);
n.contact(i, this.dt);
i.physicTest(n, this.dt);
n.physicTest(i, this.dt);
i.disabledOnce = !1;
n.disabledOnce = !1;
} else {
i.exit(n);
n.exit(i);
}
this.tempColliders.set("" + i.id + n.id, !0);
}
}
!i.sensor && i.baseChangedCount < 1 && (i.entity.Transform.base = i.entity.Transform.fixBase);
}
}
this.quadTree.clear();
};
e.prototype.recHit = function(t, e) {
return !(t.width <= 0 || t.height <= 0 || e.width <= 0 || e.height <= 0) && cc.Intersection.rectRect(t, e);
};
e.prototype.rectPolygon = function(t, e) {
return !(t.width <= 0 || t.height <= 0) && cc.Intersection.rectPolygon(t, e);
};
e.prototype.polygonCircle = function(t, e, i) {
return !(i <= 0) && cc.Intersection.polygonCircle(t, {
position: e,
radius: i
});
};
e.prototype.polygonPolygon = function(t, e) {
return cc.Intersection.polygonPolygon(t, e);
};
e.prototype.circleHit = function(t, e, i, o) {
return !(i <= 0 || o <= 0) && cc.Intersection.circleCircle({
position: t,
radius: i
}, {
position: e,
radius: o
});
};
e.prototype.rayCast = function(t, e, i, o, a) {
if (t.equals(e)) return [];
for (var n = new Array(), r = 0, s = this.list; r < s.length; r++) {
var l = s[r];
if (a.has(l.tag) && this.rayCastCollision(l, t, e, i, o)) {
var u = new c.default(l, l.w_center);
n.push(u);
}
}
return n;
};
e.prototype.rayCastCollision = function(t, e, i, o, a) {
var n = !1;
this.isLineHeightNotCollid(o, a, t) || (t.type == l.default.TYPE.RECT ? n = cc.Intersection.linePolygon(e, i, t.points) : t.type == l.default.TYPE.CIRCLE && (n = cc.Intersection.lineRect(e, i, t.Aabb)));
return n;
};
e.prototype.nearestRayCast = function(t, e, i, o, a, n, r) {
if (t.equals(e)) return null;
for (var s, l = -1, u = 0, p = this.list; u < p.length; u++) {
var h = p[u];
if (a.has(h.tag) && (n.has(h.tag) || !h.sensor) && !r.has(h.id) && this.rayCastCollision(h, t, e, i, o)) {
var d = h.w_center.sub(t).magSqr();
if (l < 0 || l > d) {
l = d;
s = new c.default(h, h.w_center);
}
}
}
if (s) for (var f = s.collider.points.length, g = 0; g < f; ++g) {
var y = s.collider.points[g], m = s.collider.points[(g + 1) % f], v = this.getLineLinePoint(t, e, y, m);
if (v) {
s.point = v;
break;
}
}
return s;
};
e.prototype.getNearestColliderPoint = function(t, e, i) {
for (var o = new c.default(i, e), a = o.collider.points.length, n = 0; n < a; ++n) {
var r = o.collider.points[n], s = o.collider.points[(n + 1) % a], l = this.getLineLinePoint(t, e, r, s);
l && l.sub(t).magSqr() < o.point.sub(t).magSqr() && (o.point = l);
}
return o;
};
e.prototype.getLineLinePoint = function(t, e, i, o) {
var a = (t.x - i.x) * (e.y - i.y) - (t.y - i.y) * (e.x - i.x), n = (t.x - o.x) * (e.y - o.y) - (t.y - o.y) * (e.x - o.x);
if (a * n >= 0) return null;
var r = (i.x - t.x) * (o.y - t.y) - (i.y - t.y) * (o.x - t.x);
if (r * (r + a - n) >= 0) return null;
var s = r / (n - a), l = s * (e.x - t.x), c = s * (e.y - t.y);
return cc.v2(t.x + l, t.y + c);
};
e.prototype.isLineHeightNotCollid = function(t, e, i) {
return t + e < i.z || t > i.z + i.zHeight;
};
return e;
}(r.ecs.ComblockSystem);
i.default = p;
cc._RF.pop();
}, {
"../../collider/CCollider": "CCollider",
"../../collider/Quadtree": "Quadtree",
"../../logic/Logic": "Logic",
"../ECS": "ECS",
"./../component/ColliderComponent": "ColliderComponent",
"./RayCastResult": "RayCastResult"
} ],
ColliderTag: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "30fe7gJEPJDaIQxIDcTlk/U", "ColliderTag");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.ColliderTag = void 0;
(function(t) {
t[t.DEFAULT = 0] = "DEFAULT";
t[t.WALL = 1] = "WALL";
t[t.WALL_TOP = 2] = "WALL_TOP";
t[t.PLAYER = 3] = "PLAYER";
t[t.NONPLAYER = 4] = "NONPLAYER";
t[t.BOSS_ATTACK = 5] = "BOSS_ATTACK";
t[t.BOSS = 6] = "BOSS";
t[t.BULLET = 7] = "BULLET";
t[t.BUILDING = 8] = "BUILDING";
t[t.AOE = 9] = "AOE";
t[t.ITEM = 10] = "ITEM";
t[t.EQUIPMENT = 11] = "EQUIPMENT";
t[t.COIN = 12] = "COIN";
t[t.TIPS = 13] = "TIPS";
t[t.MELEE = 14] = "MELEE";
t[t.GOODNONPLAYER = 15] = "GOODNONPLAYER";
t[t.WARTER = 16] = "WARTER";
t[t.ENERGY_SHIELD = 17] = "ENERGY_SHIELD";
t[t.EFFECT = 18] = "EFFECT";
t[t.LIGHT = 20] = "LIGHT";
})(i.ColliderTag || (i.ColliderTag = {}));
cc._RF.pop();
}, {} ],
CommonData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b86e6PjawlOxqFoYPp0y0Jk", "CommonData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.maxHealth = 0;
this.maxDream = 0;
this.maxAmmo = 0;
this.ammoRecovery = 0;
this.damageMin = 0;
this.damageMax = 0;
this.damageBack = 0;
this.defence = 0;
this.moveSpeed = 0;
this.attackSpeed = 0;
this.jumpSpeed = 0;
this.jumpHeight = 0;
this.remoteDamage = 0;
this.realDamage = 0;
this.magicDamage = 0;
this.blockDamage = 0;
this.remoteCooldown = 0;
this.criticalStrikeRate = 0;
this.blockPhysical = 0;
this.blockMagic = 0;
this.lifeDrain = 0;
this.dodge = 0;
this.remoteCritRate = 0;
this.remoteInterval = 0;
this.remoteAngle = 0;
this.realRate = 0;
this.magicDefence = 0;
this.iceRate = 0;
this.fireRate = 0;
this.lighteningRate = 0;
this.toxicRate = 0;
this.curseRate = 0;
this.maxHealthPercent = 0;
this.maxDreamPercent = 0;
this.maxAmmoPercent = 0;
this.ammoRecoveryPercent = 0;
this.damageMinPercent = 0;
this.damageMaxPercent = 0;
this.damageBackPercent = 0;
this.defencePercent = 0;
this.moveSpeedPercent = 0;
this.attackSpeedPercent = 0;
this.jumpSpeedPercent = 0;
this.jumpHeightPercent = 0;
this.remoteDamagePercent = 0;
this.realDamagePercent = 0;
this.magicDamagePercent = 0;
}
t.prototype.returnNumberValue = function(t, e) {
var i = t * (1 + e / 100);
return i < 1 ? i : Math.floor(i);
};
Object.defineProperty(t.prototype, "MaxHealth", {
get: function() {
return this.returnNumberValue(this.maxHealth, this.maxHealthPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "MaxDream", {
get: function() {
return this.returnNumberValue(this.maxDream, this.maxDreamPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "MaxAmmo", {
get: function() {
return this.returnNumberValue(this.maxAmmo, this.maxAmmoPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "AmmoRecovery", {
get: function() {
return this.returnNumberValue(this.ammoRecovery, this.ammoRecoveryPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "DamageMin", {
get: function() {
return this.returnNumberValue(this.damageMin, this.damageMinPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "DamageMax", {
get: function() {
return this.returnNumberValue(this.damageMax, this.damageMaxPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "DamageBack", {
get: function() {
return this.returnNumberValue(this.damageBack, this.damageBackPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Defence", {
get: function() {
return this.returnNumberValue(this.defence, this.defencePercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "MoveSpeed", {
get: function() {
return this.returnNumberValue(this.moveSpeed, this.moveSpeedPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "AttackSpeed", {
get: function() {
return this.returnNumberValue(this.attackSpeed, this.attackSpeedPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "JumpSpeed", {
get: function() {
return this.returnNumberValue(this.jumpSpeed, this.jumpSpeedPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "JumpHeight", {
get: function() {
return this.returnNumberValue(this.jumpHeight, this.jumpHeightPercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "RemoteDamage", {
get: function() {
return this.returnNumberValue(this.remoteDamage, this.remoteDamagePercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "RealDamage", {
get: function() {
return this.returnNumberValue(this.realDamage, this.realDamagePercent / 100);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "MagicDamage", {
get: function() {
return this.returnNumberValue(this.magicDamage, this.magicDamagePercent / 100);
},
enumerable: !1,
configurable: !0
});
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t);
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.prototype.add = function(t) {
this.maxHealth += t.maxHealth ? t.maxHealth : 0;
this.maxDream += t.maxDream ? t.maxDream : 0;
this.damageMin += t.damageMin ? t.damageMin : 0;
this.damageMax += t.damageMax ? t.damageMax : 0;
this.maxAmmo += t.maxAmmo ? t.maxAmmo : 0;
this.ammoRecovery += t.ammoRecovery ? t.ammoRecovery : 0;
this.remoteDamage += t.remoteDamage ? t.remoteDamage : 0;
this.defence += t.defence ? t.defence : 0;
this.damageBack += t.damageBack ? t.damageBack : 0;
this.moveSpeed += t.moveSpeed ? t.moveSpeed : 0;
this.attackSpeed += t.attackSpeed ? t.attackSpeed : 0;
this.jumpSpeed += t.jumpSpeed ? t.jumpSpeed : 0;
this.jumpHeight += t.jumpHeight ? t.jumpHeight : 0;
this.remoteCooldown += t.remoteCooldown ? t.remoteCooldown : 0;
this.remoteInterval += t.remoteInterval ? t.remoteInterval : 0;
this.remoteAngle += t.remoteAngle ? t.remoteAngle : 0;
this.realDamage += t.realDamage ? t.realDamage : 0;
this.magicDamage += t.magicDamage ? t.magicDamage : 0;
this.blockDamage += t.blockDamage ? t.blockDamage : 0;
this.iceRate = o.default.addRateFixed(this.iceRate, t.iceRate);
this.fireRate = o.default.addRateFixed(this.fireRate, t.fireRate);
this.lighteningRate = o.default.addRateFixed(this.lighteningRate, t.lighteningRate);
this.toxicRate = o.default.addRateFixed(this.toxicRate, t.toxicRate);
this.curseRate = o.default.addRateFixed(this.curseRate, t.curseRate);
this.blockPhysical = o.default.addRateFixed(this.blockPhysical, t.blockPhysical);
this.blockMagic = o.default.addRateFixed(this.blockMagic, t.blockMagic);
this.magicDefence = o.default.addRateFixed(this.magicDefence, t.magicDefence);
this.realRate = o.default.addRateFixed(this.realRate, t.realRate);
this.lifeDrain = o.default.addRateFixed(this.lifeDrain, t.lifeDrain);
this.dodge = o.default.addRateFixed(this.dodge, t.dodge);
this.remoteCritRate = o.default.addRateFixed(this.remoteCritRate, t.remoteCritRate);
this.criticalStrikeRate = o.default.addRateFixed(this.criticalStrikeRate, t.criticalStrikeRate);
this.maxHealthPercent = o.default.addPercentFixed(this.maxHealthPercent, t.maxHealthPercent);
this.maxDreamPercent = o.default.addPercentFixed(this.maxDreamPercent, t.maxDreamPercent);
this.maxAmmoPercent = o.default.addPercentFixed(this.maxAmmoPercent, t.maxAmmoPercent);
this.ammoRecoveryPercent = o.default.addPercentFixed(this.ammoRecoveryPercent, t.ammoRecoveryPercent);
this.damageMinPercent = o.default.addPercentFixed(this.damageMinPercent, t.damageMinPercent);
this.damageMaxPercent = o.default.addPercentFixed(this.damageMaxPercent, t.damageMaxPercent);
this.damageBackPercent = o.default.addPercentFixed(this.damageBackPercent, t.damageBackPercent);
this.defencePercent = o.default.addPercentFixed(this.defencePercent, t.defencePercent);
this.moveSpeedPercent = o.default.addPercentFixed(this.moveSpeedPercent, t.moveSpeedPercent);
this.attackSpeedPercent = o.default.addPercentFixed(this.attackSpeedPercent, t.attackSpeedPercent);
this.jumpSpeedPercent = o.default.addPercentFixed(this.jumpSpeedPercent, t.jumpSpeedPercent);
this.jumpHeightPercent = o.default.addPercentFixed(this.jumpHeightPercent, t.jumpHeightPercent);
this.remoteDamagePercent = o.default.addPercentFixed(this.remoteDamagePercent, t.remoteDamagePercent);
this.realDamagePercent = o.default.addPercentFixed(this.realDamagePercent, t.realDamagePercent);
this.magicDamagePercent = o.default.addPercentFixed(this.magicDamagePercent, t.magicDamagePercent);
return this;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
Controller: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "12f66EVamVPmoXVKYdoGHk5", "Controller");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = t("./EventHelper"), u = t("./Logic"), p = t("../ui/CoolDownView"), h = t("../ui/CursorArea"), d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.attackAction = null;
e.attackActionTouched = !1;
e.shootAction = null;
e.shootActionTouched = !1;
e.jumpAction = null;
e.jumpActionTouched = !1;
e.dashAction = null;
e.dashActionTouched = !1;
e.interactAction = null;
e.interactActionTouched = !1;
e.interactEmpty = null;
e.interactKey = null;
e.skillAction = null;
e.skillAction1 = null;
e.coolDown = null;
e.coolDown1 = null;
e.skillActionTouched = !1;
e.skillActionTouched1 = !1;
e.cursorAreaPrefab = null;
e.mouseInArea = !1;
e.timeDelay = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.cursorArea = h.default.init(this.cursorAreaPrefab);
this.coolDown.init(p.default.PROFESSION);
this.coolDown1.init(p.default.ORGANIZATION);
this.attackAction.on(cc.Node.EventType.TOUCH_START, function() {
t.attackActionTouched = !0;
}, this);
this.attackAction.on(cc.Node.EventType.TOUCH_END, function() {
t.attackActionTouched = !1;
}, this);
this.attackAction.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.attackActionTouched = !1;
}, this);
this.shootAction.on(cc.Node.EventType.TOUCH_START, function() {
t.shootActionTouched = !0;
}, this);
this.shootAction.on(cc.Node.EventType.TOUCH_END, function() {
t.shootActionTouched = !1;
c.EventHelper.emit(c.EventHelper.PLAYER_REMOTEATTACK_CANCEL);
}, this);
this.shootAction.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.shootActionTouched = !1;
c.EventHelper.emit(c.EventHelper.PLAYER_REMOTEATTACK_CANCEL);
}, this);
this.jumpAction.on(cc.Node.EventType.TOUCH_START, function() {
t.jumpActionTouched = !0;
}, this);
this.jumpAction.on(cc.Node.EventType.TOUCH_END, function() {
t.jumpActionTouched = !1;
c.EventHelper.emit(c.EventHelper.PLAYER_JUMP_CANCEL);
}, this);
this.jumpAction.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.jumpActionTouched = !1;
c.EventHelper.emit(c.EventHelper.PLAYER_JUMP_CANCEL);
}, this);
this.dashAction.on(cc.Node.EventType.TOUCH_START, function() {
t.dashActionTouched = !0;
}, this);
this.dashAction.on(cc.Node.EventType.TOUCH_END, function() {
t.dashActionTouched = !1;
}, this);
this.dashAction.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.dashActionTouched = !1;
}, this);
this.skillAction.on(cc.Node.EventType.TOUCH_START, function() {
t.skillActionTouched = !0;
}, this);
this.skillAction.on(cc.Node.EventType.TOUCH_END, function() {
t.skillActionTouched = !1;
}, this);
this.skillAction.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.skillActionTouched = !1;
}, this);
this.skillAction1.on(cc.Node.EventType.TOUCH_START, function() {
t.skillActionTouched1 = !0;
}, this);
this.skillAction1.on(cc.Node.EventType.TOUCH_END, function() {
t.skillActionTouched1 = !1;
}, this);
this.skillAction1.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.skillActionTouched1 = !1;
}, this);
var e = !1, o = !1;
this.interactAction.on(cc.Node.EventType.TOUCH_START, function() {
t.interactActionTouched = !0;
o = !0;
t.scheduleOnce(function() {
if (o) {
e = !0;
c.EventHelper.emit(c.EventHelper.PLAYER_TRIGGER, {
isLongPress: !0
});
}
}, .3);
}, this);
this.interactAction.on(cc.Node.EventType.TOUCH_END, function() {
t.interactActionTouched = !1;
e || c.EventHelper.emit(c.EventHelper.PLAYER_TRIGGER);
o = !1;
e = !1;
}, this);
this.interactAction.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.interactActionTouched = !1;
o = !1;
e = !1;
}, this);
c.EventHelper.on(c.EventHelper.HUD_CHANGE_CONTROLLER_SHIELD, function(e) {
t.node && t.changeRes(e.isShield);
});
c.EventHelper.on(c.EventHelper.HUD_CONTROLLER_UPDATE_GAMEPAD, function() {
t.node && t.updateGamepad();
});
c.EventHelper.on(c.EventHelper.HUD_CONTROLLER_INTERACT_SHOW, function(e) {
if (t.node) {
t.interactAction.active = e.isShow;
t.interactEmpty.active = !e.iiShow;
t.interactKey.active = e.isShow && i.isMouseMode();
}
});
c.EventHelper.on(c.EventHelper.HUD_CONTROLLER_REMOTE_SHOW, function(e) {
t.node && (t.shootAction.active = e.isShow && !i.isMouseMode());
});
this.cursorArea.callback = function(e, o) {
if (i.isMouseMode()) switch (e) {
case h.default.CLICK_LEFT_DOWN:
t.attackActionTouched = !0;
break;

case h.default.CLICK_RIGHT_DOWN:
t.shootActionTouched = !0;
break;

case h.default.CLICK_LEFT_UP:
t.attackActionTouched = !1;
break;

case h.default.CLICK_RIGHT_UP:
t.shootActionTouched = !1;
c.EventHelper.emit(c.EventHelper.PLAYER_REMOTEATTACK_CANCEL);
break;

case h.default.MOUSE_MOVE:
i.mousePos = o;
break;

case h.default.MOUSE_LEAVE:
t.attackActionTouched = !1;
t.shootActionTouched = !1;
}
};
this.updateGamepad();
};
e.isMouseMode = function() {
return !cc.sys.isMobile && !u.default.settings.showGamepad;
};
e.prototype.updateGamepad = function() {
this.attackAction.position = cc.v3(u.default.settings.buttonPosAttack);
this.shootAction.position = cc.v3(u.default.settings.buttonPosRemote);
this.jumpAction.position = cc.v3(u.default.settings.buttonPosJump);
this.dashAction.position = cc.v3(u.default.settings.buttonPosDash);
this.interactAction.position = cc.v3(u.default.settings.buttonPosInteract);
this.interactEmpty.position = cc.v3(u.default.settings.buttonPosInteract);
this.skillAction.position = cc.v3(u.default.settings.buttonPosSkill1);
this.skillAction1.position = cc.v3(u.default.settings.buttonPosSkill2);
if (i.isMouseMode()) {
this.attackAction.active = !1;
this.shootAction.active = !1;
this.jumpAction.active = !1;
this.dashAction.active = !1;
this.skillAction.active = !1;
this.skillAction1.active = !1;
this.coolDown.node.position = cc.v3(-100, -80);
this.coolDown1.node.position = cc.v3(60, -80);
this.coolDown.changeKeyShow(!0);
this.coolDown1.changeKeyShow(!0);
} else {
this.attackAction.active = !0;
this.shootAction.active = !0;
this.jumpAction.active = !0;
this.dashAction.active = !0;
this.skillAction.active = !0;
this.skillAction1.active = !0;
this.coolDown.node.position = this.skillAction.position.clone();
this.coolDown1.node.position = this.skillAction1.position.clone();
this.coolDown.changeKeyShow(!1);
this.coolDown1.changeKeyShow(!1);
}
};
e.prototype.changeRes = function(t) {
if (this.shootAction) {
var e = this.shootAction.getComponent(cc.Button);
if (e) {
e.normalSprite = u.default.spriteFrameRes(t ? "uishield" : "uiremote");
e.pressedSprite = u.default.spriteFrameRes(t ? "uishieldpress" : "uiremotepress");
e.hoverSprite = u.default.spriteFrameRes(t ? "uishieldlight" : "uiremotelight");
e.disabledSprite = u.default.spriteFrameRes(t ? "uishieldpress" : "uiremotepress");
}
}
};
e.prototype.drawSkillCoolDown = function(t, e, i, o, a, n, r) {
var s = this;
r && (r.string = e > 0 ? "" + e : "");
if (!(t < 0) && a) {
o && this.unschedule(o);
0 == t && i && i.clear();
var l = cc.Vec3.ZERO, c = 100, u = 100 / t * .1;
o = function() {
c -= u;
i && i.clear();
s.drawArc(360 * c / 100, l, i);
n.node.opacity = 200;
if (c < 0) {
n.node.opacity = 0;
i && i.clear();
s.unschedule(o);
}
};
this.schedule(o, .1, cc.macro.REPEAT_FOREVER);
}
};
e.prototype.drawArc = function(t, e, i) {
if (i) {
i.clear();
if (!(t < 0)) {
var o = 2 * t * Math.PI / 360;
i.arc(e.x, e.y, 48, 2 * Math.PI, 2 * Math.PI - o);
i.stroke();
}
}
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .03) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
if (this.isTimeDelay(t) && !u.default.isGamePause) {
this.attackActionTouched && c.EventHelper.emit(c.EventHelper.PLAYER_ATTACK);
this.shootActionTouched && c.EventHelper.emit(c.EventHelper.PLAYER_REMOTEATTACK);
this.jumpActionTouched && c.EventHelper.emit(c.EventHelper.PLAYER_JUMP);
this.dashActionTouched && c.EventHelper.emit(c.EventHelper.PLAYER_DASH);
if (this.skillActionTouched) {
this.skillActionTouched = !1;
c.EventHelper.emit(c.EventHelper.PLAYER_SKILL);
}
if (this.skillActionTouched1) {
this.skillActionTouched1 = !1;
c.EventHelper.emit(c.EventHelper.PLAYER_SKILL1);
}
}
};
var i;
n([ l(cc.Node) ], e.prototype, "attackAction", void 0);
n([ l(cc.Node) ], e.prototype, "shootAction", void 0);
n([ l(cc.Node) ], e.prototype, "jumpAction", void 0);
n([ l(cc.Node) ], e.prototype, "dashAction", void 0);
n([ l(cc.Node) ], e.prototype, "interactAction", void 0);
n([ l(cc.Node) ], e.prototype, "interactEmpty", void 0);
n([ l(cc.Node) ], e.prototype, "interactKey", void 0);
n([ l(cc.Node) ], e.prototype, "skillAction", void 0);
n([ l(cc.Node) ], e.prototype, "skillAction1", void 0);
n([ l(p.default) ], e.prototype, "coolDown", void 0);
n([ l(p.default) ], e.prototype, "coolDown1", void 0);
n([ l(cc.Prefab) ], e.prototype, "cursorAreaPrefab", void 0);
return i = n([ s ], e);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../ui/CoolDownView": "CoolDownView",
"../ui/CursorArea": "CursorArea",
"./EventHelper": "EventHelper",
"./Logic": "Logic"
} ],
CoolDownView: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "58d32PM1/ZHL6BBvFTBgSIk", "CoolDownView");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("../logic/Logic"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.id = i.PROFESSION;
e.skillIcon = null;
e.graphics = null;
e.coolDownFuc = null;
e.label = null;
e.labelBg = null;
e.lastTime = 0;
e.duration = 0;
e.storePoint = 1;
e.storePointMax = 1;
e.timeDelay = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.graphics = this.getComponent(cc.Graphics);
this.label = this.node.getChildByName("label").getComponent(cc.Label);
this.labelBg = this.node.getChildByName("labelbg");
this.labelBg.active = !1;
this.skillIcon = this.node.getChildByName("mask").getChildByName("sprite").getComponent(cc.Sprite);
this.skillIcon.node.opacity = 255;
r.EventHelper.on(r.EventHelper.HUD_CONTROLLER_COOLDOWN, function(e) {
t.node && e.id == t.id && t.setData(e.duration, e.lastTime, e.storePoint, e.storePointMax);
});
};
e.prototype.init = function(t) {
this.id = t;
this.skillIcon || (this.skillIcon = this.node.getChildByName("mask").getChildByName("sprite").getComponent(cc.Sprite));
t == i.PROFESSION ? this.setSkillIcon(s.default.playerData.AvatarData.professionData.talent) : t == i.ORGANIZATION && this.setSkillIcon("talent10" + s.default.playerData.AvatarData.organizationIndex);
};
e.prototype.setSkillIcon = function(t) {
this.skillIcon.spriteFrame = s.default.spriteFrameRes(t);
};
e.prototype.setData = function(t, e, i, o) {
if (this.node) {
t <= 0 && (t = 0);
this.storePointMax = o;
this.duration = t;
this.lastTime = e;
this.storePoint = i;
this.drawSkillCoolDown();
}
};
e.prototype.drawSkillCoolDown = function() {
if (!(this.duration <= 0)) {
this.label.string = this.storePoint > 0 && this.storePointMax > 1 ? "" + this.storePoint : "";
this.labelBg.active = this.label.string.length > 0;
this.graphics && this.graphics.clear();
var t = cc.Vec3.ZERO, e = (Date.now() - this.lastTime) / (1e3 * this.duration);
e > 1 && (e = 1);
e < 1 && this.drawArc(360 * (1 - e), t, this.graphics);
}
};
e.prototype.drawArc = function(t, e, i) {
if (i) {
i.clear();
if (!(t < 0)) {
var o = 2 * t * Math.PI / 360;
i.arc(e.x, e.y, 48, 2 * Math.PI, 2 * Math.PI - o);
i.stroke();
}
}
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .1) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.changeKeyShow = function(t) {
this.node.getChildByName("btn").active = t;
};
e.prototype.start = function() {};
e.prototype.update = function(t) {
this.isTimeDelay(t) && this.drawSkillCoolDown();
};
var i;
e.PROFESSION = 0;
e.ORGANIZATION = 1;
e.EQUIPITEM = 2;
return i = n([ c ], e);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic"
} ],
CursorArea: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f5d73LFHDhBmYy/YoxxJn3D", "CursorArea");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.cursor = null;
return e;
}
i = e;
e.init = function(t) {
var e = cc.instantiate(t).getComponent(i);
cc.director.getScene().addChild(e.node, 0);
return e;
};
e.prototype.onLoad = function() {
var t = this;
this.node.on(cc.Node.EventType.MOUSE_DOWN, function(e) {
e.getButton() == cc.Event.EventMouse.BUTTON_LEFT ? t.callback && t.callback(i.CLICK_LEFT_DOWN) : e.getButton() == cc.Event.EventMouse.BUTTON_RIGHT && t.callback && t.callback(i.CLICK_RIGHT_DOWN);
}, this);
this.node.on(cc.Node.EventType.MOUSE_UP, function(e) {
e.getButton() == cc.Event.EventMouse.BUTTON_LEFT ? t.callback && t.callback(i.CLICK_LEFT_UP) : e.getButton() == cc.Event.EventMouse.BUTTON_RIGHT && t.callback && t.callback(i.CLICK_RIGHT_UP);
}, this);
this.node.on(cc.Node.EventType.MOUSE_LEAVE, function() {
t.callback && t.callback(i.MOUSE_LEAVE);
}, this);
this.node.on(cc.Node.EventType.MOUSE_MOVE, function(e) {
t.cursor.position = cc.v3(t.node.convertToNodeSpaceAR(e.getLocation()));
t.callback && t.callback(i.MOUSE_MOVE, e.getLocation());
}, this);
};
var i;
e.CLICK_LEFT_DOWN = 0;
e.CLICK_LEFT_UP = 1;
e.CLICK_RIGHT_DOWN = 2;
e.CLICK_RIGHT_UP = 3;
e.MOUSE_LEAVE = 4;
e.MOUSE_MOVE = 5;
n([ l(cc.Node) ], e.prototype, "cursor", void 0);
return i = n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
CutScene: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cb0c7YcdndBfpVkO+dBgo79", "CutScene");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isSkip = !1;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.skipNode = this.node.getChildByName("skip");
this.cut001 = this.node.getChildByName("sprite").getChildByName("cut001");
this.cut002 = this.node.getChildByName("sprite").getChildByName("cut002");
this.cut003 = this.node.getChildByName("sprite").getChildByName("cut003");
this.cut004 = this.node.getChildByName("sprite").getChildByName("cut004");
this.cut006 = this.node.getChildByName("sprite").getChildByName("cut006");
this.cut007 = this.node.getChildByName("sprite").getChildByName("cut007");
this.cut008 = this.node.getChildByName("sprite").getChildByName("cut008");
this.cut009 = this.node.getChildByName("sprite").getChildByName("cut009");
this.cutList = new Array();
this.cutList.push(this.cut001);
this.cutList.push(this.cut002);
this.cutList.push(this.cut003);
this.cutList.push(this.cut004);
this.cutList.push(this.cut006);
this.cutList.push(this.cut007);
this.cutList.push(this.cut008);
this.cutList.push(this.cut009);
this.skipNode.opacity = 0;
this.node.opacity = 0;
this.hideAllCuts();
this.node.on(cc.Node.EventType.TOUCH_START, function() {
255 == t.skipNode.opacity && (t.isSkip = !0);
t.skipNode.opacity = 255;
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function() {}, this);
};
e.prototype.playShow = function() {
var t = this;
this.node.opacity = 255;
this.getComponent(cc.Animation).play();
this.scheduleOnce(function() {
t.isSkip = !0;
}, 12);
};
e.prototype.unregisterClick = function() {
this.node.off(cc.Node.EventType.TOUCH_START);
this.node.off(cc.Node.EventType.TOUCH_CANCEL);
this.node.off(cc.Node.EventType.TOUCH_END);
};
e.prototype.hideAllCuts = function() {
for (var t = 0, e = this.cutList; t < e.length; t++) e[t].opacity = 0;
};
e.prototype.start = function() {};
return n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
DamageData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "140ebm8pJ5CBb4RE4tI9c22", "DamageData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t(t) {
this.realDamage = 0;
this.physicalDamage = 0;
this.magicDamage = 0;
this.realRate = 0;
this.iceRate = 0;
this.fireRate = 0;
this.lighteningRate = 0;
this.toxicRate = 0;
this.curseRate = 0;
this.stoneRate = 0;
this.isCriticalStrike = !1;
this.isBackAttack = !1;
this.isRemote = !1;
this.isStab = !1;
this.isFar = !1;
this.isFist = !1;
this.isBlunt = !1;
this.isMelee = !1;
this.comboType = 0;
this.realDamage = t || 0;
}
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t);
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.prototype.getTotalDamage = function() {
var t = this.physicalDamage + this.magicDamage + this.realDamage;
if (isNaN(t)) {
console.log(t);
t = 0;
}
return t;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
DashShadow: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "909e64n9VxBGoAX7rWiFEbf", "DashShadow");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../logic/Dungeon"), l = t("../talent/Talent"), c = t("../logic/Shooter"), u = t("../utils/IndexZ"), p = t("../base/BaseColliderComponent"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.hv = cc.v2(1, 0);
e.shooter = null;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.motionStreak = this.getComponent(cc.MotionStreak);
this.sprite = this.node.getChildByName("sprite");
};
e.prototype.init = function(t) {
this.talentDash = t;
this.shooter.actor = this.talentDash.player;
this.shooter.dungeon = this.talentDash.player.node.parent.getComponent(s.default);
};
e.prototype.changeDashPerformance = function(t) {
this.motionStreak.color = cc.Color.BLACK;
for (var e = 0, i = t; e < i.length; e++) i[e];
};
e.prototype.onEnable = function() {};
e.prototype.start = function() {};
e.prototype.getPlayerPosition = function() {
return this.talentDash.player.node.position.clone().addSelf(cc.v3(8, 8));
};
e.prototype.getNearPlayerDistance = function() {
return r.default.getDistanceNoSqrt(this.node.position, this.getPlayerPosition());
};
e.prototype.show = function() {
var t = this;
this.node.active = !0;
this.node.parent = this.talentDash.player.node.parent;
var e = this.talentDash.player.isFaceRight;
this.sprite.scaleX = e ? 1 : -1;
this.node.setPosition(this.getPlayerPosition());
var i = 24;
this.talentDash.hashTalent(l.default.DASH_14) && (i = 40);
var o = this.hv.mul(i);
this.entity.Move.linearVelocity = cc.v2(o.x, o.y);
this.node.zIndex = u.default.OVERHEAD;
this.fire(this.shooter);
this.scheduleOnce(function() {
t.hide();
}, .45);
};
e.prototype.hide = function() {
this.talentDash.player.node.setPosition(s.default.fixOuterMap(this.node.position.clone()));
this.node.active = !1;
this.entity.Move.linearVelocity = cc.Vec2.ZERO;
};
e.prototype.onColliderEnter = function(t) {
this.talentDash && this.talentDash.hashTalent(l.default.DASH_02) && this.talentDash.attacking(t, this.node);
};
e.prototype.fire = function(t) {
t.data.bulletLineExNum = 5;
t.data.bulletLineInterval = .05;
if (this.talentDash.hashTalent(l.default.DASH_11)) {
t.data.bulletLineExNum = 10;
t.data.bulletLineInterval = .03;
}
var e = !1;
if (this.talentDash.hashTalent(l.default.DASH_09)) {
e = !0;
t.data.bulletType = "bullet025";
} else if (this.talentDash.hashTalent(l.default.DASH_10)) {
e = !0;
t.data.bulletType = "bullet026";
}
e && t.fireBullet(0, cc.v3(0, 0));
};
e.prototype.setHv = function(t) {
t.equals(cc.Vec2.ZERO) ? this.hv = cc.v2(1, 0) : this.hv = t;
};
n([ f(c.default) ], e.prototype, "shooter", void 0);
return n([ d ], e);
}(p.default);
i.default = g;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../talent/Talent": "Talent",
"../utils/IndexZ": "IndexZ"
} ],
DataUtils: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "3c153x2wslGmoUdqSPLeAbh", "DataUtils");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = cc._decorator, n = a.ccclass, r = (a.property, function() {
function t() {}
e = t;
t.baseCopy = function(t, e, i) {
if (e && t && t !== e) for (var o = 0, a = Object.keys(t); o < a.length; o++) {
var n = a[o];
"number" == typeof t[n] ? t[n] = i ? e[n] ? e[n] : t[n] : e[n] ? e[n] : 0 : "string" == typeof t[n] ? t[n] = i ? e[n] ? e[n] : t[n] : e[n] ? e[n] : "" : "boolean" == typeof t[n] && (t[n] = !!e[n] && e[n]);
}
};
t.addRateFixed = function(t, i) {
return e.fixRateRange(e.addRate(t, i), 0, 100);
};
t.addRate = function(t, e) {
if (!e || isNaN(e)) return !t || isNaN(t) ? 0 : t;
if (!t || isNaN(t)) return !e || isNaN(e) ? 0 : e;
var i = 1;
return 100 * (1 - (i *= 1 - t / 100) * (1 - e / 100));
};
t.addPercentFixed = function(t, i) {
return e.fixRateRange(e.addRate(t, i), -100, 9999);
};
t.fixRateRange = function(t, e, i) {
return (t = t < e ? e : t) > i ? i : t;
};
t.getinfoNum2String = function(t, e, i, o) {
if (t) return "";
if (isNaN(i)) return "" + e;
if (0 == i) return "" + e + i + o;
var a = "" + i.toFixed(2).replace(".00", "");
if (a.indexOf(".") > -1) {
var n = a.split("."), r = n[1];
r.length > 1 && r.endsWith("0") && (r = r.substring(0, r.length - 1));
a = n[0] + "." + r;
}
return "" + e + a + o;
};
var e;
return e = o([ n ], t);
}());
i.default = r;
cc._RF.pop();
}, {} ],
DecorationFloor: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "c0e43WuUrFGu7HrB9h8NrBh", "DecorationFloor");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = t("../utils/IndexZ"), c = t("./Building"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.parallexLevel = 0;
e.RANGE = 300;
return e;
}
e.prototype.init = function(t, e, i, o, a, n, r, c) {
this.entity.destroy();
this.dungeon = t;
this.parallexLevel = null != a ? a : 0;
this.node.zIndex = c || l.default.ACTOR;
this.node.scale = i;
if (n) {
this.node.anchorX = n.x;
this.node.anchorY = n.y;
}
var u = this.getComponent(cc.Sprite);
u.spriteFrame = s.default.spriteFrameRes(e);
this.node.angle = null != o ? o : 0;
this.node.width = u.spriteFrame.getOriginalSize().width;
this.node.height = u.spriteFrame.getOriginalSize().height;
this.node.opacity = r || 255;
this.originPos = this.node.position.clone();
};
e.prototype.update = function(t) {
if (this.dungeon && this.dungeon.player && this.parallexLevel > 0) {
var e = this.dungeon.player.node.position.sub(this.node.position);
e.x > this.RANGE && (e.x = this.RANGE);
e.x < -this.RANGE && (e.x = -this.RANGE);
e.y > this.RANGE && (e.y = this.RANGE);
e.y < -this.RANGE && (e.y = -this.RANGE);
var i = cc.v3(e.x / this.RANGE * r.default.TILE_SIZE * this.parallexLevel, -e.y / this.RANGE * r.default.TILE_SIZE * this.parallexLevel / 2);
this.node.position = s.default.lerpPos(this.node.position, this.originPos.add(i), 5 * t);
}
};
return n([ p ], e);
}(c.default));
i.default = h;
cc._RF.pop();
}, {
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
DecorationWall: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f5d55seKzhHT5DvzBQhlKhU", "DecorationWall");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Building"), s = t("../logic/Logic"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
return e;
}
e.prototype.init = function(t) {
this.entity.destroy();
this.mapStr = t;
var e = "walldecoration_0_" + t[1], i = s.default.spriteFrameRes(e);
if (i) {
var o = e.split("_");
if (o.length > 1) {
var a = parseInt(o[1]);
isNaN(a) || (this.sprite.node.scale = a > 0 ? a : 1);
}
this.sprite.spriteFrame = i;
this.sprite.node.width = i.getRect().width;
this.sprite.node.height = i.getRect().height;
}
};
n([ u(cc.Sprite) ], e.prototype, "sprite", void 0);
return n([ c ], e);
}(r.default);
i.default = p;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"./Building": "Building"
} ],
DefaultStateMachine: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4327d7ykMVKAbwAJoU8o/85", "DefaultStateMachine");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function t(t, e, i) {
this.owner = t;
this.setInitialState(e);
this.setGlobalState(i);
}
t.prototype.getOwner = function() {
return this.owner;
};
t.prototype.setOwner = function(t) {
this.owner = t;
};
t.prototype.setInitialState = function(t) {
this.previousState = null;
this.currentState = t;
};
t.prototype.setGlobalState = function(t) {
this.globalState = t;
};
t.prototype.getCurrentState = function() {
return this.currentState;
};
t.prototype.getGlobalState = function() {
return this.globalState;
};
t.prototype.getPreviousState = function() {
return this.previousState;
};
t.prototype.update = function() {
this.globalState && this.globalState.update(this.owner);
this.currentState && this.currentState.update(this.owner);
};
t.prototype.changeState = function(t) {
this.previousState = this.currentState;
this.currentState && this.currentState.exit(this.owner);
this.currentState = t;
this.currentState && this.currentState.enter(this.owner);
};
t.prototype.revertToPreviousState = function() {
if (!this.previousState) return !1;
this.changeState(this.previousState);
return !0;
};
t.prototype.isInState = function(t) {
return this.currentState == t;
};
t.prototype.handleEvent = function(t) {
return !(!this.currentState || !this.currentState.event(this.owner, t)) || !(!this.globalState || !this.globalState.event(this.owner, t));
};
return t;
}();
i.default = o;
cc._RF.pop();
}, {} ],
DialogueActorData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e32c18Z0BZI05IL1SZQyIL8", "DialogueActorData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.id = 0;
this.resName = "";
this.name = "";
}
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t);
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
DialogueButtonData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6bd5asFAJFKDr1VnvArWXtv", "DialogueButtonData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.id = 0;
this.text = "";
}
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t);
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
DialogueData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "c3fcf/QYfRGfaZUJs22LWOn", "DialogueData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("./DialogueActorData"), n = t("./DialogueTextData"), r = function() {
function t() {
this.id = "";
this.list = [];
this.actors = [];
this.isTalk = !1;
this.count = 0;
}
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t);
if (t.list) {
this.list = [];
for (var e = 0, i = t.list; e < i.length; e++) {
var r = i[e], s = new n.default();
s.valueCopy(r);
this.list.push(s);
}
}
if (t.actors) {
this.actors = [];
for (var l = 0, c = t.actors; l < c.length; l++) {
r = c[l];
var u = new a.default();
u.valueCopy(r);
this.actors.push(u);
}
}
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = r;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./DialogueActorData": "DialogueActorData",
"./DialogueTextData": "DialogueTextData"
} ],
DialogueTextData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "54286rMQ+lGeIpVOxeBmewI", "DialogueTextData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("./DialogueButtonData"), n = function() {
function t() {
this.id = 0;
this.actor = 0;
this.text = "";
this.next = [];
}
t.prototype.valueCopy = function(t) {
var e;
if (t) {
o.default.baseCopy(this, t);
this.next = null !== (e = t.next) && void 0 !== e ? e : [];
if (t.next) {
this.next = [];
for (var i = 0, n = t.next; i < n.length; i++) {
var r = n[i], s = new a.default();
s.valueCopy(r);
this.next.push(s);
}
}
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = n;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./DialogueButtonData": "DialogueButtonData"
} ],
Dialogue: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "631f6Hdi4dH9rqEJFMGhsDk", "Dialogue");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DialogueData"), s = t("../logic/EventHelper"), l = t("../logic/Logic"), c = t("../utils/AudioPlayer"), u = cc._decorator, p = u.ccclass, h = u.property, d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.next = null;
e.topbg = null;
e.bottombg = null;
e.avatarSprite = null;
e.buttonLayout = null;
e.button0 = null;
e.button1 = null;
e.button2 = null;
e.button3 = null;
e.nameLabel = null;
e.anim = null;
e.data = new r.default();
e.currentTextIndex = 0;
e.currentTextSplitIndex = 0;
e.splitArr = [];
e.isShow = !1;
e.isAniming = !1;
e.isTalking = !1;
e.buttons = [];
e.nextPos = cc.v3(0, 0);
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.buttons = [ this.button0, this.button1, this.button2, this.button3 ];
s.EventHelper.on(s.EventHelper.HUD_DIALOGUE_SHOW, function(e) {
t.node && t.show(e.data);
});
s.EventHelper.on(s.EventHelper.HUD_DIALOGUE_SKIP, function() {
t.node && t.tap();
});
s.EventHelper.on(s.EventHelper.HUD_DIALOGUE_BUTTON, function(e) {
t.node && t.buttonTap(null, e.index);
});
this.node.active = !1;
this.anim = this.getComponent(cc.Animation);
this.addTapListener(this.node);
};
e.play = function(t, e) {
s.EventHelper.emit(s.EventHelper.HUD_DIALOGUE_SHOW, {
data: l.default.dialogues[t]
});
e && i.callbacks.set(t, e);
};
e.prototype.addTapListener = function(t) {
var e = this;
t.on(cc.Node.EventType.TOUCH_END, function() {
e.tap();
}, this);
};
e.prototype.show = function(t) {
this.anim.stop();
this.resetUi();
this.node.active = !0;
this.data.valueCopy(t);
this.isAniming = !0;
this.isShow = !0;
this.anim.play("DialogueShow");
};
e.prototype.hide = function() {
this.isShow = !1;
this.isAniming = !0;
this.label.node.opacity = 0;
this.anim.play("DialogueHide");
};
e.prototype.buttonTap = function(t, e) {
if (this.buttons[parseInt(e)].node.active) {
c.default.play(c.default.SELECT);
this.goNext(parseInt(e));
}
};
e.prototype.ShowFinish = function() {
this.isAniming = !1;
this.playDialogue();
};
e.prototype.HideFinish = function() {
this.isAniming = !1;
this.node.active = !1;
};
e.prototype.hasButton = function() {
return this.button0.node.active || this.button1.node.active || this.button2.node.active || this.button3.node.active;
};
e.prototype.goNext = function(t) {
var e = this.data.list[this.currentTextIndex];
this.splitArr.length < 1 && (e.next.length > t ? this.currentTextIndex = e.next[t].id : this.currentTextIndex++);
if (this.currentTextIndex > this.data.list.length - 1) {
this.hide();
var o = i.callbacks.get(this.data.id);
if (o) {
o();
i.callbacks.delete(this.data.id);
}
} else this.updateUi();
};
e.prototype.tap = function() {
if (this.isShow && !this.isAniming && !this.hasButton()) if (this.isTalking) {
this.isTalking = !1;
this.label.node.stopAllActions();
var t = this.data.list[this.currentTextIndex];
this.label.string = t.text;
} else this.goNext(0);
};
e.prototype.playDialogue = function() {
if (this.data.list.length > 0) {
this.currentTextIndex = 0;
this.updateUi();
} else this.hide();
};
e.prototype.resetUi = function() {
this.nameLabel.string = "";
this.avatarSprite.spriteFrame = null;
this.label.string = "";
this.next.opacity = 0;
for (var t = 0; t < this.buttons.length; t++) this.updateButton(this.buttons[t], t);
};
e.prototype.updateUi = function() {
if (!(this.currentTextIndex > this.data.list.length - 1)) {
this.currentTextIndex < 0 && this.hide();
var t = this.data.list[this.currentTextIndex];
if (this.splitArr.length < 1) for (var e = 0, i = 0, o = 0; o < t.text.length; o++) {
var a = t.text.charCodeAt(o);
if ((e += a >= 1 && a <= 126 || 65376 <= a && a <= 65439 ? 1 : 2) > 100 || o == t.text.length - 1) {
e = 0;
this.splitArr.unshift(t.text.substring(i, i + o + 1));
(i = o + 1) > t.text.length - 1 && (i = t.text.length - 1);
}
}
this.nameLabel.string = this.data.actors[t.actor].name;
this.avatarSprite.spriteFrame = l.default.spriteFrameRes(this.data.actors[t.actor].resName);
this.updateLabel(this.splitArr.pop(), this.data.isTalk);
for (o = 0; o < this.buttons.length; o++) this.updateButton(this.buttons[o], o, this.splitArr.length > 0 ? void 0 : t);
this.next.opacity = this.hasButton() ? 0 : 255;
}
};
e.prototype.updateButton = function(t, e, i) {
if (!i || i.next.length - 1 < e) t.node.active = !1; else {
t.node.active = i.next[e].text && i.next[e].text.length > 0;
t.getComponentInChildren(cc.Label).string = i.next[e].text;
}
};
e.prototype.updateLabel = function(t, e) {
var i = this;
if (e) {
this.nextPos = this.next.position.clone();
this.next.stopAllActions();
cc.tween(this.next).repeatForever(cc.tween(this.next).to(.5, {
y: this.nextPos.y - 10
}).to(.5, {
y: this.nextPos.y
})).start();
this.isTalking = !0;
var o = 0, a = cc.tween().delay(.04).call(function() {
i.label.string = t.substring(0, ++o);
c.default.play(c.default.VOICE);
});
cc.tween(this.label.node).to(.2, {
opacity: 0
}).call(function() {
i.label.string = "";
}).to(.2, {
opacity: 255
}).repeat(t.length, a).call(function() {
i.isTalking = !1;
i.next.stopAllActions();
c.default.stopAllEffect();
}).start();
} else cc.tween(this.label.node).to(.2, {
opacity: 0
}).call(function() {
i.label.string = t;
}).to(.2, {
opacity: 255
}).start();
};
var i;
e.callbacks = new Map();
n([ h(cc.Label) ], e.prototype, "label", void 0);
n([ h(cc.Node) ], e.prototype, "next", void 0);
n([ h(cc.Node) ], e.prototype, "topbg", void 0);
n([ h(cc.Node) ], e.prototype, "bottombg", void 0);
n([ h(cc.Sprite) ], e.prototype, "avatarSprite", void 0);
n([ h(cc.Node) ], e.prototype, "buttonLayout", void 0);
n([ h(cc.Button) ], e.prototype, "button0", void 0);
n([ h(cc.Button) ], e.prototype, "button1", void 0);
n([ h(cc.Button) ], e.prototype, "button2", void 0);
n([ h(cc.Button) ], e.prototype, "button3", void 0);
n([ h(cc.Label) ], e.prototype, "nameLabel", void 0);
return i = n([ p ], e);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../data/DialogueData": "DialogueData",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer"
} ],
DollJoyStick: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a4c84CciM1Ne6aS3ei6/bWa", "DollJoyStick");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.head = null;
e.bar = null;
e.isPressing = !1;
e.timeDelay = 0;
e.movePos = cc.v2(0, 0);
e.stopCount = 0;
return e;
}
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .03) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.onLoad = function() {
var t = this;
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
t.startPos = e.getLocation();
t.isPressing = !0;
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var i = e.getLocation().sub(t.startPos);
i.mag() > t.node.width / 10 ? t.movePos = i.normalize() : t.movePos = cc.Vec2.ZERO;
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function() {
t.isPressing = !1;
t.movePos = cc.Vec2.ZERO;
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.isPressing = !1;
t.movePos = cc.Vec2.ZERO;
}, this);
};
e.prototype.updateUi = function(t) {
this.sprite.angle = -45 * t.x;
this.head.y = 16 * (1 + t.y);
this.bar.scaleY = 1 + t.y;
this.head.y > 24 && (this.head.y = 24);
this.bar.scaleY > 1.5 && (this.bar.scaleY = 1.5);
};
e.prototype.update = function(t) {
if (this.isTimeDelay(t)) {
this.movePos.equals(cc.Vec2.ZERO) ? this.stopCount++ : this.stopCount = 0;
this.stopCount < 2 && r.EventHelper.emit(r.EventHelper.KEYBOARD_MOVE, {
pos: this.movePos
});
}
};
n([ c(cc.Node) ], e.prototype, "sprite", void 0);
n([ c(cc.Node) ], e.prototype, "head", void 0);
n([ c(cc.Node) ], e.prototype, "bar", void 0);
return n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper"
} ],
DollMachineDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "78eb7fVRwVOurYS85kmreTD", "DollMachineDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../logic/Logic"), s = t("../../utils/AudioPlayer"), l = t("../../utils/Utils"), c = t("../Doll"), u = t("../DollJoyStick"), p = t("./../../logic/EventHelper"), h = t("./BaseDialog"), d = cc._decorator, f = d.ccclass, g = d.property, y = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.hook = null;
e.hookSprite = null;
e.claw = null;
e.clawLeft = null;
e.clawRight = null;
e.clawCenter = null;
e.hookLine = null;
e.topLayout = null;
e.layout = null;
e.joyStick = null;
e.joyStickSmall = null;
e.coinLayout = null;
e.countDown = null;
e.countDownSmall = null;
e.dollPrefab = null;
e.isHooking = !1;
e.lastMovePos = cc.Vec3.ZERO;
e.hookSwingAngle = 0;
e.clawSwingAngle = 0;
e.dollList = [];
e.isCoinInserted = !1;
e.isCoinAniming = !1;
return e;
}
e.prototype.onLoad = function() {
var t = this;
p.EventHelper.on(p.EventHelper.KEYBOARD_MOVE, function(e) {
t.node && t.node.active && t.joystickMove(e.pos);
});
p.EventHelper.on(p.EventHelper.KEYBOARD_INTERACT, function() {
t.node && t.node.active && t.buttonClick();
});
this.coinLayout.on(cc.Node.EventType.TOUCH_END, function() {
t.node && t.insertCoin();
}, this);
this.initDolls();
};
e.prototype.initDolls = function() {
this.dollList = [];
this.layout.removeAllChildren();
for (var t = 0, e = r.default.dollNameList; t < e.length; t++) {
var i = e[t], o = cc.instantiate(this.dollPrefab).getComponent(c.default).init(r.default.items[i]);
o.node.parent = this.layout;
this.dollList.push(o);
}
for (var a = 0; a < 3; a++) for (var n = 0; n < 6; n++) 0 == n && 0 == a || n + a < this.dollList.length + 1 && (this.dollList[n + 6 * a - 1].node.position = cc.v3(n * c.default.RECT.width, a * c.default.RECT.width).add(cc.v3(c.default.RECT.width / 2, c.default.RECT.width / 2)));
};
e.prototype.insertCoin = function() {
var t = this;
if (!this.isCoinAniming) {
this.anim || (this.anim = this.coinLayout.getComponent(cc.Animation));
this.isCoinAniming = !0;
this.anim.play("DollMachineCoinIn");
s.default.play(s.default.COIN);
p.EventHelper.emit(p.EventHelper.HUD_ADD_COIN, {
count: -2
});
this.scheduleOnce(function() {
t.coinIn();
}, 1);
}
};
e.prototype.coinIn = function() {
var t = this;
if (this.isCoinInserted) {
s.default.play(s.default.SELECT_FAIL);
this.anim.play("DollMachineCoinOut");
l.default.toast("已投币，请稍后");
this.scheduleOnce(function() {
t.isCoinAniming = !1;
s.default.play(s.default.COIN);
}, 1);
} else {
this.isCoinAniming = !1;
this.isCoinInserted = !0;
s.default.play(s.default.CASHIERING);
this.unscheduleAllCallbacks();
var e = 30;
this.countDown.string = "" + e;
this.countDownSmall.string = "" + e;
var i = function() {
if (--e <= 0) {
e = 0;
t.buttonClick();
} else e < 6 && s.default.play(s.default.SELECT_FAIL);
t.countDown.string = (e > 9 ? "" : "0") + e;
t.countDownSmall.string = (e > 9 ? "" : "0") + e;
t.isHooking && t.unschedule(i);
};
this.schedule(i, 1, e, 1);
}
};
e.prototype.joystickMove = function(t) {
this.joyStick.updateUi(t);
this.joyStickSmall.updateUi(t);
if (this.isCoinInserted && !this.isHooking) {
var e = l.default.clampPos(this.hook.position.add(t.mul(10)), cc.v3(this.topLayout.width - this.hook.width / 2, this.topLayout.height - this.hook.height / 2), cc.v3(this.hook.width / 2, this.hook.height / 2));
this.hook.position = e;
if (!t.equals(cc.Vec3.ZERO)) {
t.x > 0 ? this.lastMovePos.x < 0 ? this.hookSwingAngle < 0 ? this.hookSwingAngle -= 30 : 0 == this.hookSwingAngle && (this.hookSwingAngle += 30) : 0 == this.lastMovePos.x && 0 == this.hookSwingAngle && (this.hookSwingAngle += 30) : t.x < 0 && (this.lastMovePos.x > 0 ? this.hookSwingAngle > 0 ? this.hookSwingAngle += 30 : 0 == this.hookSwingAngle && (this.hookSwingAngle -= 30) : 0 == this.lastMovePos.x && 0 == this.hookSwingAngle && (this.hookSwingAngle -= 30));
this.hookSwingAngle = l.default.clamp(this.hookSwingAngle, 75, -75);
}
this.lastMovePos = t.clone();
}
};
e.prototype.buttonClick = function() {
var t = this;
if (this.isCoinInserted) if (this.isHooking) s.default.play(s.default.SELECT_FAIL); else {
s.default.play(s.default.SELECT);
this.isHooking = !0;
this.clawLeft.angle = 60;
this.clawRight.angle = -60;
this.clawCenter.scaleY = .5;
this.claw.y = 0;
this.claw.angle = 0;
var e = null, i = !1, o = !1;
cc.tween(this.claw).to(1, {
y: -80
}).call(function() {
cc.tween(t.clawLeft).to(.5, {
angle: 0
}).start();
cc.tween(t.clawRight).to(.5, {
angle: 0
}).start();
cc.tween(t.clawCenter).to(.5, {
scaleY: 1
}).call(function() {
var i = t.hook.convertToWorldSpaceAR(t.claw.position), o = t.hook.convertToWorldSpaceAR(cc.v3(0, 0)), a = i.x - o.x, n = (e = t.getGrabDoll(cc.v3(t.hook.x + a, t.hook.y))) ? 45 : 60;
cc.tween(t.clawLeft).to(.5, {
angle: n
}).start();
cc.tween(t.clawRight).to(.5, {
angle: -n
}).start();
}).to(.5, {
scaleY: .5
}).call(function() {
cc.tween(t.claw).call(function() {
cc.tween(t.hook).to(t.hook.position.mag() / 120, {
position: cc.v3(t.hook.width / 2, t.hook.height / 2)
}).call(function() {
i = !0;
if (o) {
t.isHooking = !1;
t.isCoinInserted = !1;
}
}).start();
}).to(.5, {
y: -50
}).call(function() {
cc.tween(t.clawLeft).to(.2, {
angle: 0
}).to(.1, {
angle: 60
}).start();
cc.tween(t.clawRight).to(.2, {
angle: 0
}).to(.1, {
angle: -60
}).start();
cc.tween(t.clawCenter).to(.2, {
scaleY: 1
}).to(.1, {
scaleY: .5
}).start();
e && e.drop(t.hook.position.y);
}).to(1, {
y: 0
}).call(function() {
o = !0;
if (i) {
t.isHooking = !1;
t.isCoinInserted = !1;
}
}).start();
cc.tween(t.hookLine).to(2, {
height: 0
}).start();
}).start();
}).start();
cc.tween(this.hookLine).to(1, {
height: 80
}).start();
} else {
s.default.play(s.default.SELECT_FAIL);
l.default.toast("点击右下角投币");
}
};
e.prototype.getGrabDoll = function(t) {
cc.log(t.x + "," + t.y);
for (var e = 0, i = this.dollList; e < i.length; e++) {
var o = i[e];
if (r.default.getDistance(o.node.position, t) < 30) {
o.grabed(this.claw);
return o;
}
}
return null;
};
e.prototype.update = function() {
var t = this.getSwingAngle(this.hookSprite.angle, this.hookSwingAngle, .2);
this.hookSprite.angle = t.x;
this.hookSwingAngle = t.y;
};
e.prototype.getSwingAngle = function(t, e, i) {
var o = 0, a = e;
if (e > 0) {
if ((o = t + 1) > e) {
o = e;
a *= i - 1;
}
} else if (e < 0) {
if ((o = t - 1) < e) {
o = e;
a *= i - 1;
}
} else t > 0 ? o = t - 1 : t < 0 && (o = t + 1);
a = a > 0 ? Math.floor(a) : Math.ceil(a);
return cc.v2(o, a);
};
e.prototype.show = function() {
t.prototype.show.call(this);
s.default.stopAllEffect();
s.default.play(s.default.DOLLMACHINE, !1, !0);
};
e.prototype.dismiss = function() {
t.prototype.dismiss.call(this);
s.default.stopAllEffect();
};
n([ g(cc.Node) ], e.prototype, "hook", void 0);
n([ g(cc.Node) ], e.prototype, "hookSprite", void 0);
n([ g(cc.Node) ], e.prototype, "claw", void 0);
n([ g(cc.Node) ], e.prototype, "clawLeft", void 0);
n([ g(cc.Node) ], e.prototype, "clawRight", void 0);
n([ g(cc.Node) ], e.prototype, "clawCenter", void 0);
n([ g(cc.Node) ], e.prototype, "hookLine", void 0);
n([ g(cc.Node) ], e.prototype, "topLayout", void 0);
n([ g(cc.Node) ], e.prototype, "layout", void 0);
n([ g(u.default) ], e.prototype, "joyStick", void 0);
n([ g(u.default) ], e.prototype, "joyStickSmall", void 0);
n([ g(cc.Node) ], e.prototype, "coinLayout", void 0);
n([ g(cc.Label) ], e.prototype, "countDown", void 0);
n([ g(cc.Label) ], e.prototype, "countDownSmall", void 0);
n([ g(cc.Prefab) ], e.prototype, "dollPrefab", void 0);
return n([ f ], e);
}(h.default);
i.default = y;
cc._RF.pop();
}, {
"../../logic/Logic": "Logic",
"../../utils/AudioPlayer": "AudioPlayer",
"../../utils/Utils": "Utils",
"../Doll": "Doll",
"../DollJoyStick": "DollJoyStick",
"./../../logic/EventHelper": "EventHelper",
"./BaseDialog": "BaseDialog"
} ],
Doll: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "ac317QzJatNd7oqz6bJXovF", "Doll");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../logic/EventHelper"), s = t("../data/ItemData"), l = t("../utils/AudioPlayer"), c = t("../utils/Random"), u = t("../logic/Logic"), p = cc._decorator, h = p.ccclass, d = p.property, f = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.isAniming = !1;
e.isGrabing = !1;
e.data = new s.default();
return e;
}
i = e;
e.prototype.grabed = function(t) {
if (!this.isAniming) {
this.clawNode = t;
this.node.zIndex = 100;
this.isAniming = !0;
this.isGrabing = !0;
}
};
e.prototype.init = function(t) {
if (!t) return this;
this.data.valueCopy(t);
this.sprite.spriteFrame = u.default.spriteFrameRes(t.resName);
return this;
};
e.prototype.drop = function(t) {
var e = this;
this.isGrabing = !1;
i.RECT.contains(cc.v2(cc.v3(this.node.position.x, t))) ? cc.tween(this.node).to(.5, {
y: t
}).to(.5, {
y: -100
}).call(function() {
l.default.play(l.default.DOLLDOWN);
e.addItem();
}).start() : cc.tween(this.node).to(.5, {
y: t
}).call(function() {
e.isAniming = !1;
cc.tween(e.sprite.node).to(.3, {
angle: c.default.getRandomNum(-30, 30)
}).start();
}).start();
};
e.prototype.addItem = function() {
l.default.play(l.default.CASHIERING);
r.EventHelper.emit(r.EventHelper.PLAYER_CHANGEITEM, {
itemData: this.data
});
};
e.prototype.update = function() {
if (this.clawNode && this.isGrabing) {
var t = this.clawNode.convertToWorldSpaceAR(cc.v3(0, -16));
this.node.position = this.node.parent.convertToNodeSpaceAR(t);
}
};
var i;
e.RECT = cc.rect(0, 0, 100, 100);
n([ d(cc.Sprite) ], e.prototype, "sprite", void 0);
return i = n([ h ], e);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"../data/ItemData": "ItemData",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Random": "Random",
"./../logic/EventHelper": "EventHelper"
} ],
Door: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f14f52tIg1Ivb0Rnl80O8tL", "Door");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("./Building"), l = t("../utils/IndexZ"), c = t("../collider/CCollider"), u = t("../utils/Random"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isOpen = !1;
e.isDoor = !0;
e.isHidden = !1;
e.isEmpty = !1;
e.isLock = !1;
e.isTransparent = !1;
e.isDecorate = !1;
e.dir = 0;
e.sprite = null;
e.roof = null;
e.leftside = null;
e.rightside = null;
e.lockInfo = null;
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
this.roof = this.node.getChildByName("roof").getComponent(cc.Sprite);
this.leftside = this.node.getChildByName("leftside").getComponent(cc.Sprite);
this.rightside = this.node.getChildByName("rightside").getComponent(cc.Sprite);
this.lockInfo = this.node.getChildByName("roof").getChildByName("info");
this.arrow = this.node.getChildByName("doorarrow");
this.arrow.opacity = 0;
this.boxCollider = this.getComponent(c.default);
this.node.zIndex = l.default.FLOOR;
};
e.prototype.start = function() {
if (this.sprite) {
this.sprite.spriteFrame = r.default.spriteFrameRes("door" + (this.dir > 1 ? "side" : "") + "0" + r.default.chapterIndex + "anim000");
this.sprite.node.width = 128;
this.sprite.node.height = this.dir > 1 ? 384 : 128;
this.isDecorate && (this.sprite.node.opacity = 0);
}
this.roof || (this.roof = this.node.getChildByName("roof").getComponent(cc.Sprite));
var t = r.default.spriteFrameRes("roof" + r.default.worldLoader.getCurrentLevelData().wallRes1 + "anim000"), e = r.default.spriteFrameRes("wall" + r.default.worldLoader.getCurrentLevelData().wallRes1 + "anim002");
if (this.dir > 1) {
t = null;
e = null;
this.node.zIndex -= 120;
} else this.node.zIndex += 4;
this.leftside.spriteFrame = e;
this.rightside.spriteFrame = e;
this.roof.spriteFrame = t;
this.roof.node.parent = this.node.parent;
var i = this.node.convertToWorldSpaceAR(cc.v3(0, 128));
this.roof.node.position = this.roof.node.parent.convertToNodeSpaceAR(i);
this.roof.node.zIndex = l.default.OVERHEAD;
switch (this.dir) {
case 0:
break;

case 1:
this.roof.node.angle = 180;
this.lockInfo.angle = -180;
break;

case 2:
break;

case 3:
this.sprite.node.scaleX = -1;
}
!this.lockInfo || !this.isLock || r.default.mapManager.isNeighborRoomStateClear(this.dir) || this.isDecorate || this.isTransparent || (this.lockInfo.opacity = 255);
1 == this.dir && (this.roof.node.opacity = 128);
var o = this.boxCollider;
o.offset = cc.v2(0, 7);
o.setSize(cc.size(128, 114));
if (this.dir > 1) {
o.offset = cc.v2(0, -64);
o.setSize(cc.size(64, 256));
}
if (this.isTransparent) {
this.node.active = !1;
this.roof.node.active = !1;
}
};
e.prototype.setOpen = function(t, e) {
this.isDoor && (t ? this.openGate(e) : this.closeGate(e));
};
e.prototype.openGate = function(t) {
var e = this;
if (!this.lockInfo || !this.isLock || r.default.mapManager.isNeighborRoomStateClear(this.dir) || this.isDecorate) {
if (!this.isOpen) {
this.sprite || (this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite));
this.lockInfo && (this.lockInfo.opacity = 0);
this.isOpen = !0;
var i = 0;
this.schedule(function() {
e.sprite.spriteFrame = r.default.spriteFrameRes("door" + (e.dir > 1 ? "side" : "") + "0" + r.default.chapterIndex + "anim00" + i++);
i > 4 && (e.boxCollider.sensor = !0);
}, t ? 0 : .15, 4);
}
} else this.lockInfo.opacity = 255;
};
e.prototype.closeGate = function(t) {
var e = this;
if (this.isOpen && !this.isEmpty && !this.isTransparent) {
this.isOpen = !1;
var i = 4;
this.schedule(function() {
e.sprite.spriteFrame = r.default.spriteFrameRes("door" + (e.dir > 1 ? "side" : "") + "0" + r.default.chapterIndex + "anim00" + i--);
i < 0 && (e.boxCollider.sensor = !1);
}, t ? 0 : .1, 4);
}
};
e.prototype.onColliderEnter = function(t) {
this.dir < 2 && (t.tag == c.default.TAG.PLAYER || t.tag == c.default.TAG.NONPLAYER) && (this.roof.node.opacity = this.isTransparent ? 0 : 128);
};
e.prototype.onColliderStay = function(t) {
this.dir < 2 && (t.tag == c.default.TAG.PLAYER || t.tag == c.default.TAG.NONPLAYER) && (this.roof.node.opacity = this.isTransparent ? 0 : 128);
};
e.prototype.onColliderExit = function(t) {
if (this.dir < 2 && (t.tag == c.default.TAG.PLAYER || t.tag == c.default.TAG.NONPLAYER)) {
this.roof.node.opacity = this.isTransparent ? 0 : 255;
(this.lockInfo && this.lockInfo.opacity < 1 || this.isDecorate) && (this.roof.node.opacity = this.isTransparent ? 0 : 180);
}
};
e.prototype.disappear = function() {
t.prototype.disappear.call(this);
cc.tween(this.roof.node).to(.5 + u.default.rand(), {
scaleY: 0
}).start();
};
return n([ h ], e);
}(s.default));
i.default = d;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../logic/Logic": "Logic",
"../utils/IndexZ": "IndexZ",
"../utils/Random": "Random",
"./Building": "Building"
} ],
Dragon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a38f40rLRxEErH92pL9pLeC", "Dragon");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Boss"), s = t("../data/DamageData"), l = t("../logic/Shooter"), c = t("../logic/Dungeon"), u = t("../manager/StatusManager"), p = t("../utils/NextStep"), h = t("../utils/Random"), d = t("../utils/AudioPlayer"), f = t("../data/FromData"), g = t("../logic/Achievement"), y = t("../utils/IndexZ"), m = t("../utils/ActorUtils"), v = t("../logic/Logic"), E = t("../collider/CCollider"), _ = cc._decorator, T = _.ccclass, D = (_.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.timeDelay = 0;
e.isMoving = !1;
e.fireSkill = new p.default();
e.rainSkill = new p.default();
e.isRainReady = !1;
e.isMoveRight = !1;
e.actionTimeDelay = 0;
return e;
}
e.prototype.init = function() {};
e.prototype.onLoad = function() {
this.sc.isDied = !1;
this.sc.isShow = !1;
this.anim = this.getComponent(cc.Animation);
this.shooter01 = this.node.getChildByName("Shooter01").getComponent(l.default);
this.shooter01.from.valueCopy(f.default.getClone(this.actorName(), "dragonhead"));
this.statusManager = this.node.getChildByName("StatusManager").getComponent(u.default);
this.physicBox = this.getComponent(E.default);
};
e.prototype.start = function() {};
e.prototype.takeDamage = function(t) {
if (this.sc.isDied || !this.sc.isShow || this.rainSkill.IsExcuting) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
var e = [ d.default.MONSTER_HIT, d.default.MONSTER_HIT1, d.default.MONSTER_HIT2 ];
d.default.play(e[v.default.getRandomNum(0, 2)]);
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
g.default.addMonsterKillAchievement(this.data.resName);
this.sc.isDied = !0;
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
this.getLoot();
}
};
e.prototype.fireFire = function() {
var t = this;
this.fireSkill.next(function() {
t.fireSkill.IsExcuting = !0;
t.anim.play("DragonFire");
t.scheduleOnce(function() {
t.shooter01.setHv(cc.v2(0, -1));
t.shooter01.data.bulletLineInterval = .5;
t.fireShooter(t.shooter01, "bullet200", 2, 5);
}, 1.1);
t.scheduleOnce(function() {
t.fireSkill.IsExcuting = !1;
t.anim.play("DragonIdle");
}, 2);
}, 5, !0);
};
e.prototype.fireRain = function() {
var t = this;
this.isRainReady && this.rainSkill.next(function() {
t.rainSkill.IsExcuting = !0;
t.physicBox.sensor = !0;
t.entity.Move.linearVelocity = cc.v2(0, 0);
t.anim.stop();
t.anim.play("DragonFlyHigh");
t.scheduleOnce(function() {
t.anim.play("DragonFlyLow");
t.physicBox.sensor = !1;
}, 13);
t.scheduleOnce(function() {
t.rainSkill.IsExcuting = !1;
}, 15);
t.schedule(function() {
t.dungeon.addFallStone(t.dungeon.player.node.position, !0, !0);
t.dungeon.addFallStone(c.default.getPosInMap(cc.v3(h.default.getRandomNum(0, c.default.WIDTH_SIZE - 1), h.default.getRandomNum(0, c.default.HEIGHT_SIZE - 1))), !0, !0);
t.dungeon.addFallStone(c.default.getPosInMap(cc.v3(h.default.getRandomNum(0, c.default.WIDTH_SIZE - 1), h.default.getRandomNum(0, c.default.HEIGHT_SIZE - 1))), !0, !0);
t.dungeon.addFallStone(c.default.getPosInMap(cc.v3(h.default.getRandomNum(0, c.default.WIDTH_SIZE - 1), h.default.getRandomNum(0, c.default.HEIGHT_SIZE - 1))), !0, !0);
}, .5, 20, 2);
}, 30);
};
e.prototype.bossAction = function() {
if (!this.sc.isDied && this.sc.isShow && this.dungeon) {
this.changeZIndex();
this.fireRain();
this.rainSkill.IsExcuting || this.fireFire();
if (!this.rainSkill.IsExcuting) {
this.isMoveRight && this.pos.x - this.defaultPos.x > 2 ? this.isMoveRight = !1 : !this.isMoveRight && this.defaultPos.x - this.pos.x > 2 && (this.isMoveRight = !0);
var t = cc.v3(this.isMoveRight ? 1 : -1, 0);
if (!t.equals(cc.Vec3.ZERO)) {
t = t.normalizeSelf();
this.move(t, 16);
}
}
}
};
e.prototype.changeZIndex = function() {
this.node.zIndex = y.default.OVERHEAD;
};
e.prototype.move = function(t, e) {
if (!this.sc.isDied) {
t.equals(cc.Vec3.ZERO) || (this.pos = c.default.getIndexInMap(this.entity.Transform.position));
var i = t.x, o = t.y, a = cc.v2(i, o);
a = a.normalize().mul(e);
this.entity.Move.linearVelocity = a;
this.isMoving = 0 != i || 0 != o;
this.changeZIndex();
}
};
e.prototype.fireShooter = function(t, e, i, o, a) {
t.dungeon = this.dungeon;
t.actor = this;
t.data.bulletType = e;
t.data.bulletArcExNum = i;
t.data.bulletLineExNum = o;
t.setHv(cc.v2(0, -1));
t.fireBullet(a, cc.Vec3.ZERO);
};
e.prototype.showBoss = function() {
var t = this;
this.sc.isShow = !0;
this.entity.NodeRender.node = this.node;
this.entity.Move.damping = 6;
if (this.healthBar) {
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.healthBar.node.active = !this.sc.isDied;
}
this.scheduleOnce(function() {
t.isRainReady = !0;
}, 10);
};
e.prototype.isActionTimeDelay = function(t) {
this.actionTimeDelay += t;
if (this.actionTimeDelay > .2) {
this.actionTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t) {
this.timeDelay += t;
this.timeDelay > 1 && (this.timeDelay = 0);
this.isActionTimeDelay(t) && this.bossAction();
this.data.currentHealth < 1 && this.killed();
this.healthBar.node.active = !this.sc.isDied;
};
e.prototype.onColliderEnter = function(t, e) {
if (e.tag == E.default.TAG.BOSS_HIT) {
var i = m.default.getEnemyCollisionTarget(t);
if (i && !this.sc.isDied && !this.physicBox.sensor) {
var o = new s.default();
o.physicalDamage = 15;
i.takeDamage(o, f.default.getClone(this.actorName(), "dragonhead"), this);
}
}
};
e.prototype.actorName = function() {
return "末日黑龙";
};
return n([ T ], e);
}(r.default));
i.default = D;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/NextStep": "NextStep",
"../utils/Random": "Random",
"./Boss": "Boss"
} ],
DryadGrass: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d7d90DMrjlILYsaGuEm//pn", "DryadGrass");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../manager/StatusManager"), l = t("../data/FromData"), c = t("../utils/ActorUtils"), u = t("../building/Building"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isUp = !1;
e.isAuto = !0;
e.isUping = !1;
return e;
}
e.prototype.onLoad = function() {
this.initCollider();
this.isUp = !1;
};
e.prototype.takeDamage = function() {
return !1;
};
e.prototype.fall = function() {
this.anim = this.getComponent(cc.Animation);
this.anim.play();
this.isUping = !0;
};
e.prototype.TwineUp = function() {
var t = this;
this.isUp = !0;
this.scheduleOnce(function() {
t.isUp = !1;
}, .1);
this.scheduleOnce(function() {
t.node && t.destroyEntityNode();
}, 6);
};
e.prototype.start = function() {};
e.prototype.onColliderEnter = function(t) {
!c.default.getEnemyCollisionTarget(t) || this.isAuto || this.isUping || this.fall();
};
e.prototype.onColliderStay = function(t) {
var e = c.default.getEnemyCollisionTarget(t);
if (e && this.isUp && this.isValid) {
this.isUp = !1;
var i = l.default.getClone(this.actorName(), "dryadtwine03");
e.takeDamage(new r.default(2), i) && e.addStatus(s.default.TWINE, i);
}
};
e.prototype.actorName = function() {
return "树根缠绕";
};
return n([ h ], e);
}(u.default));
i.default = d;
cc._RF.pop();
}, {
"../building/Building": "Building",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils"
} ],
Dryad: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d1a62Oo+gRDI5+v2dxAMRw+", "Dryad");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Boss"), s = t("../logic/Shooter"), l = t("../logic/Logic"), c = t("../manager/StatusManager"), u = t("../utils/NextStep"), p = t("./BossAttackCollider"), h = t("../utils/AudioPlayer"), d = t("../data/FromData"), f = t("../logic/Achievement"), g = t("../collider/CCollider"), y = cc._decorator, m = y.ccclass, v = y.property, E = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.hand01 = null;
e.hand02 = null;
e.timeDelay = 0;
e.isMoving = !1;
e.flower01 = null;
e.flower02 = null;
e.twoFlowerSkill = new u.default();
e.twineGrassSkill = new u.default();
e.meleeSkill = new u.default();
e.stoneSkill = new u.default();
e.actionTimeDelay = 0;
return e;
}
e.prototype.init = function() {
throw new Error("Method not implemented.");
};
e.prototype.onLoad = function() {
this.sc.isDied = !1;
this.sc.isShow = !1;
this.anim = this.getComponent(cc.Animation);
this.shooter01 = this.node.getChildByName("Shooter01").getComponent(s.default);
this.shooter02 = this.node.getChildByName("Shooter02").getComponent(s.default);
this.shooter03 = this.node.getChildByName("Shooter03").getComponent(s.default);
var t = d.default.getClone(this.actorName(), "dryadflower04");
this.shooter01.from.valueCopy(t);
this.shooter02.from.valueCopy(t);
this.shooter03.from.valueCopy(t);
this.statusManager = this.node.getChildByName("StatusManager").getComponent(c.default);
this.hand01.from.valueCopy(t);
this.hand02.from.valueCopy(t);
};
e.prototype.start = function() {};
e.prototype.takeDamage = function(t) {
if (this.sc.isDied || !this.sc.isShow) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.playHit(this.node.getChildByName("sprite"));
var e = [ h.default.MONSTER_HIT, h.default.MONSTER_HIT1, h.default.MONSTER_HIT2 ];
h.default.play(e[l.default.getRandomNum(0, 2)]);
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
f.default.addMonsterKillAchievement(this.data.resName);
this.sc.isDied = !0;
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
this.getLoot();
}
};
e.prototype.bossAction = function() {
if (!this.sc.isDied && this.sc.isShow && this.dungeon) {
this.changeZIndex();
this.twoFlowerSkill.IsExcuting || this.stoneSkill.IsExcuting || this.attack();
this.meleeSkill.IsExcuting || this.stoneSkill.IsExcuting || this.twoFlowers();
this.meleeSkill.IsExcuting || this.twoFlowerSkill.IsExcuting || this.fireStone();
this.twineGrass();
}
};
e.prototype.attack = function() {
var t = this;
this.meleeSkill.next(function() {
h.default.play(h.default.MELEE);
t.meleeSkill.IsExcuting = !0;
t.anim || (t.anim = t.getComponent(cc.Animation));
if (l.default.getHalfChance()) {
t.anim.play("DryadAttack01");
t.hand01.showCollider(2, 1);
} else {
t.anim.play("DryadAttack02");
t.hand02.showCollider(2, 1);
}
t.scheduleOnce(function() {
t.anim.play("DryadIdle");
t.meleeSkill.IsExcuting = !1;
}, 1);
}, 2, !0);
};
e.prototype.twineGrass = function() {
var t = this;
this.twineGrassSkill.next(function() {
t.schedule(function() {
t.dungeon.buildingManager.addTwineGrass(t.dungeon.player.pos.clone(), !0);
}, 1, 2);
}, 8, !0);
};
e.prototype.twoFlowers = function() {
var t = this;
this.twoFlowerSkill.next(function() {
t.twoFlowerSkill.IsExcuting = !0;
t.shooter02.setHv(cc.v2(0, -1));
t.shooter03.setHv(cc.v2(0, -1));
t.anim.play("DryadOpen");
t.flower01.getComponent(cc.Animation).play();
t.flower02.getComponent(cc.Animation).play();
t.scheduleOnce(function() {
t.shooter02.data.bulletLineInterval = .5;
t.shooter03.data.bulletLineInterval = .5;
t.fireShooter(t.shooter02, "bullet021", 99, 2);
t.fireShooter(t.shooter03, "bullet021", 99, 2);
}, 2);
t.scheduleOnce(function() {
t.anim.play("DryadIdle");
t.twoFlowerSkill.IsExcuting = !1;
}, 4);
}, 6, !0);
};
e.prototype.fireStone = function() {
var t = this;
this.stoneSkill.next(function() {
t.stoneSkill.IsExcuting = !0;
t.anim.play("DryadStone");
t.scheduleOnce(function() {
var e = t.entity.Transform.position.clone().add(t.shooter01.node.position), i = t.dungeon.player.getCenterPosition().sub(e);
if (!i.equals(cc.Vec3.ZERO)) {
t.shooter01.setHv(cc.v2(i).normalize());
t.fireShooter(t.shooter01, "bullet022", 0, 0);
}
}, .55);
t.scheduleOnce(function() {
t.stoneSkill.IsExcuting = !1;
t.anim.play("DryadIdle");
}, 1);
}, 4, !0);
};
e.prototype.fireShooter = function(t, e, i, o, a) {
t.dungeon = this.dungeon;
t.actor = this;
t.data.bulletType = e;
t.data.bulletArcExNum = i;
t.data.bulletLineExNum = o;
t.fireBullet(a, cc.Vec3.ZERO);
};
e.prototype.showBoss = function() {
this.sc.isShow = !0;
this.entity.NodeRender.node = this.node;
this.entity.Move.damping = 6;
if (this.healthBar) {
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.healthBar.node.active = !this.sc.isDied;
}
};
e.prototype.isActionTimeDelay = function(t) {
this.actionTimeDelay += t;
if (this.actionTimeDelay > .2) {
this.actionTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t) {
this.timeDelay += t;
this.timeDelay > 1 && (this.timeDelay = 0);
this.isActionTimeDelay(t) && this.bossAction();
this.data.currentHealth < 1 && this.killed();
this.healthBar.node.active = !this.sc.isDied;
this.entity.Move.linearVelocity = cc.Vec2.ZERO;
};
e.prototype.actorName = function() {
return "远古之树";
};
e.prototype.onColliderEnter = function(t, e) {
e.tag == g.default.TAG.BOSS_HIT && (e.id == this.hand01.collider.id ? this.hand01.onColliderEnter(t, e) : this.hand02.onColliderEnter(t, e));
};
n([ v(p.default) ], e.prototype, "hand01", void 0);
n([ v(p.default) ], e.prototype, "hand02", void 0);
n([ v(cc.Node) ], e.prototype, "flower01", void 0);
n([ v(cc.Node) ], e.prototype, "flower02", void 0);
return n([ m ], e);
}(r.default);
i.default = E;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/FromData": "FromData",
"../logic/Achievement": "Achievement",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../manager/StatusManager": "StatusManager",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/NextStep": "NextStep",
"./Boss": "Boss",
"./BossAttackCollider": "BossAttackCollider"
} ],
DungeonStyleData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6e0bc4Ume5FZZHLhQzz4NXv", "DungeonStyleData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function(t, e, i, o, a, n, r) {
this.background = t;
this.topwall = e;
this.doorframe = a;
this.sidewall = i;
this.door = o;
this.bg02color = n;
this.floor = r;
};
cc._RF.pop();
}, {} ],
DungeonStyleManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "96118QtbixO743MdRQKBctE", "DungeonStyleManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../logic/Dungeon"), l = t("../data/DungeonStyleData"), c = t("../ui/ParallaxBackground"), u = t("../utils/IndexZ"), p = t("./BaseManager"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.background01 = null;
e.floor = null;
e.parallaxBackground = null;
e.darksides = "darksides";
return e;
}
e.prototype.clear = function() {};
e.prototype.runBackgroundAnim = function(t) {
if (this.background01) {
var e = r.default.spriteFrameRes(t), i = r.default.spriteFrameRes(t + "1");
i || (i = r.default.spriteFrameRes(t));
if (e) {
this.background01.stopAllActions();
var o = this.background01.getComponent(cc.Sprite);
cc.tween(this.background01).repeatForever(cc.tween().delay(.4).call(function() {
o.spriteFrame = e;
}).delay(.4).call(function() {
o.spriteFrame = i;
})).start();
}
}
};
e.prototype.addDecorations = function() {
switch (r.default.chapterIndex) {
case r.default.CHAPTER00:
this.styleData = new l.default("pipeline", "restwall1", "restsides", "restdoor", "restdoorframe", "#000000", "tile_lab001");
break;

case r.default.CHAPTER01:
this.styleData = new l.default("sea", "shipwall1", "shipsides", "shipdoor", "shipdoorframe", "#000000", "tile_deck001");
break;

case r.default.CHAPTER02:
this.styleData = new l.default("grass", "junglewall1", "junglesides", "jungledoor", "jungledoorframe", "#000000", "tile_dirt001");
break;

case r.default.CHAPTER03:
this.styleData = new l.default("sandsea", "pyramidwall1", "pyramidsides", "pyramiddoor", "pyramiddoorframe", "#000000", "tile003");
break;

case r.default.CHAPTER04:
case r.default.CHAPTER05:
this.styleData = new l.default("magmasea", "dungeonwall1", "dungeonsides", "dungeondoor", "dungeondoorframe", "#000000", "tile004");
break;

case r.default.CHAPTER099:
this.styleData = new l.default("pipeline", "restwall1", "restsides", "restdoor", "restdoorframe", "#000000", "tile_lab001");
}
this.styleData && (this.background01.getComponent(cc.Sprite).spriteFrame = null);
};
e.prototype.addDecorateBg = function() {
var t = cc.instantiate(this.parallaxBackground);
t.parent = this.node;
var e = s.default.getPosInMap(cc.v3(s.default.WIDTH_SIZE / 2, s.default.HEIGHT_SIZE / 2));
t.setPosition(e);
t.zIndex = u.default.BACKGROUND;
var i = t.getComponent(c.default);
i.background.width = s.default.TILE_SIZE / 2 * s.default.WIDTH_SIZE;
i.background.height = s.default.TILE_SIZE / 2 * (s.default.HEIGHT_SIZE + 4);
i.background.color = cc.Color.WHITE.fromHEX(this.styleData.bg02color);
i.init();
};
e.prototype.addFloor = function() {
var t = r.default.worldLoader.getCurrentLevelData(), e = r.default.mapManager.getCurrentRoom(), i = s.default.getPosInMap(cc.v3(-4, -4));
if (0 == e.x) {
i = s.default.getPosInMap(cc.v3(0, -4));
0 == e.y ? i = s.default.getPosInMap(cc.v3(0, 0)) : e.y == t.height - 1 && (i = s.default.getPosInMap(cc.v3(0, -8)));
} else if (e.x == t.width - 1) {
i = s.default.getPosInMap(cc.v3(-8, -4));
0 == e.y ? i = s.default.getPosInMap(cc.v3(-8, -8)) : e.y == t.height - 1 && (i = s.default.getPosInMap(cc.v3(-8, 0)));
}
if (0 == e.x) {
i = s.default.getPosInMap(cc.v3(0, -4));
0 == e.y ? i = s.default.getPosInMap(cc.v3(0, 0)) : e.y == t.height - 1 && (i = s.default.getPosInMap(cc.v3(0, -8)));
} else if (e.x == t.width - 1) {
i = s.default.getPosInMap(cc.v3(-8, -4));
0 == e.y ? i = s.default.getPosInMap(cc.v3(-8, -8)) : e.y == t.height - 1 && (i = s.default.getPosInMap(cc.v3(-8, 0)));
}
if (0 == e.y) {
i = s.default.getPosInMap(cc.v3(-4, 0));
0 == e.x ? i = s.default.getPosInMap(cc.v3(0, 0)) : e.x == t.width - 1 && (i = s.default.getPosInMap(cc.v3(-8, -8)));
} else if (e.y == t.height - 1) {
i = s.default.getPosInMap(cc.v3(-4, -8));
0 == e.x ? i = s.default.getPosInMap(cc.v3(0, -8)) : e.x == t.width - 1 && (i = s.default.getPosInMap(cc.v3(-8, 0)));
}
this.floor.width = s.default.TILE_SIZE / 4 * (s.default.WIDTH_SIZE + 12);
this.floor.height = s.default.TILE_SIZE / 4 * (s.default.HEIGHT_SIZE + 12);
this.floor.position = cc.v3(i.x - s.default.TILE_SIZE / 2, i.y - s.default.TILE_SIZE / 2);
this.floor.zIndex = u.default.BACKGROUNDFLOOR;
this.floor.getComponent(cc.Sprite).spriteFrame = r.default.spriteFrameRes(t.floorRes + "001");
};
n([ f(cc.Node) ], e.prototype, "background01", void 0);
n([ f(cc.Node) ], e.prototype, "floor", void 0);
n([ f(cc.Prefab) ], e.prototype, "parallaxBackground", void 0);
return n([ d ], e);
}(p.default);
i.default = g;
cc._RF.pop();
}, {
"../data/DungeonStyleData": "DungeonStyleData",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../ui/ParallaxBackground": "ParallaxBackground",
"../utils/IndexZ": "IndexZ",
"./BaseManager": "BaseManager"
} ],
Dungeon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6dd52klzMJJgafrk2kw2YVi", "Dungeon");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Player"), s = t("./Tile"), l = t("./Logic"), c = t("./EventHelper"), u = t("../manager/MonsterManager"), p = t("../manager/EquipmentManager"), h = t("../manager/DungeonStyleManager"), d = t("../utils/AudioPlayer"), f = t("../rect/RoomType"), g = t("../utils/IndexZ"), y = t("../manager/BuildingManager"), m = t("../manager/NonPlayerManager"), v = t("../manager/ItemManager"), E = t("../utils/Utils"), _ = t("../manager/LightManager"), T = t("../data/DamageData"), D = t("../ecs/system/GameWorldSystem"), S = t("../utils/Random"), O = t("../manager/LoadingManager"), A = t("../ui/StatusIconList"), R = t("../ui/Dialogue"), C = t("./Controller"), P = t("../manager/WeatherManager"), L = t("../manager/EffectItemManager"), b = cc._decorator, I = b.ccclass, M = b.property, N = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.tile = null;
e.playerPrefab = null;
e.fog = null;
e.statusIconList = null;
e.mainCamera = null;
e.mapData = [];
e.tilesmap = new Array();
e.floorCombineMap = new Map();
e.floorIndexMap = new Array();
e.waterIndexMap = new Array();
e.timeDelay = 0;
e.checkTimeDelay = 0;
e.player = null;
e.monsterManager = null;
e.nonPlayerManager = null;
e.equipmentManager = null;
e.dungeonStyleManager = null;
e.itemManager = null;
e.buildingManager = null;
e.lightManager = null;
e.weatherManager = null;
e.effectItemManager = null;
e.CameraZoom = i.DEFAULT_ZOOM;
e.needZoomIn = !1;
e.isInitFinish = !1;
e.isClear = !1;
e.isComplete = !1;
e.currentPos = cc.v3(0, 0);
e.isDisappeared = !1;
e.cameraTargetActor = null;
e.rootSystem = null;
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.anim = this.getComponent(cc.Animation);
c.EventHelper.on(c.EventHelper.PLAYER_MOVE, function(e) {
t.playerAction(e.dir, e.pos, e.dt);
});
c.EventHelper.on(c.EventHelper.DUNGEON_SETEQUIPMENT, function(e) {
t.node && t.addEquipment(e.res, e.pos, e.equipmentData);
});
c.EventHelper.on(c.EventHelper.DUNGEON_ADD_COIN, function(e) {
t.addCoin(e.pos, e.count, e.isReal);
});
c.EventHelper.on(c.EventHelper.DUNGEON_ADD_OILGOLD, function(e) {
t.addOilGold(e.pos, e.count);
});
c.EventHelper.on(c.EventHelper.DUNGEON_ADD_ITEM, function(e) {
t.node && t.addItem(e.pos, e.res, e.count);
});
c.EventHelper.on(c.EventHelper.DUNGEON_ADD_FALLSTONE, function(e) {
t.node && t.addFallStone(e.pos, e.isAuto);
});
c.EventHelper.on(c.EventHelper.DUNGEON_ADD_FLOORPAPER, function(e) {
t.node && t.addFloorPaper(e.fromPos, e.targetPos, e.count);
});
c.EventHelper.on(c.EventHelper.DUNGEON_ADD_LIGHTENINGFALL, function(e) {
t.node && t.addLighteningFall(e.pos, !1, !1, e.showArea, e.damage);
});
c.EventHelper.on(c.EventHelper.DUNGEON_SHAKEONCE, function() {
t.anim && t.anim.play("DungeonShakeOnce");
});
c.EventHelper.on(c.EventHelper.BOSS_ADDSLIME, function(e) {
t.addBossSlime(e.slimeType, e.posIndex);
});
c.EventHelper.on(c.EventHelper.TEST_SHOW_NODE_COUNT, function() {
t.logNodeCount();
});
c.EventHelper.on(c.EventHelper.DUNGEON_DISAPPEAR, function() {
if (t.node) {
t.isDisappeared = !0;
for (var e = 0, i = t.buildingManager.buildingList; e < i.length; e++) {
var o = i[e];
o && o.node && o.disappear();
}
for (var a = 0, n = t.tilesmap; a < n.length; a++) for (var r = 0, s = n[a]; r < s.length; r++) {
var l = s[r];
l && l.node && l.disappear();
}
cc.tween(t.dungeonStyleManager.floor).to(.5 + S.default.rand(), {
opacity: 0
}).start();
}
});
this.monsterManager = this.getComponent(u.default);
this.nonPlayerManager = this.getComponent(m.default);
this.equipmentManager = this.getComponent(p.default);
this.itemManager = this.getComponent(v.default);
this.dungeonStyleManager = this.getComponent(h.default);
this.buildingManager = this.getComponent(y.default);
this.lightManager = this.getComponent(_.default);
this.weatherManager = this.getComponent(P.default);
this.effectItemManager = this.getComponent(L.default);
this.reset();
};
e.prototype.reset = function() {
var t = this;
l.default.lastBgmIndex = l.default.chapterIndex == l.default.CHAPTER099 ? 1 : 0;
d.default.stopAllEffect();
d.default.play(d.default.PLAY_BG, !0);
this.monsterManager.clear();
this.nonPlayerManager.clear();
this.equipmentManager.clear();
this.itemManager.clear();
this.dungeonStyleManager.clear();
this.buildingManager.clear();
this.lightManager.clear();
this.weatherManager.clear();
this.fog.zIndex = g.default.FOG;
this.fog.scale = .6;
this.fog.opacity = 255;
this.lightManager.shadow.node.zIndex = g.default.SHADOW;
this.lightManager.shadow1.node.zIndex = g.default.SHADOW;
this.lightManager.shadowRay.node.zIndex = g.default.SHADOW + 10;
this.currentPos = cc.v3(l.default.mapManager.getCurrentRoom().x, l.default.mapManager.getCurrentRoom().y);
var e = l.default.mapManager.getCurrentMapStringArray(), o = l.default.mapManager.getCurrentFloorMapStringArray();
this.mapData = e;
var a = l.default.worldLoader.getCurrentLevelData(), n = a.getExitList(), s = a.getEquipItemList();
l.default.changeDungeonSize();
this.dungeonStyleManager.addDecorations();
for (var c = 0, u = this.tilesmap; c < u.length; c++) {
var p = u[c];
E.default.clearComponentArray(p);
}
var h = this.node.getChildByName("colliderdebug");
h.zIndex = g.default.UI;
var m = this.node.convertToWorldSpaceAR(cc.v3(-5 * i.TILE_SIZE, -5 * i.TILE_SIZE)), v = this.node.convertToWorldSpaceAR(cc.v3((i.WIDTH_SIZE + 10) * i.TILE_SIZE, (i.WIDTH_SIZE + 10) * i.TILE_SIZE)), _ = cc.rect(m.x, m.y, v.x - m.x, v.y - m.y);
this.rootSystem = new D.default(_, h.getComponent(cc.Graphics));
this.rootSystem.init();
this.tilesmap = new Array();
this.floorIndexMap = new Array();
this.waterIndexMap = new Array();
this.addItemListOnGround();
this.addEquipmentListOnGround();
l.default.getBuildings(y.default.AIREXIT, function() {
l.default.getBuildings(y.default.WALL, function() {
l.default.getBuildings(y.default.DOOR, function() {
t.buildingManager.addAirExit(e);
for (var r = 0; r < i.WIDTH_SIZE; r++) {
t.tilesmap[r] = new Array(r);
for (var c = 0; c < i.HEIGHT_SIZE; c++) {
t.addTiles(o, cc.v3(r, c), cc.v3(r, c), a, !1);
t.buildingManager.addBuildingsFromMap(t, e, e[r][c], cc.v3(r, c), a, n, s);
l.default.mapManager.isCurrentRoomStateClear() && !l.default.mapManager.getCurrentRoomType().isEqual(f.default.TEST_ROOM) || t.itemManager.addItemFromMap(e[r][c], cc.v3(r, c));
(!l.default.mapManager.isCurrentRoomStateClear() || l.default.mapManager.getCurrentRoomType().isEqual(f.default.TEST_ROOM) || l.default.mapManager.getCurrentRoomType().isEqual(f.default.START_ROOM)) && t.monsterManager.addMonstersAndBossFromMap(t, e[r][c], cc.v3(r, c));
t.nonPlayerManager.addNonPlayerFromMap(t, e[r][c], cc.v3(r, c), 0);
}
}
for (var u = 0, p = [ cc.v3(-1, -1, 4), cc.v3(-1, 0, 2), cc.v3(-1, 1, 6), cc.v3(0, -1, 0), cc.v3(0, 1, 1), cc.v3(1, -1, 5), cc.v3(1, 0, 3), cc.v3(1, 1, 7) ]; u < p.length; u++) {
var h = p[u];
t.addBuildingsFromSideMap(h);
}
l.default.mapManager.isCurrentRoomStateClear() && !l.default.mapManager.getCurrentRoom().isReborn || !f.default.isMonsterGenerateRoom(l.default.mapManager.getCurrentRoomType()) || l.default.isTour || t.monsterManager.addRandomMonsters(t, l.default.mapManager.getCurrentRoom().reborn);
var d = new Array().concat(l.default.nonPlayerList);
t.scheduleOnce(function() {
t.nonPlayerManager.addNonPlayerListFromSave(t, d, t.player.node.position, t.player.entity.Transform.z);
}, 1);
t.setDoors(!0, !0);
cc.log("load finished");
t.scheduleOnce(function() {
t.isInitFinish = !0;
cc.tween(t.fog).to(3, {
scale: 5
}).start();
var e = t.fog.getChildByName("sprite").getChildByName("blackcenter");
cc.tween(e).delay(.1).to(.5, {
opacity: 0
}).call(function() {
l.default.totalTime < 5 && l.default.CHAPTER00 == l.default.chapterIndex && R.default.play(C.default.isMouseMode() ? "course000" : "course001");
}).start();
t.logNodeCount();
t.addOilGoldOnGround();
}, .3);
});
});
});
(a.isOutside && !l.default.mapManager.getCurrentRoom().isOutside || !a.isOutside && l.default.mapManager.getCurrentRoom().isOutside) && this.weatherManager.addRain(cc.v3(Math.floor(i.WIDTH_SIZE / 2), Math.floor(i.WIDTH_SIZE / 2)), 0);
this.player = cc.instantiate(this.playerPrefab).getComponent(r.default);
this.player.statusIconList = this.statusIconList;
this.player.node.parent = this.node;
this.cameraTargetActor = this.player;
this.fog.setPosition(this.player.node.position.clone());
};
e.prototype.addTiles = function(t, e, o, a, n) {
var r = t[e.x][e.y], l = E.default.hasThe(r, "~");
if (E.default.hasThe(r, "*") || E.default.hasThe(r, "~")) {
parseInt(r.substring(3));
var c = parseInt(r.substring(1, 3));
if (this.floorCombineMap.has("i" + e.x + "j" + e.y)) n || (this.tilesmap[o.x][o.y] = this.floorCombineMap.get("i" + e.x + "j" + e.y)); else {
var u = cc.instantiate(this.tile);
u.parent = this.node;
var p = i.getPosInMap(o.clone());
u.position = cc.v3(p.x - i.TILE_SIZE / 2, p.y - i.TILE_SIZE / 2);
u.zIndex = (c > 0 ? g.default.FLOOR : g.default.BASE) + 10 * (i.HEIGHT_SIZE - o.y);
var h = u.getComponent(s.default);
h.isAutoShow = !1;
h.tileType = r;
h.isWater = l;
h.resName = a.getFloorRes(c);
n || (this.tilesmap[o.x][o.y] = h);
for (var d = 0, f = 0, y = e.x + 1; y < t.length && r == t[y][e.y]; y++) {
this.floorCombineMap.set("i" + y + "j" + e.y, h);
d++;
}
for (var m = e.y + 1; m < t[e.x].length && r == t[e.x][m]; m++) {
for (y = 0; y < d + 2; y++) e.x + y < t.length && r == t[e.x + y][m] && this.floorCombineMap.set("i" + (e.x + y) + "j" + m, h);
f++;
}
h.w = d + 1;
h.h = f + 1;
}
n || (l ? this.waterIndexMap.push(o.clone()) : this.floorIndexMap.push(o.clone()));
}
};
e.prototype.logNodeCount = function() {
if (this.node) {
for (var t = {}, e = "childrenCount:" + this.node.childrenCount + " children:\n", i = 0, o = this.node.children; i < o.length; i++) {
var a = o[i];
t[a.name] ? t[a.name]++ : t[a.name] = 1;
}
for (var n in t) e += n + "(" + t[n] + ")\n";
console.log(e);
}
};
e.prototype.addBuildingsFromSideMap = function(t) {
var e = l.default.mapManager.getCurrentSideMapStringArray(t), o = l.default.mapManager.getCurrentSideFloorMapStringArray(t), a = l.default.worldLoader.getCurrentLevelData();
if (e[0] && o[0]) {
this.floorCombineMap.clear();
for (var n = 0; n < i.WIDTH_SIZE; n++) for (var r = 0; r < i.HEIGHT_SIZE; r++) {
var s = !1;
switch (t.z) {
case 0:
s = r > i.HEIGHT_SIZE - 4;
break;

case 1:
s = r < 4;
break;

case 2:
s = n > i.WIDTH_SIZE - 4;
break;

case 3:
s = n < 4;
break;

case 4:
s = n > i.WIDTH_SIZE - 4 && r > i.HEIGHT_SIZE - 4;
break;

case 5:
s = n < 4 && r > i.HEIGHT_SIZE - 4;
break;

case 6:
s = n > i.WIDTH_SIZE - 4 && r < 4;
break;

case 7:
s = n < 4 && r < 4;
}
if (s) {
var c = cc.v3(n + i.WIDTH_SIZE * t.x, r + i.HEIGHT_SIZE * t.y);
this.addTiles(o, cc.v3(n, r), c.clone(), a, !0);
this.buildingManager.addBuildingsFromSideMap(e[n][r], e, c.clone(), a);
}
}
}
};
e.prototype.darkAfterKill = function() {
cc.tween(this.fog).to(1, {
scale: .6
}).start();
var t = this.fog.getChildByName("sprite").getChildByName("blackcenter");
cc.tween(t).delay(.2).to(1, {
opacity: 255
}).start();
};
e.isFirstEqual = function(t, e) {
return !!t && t[0] == e;
};
e.prototype.addItem = function(t, e, i, o) {
if (this.itemManager) {
t || (t = this.player.node.position.clone());
this.itemManager.addItem(t, e, i, o);
}
};
e.prototype.addFallStone = function(t, e, o) {
this.buildingManager.addFallStone(i.getIndexInMap(t), e, o);
};
e.prototype.addLighteningFall = function(t, e, i, o, a) {
this.buildingManager && this.buildingManager.addLighteningFall(t, e, i, o, a);
};
e.prototype.addCoin = function(t, e, i) {
this.itemManager && this.itemManager.getValueCoin(e, t, this.node, i);
};
e.prototype.addOilGold = function(t, e) {
this.itemManager && this.itemManager.getValueOilGold(e, t, this.node);
};
e.prototype.addEquipmentListOnGround = function() {
var t = l.default.mapManager.getCurrentMapEquipments();
if (t) for (var e = 0, o = t; e < o.length; e++) {
var a = o[e];
this.equipmentManager && this.equipmentManager.getEquipment(a.img, i.getPosInMap(a.pos), this.node, a, null, null).data;
}
};
e.prototype.addItemListOnGround = function() {
var t = l.default.mapManager.getCurrentMapItems();
l.default.mapManager.setCurrentItemsArr(new Array());
if (t) for (var e = 0, o = t; e < o.length; e++) {
var a = o[e];
a.isTaken || this.addItem(i.getPosInMap(a.pos), a.resName, a.count);
}
};
e.prototype.addOilGoldOnGround = function() {
this.scheduleOnce(function() {
var t = l.default.groundOilGoldData.clone();
if (t.chapter == l.default.chapterIndex && t.level == l.default.level && t.x == l.default.mapManager.rectDungeon.currentPos.x && t.y == l.default.mapManager.rectDungeon.currentPos.y && t.value > 0) {
c.EventHelper.emit(c.EventHelper.HUD_ADD_OILGOLD, {
count: t.value
});
l.default.saveGroundOilGold(0);
c.EventHelper.emit(c.EventHelper.HUD_OILGOLD_RECOVERY_SHOW);
}
}, 1);
};
e.prototype.addEquipment = function(t, e, i, o, a) {
if (this.equipmentManager) {
e || (e = this.player.node.position.clone());
var n = this.equipmentManager.getEquipment(t, e, this.node, i, o, a).data;
if (a) return;
if (!(n.test > 0 && (l.default.chapterIndex == l.default.CHAPTER099 || l.default.chapterIndex == l.default.CHAPTER00 && 0 == l.default.level))) {
var r = l.default.mapManager.getCurrentMapEquipments();
if (r) r.push(n); else {
(r = new Array()).push(n);
l.default.mapManager.setCurrentEquipmentsArr(r);
}
}
}
};
e.prototype.addFloorPaper = function(t, e, i) {
for (var o = 0; o < i; o++) this.effectItemManager && this.effectItemManager.addPaper(t, e);
};
e.prototype.addHitBlood = function(t, e, i) {
for (var o = 0; o < i; o++) this.effectItemManager && this.effectItemManager.addHitBlood(t, e);
};
e.prototype.addBossSlime = function(t, e) {
this.monsterManager && this.monsterManager.addBossSlime(t, e, this);
};
e.prototype.shakeForKraken = function() {
var t = this;
this.CameraZoom = i.DEFAULT_ZOOM_MIN;
this.needZoomIn = !0;
this.anim.playAdditive("DungeonShakeOnce");
this.scheduleOnce(function() {
t.anim.playAdditive("DungeonShakeOnce");
}, 1);
this.scheduleOnce(function() {
t.anim.playAdditive("DungeonShakeOnce");
}, 2);
};
e.getPosInMap = function(t) {
var e = i.MAPX + t.x * i.TILE_SIZE, o = i.MAPY + t.y * i.TILE_SIZE;
return cc.v3(e, o);
};
e.getIndexInMap = function(t, e) {
var o = (t.x - i.MAPX) / i.TILE_SIZE, a = (t.y - i.MAPY) / i.TILE_SIZE;
o = Math.round(o);
a = Math.round(a);
if (!e) {
o < 0 && (o = 0);
o >= i.WIDTH_SIZE && (o = i.WIDTH_SIZE - 1);
a < 0 && (a = 0);
a >= i.HEIGHT_SIZE && (a = i.HEIGHT_SIZE - 1);
}
return cc.v3(o, a);
};
e.fixOuterMap = function(t) {
var e = (t.x - i.MAPX) / i.TILE_SIZE, o = (t.y - i.MAPY) / i.TILE_SIZE;
e = Math.round(e);
o = Math.round(o);
var a = !1;
if (e < 0) {
e = 0;
a = !0;
}
if (e >= i.WIDTH_SIZE) {
e = i.WIDTH_SIZE - 1;
a = !0;
}
if (o < 0) {
o = 0;
a = !0;
}
if (o >= i.HEIGHT_SIZE) {
o = i.HEIGHT_SIZE - 1;
a = !0;
}
return a ? i.getPosInMap(cc.v3(e, o)) : t;
};
e.prototype.start = function() {
var t = this;
this.scheduleOnce(function() {
c.EventHelper.emit(c.EventHelper.CHANGE_MINIMAP, {
x: t.currentPos.x,
y: t.currentPos.y
});
t.isInitFinish && !l.default.isGamePause && !t.isDisappeared && O.default.allResourceDone() && t.checkRoomClear();
}, .1);
};
e.prototype.breakTile = function(t) {
var e = this.tilesmap[t.x][t.y];
e && !e.isBroken && e.breakTile();
};
e.prototype.playerAction = function(t, e, i) {
this.player && this.player.playerAction(t, e, i, this);
};
e.prototype.getMonsterAliveNum = function() {
for (var t = 0, e = 0, i = this.monsterManager.monsterList; e < i.length; e++) {
var o = i[e];
(!o || !o.node || o.sc.isDied || o.data.isTest > 0) && t++;
}
return this.monsterManager.monsterList.length - t;
};
e.prototype.checkRoomClear = function() {
var t = this.getMonsterAliveNum();
this.isClear = t <= 0;
if (this.isClear && this.monsterManager.bossList.length > 0) {
for (var e = 0, i = this.monsterManager.bossList; e < i.length; e++) i[e].sc.isDied && t++;
this.isClear = t >= this.monsterManager.bossList.length;
}
for (var o = 0, a = this.buildingManager.monsterGeneratorList; o < a.length; o++) {
var n = a[o];
if (!n.addFinish) {
this.isClear && n.open();
this.isClear = !1;
}
}
for (var r = 0, s = this.buildingManager.footboards; r < s.length; r++) {
var u = s[r];
u.isOpen || u.hasActive || (this.isClear = !1);
}
l.default.mapManager.getCurrentRoomType().isEqual(f.default.TEST_ROOM) && (this.isClear = !0);
this.setDoors(this.isClear);
if (this.isClear) {
if (this.monsterManager.isRoomInitWithEnemy && l.default.mapManager.getCurrentRoomType().isNotEqual(f.default.TEST_ROOM)) {
c.EventHelper.emit(c.EventHelper.HUD_COMPLETE_SHOW, {
map: this.buildingManager.getReachDir()
});
if (!this.isComplete && this.player && this.player.data && this.player.data.StatusTotalData.clearHealth > 0) {
this.isComplete = !0;
this.player.takeDamage(new T.default(-this.player.data.StatusTotalData.clearHealth));
}
}
this.buildingManager.savePointS && this.buildingManager.savePointS.open();
l.default.mapManager.setRoomClear(this.currentPos.x, this.currentPos.y);
}
};
e.prototype.setDoors = function(t, e) {
this.buildingManager && this.buildingManager.setDoors(t, e);
};
e.prototype.checkPlayerPos = function(t) {
if (this.tilesmap && this.player && this.node) {
var e = this.player.node.position.clone();
this.player.entity && (e.y += this.player.entity.Transform.z);
this.fog.setPosition(this.lerp(this.fog.position, e, 3 * t));
var o = i.getIndexInMap(this.player.node.position);
c.EventHelper.emit(c.EventHelper.CHANGE_MINIMAP, {
x: o.x,
y: o.y
});
if (this.tilesmap[o.x] && this.tilesmap[o.x][o.y]) {
var a = this.tilesmap[o.x][o.y];
a && a.isBroken && this.player.fall();
a && a.isAutoShow && this.breakTile(o);
this.player.isInWaterTile = this.isActorPosInWater(this.player);
}
}
};
e.prototype.isActorPosInWater = function(t) {
if (!(this.waterIndexMap.length < 1)) {
if (!this.tilesmap) return !1;
var e = i.getIndexInMap(t.node.position);
if (!this.tilesmap[e.x] || !this.tilesmap[e.x][e.y]) return !1;
var o = this.tilesmap[e.x][e.y], a = t.node.position, n = t.node.width, r = t.node.width;
return o.isWater && o.containsRect(cc.rect(a.x - n / 2, a.y - r / 2, n, r));
}
};
e.prototype.lerp = function(t, e, i) {
var o = cc.v3(0, 0), a = t.x, n = t.y;
o.x = a + (e.x - a) * i;
o.y = n + (e.y - n) * i;
return o;
};
e.prototype.checkMonstersPos = function() {
for (var t = 0, e = this.monsterManager.monsterList; t < e.length; t++) {
var i = e[t];
if (i && i.node && i.node.active && i.sc.isDied) return;
}
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .016) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 1) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
if (this.isInitFinish && !l.default.isGamePause && !this.isDisappeared && O.default.allResourceDone()) {
if (this.isTimeDelay(t)) {
this.checkPlayerPos(t);
this.monsterManager.updateLogic(t);
this.nonPlayerManager.updateLogic(t);
this.buildingManager.updateLogic(t, this.player);
this.equipmentManager.updateLogic(t, this.player);
this.itemManager.updateLogic(t, this.player);
this.weatherManager.updateLogic(t, this.player);
}
this.isCheckTimeDelay(t) && this.checkRoomClear();
}
};
e.prototype.lateUpdate = function(t) {
this.isInitFinish && !l.default.isGamePause && !this.isDisappeared && O.default.allResourceDone() && this.rootSystem.execute(t);
};
var i;
e.WIDTH_SIZE = 7;
e.HEIGHT_SIZE = 7;
e.MAPX = 64;
e.MAPY = 64;
e.TILE_SIZE = 128;
e.DEFAULT_ZOOM_MAX = 2;
e.DEFAULT_ZOOM_MIN = .6;
e.DEFAULT_ZOOM = 1;
n([ M(cc.Prefab) ], e.prototype, "tile", void 0);
n([ M(cc.Prefab) ], e.prototype, "playerPrefab", void 0);
n([ M(cc.Node) ], e.prototype, "fog", void 0);
n([ M(A.default) ], e.prototype, "statusIconList", void 0);
n([ M(cc.Camera) ], e.prototype, "mainCamera", void 0);
return i = n([ I ], e);
}(cc.Component);
i.default = N;
cc._RF.pop();
}, {
"../data/DamageData": "DamageData",
"../ecs/system/GameWorldSystem": "GameWorldSystem",
"../manager/BuildingManager": "BuildingManager",
"../manager/DungeonStyleManager": "DungeonStyleManager",
"../manager/EffectItemManager": "EffectItemManager",
"../manager/EquipmentManager": "EquipmentManager",
"../manager/ItemManager": "ItemManager",
"../manager/LightManager": "LightManager",
"../manager/LoadingManager": "LoadingManager",
"../manager/MonsterManager": "MonsterManager",
"../manager/NonPlayerManager": "NonPlayerManager",
"../manager/WeatherManager": "WeatherManager",
"../rect/RoomType": "RoomType",
"../ui/Dialogue": "Dialogue",
"../ui/StatusIconList": "StatusIconList",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/Random": "Random",
"../utils/Utils": "Utils",
"./Controller": "Controller",
"./EventHelper": "EventHelper",
"./Logic": "Logic",
"./Player": "Player",
"./Tile": "Tile"
} ],
ECS: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "01c10Dxz45KbYQrKeyNy/kg", "ECS");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__spreadArrays || function() {
for (var t = 0, e = 0, i = arguments.length; e < i; e++) t += arguments[e].length;
var o = Array(t), a = 0;
for (e = 0; e < i; e++) for (var n = arguments[e], r = 0, s = n.length; r < s; r++, 
a++) o[a] = n[r];
return o;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.ecs = void 0;
(function(t) {
var e = function() {
function t() {}
t.tid = -1;
t.matcher = null;
return t;
}();
t.IComponent = e;
var i = new Map(), o = 0, r = [], s = new Map(), l = new Map();
t.register = function(t) {
return function(e) {
if (-1 !== e.tid) throw new Error("重复注册组件： " + t + ".");
e.tid = o++;
e.compName = t;
r.push(e);
i.set(e.tid, []);
s.set(e.tid, []);
if (e.matcher) {
var a = e.matcher, n = a.clone();
a.excludeOf(e);
n.allOf(e);
h.set(a.mid, e);
d.set(n.mid, e);
E(a);
E(n);
}
};
};
t.registerTag = function() {
return function(t) {
var e = o;
for (var a in t) {
e = o++;
t[a] = e;
r.push(e);
i.set(e, []);
s.set(e, []);
l.set(e, a);
}
};
};
var c = [], u = new Map(), p = new Map(), h = new Map(), d = new Map(), f = 1;
function g() {
var t = c.pop();
t || ((t = new S()).eid = f++);
u.set(t.eid, t);
return t;
}
t.createEntity = g;
function y(t) {
return i.get(t.tid).pop() || new r[t.tid]();
}
function m(t) {
return g().add(t);
}
t.createEntityWithComp = m;
t.createEntityWithComps = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
for (var i = g(), o = 0, a = t; o < a.length; o++) {
var n = a[o];
"number" == typeof n ? i.addTag(n) : i.add(n);
}
return i;
};
function v(t) {
if (u.has(t.eid)) {
c.push(t);
u.delete(t.eid);
} else console.warn("试图销毁不存在的实体！");
}
function E(t) {
var e = p.get(t.mid);
if (!e) {
e = new O(t);
p.set(t.mid, e);
for (var i = t.indices, o = 0, a = i.length; o < a; o++) s.get(i[o]).push(e.onComponentAddOrRemove.bind(e));
}
return e;
}
t.createGroup = E;
t.query = function(t) {
var e = p.get(t.mid);
if (!e) {
e = E(t);
u.forEach(e.onComponentAddOrRemove, e);
}
return e.matchEntities;
};
t.clear = function() {
u.forEach(function(t) {
t.destroy();
});
p.forEach(function(t) {
t.clear();
});
s.forEach(function(t) {
t.length = 0;
});
u.clear();
p.clear();
};
function _(t, e) {
for (var i = s.get(e), o = i.length - 1; o >= 0; o--) i[o](t);
T.has(e) && T.delete(e);
}
t.getEntityByEid = function(t) {
return u.get(t);
};
t.activeEntityCount = function() {
return u.size;
};
t.allOf = function() {
for (var t, e = [], i = 0; i < arguments.length; i++) e[i] = arguments[i];
return (t = new b()).allOf.apply(t, e);
};
t.anyOf = function() {
for (var t, e = [], i = 0; i < arguments.length; i++) e[i] = arguments[i];
return (t = new b()).anyOf.apply(t, e);
};
t.onlyOf = function() {
for (var t, e = [], i = 0; i < arguments.length; i++) e[i] = arguments[i];
return (t = new b()).onlyOf.apply(t, e);
};
t.excludeOf = function() {
for (var t, e = [], i = 0; i < arguments.length; i++) e[i] = arguments[i];
return (t = new b()).excludeOf.apply(t, e);
};
var T = new Map();
t.getSingleton = function(t) {
if (!T.has(t.tid)) {
var e = m(t);
T.set(t.tid, e);
}
return T.get(t.tid);
};
var D = function() {
function t() {
this.size = 0;
var t = Math.ceil(o / 31);
this.mask = new Uint32Array(t);
this.size = t;
}
t.prototype.set = function(t) {
this.mask[t / 31 >>> 0] |= 1 << t % 31;
};
t.prototype.delete = function(t) {
this.mask[t / 31 >>> 0] &= ~(1 << t % 31);
};
t.prototype.has = function(t) {
return !!(this.mask[t / 31 >>> 0] & 1 << t % 31);
};
t.prototype.or = function(t) {
for (var e = 0; e < this.size; e++) if (this.mask[e] & t.mask[e]) return !0;
return !1;
};
t.prototype.and = function(t) {
for (var e = 0; e < this.size; e++) if ((this.mask[e] & t.mask[e]) != this.mask[e]) return !1;
return !0;
};
t.prototype.clear = function() {
for (var t = 0; t < this.size; t++) this.mask[t] = 0;
};
return t;
}(), S = function() {
function t() {
this.eid = -1;
this.mask = new D();
this.compTid2Ctor = new Map();
}
t.prototype.add = function(t, e) {
void 0 === e && (e = !1);
var i = t.tid;
if (-1 === t.tid) throw Error("组件未注册！");
if (this.compTid2Ctor.has(i)) {
if (!e) {
console.log("已经存在组件：" + t.compName);
return this[t.compName];
}
this.remove(t);
}
this.mask.set(i);
var o = y(t);
this[t.compName] = o;
this.compTid2Ctor.set(i, t);
_(this, i);
o.ent = this;
return o;
};
t.prototype.addComponents = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
for (var i = 0, o = t; i < o.length; i++) {
var a = o[i];
"number" == typeof a ? this.addTag(a) : this.add(a);
}
};
t.prototype.get = function(t) {
return this[t.compName];
};
t.prototype.has = function(t) {
return this.compTid2Ctor.has(t.tid);
};
t.prototype.remove = function(t) {
var e = t.tid;
if (this.mask.has(e)) {
this[t.compName].reset();
this[t.compName].ent = null;
i.get(e).push(this[t.compName]);
this[t.compName] = null;
this.mask.delete(e);
_(this, e);
this.compTid2Ctor.delete(e);
}
};
t.prototype.addTag = function(t) {
if (!l.has(t)) throw Error("不存在的tag！");
this.mask.set(t);
this.compTid2Ctor.set(t, t);
this[l.get(t)] = t;
_(this, t);
return this;
};
t.prototype.hasTag = function(t) {
return this.mask.has(t);
};
t.prototype.removeTag = function(t) {
if (this.mask.has(t)) {
this.mask.delete(t);
this.compTid2Ctor.delete(t);
this[l.get(t)] = null;
_(this, t);
}
};
t.prototype._remove = function(t) {
"number" == typeof t ? this.removeTag(t) : this.remove(t);
};
t.prototype.destroy = function() {
this.compTid2Ctor.forEach(this._remove, this);
v(this);
};
return t;
}();
t.Entity = S;
var O = function() {
function t(t) {
this._matchEntities = new Map();
this._entitiesCache = null;
this.count = 0;
this._enteredEntities = null;
this._removedEntities = null;
this.matcher = t;
}
Object.defineProperty(t.prototype, "matchEntities", {
get: function() {
null === this._entitiesCache && (this._entitiesCache = Array.from(this._matchEntities.values()));
return this._entitiesCache;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "entity", {
get: function() {
return this.matchEntities[0];
},
enumerable: !1,
configurable: !0
});
t.prototype.onComponentAddOrRemove = function(t) {
if (this.matcher.isMatch(t)) {
this._matchEntities.set(t.eid, t);
this._entitiesCache = null;
this.count++;
if (this._enteredEntities) {
this._enteredEntities.set(t.eid, t);
this._removedEntities.delete(t.eid);
}
h.has(this.matcher.mid) && t.add(h.get(this.matcher.mid));
} else if (this._matchEntities.has(t.eid)) {
this._matchEntities.delete(t.eid);
this._entitiesCache = null;
this.count--;
if (this._enteredEntities) {
this._enteredEntities.delete(t.eid);
this._removedEntities.set(t.eid, t);
}
d.has(this.matcher.mid) && t.remove(d.get(this.matcher.mid));
}
};
t.prototype.watchEntityEnterAndRemove = function(t, e) {
this._enteredEntities = t;
this._removedEntities = e;
};
t.prototype.clear = function() {
var t, e;
this._matchEntities.clear();
this._entitiesCache = null;
this.count = 0;
null === (t = this._enteredEntities) || void 0 === t || t.clear();
null === (e = this._removedEntities) || void 0 === e || e.clear();
};
return t;
}();
t.Group = O;
var A = function() {
function t() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
this.mask = new D();
this.indices = [];
for (var i = -1, o = t.length, a = 0; a < o; a++) {
if (-1 == (i = "number" == typeof t[a] ? t[a] : t[a].tid)) throw Error("存在没有注册的组件！");
this.mask.set(i);
this.indices.indexOf(i) < 0 && this.indices.push(i);
}
o > 1 && this.indices.sort(function(t, e) {
return t - e;
});
}
t.prototype.toString = function() {
return this.indices.join("-");
};
return t;
}(), R = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.isMatch = function(t) {
return this.mask.or(t.mask);
};
e.prototype.getKey = function() {
return "anyOf:" + this.toString();
};
return e;
}(A), C = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.isMatch = function(t) {
return this.mask.and(t.mask);
};
e.prototype.getKey = function() {
return "allOf:" + this.toString();
};
return e;
}(A), P = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.getKey = function() {
return "excludeOf:" + this.toString();
};
e.prototype.isMatch = function(t) {
return !this.mask.or(t.mask);
};
return e;
}(A), L = 1, b = function() {
function t() {
this.rules = [];
this._indices = null;
this.mid = -1;
this._key = null;
this.mid = L++;
}
Object.defineProperty(t.prototype, "key", {
get: function() {
if (!this._key) {
for (var t = "", e = 0; e < this.rules.length; e++) {
t += this.rules[e].getKey();
e < this.rules.length - 1 && (t += " && ");
}
this._key = t;
}
return this._key;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "indices", {
get: function() {
var t = this;
if (null === this._indices) {
this._indices = [];
this.rules.forEach(function(e) {
Array.prototype.push.apply(t._indices, e.indices);
});
this.bindMatchMethod();
}
return this._indices;
},
enumerable: !1,
configurable: !0
});
t.prototype.anyOf = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
this.rules.push(new (R.bind.apply(R, n([ void 0 ], t)))());
return this;
};
t.prototype.allOf = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
this.rules.push(new (C.bind.apply(C, n([ void 0 ], t)))());
return this;
};
t.prototype.onlyOf = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
this.rules.push(new (C.bind.apply(C, n([ void 0 ], t)))());
for (var i = [], o = 0, a = r; o < a.length; o++) {
var s = a[o];
t.indexOf(s) < 0 && i.push(s);
}
this.rules.push(new (P.bind.apply(P, n([ void 0 ], i)))());
return this;
};
t.prototype.excludeOf = function() {
for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];
this.rules.push(new (P.bind.apply(P, n([ void 0 ], t)))());
return this;
};
t.prototype.bindMatchMethod = function() {
1 === this.rules.length ? this.isMatch = this.isMatch1 : 2 === this.rules.length ? this.isMatch = this.isMatch2 : this.isMatch = this.isMatchMore;
};
t.prototype.isMatch1 = function(t) {
return this.rules[0].isMatch(t);
};
t.prototype.isMatch2 = function(t) {
return this.rules[0].isMatch(t) && this.rules[1].isMatch(t);
};
t.prototype.isMatchMore = function(t) {
for (var e = 0, i = this.rules; e < i.length; e++) if (!i[e].isMatch(t)) return !1;
return !0;
};
t.prototype.clone = function() {
var e = new t();
e.mid = L++;
this.rules.forEach(function(t) {
return e.rules.push(t);
});
return e;
};
return t;
}(), I = function() {
function t() {
this.dt = 0;
this.enteredEntities = null;
this.removedEntities = null;
this.hasEntityEnter = !1;
this.hasEntityRemove = !1;
this.tmpExecute = null;
var t = Object.hasOwnProperty, e = Object.getPrototypeOf(this), i = t.call(e, "entityEnter"), o = t.call(e, "entityRemove"), a = t.call(e, "firstUpdate");
this.hasEntityEnter = i;
this.hasEntityRemove = o;
if (i || o) {
this.enteredEntities = new Map();
this.removedEntities = new Map();
this.execute = this.execute1;
this.group = E(this.filter());
this.group.watchEntityEnterAndRemove(this.enteredEntities, this.removedEntities);
} else {
this.execute = this.execute0;
this.group = E(this.filter());
}
if (a) {
this.tmpExecute = this.execute;
this.execute = this.updateOnce;
}
}
t.prototype.init = function() {};
t.prototype.onDestroy = function() {};
t.prototype.hasEntity = function() {
return this.group.count > 0;
};
t.prototype.updateOnce = function(t) {
if (0 !== this.group.count) {
this.dt = t;
if (this.enteredEntities.size > 0) {
this.entityEnter(Array.from(this.enteredEntities.values()));
this.enteredEntities.clear();
}
this.firstUpdate(this.group.matchEntities);
this.execute = this.tmpExecute;
this.execute(t);
this.tmpExecute = null;
}
};
t.prototype.execute0 = function(t) {
if (0 !== this.group.count) {
this.dt = t;
this.update(this.group.matchEntities);
}
};
t.prototype.execute1 = function(t) {
if (this.removedEntities.size > 0) {
this.hasEntityRemove && this.entityRemove(Array.from(this.removedEntities.values()));
this.removedEntities.clear();
}
if (0 !== this.group.count) {
this.dt = t;
if (this.enteredEntities.size > 0) {
this.hasEntityEnter && this.entityEnter(Array.from(this.enteredEntities.values()));
this.enteredEntities.clear();
}
this.update(this.group.matchEntities);
}
};
return t;
}();
t.ComblockSystem = I;
var M = function() {
function t() {
this.executeSystemFlows = [];
this.systemCnt = 0;
}
t.prototype.add = function(t) {
t instanceof N ? Array.prototype.push.apply(this.executeSystemFlows, t.comblockSystems) : this.executeSystemFlows.push(t);
this.systemCnt = this.executeSystemFlows.length;
return this;
};
t.prototype.init = function() {
this.executeSystemFlows.forEach(function(t) {
return t.init();
});
};
t.prototype.execute = function(t) {
for (var e = 0; e < this.systemCnt; e++) this.executeSystemFlows[e].execute(t);
};
t.prototype.clear = function() {
this.executeSystemFlows.forEach(function(t) {
return t.onDestroy();
});
};
return t;
}();
t.RootSystem = M;
var N = function() {
function t() {
this._comblockSystems = [];
}
Object.defineProperty(t.prototype, "comblockSystems", {
get: function() {
return this._comblockSystems;
},
enumerable: !1,
configurable: !0
});
t.prototype.add = function(e) {
if (e instanceof t) {
Array.prototype.push.apply(this._comblockSystems, e._comblockSystems);
e._comblockSystems.length = 0;
} else this._comblockSystems.push(e);
return this;
};
return t;
}();
t.System = N;
})(i.ecs || (i.ecs = {}));
cc._RF.pop();
}, {} ],
EffectItemManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e9568cIcu1HKakXYDKsnn1K", "EffectItemManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../effect/FloorPaper"), s = t("../effect/HitBlood"), l = t("../logic/EventHelper"), c = t("./BaseManager"), u = cc._decorator, p = u.ccclass, h = u.property, d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.paper = null;
e.hitBlood = null;
return e;
}
e.prototype.clear = function() {};
e.prototype.onLoad = function() {
var t = this;
this.hitBloodPool = new cc.NodePool();
l.EventHelper.on(l.EventHelper.POOL_DESTORY_HIT_BLOOD, function(e) {
t.node && t.destroyHitBlood(e.paperNode);
});
};
e.prototype.destroyHitBlood = function(t) {
t.active = !1;
this.hitBloodPool.put(t);
};
e.prototype.addHitBlood = function(t, e) {
var i = null;
this.hitBloodPool.size() > 0 && (i = this.hitBloodPool.get());
i && !i.active || (i = cc.instantiate(this.hitBlood));
var o = i.getComponent(s.default);
o.node.parent = this.node;
o.node.active = !0;
o.node.position = e.clone();
o.entity.Transform.position = e.clone();
o.entity.Transform.z = 64;
o.fly(t, !0);
};
e.prototype.addPaper = function(t, e) {
var i = cc.instantiate(this.paper).getComponent(r.default);
i.node.parent = this.node;
i.node.active = !0;
i.node.position = e.clone();
i.entity.Transform.position = e.clone();
i.entity.Transform.z = 64;
i.fly(t, !1);
};
n([ h(cc.Prefab) ], e.prototype, "paper", void 0);
n([ h(cc.Prefab) ], e.prototype, "hitBlood", void 0);
return n([ p ], e);
}(c.default);
i.default = d;
cc._RF.pop();
}, {
"../effect/FloorPaper": "FloorPaper",
"../effect/HitBlood": "HitBlood",
"../logic/EventHelper": "EventHelper",
"./BaseManager": "BaseManager"
} ],
Emplacement: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "78b9bpQ7+BAGrpzYzxR/1mq", "Emplacement");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Shooter"), l = t("../logic/Logic"), c = t("./Building"), u = t("../data/FromData"), p = t("../utils/IndexZ"), h = t("../utils/AudioPlayer"), d = cc._decorator, f = d.ccclass, g = d.property, y = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.shooterTopNode = null;
e.shooterTop = null;
e.shooterBottomNode = null;
e.shooterBottom = null;
e.shooterLeftNode = null;
e.shooterLeft = null;
e.shooterRightNode = null;
e.shooterRight = null;
e.isOpen = !1;
e.pos = cc.v3(0, 0);
e.timeDelay = 0;
e.dirType = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
this.shooterTop = this.shooterTopNode.getComponent(s.default);
this.shooterBottom = this.shooterBottomNode.getComponent(s.default);
this.shooterLeft = this.shooterLeftNode.getComponent(s.default);
this.shooterRight = this.shooterRightNode.getComponent(s.default);
this.setShooterHv(this.shooterTop, cc.v2(0, 1));
this.setShooterHv(this.shooterBottom, cc.v2(0, -1));
this.setShooterHv(this.shooterLeft, cc.v2(-1, 0));
this.setShooterHv(this.shooterRight, cc.v2(1, 0));
var t = u.default.getClone("炮台", "emplacement");
this.shooterTop.from.valueCopy(t);
this.shooterBottom.from.valueCopy(t);
this.shooterLeft.from.valueCopy(t);
this.shooterRight.from.valueCopy(t);
};
e.prototype.setDirType = function(t) {
switch (t) {
case "G0":
this.dirType = i.BOTTOM;
this.hideOrShowShooter(0, 1, 0, 0);
break;

case "G1":
this.dirType = i.TOP;
this.hideOrShowShooter(1, 0, 0, 0);
break;

case "G2":
this.dirType = i.RIGHT;
this.hideOrShowShooter(0, 0, 0, 1);
break;

case "G3":
this.dirType = i.LEFT;
this.hideOrShowShooter(0, 0, 1, 0);
break;

case "G4":
this.dirType = i.TOPBOTTOM;
this.hideOrShowShooter(1, 1, 0, 0);
break;

case "G5":
this.dirType = i.LEFTRIGHT;
this.hideOrShowShooter(0, 0, 1, 1);
break;

case "G6":
this.dirType = i.BOTTOMRIGHT;
this.hideOrShowShooter(0, 1, 0, 1);
break;

case "G7":
this.dirType = i.BOTTOMLEFT;
this.hideOrShowShooter(0, 1, 1, 0);
break;

case "G8":
this.dirType = i.TOPLEFT;
this.hideOrShowShooter(1, 0, 1, 0);
break;

case "G9":
this.dirType = i.TOPRIGHT;
this.hideOrShowShooter(1, 0, 0, 1);
break;

case "G10":
this.dirType = i.BOTTOMLEFTRIGHT;
this.hideOrShowShooter(0, 1, 1, 1);
break;

case "G11":
this.dirType = i.TOPLEFTRIGHT;
this.hideOrShowShooter(1, 0, 1, 1);
break;

case "G12":
this.dirType = i.RIGHTTOPBOTTOM;
this.hideOrShowShooter(1, 1, 0, 1);
break;

case "G13":
this.dirType = i.LEFTTOPBOTTOM;
this.hideOrShowShooter(1, 1, 1, 0);
break;

case "G14":
this.dirType = i.ALL;
this.hideOrShowShooter(1, 1, 1, 1);
}
};
e.prototype.hideOrShowShooter = function(t, e, i, o) {
this.shooterTopNode.active = t > 0;
this.shooterBottomNode.active = e > 0;
this.shooterLeftNode.active = i > 0;
this.shooterRightNode.active = o > 0;
};
e.prototype.start = function() {
var t = this;
this.anim = this.getComponent(cc.Animation);
this.scheduleOnce(function() {
t.fire();
}, 1);
};
e.prototype.setPos = function(t) {
this.pos = t;
this.entity.Transform.position = r.default.getPosInMap(t);
this.node.position = this.entity.Transform.position.clone();
this.node.zIndex = p.default.getActorZIndex(this.entity.Transform.position);
};
e.prototype.OpenFire = function() {
if (!(this.dungeon && this.dungeon.isClear || this.data.currentHealth <= 0)) switch (this.dirType) {
case i.ALL:
this.fireShooter(this.shooterTop);
this.fireShooter(this.shooterBottom);
this.fireShooter(this.shooterLeft);
this.fireShooter(this.shooterRight);
break;

case i.TOP:
this.fireShooter(this.shooterTop);
break;

case i.BOTTOM:
this.fireShooter(this.shooterBottom);
break;

case i.LEFT:
this.fireShooter(this.shooterLeft);
break;

case i.RIGHT:
this.fireShooter(this.shooterRight);
break;

case i.TOPBOTTOM:
this.fireShooter(this.shooterTop);
this.fireShooter(this.shooterBottom);
break;

case i.TOPLEFT:
this.fireShooter(this.shooterTop);
this.fireShooter(this.shooterLeft);
break;

case i.TOPRIGHT:
this.fireShooter(this.shooterTop);
this.fireShooter(this.shooterRight);
break;

case i.BOTTOMLEFT:
this.fireShooter(this.shooterBottom);
this.fireShooter(this.shooterLeft);
break;

case i.BOTTOMRIGHT:
this.fireShooter(this.shooterBottom);
this.fireShooter(this.shooterRight);
break;

case i.LEFTRIGHT:
this.fireShooter(this.shooterLeft);
this.fireShooter(this.shooterRight);
break;

case i.LEFTTOPBOTTOM:
this.fireShooter(this.shooterLeft);
this.fireShooter(this.shooterTop);
this.fireShooter(this.shooterBottom);
break;

case i.RIGHTTOPBOTTOM:
this.fireShooter(this.shooterRight);
this.fireShooter(this.shooterTop);
this.fireShooter(this.shooterBottom);
break;

case i.TOPLEFTRIGHT:
this.fireShooter(this.shooterRight);
this.fireShooter(this.shooterTop);
this.fireShooter(this.shooterLeft);
break;

case i.BOTTOMLEFTRIGHT:
this.fireShooter(this.shooterRight);
this.fireShooter(this.shooterBottom);
this.fireShooter(this.shooterLeft);
break;

default:
this.fireShooter(this.shooterTop);
this.fireShooter(this.shooterBottom);
this.fireShooter(this.shooterLeft);
this.fireShooter(this.shooterRight);
}
};
e.prototype.fire = function() {
this.dungeon && this.dungeon.isClear || this.data.currentHealth <= 0 || this.anim && this.anim.play();
};
e.prototype.takeDamage = function() {
if (this.data.currentHealth <= 0 || this.data.currentHealth >= 9999) return !1;
var t = [ h.default.MONSTER_HIT, h.default.MONSTER_HIT1, h.default.MONSTER_HIT2 ];
h.default.play(t[l.default.getRandomNum(0, 2)]);
this.data.currentHealth--;
cc.tween(this.shooterTopNode).to(.2, {
scale: 1.5
}).to(.5, {
scale: 0
}).start();
cc.tween(this.shooterBottomNode).to(.2, {
scale: 1.5
}).to(.5, {
scale: 0
}).start();
cc.tween(this.shooterLeftNode).to(.2, {
scale: 1.5
}).to(.5, {
scale: 0
}).start();
cc.tween(this.shooterRightNode).to(.2, {
scale: 1.5
}).to(.5, {
scale: 0
}).start();
return !0;
};
e.prototype.fireShooter = function(t) {
if (!t.dungeon) {
t.dungeon = this.dungeon;
t.actor = this;
t.data.bulletType = "bullet010";
t.data.bulletLineExNum = 0;
t.data.bulletLineInterval = .5;
t.data.img = "emplacement";
t.isBuilding = !0;
switch (l.default.chapterIndex) {
case l.default.CHAPTER00:
t.data.bulletLineExNum = 0;
t.data.bulletType = "laser001";
break;

case l.default.CHAPTER01:
t.data.bulletType = "bullet010";
break;

case l.default.CHAPTER02:
t.data.bulletType = "bullet013";
break;

case l.default.CHAPTER03:
t.data.bulletType = "bullet006";
t.data.bulletLineExNum = 1;
break;

case l.default.CHAPTER04:
case l.default.CHAPTER05:
t.data.bulletType = "bullet024";
t.data.bulletLineExNum = 1;
break;

case l.default.CHAPTER099:
t.data.bulletType = "bullet010";
}
}
t.fireBullet(0, cc.v3(64, 0));
};
e.prototype.setShooterHv = function(t, e) {
t.setHv(e);
};
e.prototype.update = function(t) {
if (!l.default.isGamePause) {
this.timeDelay += t;
if (this.timeDelay > 3) {
this.timeDelay = 0;
this.fire();
}
}
};
var i;
e.BOTTOM = 0;
e.TOP = 1;
e.RIGHT = 2;
e.LEFT = 3;
e.TOPBOTTOM = 4;
e.LEFTRIGHT = 5;
e.BOTTOMRIGHT = 6;
e.BOTTOMLEFT = 7;
e.TOPLEFT = 8;
e.TOPRIGHT = 9;
e.BOTTOMLEFTRIGHT = 10;
e.TOPLEFTRIGHT = 11;
e.RIGHTTOPBOTTOM = 12;
e.LEFTTOPBOTTOM = 13;
e.ALL = 14;
n([ g(cc.Node) ], e.prototype, "shooterTopNode", void 0);
n([ g(cc.Node) ], e.prototype, "shooterBottomNode", void 0);
n([ g(cc.Node) ], e.prototype, "shooterLeftNode", void 0);
n([ g(cc.Node) ], e.prototype, "shooterRightNode", void 0);
return i = n([ f ], e);
}(c.default);
i.default = y;
cc._RF.pop();
}, {
"../data/FromData": "FromData",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
EnergyShield: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b7ba1woN/lIqoplh/wf+2rX", "EnergyShield");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../collider/CCollider"), s = t("../utils/AudioPlayer"), l = t("../utils/IndexZ"), c = t("./Building"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isShow = !1;
e.timeDelay = 0;
e.recoveryTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.cover = this.node.getChildByName("sprite").getChildByName("cover");
this.element = this.node.getChildByName("sprite").getChildByName("cover").getChildByName("element");
this.anim = this.getComponent(cc.Animation);
this.collider = this.getComponent(r.default);
};
e.prototype.init = function(t, e, i) {
this.player = t;
this.data.currentHealth = e;
this.data.maxHealth = e;
this.node.scale = i;
this.anim = this.getComponent(cc.Animation);
this.node.zIndex = l.default.getActorZIndex(cc.v3(this.entity.Transform.position.x, this.entity.Transform.position.y - 8 * i));
this.base = this.node.getChildByName("base");
this.base.parent = this.node.parent;
this.base.position = this.entity.Transform.position;
cc.tween(this.base).to(1, {
scale: i,
opacity: 255
}).start();
this.base.zIndex = l.default.ACTOR;
};
e.prototype.hitLight = function(t) {
this.mat || (this.mat = this.node.getChildByName("sprite").getChildByName("cover").getComponent(cc.Sprite).getMaterial(0));
this.mat.setProperty("addColor", t ? cc.color(200, 200, 200, 100) : cc.Color.TRANSPARENT);
};
e.prototype.ShowFinish = function() {
this.isShow = !0;
this.changeIdle();
};
e.prototype.changeIdle = function() {
this.isShow && (this.checkTargetIn(this.player.node) ? this.anim.getAnimationState("EnergyShieldIdle").isPlaying || this.anim.play("EnergyShieldIdle") : this.anim.getAnimationState("EnergyShieldIdle1").isPlaying || this.anim.play("EnergyShieldIdle1"));
};
e.prototype.checkTargetIn = function(t) {
var e = this.entity.Transform.position.x - this.collider.w / 2 * this.node.scale, i = this.entity.Transform.position.y - (this.collider.h / 2 - this.collider.offset.y) * this.node.scale, o = this.collider.w * this.node.scale, a = this.collider.h * this.node.scale;
return cc.rect(e, i, o, a).contains(cc.v2(t.position.x, t.position.y));
};
e.prototype.takeDamage = function(t) {
var e = this;
if (!this.isShow || this.data.currentHealth <= 0) return !1;
s.default.play(s.default.BOSS_ICEDEMON_HIT);
this.hitLight(!0);
this.scheduleOnce(function() {
e.hitLight(!1);
}, .15);
this.data.currentHealth -= t.getTotalDamage();
this.changeColor();
if (this.data.currentHealth <= 0) {
this.data.currentHealth = 0;
this.isShow = !1;
this.node.active = !1;
this.base.active = !1;
this.scheduleOnce(function() {
e.destroyEntityNode();
e.base.destroy();
}, 1);
}
return !0;
};
e.prototype.changeColor = function() {
var t = Math.floor(255 * this.data.currentHealth / this.data.maxHealth);
t < 0 ? t = 0 : t > 255 && (t = 255);
this.cover.color = cc.color(255, t, t);
this.element.color = cc.color(255, t, t);
this.base.color = cc.color(255, t, t);
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .016) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.isRecoveryTimeDelay = function(t) {
this.recoveryTimeDelay += t;
if (this.recoveryTimeDelay > 2) {
this.recoveryTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.isTimeDelay(t) && this.changeIdle();
this.isRecoveryTimeDelay(t) && this.checkTargetIn(this.player.node) && this.player.updateDream(-1);
};
return n([ p ], e);
}(c.default));
i.default = h;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
EquipItemMapData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "07098CeVABLS7tmfNQ+b5t0", "EquipItemMapData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.fromRoomPos = cc.v3(0, 0);
this.fromPos = cc.v3(0, 0);
this.resName = "";
}
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t);
this.fromRoomPos = t.fromRoomPos ? cc.v3(t.fromRoomPos.x, t.fromRoomPos.y) : cc.v3(0, 0);
this.fromPos = t.fromPos ? cc.v3(t.fromPos.x, t.fromPos.y) : cc.v3(0, 0);
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
EquipItemTalent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cdd67CinP5PjoHg4bK1OsCs", "EquipItemTalent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../data/FromData"), l = t("../logic/EventHelper"), c = t("../logic/Logic"), u = t("./Talent"), p = t("../utils/AudioPlayer"), h = t("../utils/IndexZ"), d = t("../manager/StatusManager"), f = t("../logic/NonPlayer"), g = t("../boss/Boss"), y = t("../data/AreaOfEffectData"), m = t("../manager/NonPlayerManager"), v = t("../utils/ActorUtils"), E = t("../ui/CoolDownView"), _ = t("../manager/InventoryManager"), T = t("../data/NonPlayerData"), D = cc._decorator, S = D.ccclass, O = D.property, A = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.aoe = null;
e.fireball = null;
e.icethron = null;
e.fireGhost = null;
e.healingLight = null;
e.rageLight = null;
e.broomPrefab = null;
e.cookingPrefab = null;
e.swordLightPrefab = null;
e.smokePrefab = null;
e.skyhandPrefab = null;
e.daggerLightPrefab = null;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.init = function(e) {
t.prototype.init.call(this, e);
this.coolDownId = E.default.EQUIPITEM;
this.initCoolDown(e, 1);
};
e.prototype.skillCanUse = function() {
switch (this.data.resName) {
case u.default.TALENT_000:
case u.default.TALENT_010:
case u.default.TALENT_015:
return !1;

case u.default.TALENT_009:
return this.canSteal();

case u.default.TALENT_019:
return this.player.CanJump && !this.player.sc.isJumping;
}
return !0;
};
e.prototype.doSkill = function() {
this.excuteSkill(null);
for (var t = 0, e = this.player.shadowList; t < e.length; t++) {
var i = e[t];
i.node && this.excuteSkill(i);
}
};
e.prototype.excuteSkill = function(t) {
t ? t.shooterEx : this.player.shooterEx;
switch (this.data.resName) {
case u.default.TALENT_200:
this.addMonkey(t);
break;

case u.default.TALENT_201:
this.addLighteningFall(!0, 5 * this.player.data.getFinalAttackPoint().getTotalDamage());
}
};
e.prototype.addClearCircle = function(t) {
this.player.stopAllDebuffs();
this.player.dungeon.nonPlayerManager.isPetAlive() && this.player.dungeon.nonPlayerManager.pet.stopAllDebuffs();
var e = t.fireAoe(this.aoe, new y.default().init(2, .2, 0, this.player.IsVariation ? 3 : 2, h.default.getActorZIndex(this.player.getCenterPosition()), !1, !1, !0, !1, !1, new r.default(0), new s.default(), []), cc.v3(0, 32), 0, null, !0);
t.updateCustomAoe(e, [ c.default.spriteFrameRes("clearcircle1"), c.default.spriteFrameRes("clearcircle2"), c.default.spriteFrameRes("clearcircle3"), c.default.spriteFrameRes("clearcircle4") ], !1, !0, 4);
};
e.prototype.addMonkey = function(t) {
for (var e, i = 0; i < 3; i++) {
var o = new T.default();
p.default.play(p.default.SMOKE_BALL);
o.valueCopy(c.default.nonplayers[m.default.SHOP_MONKEY]);
var a = this.player.data.FinalCommon;
o.Common.remoteDamage = this.player.data.getFinalRemoteDamage().getTotalDamage();
o.Common.maxHealth = a.MaxHealth;
this.player.weaponRight.meleeWeapon.dungeon.nonPlayerManager.addNonPlayerFromData(o, t ? t.node.position : this.player.node.position, null === (e = this.player.entity) || void 0 === e ? void 0 : e.Transform.z, this.player.weaponRight.meleeWeapon.dungeon);
}
};
e.prototype.healing = function() {
p.default.play(p.default.PICK_ITEM);
var t = cc.instantiate(this.healingLight);
t.parent = this.player.node;
t.position = cc.v3(0, 64);
t.zIndex = h.default.OVERHEAD;
this.player.addStatus(d.default.HEALING, new s.default());
this.player.dungeon.nonPlayerManager.isPetAlive() && this.player.dungeon.nonPlayerManager.pet.addStatus(d.default.HEALING, new s.default());
};
e.prototype.rageShoot = function() {
var t = this;
p.default.play(p.default.PICK_ITEM);
var e = cc.instantiate(this.rageLight);
e.parent = this.player.node;
e.position = cc.v3(0, 64);
e.zIndex = h.default.OVERHEAD;
this.scheduleOnce(function() {
t.talentSkill.IsExcuting = !1;
e && cc.isValid(e) && e.destroy();
}, 3);
};
e.prototype.flash = function(t) {
var e = this;
p.default.play(p.default.TAKEPHOTO);
cc.tween(this.sprite.node).call(function() {
e.player.addStatus(d.default.TALENT_FLASH_SPEED, new s.default());
e.player.dungeon.nonPlayerManager.isPetAlive() && e.player.dungeon.nonPlayerManager.pet.addStatus(d.default.TALENT_FLASH_SPEED, new s.default());
e.sprite.spriteFrame = c.default.spriteFrameRes("flash");
e.sprite.node.width = 128;
e.sprite.node.height = 128;
e.sprite.node.opacity = 255;
e.sprite.node.position = cc.v3(0, 32);
}).to(.1, {
opacity: 0
}).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("singleColor");
e.sprite.node.width = 2e3;
e.sprite.node.height = 2e3;
e.sprite.node.opacity = 255;
}).to(.1, {
opacity: 0
}).call(function() {
d.default.addStatus2NearEnemies(e.player, t ? t.node : e.player.node, d.default.TALENT_FLASH_DIZZ, e.player.IsVariation ? 500 : 400, new s.default());
e.sprite.spriteFrame = null;
}).start();
};
e.prototype.aimedShoot = function() {
var t = this;
p.default.play(p.default.RELOAD);
cc.tween(this.sprite.node).call(function() {
t.player.addStatus(d.default.TALENT_AIMED, new s.default());
t.player.dungeon.nonPlayerManager.isPetAlive() && t.player.dungeon.nonPlayerManager.pet.addStatus(d.default.TALENT_AIMED, new s.default());
t.sprite.spriteFrame = c.default.spriteFrameRes("talentshoot");
t.sprite.node.width = 64;
t.sprite.node.height = 64;
t.sprite.node.opacity = 255;
t.sprite.node.scale = 1;
t.sprite.node.position = cc.v3(0, 128);
}).repeat(5, cc.tween().to(1, {
scale: 1.5
}).to(1, {
scale: 1
})).call(function() {
t.sprite.spriteFrame = null;
}).start();
};
e.prototype.jump = function(t) {
var e = this;
p.default.play(p.default.JUMP);
this.player.talentJump(function() {
p.default.play(p.default.BOOM);
var i = e.player.data.getFinalAttackPoint();
i.isMelee = !0;
i.isCriticalStrike = !0;
var o = 2;
e.player.IsVariation && (o += 1);
t.fireAoe(e.skyhandPrefab, new y.default().init(0, .15, 0, o, h.default.OVERHEAD, !1, !0, !0, !1, !1, i, new s.default(), [ d.default.DIZZ ]));
e.talentSkill.IsExcuting = !1;
});
};
e.prototype.canSteal = function() {
var t = v.default.getNearestEnemyActor(this.player.node.position, !1, this.player.weaponRight.meleeWeapon.dungeon);
if (!t) return !1;
var e = t.getComponent(f.default), i = t.getComponent(g.default);
return !!(e && e.data.noLoot < 1) || !!i;
};
e.prototype.steal = function(t) {
var e = this;
p.default.play(p.default.FIREBALL);
var i = v.default.getNearestEnemyActor(this.player.node.position, !1, this.player.weaponRight.meleeWeapon.dungeon);
if (i) {
var o = i.getComponent(f.default), a = i.getComponent(g.default);
o && o.data.noLoot < 1 && o.getLoot();
a && a.getLoot();
if (!t) {
this.sprite.node.width = 128;
this.sprite.node.height = 128;
this.sprite.node.opacity = 255;
this.sprite.node.scale = 1;
this.sprite.node.position = cc.v3(0, 128);
cc.tween(this.sprite.node).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("talenthand01");
}).delay(.2).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("talenthand02");
}).delay(.2).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("talenthand03");
}).delay(.2).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("talenthand04");
}).delay(.2).call(function() {
e.sprite.spriteFrame = null;
}).start();
}
}
};
e.prototype.showSmoke = function(t) {
p.default.play(p.default.MELEE_PARRY);
new r.default().magicDamage = 3 + c.default.playerData.OilGoldData.level;
var e = 1;
this.player.IsVariation && (e += 1);
this.shoot(t, 0, 0, "bullet041", this.smokePrefab, new y.default().init(7, .1, 0, e, h.default.OVERHEAD, !1, !1, !1, !1, !1, new r.default(), new s.default(), [ d.default.WINE_CLOUD ]));
};
e.prototype.showFireBall = function(t) {
p.default.play(p.default.SKILL_FIREBALL);
var e = new r.default();
e.magicDamage = 3 + c.default.playerData.OilGoldData.level;
e.isMelee = !0;
var i = 4;
this.player.IsVariation && (i += 1);
t.fireAoe(this.fireball, new y.default().init(0, .1, 0, i, h.default.OVERHEAD, !1, !0, !0, !1, !0, e, new s.default(), [ d.default.BURNING ]));
};
e.prototype.showIceThron = function(t) {
this.scheduleOnce(function() {
p.default.play(p.default.SKILL_ICETHRON);
}, 1);
var e = new r.default();
e.magicDamage = 3 + c.default.playerData.OilGoldData.level;
e.isMelee = !0;
var i = 100, o = 60, a = 3;
if (this.player.IsVariation) {
a += 1;
i = 150;
o = 90;
}
for (var n = [ 0, 45, 90, 135, 180, 225, 270, 315 ], l = [ cc.v3(0, i), cc.v3(-o, o), cc.v3(-i, 0), cc.v3(-o, -o), cc.v3(0, -i), cc.v3(o, -o), cc.v3(i, 0), cc.v3(o, o) ], u = (cc.v3(0, -i), 
cc.v3(-o, -o), cc.v3(-i, 0), cc.v3(-o, o), cc.v3(0, i), cc.v3(o, o), cc.v3(i, 0), 
cc.v3(o, -o), [ n ]), f = 0; f < u[0].length; f++) t.fireAoe(this.icethron, new y.default().init(0, 2, 0, a, h.default.OVERHEAD, !1, !0, !0, !1, !0, e, new s.default(), [ d.default.FROZEN ]), cc.v3(l[f]), n[f], null, !0);
};
e.prototype.changePerformance = function() {};
e.prototype.takeDamage = function() {
return !1;
};
e.prototype.addLighteningFall = function(t, e) {
l.EventHelper.emit(l.EventHelper.DUNGEON_ADD_LIGHTENINGFALL, {
pos: v.default.getNearestEnemyPosition(this.player.node.position, !1, this.player.weaponRight.meleeWeapon.dungeon, !1),
showArea: t,
damage: e
});
};
e.prototype.addBroom = function(t) {
var e = this;
p.default.play(p.default.MELEE_PARRY);
var i = this.player.data.getFinalAttackPoint();
i.isMelee = !0;
var o = 1.5;
this.player.IsVariation && (o += 1);
var a = t.fireAoe(this.broomPrefab, new y.default().init(0, .5, .2, o, h.default.OVERHEAD, !1, !0, !0, !0, !0, i, new s.default(), [ d.default.FROZEN ]), cc.v3(0, 32 * this.player.node.scaleY));
this.schedule(function() {
a && a.entity && a.isValid && (a.entity.Transform.position = e.player.node.position.clone());
}, .02, 100);
};
e.prototype.cooking = function(t) {
p.default.play(p.default.MELEE_PARRY);
var e = this.player.data.getFinalAttackPoint();
e.isMelee = !0;
var i = 1;
this.player.IsVariation && (i += 1);
t.fireAoe(this.cookingPrefab, new y.default().init(0, 2, 0, i, h.default.OVERHEAD, !1, !1, !1, !1, !1, e, new s.default(), []), cc.v3(0, 32), 0, function(t) {
var e = t.node.getComponent(f.default);
e && e.dungeon.addItem(e.node.position.clone(), "foodmonster" + e.data.resName.replace("monster", ""));
var i = t.node.getComponent(g.default);
i && i.dungeon.addItem(i.node.position.clone(), "foodboss" + i.data.resName.replace("iconboss", ""));
});
};
e.prototype.addSwordLight = function(t) {
var e = this;
p.default.play(p.default.SKILL_MAGICBALL);
p.default.play(p.default.SWORD_SHOW);
var i = new r.default();
i.isMelee = !0;
var o = 5;
i.physicalDamage = 2 + c.default.playerData.OilGoldData.level;
if (this.player.weaponRight.meleeWeapon.IsSword) {
i = this.player.data.getFinalAttackPoint();
o = 6;
}
this.player.IsVariation && (o += 1);
var a = t.fireAoe(this.swordLightPrefab, new y.default().init(0, .35, 0, o, h.default.OVERHEAD, !1, !0, !0, !1, !0, i, new s.default(), [ d.default.FROZEN ])), n = cc.color(255, 255, 255).fromHEX(this.player.inventoryManager.equips[_.default.WEAPON].lightcolor);
a.node.getChildByName("sprite").color = n;
this.scheduleOnce(function() {
e.talentSkill.IsExcuting = !1;
}, 1);
};
e.prototype.addDaggerLight = function(t, e) {
var i = this;
if (this.player.weaponRight.meleeWeapon.IsDagger) {
e || this.scheduleOnce(function() {
i.player.addStatus(d.default.TALENT_INVISIBLE, new s.default());
}, 2.4);
p.default.play(p.default.SKILL_MAGICBALL);
p.default.play(p.default.SWORD_SHOW);
var o = 2, a = this.player.data.getFinalAttackPoint();
a.isMelee = !0;
a.physicalDamage = a.physicalDamage / 2;
this.player.IsVariation && (o += 1);
for (var n = t.fireAoe(this.daggerLightPrefab, new y.default().init(0, .24, 0, o, h.default.OVERHEAD, !1, !0, !0, !1, !1, a, new s.default(), [ d.default.FROZEN ]), cc.Vec3.ZERO), r = cc.color(255, 255, 255).fromHEX(this.player.inventoryManager.equips[_.default.WEAPON].lightcolor), l = 0, c = n.node.getComponentsInChildren(cc.Sprite); l < c.length; l++) {
var u = c[l];
u.node.color = e ? cc.Color.BLACK : r;
u.node.opacity = 200;
}
this.player.vanish(2.4);
e && e.vanish(2.4);
this.scheduleOnce(function() {
i.talentSkill.IsExcuting = !1;
}, 3);
} else e || this.player.addStatus(d.default.TALENT_INVISIBLE, new s.default());
};
n([ O(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ O(cc.Prefab) ], e.prototype, "aoe", void 0);
n([ O(cc.Prefab) ], e.prototype, "fireball", void 0);
n([ O(cc.Prefab) ], e.prototype, "icethron", void 0);
n([ O(cc.Prefab) ], e.prototype, "fireGhost", void 0);
n([ O(cc.Prefab) ], e.prototype, "healingLight", void 0);
n([ O(cc.Prefab) ], e.prototype, "rageLight", void 0);
n([ O(cc.Prefab) ], e.prototype, "broomPrefab", void 0);
n([ O(cc.Prefab) ], e.prototype, "cookingPrefab", void 0);
n([ O(cc.Prefab) ], e.prototype, "swordLightPrefab", void 0);
n([ O(cc.Prefab) ], e.prototype, "smokePrefab", void 0);
n([ O(cc.Prefab) ], e.prototype, "skyhandPrefab", void 0);
n([ O(cc.Prefab) ], e.prototype, "daggerLightPrefab", void 0);
return n([ S ], e);
}(u.default);
i.default = A;
cc._RF.pop();
}, {
"../boss/Boss": "Boss",
"../data/AreaOfEffectData": "AreaOfEffectData",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../data/NonPlayerData": "NonPlayerData",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../logic/NonPlayer": "NonPlayer",
"../manager/InventoryManager": "InventoryManager",
"../manager/NonPlayerManager": "NonPlayerManager",
"../manager/StatusManager": "StatusManager",
"../ui/CoolDownView": "CoolDownView",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"./Talent": "Talent"
} ],
EquipmentAndItemDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "af5ccf4cCpAz5dS6cSfKkBs", "EquipmentAndItemDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../logic/Logic"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.layout = null;
e.labelTitle = null;
e.requireLevel = null;
e.price = null;
e.infoBase = null;
e.info1 = null;
e.info2 = null;
e.info3 = null;
e.extraInfo = null;
e.infoSuit1 = null;
e.infoSuit2 = null;
e.infoSuit3 = null;
e.infoDesc = null;
e.count = null;
e.arrowNoneBg = null;
e.arrowRightBg = null;
e.arrowDownBg = null;
e.arrowLeftBg = null;
e.bgType = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {};
e.prototype.changeBgAndAnchor = function(t) {
this.bgType = t;
var e = this.layout.getComponent(cc.Sprite);
this.layout.anchorX = 1;
this.layout.anchorY = 1;
switch (this.bgType) {
case i.BG_TYPE_NONE:
e.spriteFrame = null;
break;

case i.BG_TYPE_ARROW_NONE:
e.spriteFrame = this.arrowNoneBg;
break;

case i.BG_TYPE_ARROW_RIGHT:
e.spriteFrame = this.arrowRightBg;
break;

case i.BG_TYPE_ARROW_DOWN:
e.spriteFrame = this.arrowDownBg;
this.layout.anchorX = 0;
this.layout.anchorY = 0;
break;

case i.BG_TYPE_ARROW_LEFT:
e.spriteFrame = this.arrowLeftBg;
this.layout.anchorX = 0;
this.layout.anchorY = 1;
}
};
e.prototype.refreshEquipInfo = function(t) {
this.layout.color = t.requireLevel > r.default.playerData.OilGoldData.level ? cc.Color.RED : this.layout.color.fromHEX(t.titlecolor);
this.requireLevel.node.color = t.requireLevel > r.default.playerData.OilGoldData.level ? cc.Color.RED : cc.Color.WHITE;
this.infoBase.node.active = !0;
this.requireLevel.node.active = !0;
this.info1.node.active = !0;
this.info2.node.active = !0;
this.info3.node.active = !0;
this.extraInfo.node.active = !0;
this.infoSuit1.node.active = !0;
this.infoSuit2.node.active = !0;
this.infoSuit3.node.active = !0;
this.requireLevel.string = "所需等级：" + t.requireLevel;
this.price.string = "价格：" + t.price;
this.labelTitle.string = t.prefix + t.nameCn;
this.labelTitle.node.color = this.labelTitle.node.color.fromHEX(t.titlecolor);
this.infoBase.string = "" + t.infobase;
this.infoBase.node.color = this.infoBase.node.color.fromHEX(t.infobasecolor);
this.info1.string = t.info1;
this.info1.node.color = this.info1.node.color.fromHEX(t.infocolor1);
this.info2.string = t.info2;
this.info2.node.color = this.info2.node.color.fromHEX(t.infocolor2);
this.info3.string = t.info3;
this.info3.node.color = this.info3.node.color.fromHEX(t.infocolor3);
this.extraInfo.string = t.extraInfo;
this.infoSuit1.string = t.suit1;
this.infoSuit2.string = t.suit2;
this.infoSuit3.string = t.suit3;
this.infoSuit1.node.color = this.infoSuit1.node.color.fromHEX(t.suitcolor1);
this.infoSuit2.node.color = this.infoSuit2.node.color.fromHEX(t.suitcolor2);
this.infoSuit3.node.color = this.infoSuit3.node.color.fromHEX(t.suitcolor3);
this.infoDesc.string = t.desc;
this.infoBase.node.active = this.infoBase.string.length > 0;
this.info1.node.active = this.info1.string.length > 0;
this.info2.node.active = this.info2.string.length > 0;
this.info3.node.active = this.info3.string.length > 0;
this.extraInfo.node.active = this.extraInfo.string.length > 0;
this.infoSuit1.node.active = this.infoSuit1.string.length > 0;
this.infoSuit2.node.active = this.infoSuit2.string.length > 0;
this.infoSuit3.node.active = this.infoSuit3.string.length > 0;
this.count.string = "";
};
e.prototype.showDialogEquipInfo = function(t, e) {
this.refreshEquipInfo(t);
this.node.active = !0;
if (e) {
var i = 0;
t.suitType.length > 0 && e.suitMap[t.suitType] && (i = e.suitMap[t.suitType].count);
this.infoSuit1.node.opacity = i > 1 ? 255 : 50;
this.infoSuit2.node.opacity = i > 2 ? 255 : 50;
this.infoSuit3.node.opacity = i > 3 ? 255 : 50;
}
};
e.prototype.refreshItemInfo = function(t) {
this.layout.color = cc.Color.WHITE;
this.infoBase.node.active = !0;
this.info1.node.active = !1;
this.info2.node.active = !1;
this.info3.node.active = !1;
this.requireLevel.node.active = !1;
this.extraInfo.node.active = !1;
this.infoSuit1.node.active = !1;
this.infoSuit2.node.active = !1;
this.infoSuit3.node.active = !1;
this.labelTitle.string = "" + t.nameCn;
var e = "价格：" + t.price + "\n" + t.info;
t.solidSatiety > 0 && (e += "\n饱食度：" + t.solidSatiety);
t.liquidSatiety > 0 && (e += "\n解渴度：" + t.liquidSatiety);
this.infoBase.string = e;
this.infoDesc.string = t.desc;
this.count.string = t.count > 0 ? "×" + t.count : "";
this.labelTitle.node.color = this.labelTitle.node.color.fromHEX("#F4C021");
};
e.prototype.showDialogItemInfo = function(t) {
this.node.active = !0;
this.refreshItemInfo(t);
};
e.prototype.showDialogNonPlayerInfo = function(t) {
this.node.active = !0;
this.refreshNonPlayerInfo(t);
};
e.prototype.refreshNonPlayerInfo = function(t) {
this.layout.color = cc.Color.WHITE;
this.infoBase.node.active = !0;
this.requireLevel.node.active = !1;
this.info1.node.active = !1;
this.info2.node.active = !1;
this.info3.node.active = !1;
this.extraInfo.node.active = !1;
this.infoSuit1.node.active = !1;
this.infoSuit2.node.active = !1;
this.infoSuit3.node.active = !1;
this.labelTitle.string = "" + t.nameCn;
this.infoBase.string = "";
this.infoDesc.string = "";
this.count.string = "";
this.labelTitle.node.color = this.labelTitle.node.color.fromHEX("#F4C021");
};
e.prototype.showDialogFurnitureInfo = function(t) {
this.node.active = !0;
this.refreshFurnitureInfo(t);
};
e.prototype.refreshFurnitureInfo = function(t) {
this.layout.color = cc.Color.WHITE;
this.infoBase.node.active = !0;
this.info1.node.active = !1;
this.info2.node.active = !1;
this.info3.node.active = !1;
this.requireLevel.node.active = !1;
this.extraInfo.node.active = !1;
this.infoSuit1.node.active = !1;
this.infoSuit2.node.active = !1;
this.infoSuit3.node.active = !1;
this.labelTitle.string = "" + t.nameCn;
this.infoBase.string = "价格：" + t.price + "\n" + t.info;
this.infoDesc.string = "" + t.desc;
this.count.string = "";
this.labelTitle.node.color = this.labelTitle.node.color.fromHEX("#F4C021");
};
e.prototype.showDialog = function(t, e, i, o, a, n, r) {
(r || 0 == r) && this.changeBgAndAnchor(r);
this.node.position = t.clone();
e ? this.showDialogNonPlayerInfo(e) : i ? this.showDialogItemInfo(i) : o ? this.showDialogEquipInfo(o, n) : a && this.showDialogFurnitureInfo(a);
};
e.prototype.hideDialog = function() {
this.node.active = !1;
};
var i;
e.BG_TYPE_NONE = 0;
e.BG_TYPE_ARROW_NONE = 1;
e.BG_TYPE_ARROW_RIGHT = 2;
e.BG_TYPE_ARROW_DOWN = 3;
e.BG_TYPE_ARROW_LEFT = 4;
n([ c(cc.Node) ], e.prototype, "layout", void 0);
n([ c(cc.Label) ], e.prototype, "labelTitle", void 0);
n([ c(cc.Label) ], e.prototype, "requireLevel", void 0);
n([ c(cc.Label) ], e.prototype, "price", void 0);
n([ c(cc.Label) ], e.prototype, "infoBase", void 0);
n([ c(cc.Label) ], e.prototype, "info1", void 0);
n([ c(cc.Label) ], e.prototype, "info2", void 0);
n([ c(cc.Label) ], e.prototype, "info3", void 0);
n([ c(cc.Label) ], e.prototype, "extraInfo", void 0);
n([ c(cc.Label) ], e.prototype, "infoSuit1", void 0);
n([ c(cc.Label) ], e.prototype, "infoSuit2", void 0);
n([ c(cc.Label) ], e.prototype, "infoSuit3", void 0);
n([ c(cc.Label) ], e.prototype, "infoDesc", void 0);
n([ c(cc.Label) ], e.prototype, "count", void 0);
n([ c(cc.SpriteFrame) ], e.prototype, "arrowNoneBg", void 0);
n([ c(cc.SpriteFrame) ], e.prototype, "arrowRightBg", void 0);
n([ c(cc.SpriteFrame) ], e.prototype, "arrowDownBg", void 0);
n([ c(cc.SpriteFrame) ], e.prototype, "arrowLeftBg", void 0);
return i = n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../../logic/Logic": "Logic"
} ],
EquipmentData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a5970exQi1ISK2QZd4VAwv9", "EquipmentData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("./CommonData"), r = t("./BaseData"), s = t("./TriggerData"), l = t("../utils/DataUtils"), c = function(t) {
a(e, t);
function e() {
var e = t.call(this) || this;
e.uuid = "";
e.id = 1e7;
e.pos = cc.v3(0, 0);
e.mapKeyPos = "";
e.nameCn = "";
e.nameEn = "";
e.equipmetType = "empty";
e.equipmetTypeCn = "";
e.prefix = "";
e.desc = "";
e.color = "#ffffff";
e.lightcolor = "#ffffff";
e.titlecolor = "#ffffff";
e.img = "emptyequipment";
e.level = 0;
e.requireLevel = 0;
e.stab = 0;
e.far = 0;
e.blunt = 0;
e.isLocked = 0;
e.isReflect = 0;
e.trouserslong = 0;
e.bulletType = "";
e.bulletSize = 0;
e.bulletArcExNum = 0;
e.bulletArcOffsetX = 0;
e.bulletLineExNum = 0;
e.bulletLineInterval = 0;
e.exBulletOffsetX = 0;
e.bulletExSpeed = 0;
e.showShooter = 0;
e.isHeavy = 0;
e.isLineAim = 0;
e.hideHair = 0;
e.exTriggers = [];
e.ignoreTrap = 0;
e.remoteAudio = "";
e.exBeatBack = 0;
e.test = 0;
e.canUse = 0;
e.lastTime = 0;
e.cooldown = 0;
e.price = 0;
e.info1 = "";
e.info2 = "";
e.info3 = "";
e.extraInfo = "";
e.suitType = "";
e.suit1 = "";
e.suit2 = "";
e.suit3 = "";
e.infobase = "";
e.infocolor1 = "#ffffff";
e.infocolor2 = "#ffffff";
e.infocolor3 = "#ffffff";
e.suitcolor1 = "#ffffff";
e.suitcolor2 = "#ffffff";
e.suitcolor3 = "#ffffff";
e.infobasecolor = "#ffffff";
e.anim = 0;
e.common = new n.default();
return e;
}
Object.defineProperty(e.prototype, "Common", {
get: function() {
return this.common;
},
enumerable: !1,
configurable: !0
});
e.prototype.valueCopy = function(t) {
if (t) {
l.default.baseCopy(this, t);
this.id = t.id ? t.id : 1e7;
this.pos = t.pos ? cc.v3(t.pos.x, t.pos.y) : cc.v3(0, 0);
this.common.valueCopy(t.common);
this.color = t.color ? t.color : "#ffffff";
this.titlecolor = t.titlecolor ? t.titlecolor : "#ffffff";
this.lightcolor = t.lightcolor ? t.lightcolor : "#ffffff";
this.img = t.img ? t.img : "emptyequipment";
this.infocolor1 = t.infocolor1 ? t.infocolor1 : "#ffffff";
this.infocolor2 = t.infocolor2 ? t.infocolor2 : "#ffffff";
this.infocolor3 = t.infocolor3 ? t.infocolor3 : "#ffffff";
this.suitcolor1 = t.suitcolor1 ? t.suitcolor1 : "#ffffff";
this.suitcolor2 = t.suitcolor2 ? t.suitcolor2 : "#ffffff";
this.suitcolor3 = t.suitcolor3 ? t.suitcolor3 : "#ffffff";
this.infobasecolor = t.infobasecolor ? t.infobasecolor : "#ffffff";
this.exTriggers = [];
if (t.exTriggers) for (var e = 0, i = t.exTriggers; e < i.length; e++) {
var o = i[e], a = new s.default();
a.valueCopy(o);
this.exTriggers.push(a);
}
}
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
e.prototype.add = function(t) {
this.common = this.common.clone().add(t.Common);
this.ignoreTrap = this.ignoreTrap + t.ignoreTrap;
this.exBeatBack = this.exBeatBack + t.exBeatBack;
for (var e = 0, i = t.exTriggers; e < i.length; e++) {
var o = i[e];
this.exTriggers.push(o);
}
return this;
};
return e;
}(r.default);
i.default = c;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData",
"./CommonData": "CommonData",
"./TriggerData": "TriggerData"
} ],
EquipmentDescData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d7742jFusdGiIE+18obcC2k", "EquipmentDescData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("./CommonData");
i.default = function() {
this.nameCn = "";
this.nameEn = "";
this.titlecolor = "#ffffff";
this.color = "#ffffff";
this.prefix = "";
this.level = 0;
this.requireLevel = 0;
this.common = new o.default();
this.info1 = "";
this.info2 = "";
this.info3 = "";
this.suit1 = "";
this.suit2 = "";
this.suit3 = "";
this.infobase = "";
this.infocolor1 = "#ffffff";
this.infocolor2 = "#ffffff";
this.infocolor3 = "#ffffff";
this.suitcolor1 = "#ffffff";
this.suitcolor2 = "#ffffff";
this.suitcolor3 = "#ffffff";
this.infobasecolor = "#ffffff";
};
cc._RF.pop();
}, {
"./CommonData": "CommonData"
} ],
EquipmentManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "29c053rRnlLqrw1VkMXkISC", "EquipmentManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = t("../data/EquipmentData"), c = t("../data/EquipmentDescData"), u = t("../equipment/Equipment"), p = t("../utils/IndexZ"), h = t("./BaseManager"), d = t("../logic/EventHelper"), f = t("./InventoryManager"), g = t("../data/SuitData"), y = t("../utils/DataUtils"), m = cc._decorator, v = m.ccclass, E = m.property, _ = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.equipment = null;
e.groundList = [];
e.checkTimeDelay = 0;
return e;
}
i = e;
e.prototype.clear = function() {
this.groundList = [];
};
e.getRandomDesc = function(t, e) {
var o = new c.default(), a = 0, n = s.default.mapManager.getCurrentRoomRandom4Save(), r = cc.v3(0, 0);
if (i.isTheEquipType(t.equipmetType, [ f.default.WEAPON, f.default.HELMET, f.default.GLOVES, f.default.CLOAK, f.default.REMOTE ]) && t.Common.criticalStrikeRate > 0) {
var l = 20 - t.Common.criticalStrikeRate;
l < 5 && (l = 5);
a = (r = i.getRandomQuality(0, l, e, n)).y > a ? r.y : a;
o.prefix += r.y > 2 ? "暴击" : "";
o.color = i.getMixColor("#000000", r.y > 2 ? i.COLOR_CRITICALSTRIKE : "#000000");
}
var u = cc.v3(0, 0);
i.isTheEquipType(t.equipmetType, [ f.default.WEAPON, f.default.GLOVES, f.default.CLOTHES, f.default.REMOTE ]) && t.Common.damageMin > 0 && (a = (u = i.getRandomQuality(0, i.getRandomRange(), e, n)).y > a ? u.y : a);
var p = cc.v3(0, 0);
i.isTheEquipType(t.equipmetType, [ f.default.GLOVES, f.default.REMOTE ]) && t.Common.remoteDamage > 0 && (a = (p = n.rand() < .2 ? i.getRandomQuality(0, i.getRandomRange(), e, n) : cc.v3(0, 0)).y > a ? p.y : a);
var h = cc.v3(0, 0);
if (i.isTheEquipType(t.equipmetType, [ f.default.WEAPON, f.default.GLOVES, f.default.CLOTHES, f.default.REMOTE ]) && t.Common.damageMax > 0) {
a = (h = i.getRandomQuality(u.x, u.x + i.getRandomRange(), e, n)).y > a ? h.y : a;
o.prefix += h.y > 2 ? "强力" : "";
o.color = i.getMixColor(o.color, h.y > 2 ? i.COLOR_POWERFUL : "#000000");
}
var d = cc.v3(0, 0);
if (i.isTheEquipType(t.equipmetType, [ f.default.HELMET, f.default.GLOVES, f.default.CLOAK, f.default.TROUSERS, f.default.SHOES, f.default.SHIELD, f.default.CLOTHES ]) && t.Common.defence > 0) {
a = (d = i.getRandomQuality(0, i.getRandomRange(), e, n)).y > a ? d.y : a;
o.prefix += d.y > 2 ? "坚固" : "";
o.color = i.getMixColor(o.color, d.y > 5 ? i.COLOR_STABLE : "#000000");
}
var g = cc.v3(0, 0);
if (i.isTheEquipType(t.equipmetType, [ f.default.WEAPON, f.default.HELMET, f.default.GLOVES, f.default.REMOTE ]) && t.Common.lifeDrain > 0) {
var y = 50 - t.Common.lifeDrain;
y < 5 && (y = 5);
a = (g = i.getRandomQuality(0, y, e, n)).y > a ? g.y : a;
o.prefix += g.y > 2 ? "邪恶" : "";
o.color = i.getMixColor(o.color, g.y > 2 ? i.COLOR_LIFEDRAIN : "#000000");
}
var m = cc.v3(0, 0);
if (i.isTheEquipType(t.equipmetType, [ f.default.WEAPON, f.default.GLOVES, f.default.CLOTHES, f.default.REMOTE ]) && t.Common.damageBack > 0) {
a = (m = i.getRandomQuality(0, i.getRandomRange(), e, n)).y > a ? m.y : a;
o.prefix += m.y > 2 ? "阴冷" : "";
o.color = i.getMixColor(o.color, m.y > 2 ? i.COLOR_BACK : "#000000");
}
var v = cc.v3(0, 0);
if (i.isTheEquipType(t.equipmetType, [ f.default.CLOAK, f.default.TROUSERS, f.default.SHOES, f.default.CLOTHES ]) && t.Common.moveSpeed > 0) {
var E = 5 - t.Common.moveSpeed;
E < 1 && (E = 1);
a = (v = i.getRandomQuality(0, E, e, n)).y > a ? v.y : a;
o.prefix += v.y > 2 ? "灵动" : "";
o.color = i.getMixColor(o.color, v.y > 2 ? i.COLOR_MOVESPEED : "#000000");
}
var _ = cc.v3(0, 0);
if (i.isTheEquipType(t.equipmetType, [ f.default.WEAPON, f.default.GLOVES, f.default.CLOTHES, f.default.REMOTE ]) && t.Common.attackSpeed > 0) {
var T = 30 - t.Common.attackSpeed;
T < 5 && (T = 5);
a = (_ = i.getRandomQuality(0, T, e, n)).y > a ? _.y : a;
o.prefix += _.y > 2 ? "迅捷" : "";
o.color = i.getMixColor(o.color, _.y > 2 ? i.COLOR_ATTACKSPPED : "#000000");
}
var D = cc.v3(0, 0);
if (i.isTheEquipType(t.equipmetType, [ f.default.HELMET, f.default.CLOAK, f.default.TROUSERS, f.default.SHOES, f.default.CLOTHES ]) && t.Common.dodge > 0) {
var S = 30 - t.Common.dodge;
S < 10 && (S = 10);
a = (D = i.getRandomQuality(0, S, e, n)).y > a ? D.y : a;
o.prefix += D.y > 2 ? "飘逸" : "";
o.color = i.getMixColor(o.color, D.y > 2 ? i.COLOR_DODGE : "#000000");
}
var O = cc.v3(0, 0);
if (i.isTheEquipType(t.equipmetType, [ f.default.HELMET, f.default.GLOVES, f.default.CLOAK, f.default.TROUSERS, f.default.SHIELD, f.default.SHOES, f.default.CLOTHES ]) && t.Common.maxHealth > 0) {
a = (O = i.getRandomQuality(0, i.getRandomRange(), e, n)).y > a ? O.y : a;
o.prefix += O.y > 2 ? "健康" : "";
o.color = i.getMixColor(o.color, O.y > 2 ? i.COLOR_HEALTHY : "#000000");
}
var A = cc.v3(0, 0);
if (t.Common.maxDream > 0) {
a = (A = i.getRandomQuality(0, i.getRandomRange(), e, n)).y > a ? A.y : a;
o.prefix += A.y > 2 ? "梦幻" : "";
o.color = i.getMixColor(o.color, A.y > 2 ? i.COLOR_DREAM : "#000000");
}
var R = i.getRandomRange();
if (i.isTheEquipType(t.equipmetType, [ f.default.GLOVES, f.default.REMOTE, f.default.WEAPON ])) {
var C = n.rand() < .1 ? i.getRandomQuality(0, R, e, n) : cc.v3(0, 0);
a = C.y > a ? C.y : a;
o.prefix += C.y > R / 2 ? "锋利" : "";
var P = n.rand() < .1 ? i.getRandomQuality(0, R, e, n) : cc.v3(0, 0);
a = P.y > a ? P.y : a;
o.prefix += P.y > R / 2 ? "神秘" : "";
o.common.realDamage = C.x;
o.common.magicDamage = P.x;
}
var L = n.rand() < .1 ? i.getRandomQuality(30, 60, e, n) : cc.v3(0, 0);
a = L.y > a ? L.y : a;
var b = n.rand() < .05 ? i.getRandomQuality(10, 60, e, n) : cc.v3(0, 0);
a = b.y > a ? b.y : a;
var I = n.rand() < .05 ? i.getRandomQuality(10, 60, e, n) : cc.v3(0, 0);
a = I.y > a ? I.y : a;
o.prefix += I.y > 30 ? "寒冷" : "";
var M = n.rand() < .05 ? i.getRandomQuality(10, 60, e, n) : cc.v3(0, 0);
a = M.y > a ? M.y : a;
o.prefix += M.y > 30 ? "炎热" : "";
var N = n.rand() < .05 ? i.getRandomQuality(10, 60, e, n) : cc.v3(0, 0);
a = N.y > a ? N.y : a;
o.prefix += N.y > 30 ? "闪电" : "";
var w = n.rand() < .05 ? i.getRandomQuality(10, 60, e, n) : cc.v3(0, 0);
a = w.y > a ? w.y : a;
o.prefix += w.y > 30 ? "剧毒" : "";
var H = n.rand() < .05 ? i.getRandomQuality(10, 60, e, n) : cc.v3(0, 0);
a = H.y > a ? H.y : a;
o.prefix += H.y > 30 ? "诅咒" : "";
o.prefix = [ "", "普通的", "精良的", "优秀的", "史诗的", "传说的" ][a] + o.prefix;
o.titlecolor = [ "#dcdcdc", "#ffffff", "#00ff00", "#0000ff", "#800080", "#ffa500" ][a];
o.level = a;
o.color = "#000000" == o.color ? "#ffffff" : o.color;
o.common.criticalStrikeRate = r.x;
o.common.damageMin = u.x;
o.common.damageMax = h.x;
o.common.defence = d.x;
o.common.lifeDrain = g.x;
o.common.damageBack = m.x;
o.common.moveSpeed = v.x;
o.common.attackSpeed = _.x;
o.common.dodge = D.x;
o.common.maxHealth = O.x;
o.common.magicDefence = L.x;
o.common.realRate = b.x;
o.common.iceRate = I.x;
o.common.fireRate = M.x;
o.common.lighteningRate = N.x;
o.common.toxicRate = w.x;
o.common.curseRate = H.x;
o.common.maxDream = A.x;
o.requireLevel = s.default.playerData.OilGoldData.level;
return o;
};
e.getRandomRange = function() {
return 5 + s.default.chapterMaxIndex + Math.floor(s.default.playerData.OilGoldData.level / 5);
};
e.isTheEquipType = function(t, e) {
for (var i = !1, o = 0, a = e; o < a.length; o++) a[o] == t && (i = !0);
return i;
};
e.getRandomQuality = function(t, e, i, o) {
var a = (e - t) / 5, n = o.rand();
if (i && i > 0) switch (i) {
case 1:
n = o.rand() > .5 ? .06 : n;
break;

case 2:
n = o.rand() > .5 ? .08 : n;
break;

case 3:
n = o.rand() > .5 ? .086 : n;
break;

case 4:
n = o.rand() > .5 ? .09 : n;
}
var r = cc.v3(0, 0);
if (n < .05) {
r.x = o.getRandomNum(0, a);
a > 5 && r.x < 5 && (r.x = 5);
r.y = 1;
} else if (n >= .05 && n < .075) {
r.x = o.getRandomNum(a, 2 * a);
r.y = 2;
} else if (n >= .075 && n < .085) {
r.x = o.getRandomNum(2 * a, 3 * a);
r.y = 3;
} else if (n >= .085 && n < .09) {
r.x = o.getRandomNum(3 * a, 4 * a);
r.y = 4;
} else if (n >= .09 && n < .091) {
r.x = o.getRandomNum(4 * a, 5 * a);
r.y = 5;
}
r.x = parseFloat(r.x.toFixed(0));
return r;
};
e.prototype.getEquipment = function(t, e, o, a, n, s) {
var l = cc.instantiate(this.equipment);
l.parent = o;
l.position = e;
l.zIndex = p.default.OVERHEAD;
var c = l.getComponent(u.default);
c.pos = r.default.getIndexInMap(e);
if (a) {
if (s) {
c.shopTable = s;
a.price = 30 * (a.level + 1);
s.data.equipdata = a.clone();
}
c.refresh(a);
} else {
var h = i.getNewEquipData(t, n);
if (s) {
c.shopTable = s;
s.data.equipdata = h.clone();
s.data.price = h.price;
}
c.refresh(h);
}
this.groundList.push(c);
return c;
};
e.getNewEquipData = function(t, e) {
if (0 != t.length) {
var o = new l.default();
o.valueCopy(s.default.equipments[t]);
var a = o.img.substring(o.equipmetType.length);
a.length > 0 && (o.id = o.id + parseInt(a));
o.uuid = o.genNonDuplicateID();
for (var n = 0, r = o.exTriggers; n < r.length; n++) r[n].uuid = o.genNonDuplicateID();
var c = i.getRandomDesc(o, e), u = o.Common.clone().add(c.common);
o.infobase = i.getInfoBase(u);
o.info1 = i.getInfo1(u);
o.info2 = i.getInfo2(u, o);
o.info3 = i.getInfo3(u);
o.suit1 = i.getSuitDesc(o.suitType, 0);
o.suit2 = i.getSuitDesc(o.suitType, 1);
o.suit3 = i.getSuitDesc(o.suitType, 2);
o.infobasecolor = "#fffff0";
o.infocolor1 = "#9370DB";
o.infocolor2 = "#87CEFA";
o.infocolor3 = "#BC8F8F";
o.suitcolor1 = "#FFD700";
o.suitcolor2 = "#FFD700";
o.suitcolor3 = "#FFD700";
o.Common.add(c.common);
o.prefix = c.prefix;
o.titlecolor = c.titlecolor;
if ("#ffffff" != c.color) {
o.color = c.color;
"#ffffff" != o.lightcolor ? o.lightcolor = i.getMixColor(c.color, o.lightcolor) : o.lightcolor = c.color;
}
o.level = c.level;
o.requireLevel = c.requireLevel;
o.price += i.getPrice(o);
return o;
}
};
e.getOriginEquipData = function(t) {
if (0 != t.length) {
var e = new l.default();
e.valueCopy(s.default.equipments[t]);
var o = e.img.substring(e.equipmetType.length);
o.length > 0 && (e.id = e.id + parseInt(o));
e.uuid = e.genNonDuplicateID();
for (var a = 0, n = e.exTriggers; a < n.length; a++) n[a].uuid = e.genNonDuplicateID();
var r = e.Common.clone();
e.infobase = i.getInfoBase(r);
e.info1 = i.getInfo1(r);
e.info2 = i.getInfo2(r, e);
e.info3 = i.getInfo3(r);
e.suit1 = i.getSuitDesc(e.suitType, 0);
e.suit2 = i.getSuitDesc(e.suitType, 1);
e.suit3 = i.getSuitDesc(e.suitType, 2);
e.infobasecolor = "#fffff0";
e.infocolor1 = "#9370DB";
e.infocolor2 = "#87CEFA";
e.infocolor3 = "#BC8F8F";
e.suitcolor1 = "#FFD700";
e.suitcolor2 = "#FFD700";
e.suitcolor3 = "#FFD700";
e.titlecolor = "#FFFFFF";
e.price += i.getPrice(e);
return e;
}
};
e.getSuitDesc = function(t, e) {
if (!s.default.suits[t]) return "";
var o = new g.default();
o.valueCopy(s.default.suits[t]);
if (e >= o.EquipList.length) return "";
var a = "", n = 0 == e ? o.nameCn + "\n" : "";
a += i.getInfoBase(o.EquipList[e].Common) + " ";
a += i.getInfo1(o.EquipList[e].Common) + " ";
a += i.getInfo2(o.EquipList[e].Common, o.EquipList[e]) + " ";
a += i.getInfo3(o.EquipList[e].Common) + " ";
return n + (a += o.EquipList[e].extraInfo).replace("\n", "");
};
e.getInfoBase = function(t) {
var e = "";
e += y.default.getinfoNum2String(0 == t.remoteDamage, "子弹伤害", t.remoteDamage, "\n");
e += y.default.getinfoNum2String(0 == t.remoteDamagePercent, "子弹伤害" + (t.remoteDamagePercent > 0 ? "提升" : "降低"), t.remoteDamagePercent, "%\n");
e += y.default.getinfoNum2String(0 == t.remoteCritRate, " 子弹暴击率", t.remoteCritRate, "\n");
e += y.default.getinfoNum2String(0 == t.remoteCooldown, " 装填时间", t.remoteCooldown / 1e3, "s\n");
e += y.default.getinfoNum2String(0 == t.remoteInterval, "射击间隔", t.remoteInterval / 1e3, "s\n");
e += y.default.getinfoNum2String(0 == t.remoteAngle, "误差角度", t.remoteAngle, "\n");
e += y.default.getinfoNum2String(0 == t.maxAmmo, "弹夹容量" + (t.maxAmmo > 0 ? t.maxAmmo : "∞") + "\n");
e += y.default.getinfoNum2String(0 == t.ammoRecovery, "弹夹回复", t.ammoRecovery, "\n");
e += y.default.getinfoNum2String(0 == t.maxAmmoPercent, "弹夹容量" + (t.maxAmmoPercent > 0 ? "提升" : "降低"), t.maxAmmoPercent, "%\n");
e += y.default.getinfoNum2String(0 == t.ammoRecoveryPercent, "弹夹回复" + (t.ammoRecoveryPercent > 0 ? "提升" : "降低"), t.ammoRecoveryPercent, "%\n");
e += y.default.getinfoNum2String(0 == t.damageMin, "攻击" + t.damageMin + " " + (0 != t.damageMax ? "最大攻击力" + t.damageMax : "") + "\n");
0 == t.damageMin && (e += y.default.getinfoNum2String(0 == t.damageMax, "最大攻击力", t.damageMax, "\n"));
e += y.default.getinfoNum2String(0 == t.damageMinPercent, "攻击" + (t.damageMin > 0 ? "提升" : "降低"), t.damageMin, "%\n");
e += y.default.getinfoNum2String(0 == t.damageMaxPercent, "最大攻击力" + (t.damageMaxPercent > 0 ? "提升" : "降低"), t.damageMaxPercent, "%\n");
e += y.default.getinfoNum2String(0 == t.defence, "防御", t.defence, "\n");
e += y.default.getinfoNum2String(0 == t.defencePercent, "防御" + (t.defencePercent > 0 ? "提升" : "降低"), t.defencePercent, "%\n");
e += y.default.getinfoNum2String(0 == t.maxHealth, "生命", t.maxHealth, "\n");
e += y.default.getinfoNum2String(0 == t.maxHealthPercent, "生命" + (t.maxHealthPercent > 0 ? "提升" : "降低"), t.maxHealthPercent, "%\n");
e += y.default.getinfoNum2String(0 == t.maxDream, "梦境", t.maxDream, "\n");
(e += y.default.getinfoNum2String(0 == t.maxDreamPercent, "梦境" + (t.maxDreamPercent > 0 ? "提升" : "降低"), t.maxDreamPercent, "%\n")).length > 0 && -1 != e.lastIndexOf("\n") && (e = e.substring(0, e.lastIndexOf("\n")));
return e.replace("+-", "-");
};
e.getInfo1 = function(t) {
var e = "";
e += y.default.getinfoNum2String(0 == t.criticalStrikeRate, "暴击", t.criticalStrikeRate, "%\n");
e += y.default.getinfoNum2String(0 == t.lifeDrain, "吸血", t.lifeDrain, "%\n");
e += y.default.getinfoNum2String(0 == t.damageBack, "背刺", t.damageBack, "\n");
e += y.default.getinfoNum2String(0 == t.damageBackPercent, "背刺" + (t.damageBackPercent > 0 ? "提升" : "降低"), t.damageBackPercent, "%\n");
e += y.default.getinfoNum2String(0 == t.moveSpeed, "移速", t.moveSpeed, "\n");
e += y.default.getinfoNum2String(0 == t.moveSpeedPercent, "移速" + (t.moveSpeedPercent > 0 ? "提升" : "降低"), t.moveSpeedPercent, "%\n");
e += y.default.getinfoNum2String(0 == t.attackSpeed, "攻速" + t.attackSpeed + "\n");
e += y.default.getinfoNum2String(0 == t.attackSpeedPercent, "攻速" + (t.attackSpeedPercent > 0 ? "提升" : "降低"), t.attackSpeedPercent, "%\n");
e += y.default.getinfoNum2String(0 == t.dodge, "闪避", t.dodge, "%\n");
e += y.default.getinfoNum2String(0 == t.blockDamage, "弹反伤害", t.blockDamage, "\n");
e += y.default.getinfoNum2String(0 == t.blockPhysical, "格挡物免", t.blockPhysical, "%\n");
(e += y.default.getinfoNum2String(0 == t.blockMagic, "格挡魔免", t.blockMagic, "%\n")).length > 0 && -1 != e.lastIndexOf("\n") && (e = e.substring(0, e.lastIndexOf("\n")));
return e.replace("+-", "-");
};
e.getInfo2 = function(t, e) {
var i = "";
i += e && e.isReflect > 0 ? "反弹子弹\n" : "";
i += y.default.getinfoNum2String(0 == t.realDamage, "攻击附加", t.realDamage, "点流血伤害\n");
i += y.default.getinfoNum2String(0 == t.realDamagePercent, "流血伤害" + (t.realDamagePercent > 0 ? "提升" : "降低"), t.realDamagePercent, "%\n");
i += y.default.getinfoNum2String(0 == t.realRate, "攻击有", t.realRate, "%几率释放流血\n");
i += y.default.getinfoNum2String(0 == t.magicDamage, "攻击附加", t.magicDamage, "点元素伤害\n");
i += y.default.getinfoNum2String(0 == t.magicDamagePercent, "元素伤害" + (t.magicDamagePercent > 0 ? "提升" : "降低"), t.magicDamagePercent, "%\n");
i += y.default.getinfoNum2String(0 == t.iceRate, "攻击有", t.iceRate, "%几率释放冰冻\n");
i += y.default.getinfoNum2String(0 == t.fireRate, "攻击有", t.fireRate, "%几率释放燃烧\n");
i += y.default.getinfoNum2String(0 == t.lighteningRate, "攻击有", t.lighteningRate, "%几率释放闪电\n");
i += y.default.getinfoNum2String(0 == t.toxicRate, "毒攻击有", t.toxicRate, "%几率释放毒素\n");
(i += y.default.getinfoNum2String(0 == t.curseRate, "攻击有", t.curseRate, "%几率释放诅咒\n")).length > 0 && -1 != i.lastIndexOf("\n") && (i = i.substring(0, i.lastIndexOf("\n")));
return i.replace("+-", "-");
};
e.getInfo3 = function(t) {
var e = "";
(e += y.default.getinfoNum2String(0 == t.magicDefence, "元素抗性", t.magicDefence, "%\n")).length > 0 && -1 != e.lastIndexOf("\n") && (e = e.substring(0, e.lastIndexOf("\n")));
return e.replace("+-", "-");
};
e.prototype.start = function() {};
e.getMixColor = function(t, e) {
var i = cc.color().fromHEX(t), o = cc.color().fromHEX(e), a = cc.color(), n = i.getR() + o.getR(), r = i.getG() + o.getG(), s = i.getB() + o.getB();
a.setR(n > 255 ? 255 : n);
a.setG(r > 255 ? 255 : r);
a.setB(s > 255 ? 255 : s);
return "#" + a.toHEX("#rrggbb");
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.getPrice = function(t) {
var e = 0;
if (t.test > 0) return 0;
e += 5 * t.Common.maxHealth;
e += 10 * t.Common.maxDream;
e += 10 * t.Common.damageMin;
e += 5 * t.Common.damageMax;
e += 5 * t.Common.damageBack;
e += 3 * t.Common.criticalStrikeRate;
e += 5 * t.Common.defence;
e += t.Common.blockPhysical / 2;
e += t.Common.blockMagic / 2;
e += 5 * t.Common.blockDamage;
e += t.Common.lifeDrain;
t.Common.moveSpeed < 0 ? e += -20 : e += 50 * t.Common.moveSpeed;
t.Common.jumpSpeed < 0 ? e += -20 : e += 20 * t.Common.jumpSpeed;
t.Common.jumpHeight < 0 ? e += -20 : e += 20 * t.Common.jumpHeight;
t.Common.attackSpeed < 0 ? e += -10 : e += t.Common.attackSpeed;
e += 2 * t.Common.dodge;
t.Common.remoteCooldown > 0 ? e += Math.floor(1e3 / t.Common.remoteCooldown * 20) : e += Math.floor(t.Common.remoteCooldown / 20);
t.Common.remoteInterval > 0 ? e += Math.floor(1e3 / t.Common.remoteInterval * 20) : e += Math.floor(t.Common.remoteInterval / 20);
e += 2 * t.Common.maxAmmo;
e += 10 * t.Common.ammoRecovery;
e += 30 * t.Common.remoteDamage;
e += t.Common.remoteCritRate;
e += 20 * t.Common.realDamage;
e += 2 * t.Common.realRate;
e += 10 * t.Common.magicDamage;
e += t.Common.magicDefence;
e += t.Common.iceRate;
e += 2 * t.Common.fireRate;
e += t.Common.lighteningRate;
e += 2 * t.Common.toxicRate;
e += 2 * t.Common.curseRate;
e += 10 * t.Common.maxHealthPercent;
e += 10 * t.Common.maxDreamPercent;
e += 10 * t.Common.maxAmmoPercent;
e += 10 * t.Common.damageMinPercent;
e += 10 * t.Common.damageMaxPercent;
e += 10 * t.Common.damageBackPercent;
e += 10 * t.Common.defencePercent;
e += 10 * t.Common.moveSpeedPercent;
e += 10 * t.Common.jumpSpeedPercent;
e += 10 * t.Common.jumpHeightPercent;
e += 10 * t.Common.attackSpeedPercent;
e += 10 * t.Common.remoteDamagePercent;
e += 10 * t.Common.realDamagePercent;
return (e += 10 * t.Common.magicDamagePercent) > 0 ? Math.floor(e) : 0;
};
e.prototype.updateLogic = function(t, e) {
if (this.isCheckTimeDelay(t)) {
for (var i = 200, o = null, a = this.groundList.length - 1; a >= 0; a--) {
var n = this.groundList[a];
n.highLight(!1);
if (!n.isTaken && n.isValid) {
var r = s.default.getDistanceNoSqrt(n.node.position, e.node.position);
if (r < i) {
i = r;
o = n;
}
} else this.groundList.splice(a, 1);
}
if (i < 64 && o) {
o.highLight(!0);
if (!this.lastGroundEquip || this.lastGroundEquip.uuid != o.uuid) {
cc.tween(o.taketips).to(.2, {
opacity: 255
}).delay(1).to(.2, {
opacity: 0
}).start();
d.EventHelper.emit(d.EventHelper.HUD_GROUND_EQUIPMENT_INFO_SHOW, {
worldPos: o.node.convertToWorldSpaceAR(cc.v3(64, 32)),
equipData: o.data
});
}
this.lastGroundEquip = o;
} else {
this.lastGroundEquip = null;
d.EventHelper.emit(d.EventHelper.HUD_GROUND_EQUIPMENT_INFO_HIDE);
}
}
};
var i;
e.EMPTY = "emptyequipment";
e.WEAPON_DINNERFORK = "weapon000";
e.WEAPON_KNIFE = "weapon001";
e.WEAPON_CHOPPER = "weapon002";
e.WEAPON_HUGEBLADE = "weapon003";
e.WEAPON_PITCHFORK = "weapon004";
e.WEAPON_HUGEAXE = "weapon005";
e.WEAPON_CROWBAR = "weapon006";
e.WEAPON_KATANA = "weapon007";
e.WEAPON_FRUITKNIFE = "weapon008";
e.WEAPON_HAPPYFIRE = "weapon009";
e.WEAPON_SADICE = "weapon010";
e.WEAPON_EGYPTWAND = "weapon011";
e.WEAPON_TOXICDAGGER = "weapon012";
e.WEAPON_OLDROOTDAGGER = "weapon013";
e.WEAPON_COOKCHOPPER = "weapon014";
e.WEAPON_LIGHTENINGBLADE = "weapon015";
e.WEAPON_JUNGLEFORK = "weapon016";
e.WEAPON_KUNAI = "weapon017";
e.WEAPON_DEATH = "weapon018";
e.WEAPON_SHADOW = "weapon019";
e.WEAPON_BLOOD = "weapon020";
e.WEAPON_WINE_BOTTLE = "weapon032";
e.WEAPON_WOOD_SWORD = "weapon039";
e.WEAPON_WOOD_HAMMER = "weapon040";
e.WEAPON_WOOD_DAGGER = "weapon041";
e.WEAPON_WOOD_SPEAR = "weapon042";
e.WEAPON_WOOD_LONG_STICK = "weapon043";
e.WEAPON_WOOD_LONG_CROSS = "weapon044";
e.WEAPON_BROKEN_GLASS = "weapon045";
e.REMOTE_CROSSBOW = "remote001";
e.REMOTE_LONGBOW = "remote002";
e.REMOTE_WAND = "remote003";
e.REMOTE_ALIENGUN = "remote004";
e.REMOTE_WINCHESTER = "remote005";
e.REMOTE_RPG = "remote006";
e.REMOTE_SHURIKEN = "remote007";
e.REMOTE_CHICKEN = "remote008";
e.REMOTE_OLDGUN = "remote009";
e.REMOTE_BASKETBALL = "remote011";
e.SHIELD_CIRCLE = "shield000";
e.SHIELD_CARDOOR = "shield001";
e.SHIELD_POLICE = "shield002";
e.CLOTHES_VEST = "clothes001";
e.CLOTHES_SHIRT = "clothes002";
e.CLOTHES_NAVY = "clothes003";
e.CLOTHES_PIRATE = "clothes004";
e.CLOTHES_BUCKET = "clothes005";
e.CLOTHES_REDROBE = "clothes006";
e.CLOTHES_WHITEROBE = "clothes007";
e.CLOTHES_GENTLEMAN = "clothes008";
e.CLOTHES_RADIATION = "clothes009";
e.CLOTHES_JUNGLE = "clothes010";
e.CLOTHES_PHARAOH = "clothes011";
e.CLOTHES_KNIGHT = "clothes012";
e.CLOTHES_DEATH = "clothes013";
e.CLOTHES_ENERGY = "clothes014";
e.CLOTHES_CAI = "clothes026";
e.HELMET_BUCKETHAT = "helmet002";
e.HELMET_PIRATEHAT = "helmet003";
e.HELMET_REDHAT = "helmet004";
e.HELMET_WHITEHAT = "helmet005";
e.HELMET_PHARAOH = "helmet006";
e.HELMET_CAT = "helmet007";
e.HELMET_CHIEF = "helmet008";
e.HELMET_HORUS = "helmet009";
e.HELMET_GENTLEMAN = "helmet010";
e.HELMET_CHICKEN = "helmet011";
e.HELMET_DUCK = "helmet012";
e.HELMET_GOOSE = "helmet013";
e.HELMET_RADIATION = "helmet014";
e.HELMET_JUNGLE = "helmet015";
e.HELMET_ANUBIS = "helmet016";
e.HELMET_KNIGHT = "helmet017";
e.HELMET_DEATH = "helmet018";
e.HELMET_ENERY = "helmet019";
e.CLOAK_WARRIOR = "cloak001";
e.TROUSERS_LONG = "trousers001";
e.TROUSERS_SHORT = "trousers002";
e.TROUSERS_RADIATION = "trousers003";
e.TROUSERS_JUNGLE = "trousers004";
e.TROUSERS_PHARAOH = "trousers005";
e.TROUSERS_KNIGHT = "trousers006";
e.TROUSERS_DEATH = "trousers007";
e.TROUSERS_ENERGY = "trousers008";
e.GLOVES_WARRIOR = "gloves001";
e.GLOVES_DEMON = "gloves002";
e.GLOVES_BLOODCRAW = "gloves003";
e.GLOVES_RADIATION = "gloves004";
e.GLOVES_JUNGLE = "gloves005";
e.GLOVES_PHARAOH = "gloves006";
e.GLOVES_KNIGHT = "gloves007";
e.GLOVES_DEATH = "gloves008";
e.GLOVES_ENERGY = "gloves009";
e.SHOES_WARRIOR = "shoes001";
e.SHOES_SKATEBOARD = "shoes002";
e.SHOES_DEMON = "shoes003";
e.SHOES_RADIATION = "shoes004";
e.SHOES_JUNGLE = "shoes005";
e.SHOES_PHARAOH = "shoes006";
e.SHOES_KNIGHT = "shoes007";
e.SHOES_DEATH = "shoes008";
e.SHOES_ENERGY = "shoes009";
e.COLOR_CRITICALSTRIKE = "#DC143C";
e.COLOR_ATTACKSPPED = "#5F9EA0";
e.COLOR_MOVESPEED = "#00BFFF";
e.COLOR_DODGE = "#FFFF00";
e.COLOR_STABLE = "#DEB887";
e.COLOR_POWERFUL = "#ADFF2F";
e.COLOR_HEALTHY = "#90EE90";
e.COLOR_LIFEDRAIN = "#FFC0CB";
e.COLOR_BACK = "#9370DB";
e.COLOR_DREAM = "#800080";
n([ E(cc.Prefab) ], e.prototype, "equipment", void 0);
return i = n([ v ], e);
}(h.default);
i.default = _;
cc._RF.pop();
}, {
"../data/EquipmentData": "EquipmentData",
"../data/EquipmentDescData": "EquipmentDescData",
"../data/SuitData": "SuitData",
"../equipment/Equipment": "Equipment",
"../logic/Dungeon": "Dungeon",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../utils/DataUtils": "DataUtils",
"../utils/IndexZ": "IndexZ",
"./BaseManager": "BaseManager",
"./InventoryManager": "InventoryManager"
} ],
EquipmentStringData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "92198gP7T1AvKS5hasHWtsb", "EquipmentStringData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.nameCn = "";
this.nameEn = "";
this.equipmetType = "empty";
this.desc = "";
this.img = "emptyequipment";
this.maxHealth = 0;
this.maxDream = 0;
this.damageMin = 0;
this.damageMax = 0;
this.criticalStrikeRate = 0;
this.defence = 0;
this.lifeDrain = 0;
this.damageBack = 0;
this.moveSpeed = 0;
this.attackSpeed = 0;
this.jumpSpeed = 0;
this.jumpHeight = 0;
this.dodge = 0;
this.remoteCooldown = 0;
this.remoteDamage = 0;
this.remoteCritRate = 0;
this.remoteInterval = 0;
this.realDamage = 0;
this.realRate = 0;
this.magicDamage = 0;
this.magicDefence = 0;
this.iceRate = 0;
this.fireRate = 0;
this.lighteningRate = 0;
this.toxicRate = 0;
this.curseRate = 0;
this.stab = 0;
this.far = 0;
this.trouserslong = 0;
this.bulletType = "";
this.bulletSize = 0;
this.bulletArcExNum = 0;
this.bulletLineExNum = 0;
this.bulletLineInterval = 0;
this.showShooter = 0;
this.isHeavy = 0;
this.isLineAim = 0;
this.hideHair = 0;
this.bulletExSpeed = 0;
}
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t);
this.img = t.img ? t.img : "emptyequipment";
}
};
t.prototype.valueCopySelf = function(t) {
if (t) {
o.default.baseCopy(this, t);
this.img = t.img ? t.img : "emptyequipment";
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopySelf(this);
return e;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
Equipment: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "46d3aM6X2VOCJtzuWiGZaWE", "Equipment");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../ecs/component/MoveComponent"), s = t("../logic/Logic"), l = t("../data/EquipmentData"), c = t("../logic/EventHelper"), u = t("../logic/Dungeon"), p = t("../utils/AudioPlayer"), h = t("../logic/Achievement"), d = t("../manager/InventoryManager"), f = t("../base/BaseNodeComponent"), g = cc._decorator, y = g.ccclass, m = g.property, v = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.root = null;
e.sprite = null;
e.shadow = null;
e.data = new l.default();
e.pos = cc.v3(0, 0);
e.isTaken = !1;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.isTaken = !1;
this.taketips = this.sprite.node.getChildByName("taketips");
this.entity.NodeRender.root = this.root;
};
e.prototype.refresh = function(t) {
this.data.valueCopy(t);
var e = s.default.spriteFrameRes(this.data.img);
t.equipmetType == d.default.TROUSERS && (e = 1 == t.trouserslong ? s.default.spriteFrameRes("trousers000") : e);
this.sprite.node.scale = 4;
this.shadow.node.scale = 4;
if (t.equipmetType == d.default.CLOTHES) e = s.default.spriteFrameRes(this.data.img + "anim0"); else if (t.equipmetType == d.default.HELMET) e = s.default.spriteFrameRes(this.data.img + "anim0"); else if (t.equipmetType == d.default.REMOTE) e = s.default.spriteFrameRes(this.data.img + "anim0"); else if (t.equipmetType == d.default.WEAPON) {
this.sprite.node.scale = 3;
this.shadow.node.scale = 3;
}
this.sprite.spriteFrame = e;
this.sprite.node.width = e.getOriginalSize().width;
this.sprite.node.height = e.getOriginalSize().height;
this.shadow.spriteFrame = this.sprite.spriteFrame;
var i = cc.color(255, 255, 255).fromHEX(this.data.color);
this.sprite.node.color = i;
this.mat = this.sprite.getMaterial(0);
this.mat.setProperty("textureSizeWidth", e.getTexture().width * this.sprite.node.scaleX);
this.mat.setProperty("textureSizeHeight", e.getTexture().height * this.sprite.node.scaleY);
this.mat.setProperty("outlineColor", cc.color(200, 200, 200));
this.highLight(!1);
if ("remote" == t.equipmetType) {
this.sprite.node.width = this.sprite.node.width / 2;
this.sprite.node.height = this.sprite.node.height / 2;
}
this.shadow.node.width = this.sprite.node.width;
this.shadow.node.height = this.sprite.node.height;
this.data.pos = u.default.getIndexInMap(this.node.position.clone());
this.entity.Move.linearVelocityZ = 6;
this.shadow.node.angle = this.sprite.node.angle;
this.entity.Transform.position = this.node.position.clone();
};
e.prototype.fly = function(t) {
if (t) {
this.entity.Move.gravity = 0;
this.entity.Transform.z <= 0 ? this.entity.Move.linearVelocityZ = 4 : this.entity.Transform.z > 32 && (this.entity.Move.linearVelocityZ = 0);
} else this.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY;
};
e.prototype.highLight = function(t) {
this.mat || (this.mat = this.sprite.getComponent(cc.Sprite).getMaterial(0));
this.fly(t);
this.mat.setProperty("openOutline", t ? 1 : 0);
};
e.prototype.start = function() {
this.anim = this.getComponent(cc.Animation);
};
e.prototype.onEnable = function() {};
e.prototype.taken = function(t) {
if (this.isTaken) return !1;
if (!this.shopTable) {
this._taken(t);
return !0;
}
if (s.default.coins >= this.data.price) {
c.EventHelper.emit(c.EventHelper.HUD_ADD_COIN, {
count: -this.data.price
});
var e = [ p.default.COIN, p.default.COIN1, p.default.COIN2 ];
p.default.play(e[s.default.getRandomNum(0, e.length - 1)]);
this.shopTable.sale(!0);
this._taken(t);
return !0;
}
return !1;
};
e.prototype._taken = function(t) {
var e = this;
this.isTaken = !0;
this.anim.play("EquipmentTaken");
h.default.addEquipsAchievement(this.data.img);
c.EventHelper.emit(c.EventHelper.PLAYER_CHANGEEQUIPMENT, {
equipmetType: this.data.equipmetType,
equipData: this.data,
isReplace: t
});
this.node.getChildByName("shadow").active = !1;
c.EventHelper.emit(c.EventHelper.HUD_GROUND_EQUIPMENT_INFO_HIDE);
this.scheduleOnce(function() {
e.node && e.destroyEntityNode();
}, 1);
var i = s.default.mapManager.getCurrentMapEquipments(), o = new Array();
if (i) for (var a = 0, n = i; a < n.length; a++) {
var r = n[a];
r.uuid && r.uuid != this.data.uuid && o.push(r);
}
s.default.mapManager.setCurrentEquipmentsArr(o);
p.default.play(p.default.PICK_UP);
};
n([ m(cc.Node) ], e.prototype, "root", void 0);
n([ m(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ m(cc.Sprite) ], e.prototype, "shadow", void 0);
return n([ y ], e);
}(f.default);
i.default = v;
cc._RF.pop();
}, {
"../base/BaseNodeComponent": "BaseNodeComponent",
"../data/EquipmentData": "EquipmentData",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/InventoryManager": "InventoryManager",
"../utils/AudioPlayer": "AudioPlayer",
"./../ecs/component/MoveComponent": "MoveComponent"
} ],
EventHelper: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4128feS00VLAILEQToHDge5", "EventHelper");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.EventHelper = void 0;
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.emit = function(t, e) {
e ? cc.director.emit(t, {
detail: e
}) : cc.director.emit(t);
};
e.on = function(t, e) {
cc.director.on(t, function(t) {
e(t ? t.detail : {});
});
};
e.off = function(t) {
cc.director.off(t);
};
e.PLAYER_MOVE = "PLAYER_MOVE";
e.PLAYER_ROTATE = "PLAYER_ROTATE";
e.PLAYER_TRIGGER = "PLAYER_TRIGGER";
e.PLAYER_USEITEM = "PLAYER_USEITEM";
e.USEITEM_KEYBOARD = "USEITEM_KEYBOARD";
e.KEYBOARD_INTERACT = "KEYBOARD_INTERACT";
e.KEYBOARD_MOVE = "KEYBOARD_MOVE";
e.PLAYER_SKILL = "PLAYER_SKILL";
e.PLAYER_SKILL1 = "PLAYER_SKILL1";
e.PLAYER_ATTACK = "PLAYER_ATTACK";
e.PLAYER_REMOTEATTACK = "PLAYER_REMOTEATTACK";
e.PLAYER_REMOTEATTACK_CANCEL = "PLAYER_REMOTEATTACK_CANCEL";
e.PLAYER_JUMP = "PLAYER_JUMP";
e.PLAYER_JUMP_CANCEL = "PLAYER_JUMP_CANCEL";
e.PLAYER_DASH = "PLAYER_DASH";
e.PLAYER_GETITEM = "PLAYER_GETITEM";
e.PLAYER_USEDREAM = "PLAYER_USEDREAM";
e.PLAYER_CHANGEITEM = "PLAYER_CHANGEITEM";
e.PLAYER_CHANGEEQUIPMENT = "PLAYER_CHANGEEQUIPMENT";
e.PLAYER_EQUIPMENT_REFRESH = "PLAYER_EQUIPMENT_REFRESH";
e.PLAYER_ITEM_REFRESH = "PLAYER_ITEM_REFRESH";
e.PLAYER_STATUSUPDATE = "PLAYER_STATUSUPDATE";
e.PLAYER_EXIT_FROM_SETTINGS = "PLAYER_EXIT_FROM_SETTINGS";
e.PLAYER_UPDATE_OILGOLD_DATA = "PLAYER_UPDATE_OILGOLD_DATA";
e.PLAYER_SHOW_FLASHLIGHT = "PLAYER_SHOW_FLASHLIGHT";
e.INVENTORY_CHANGEITEM = "INVENTORY_CHANGEITEM";
e.CHANGE_MINIMAP = "CHANGE_MINIMAP";
e.OPEN_MINIMAP = "OPEN_MINIMAP";
e.HUD_ADD_COIN = "HUD_ADD_COIN";
e.HUD_ADD_REAL_COIN = "HUD_ADD_REAL_COIN";
e.HUD_ADD_OILGOLD = "HUD_ADD_OILGOLD";
e.HUD_LOSE_OILGOLD = "HUD_LOSE_OILGOLD";
e.HUD_OILGOLD_LOSE_SHOW = "HUD_OILGOLD_LOSE_SHOW";
e.HUD_OILGOLD_RECOVERY_SHOW = "HUD_OILGOLD_RECOVERY_SHOW";
e.HUD_STOP_COUNTTIME = "HUD_STOP_COUNTTIME";
e.HUD_LIGHT_CONTROLLER = "HUD_LIGHT_CONTROLLER";
e.HUD_CHANGE_CONTROLLER_SHIELD = "HUD_CHANGE_CONTROLLER_SHIELD";
e.HUD_CONTROLLER_COOLDOWN = "HUD_CONTROLLER_COOLDOWN";
e.HUD_CONTROLLER_UPDATE_GAMEPAD = "HUD_CONTROLLER_UPDATE_GAMEPAD";
e.HUD_CONTROLLER_INTERACT_SHOW = "HUD_CONTROLLER_INTERACT_SHOW";
e.HUD_CONTROLLER_REMOTE_SHOW = "HUD_CONTROLLER_REMOTE_SHOW";
e.HUD_DAMAGE_CORNER_SHOW = "HUD_DAMAGE_CORNER_SHOW";
e.HUD_GROUND_EQUIPMENT_INFO_SHOW = "HUD_GROUND_EQUIPMENT_INFO_SHOW";
e.HUD_GROUND_EQUIPMENT_INFO_HIDE = "HUD_GROUND_EQUIPMENT_INFO_HIDE";
e.HUD_GROUND_ITEM_INFO_SHOW = "HUD_GROUND_ITEM_INFO_SHOW";
e.HUD_GROUND_ITEM_INFO_HIDE = "HUD_GROUND_ITEM_INFO_HIDE";
e.HUD_FADE_IN = "HUD_FADE_IN";
e.HUD_FADE_OUT = "HUD_FADE_OUT";
e.HUD_COMPLETE_SHOW = "HUD_COMPLETE_SHOW";
e.HUD_DOLL_MACHINE_DIALOG = "HUD_DOLL_MACHINE_DIALOG";
e.HUD_MART_SHELVES_DIALOG = "HUD_MART_SHELVES_DIALOG";
e.HUD_MART_SHELVES_DIALOG_PAY = "HUD_MART_SHELVES_DIALOG_BUY";
e.HUD_CAMERA_ZOOM_IN = "HUD_CAMERA_ZOOM_IN";
e.HUD_CAMERA_ZOOM_OUT = "HUD_CAMERA_ZOOM_OUT";
e.HUD_CANCEL_OR_PAUSE = "HUD_CANCEL_OR_PAUSE";
e.HUD_DIALOGUE_SKIP = "HUD_DIALOGUE_SKIP";
e.HUD_DIALOGUE_BUTTON = "HUD_DIALOGUE_BUTTON";
e.DUNGEON_SETEQUIPMENT = "DUNGEON_SETEQUIPMENT";
e.DUNGEON_ADD_ITEM = "DUNGEON_ADD_ITEM";
e.DUNGEON_SHAKEONCE = "DUNGEON_SHAKEONCE";
e.DUNGEON_ADD_COIN = "DUNGEON_ADD_COIN";
e.DUNGEON_ADD_OILGOLD = "DUNGEON_ADD_OILGOLD";
e.DUNGEON_ADD_FALLSTONE = "DUNGEON_ADD_FALLSTONE";
e.DUNGEON_ADD_LIGHTENINGFALL = "DUNGEON_ADD_LIGHTENINGFALL";
e.DUNGEON_ADD_FLOORPAPER = "DUNGEON_ADD_FLOORPAPER";
e.DUNGEON_WALL_COLLIDER = "DUNGEON_WALL_COLLIDER";
e.DUNGEON_DISAPPEAR = "DUNGEON_DISAPPEAR";
e.MONSTER_STATUSUPDATE = "MONSTER_STATUSUPDATE";
e.BOSS_ADDSLIME = "BOSS_ADDSLIME";
e.HUD_UPDATE_PLAYER_INFODIALOG = "HUD_UPDATE_PLAYER_INFO_DIALOG";
e.HUD_UPDATE_PLAYER_HEALTHBAR = "HUD_UPDATE_PLAYER_HEALTHBAR";
e.HUD_UPDATE_PLAYER_DREAMBAR = "HUD_UPDATE_PLAYER_DREAMBAR";
e.HUD_SHAKE_PLAYER_DREAMBAR = "HUD_SHAKE_PLAYER_DREAMBAR";
e.HUD_UPDATE_PLAYER_LIFE_BAR = "HUD_UPDATE_PLAYER_LIFE_BAR";
e.HUD_UPDATE_PLAYER_AMMO = "HUD_UPDATE_PLAYER_AMMO";
e.HUD_INVENTORY_SHOW = "HUD_INVENTORY_SHOW";
e.HUD_CELLPHONE_SHOW = "HUD_CELLPHONE_SHOW";
e.HUD_ACTION_SETTING_DIALOG = "HUD_ACTION_SETTING_DIALOG";
e.HUD_INVENTORY_SELECT_UPDATE = "HUD_INVENTORY_SELECT_UPDATE";
e.HUD_INVENTORY_ITEM_UPDATE = "HUD_INVENTORY_ITEM_UPDATE";
e.HUD_INVENTORY_EQUIP_UPDATE = "HUD_INVENTORY_EQUIP_UPDATE";
e.HUD_INVENTORY_ALL_UPDATE = "HUD_INVENTORY_ALL_UPDATE";
e.HUD_TOAST = "HUD_TOAST";
e.HUD_TIME_TICK = "HUD_TIME_TICK";
e.HUD_DIALOGUE_SHOW = "HUD_DIALOGUE_SHOW";
e.HUD_FURNITURE_REFRESH = "HUD_FURNITURE_REFRESH";
e.HUD_SHOW_FLOATING_LABEL = "HUD_SHOW_FLOATING_LABEL";
e.POOL_DESTROY_LABEL = "POOL_DESTROY_LABEL";
e.TALENT_TREE_UPDATE = "TALENT_TREE_UPDATE";
e.TALENT_TREE_SELECT = "TALENT_TREE_SELECT";
e.PLAY_AUDIO = "PLAY_AUDIO";
e.STOP_ALL_AUDIO_EFFECT = "STOP_ALL_AUDIO_EFFECT";
e.STOP_AUDIO_EFFECT = "STOP_AUDIO_EFFECT";
e.CAMERA_SHAKE = "CAMERA_SHAKE";
e.CAMERA_LOOK = "CAMERA_LOOK";
e.CHUNK_LOAD = "CHUNK_LOAD";
e.POOL_DESTORY_WALKSMOKE = "destorysmoke";
e.POOL_DESTORY_BLOCKLIGHT = "destoryblocklight";
e.POOL_DESTORY_FIREGHLOST = "destoryfireghost";
e.POOL_DESTORY_REFLECTLIGHT = "destoryreflectlight";
e.POOL_DESTORY_HIT_BLOOD = "POOL_DESTORY_HIT_BLOOD";
e.TEST_SHOW_NODE_COUNT = "TEST_SHOW_NODE_COUNT";
e.SETTINGS_LOW_POWER = "SETTINGS_LOW_POWER";
e.LOADING_ICON = "LOADING_ICON";
e.EDITOR_SHOW_SPRITE_INFO = "EDITOR_SHOW_SPRITE_INFO";
e.eventHandler = new cc.Node();
return n([ s ], e);
}(cc.Component));
i.EventHelper = l;
cc._RF.pop();
}, {} ],
EvilEye: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4c205mgXoJFWIARHvt3fCFo", "EvilEye");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Shooter"), l = t("../data/DamageData"), c = t("../manager/StatusManager"), u = t("./Boss"), p = t("../utils/NextStep"), h = t("../utils/AudioPlayer"), d = t("../data/FromData"), f = t("../logic/Achievement"), g = t("../utils/ActorUtils"), y = t("../logic/Logic"), m = t("../collider/CCollider"), v = t("../ecs/component/MoveComponent"), E = t("../utils/Utils"), _ = cc._decorator, T = _.ccclass, D = (_.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.timeDelay = 0;
e.isMoving = !1;
e.viceEyesFireSkill = new p.default();
e.mainEyesFireSkill = new p.default();
e.dashSkill = new p.default();
e.isHalfBlood = !1;
e.actionTimeDelay = 0;
return e;
}
e.prototype.init = function() {
throw new Error("Method not implemented.");
};
e.prototype.onLoad = function() {
this.sc.isDied = !1;
this.sc.isShow = !1;
this.graphics = this.getComponent(cc.Graphics);
this.anim = this.getComponent(cc.Animation);
this.shooter = this.node.getChildByName("Shooter").getComponent(s.default);
this.statusManager = this.node.getChildByName("StatusManager").getComponent(c.default);
this.viceEyes = new Array();
this.viceEyes.push(this.node.getChildByName("sprite").getChildByName("limb1").getChildByName("tentacle1").getChildByName("tentacle2").getChildByName("tentacle3").getChildByName("eye"));
this.viceEyes.push(this.node.getChildByName("sprite").getChildByName("limb2").getChildByName("tentacle1").getChildByName("tentacle2").getChildByName("tentacle3").getChildByName("eye"));
this.viceEyes.push(this.node.getChildByName("sprite").getChildByName("limb3").getChildByName("tentacle1").getChildByName("tentacle2").getChildByName("tentacle3").getChildByName("eye"));
this.viceEyes.push(this.node.getChildByName("sprite").getChildByName("limb4").getChildByName("tentacle1").getChildByName("tentacle2").getChildByName("tentacle3").getChildByName("eye"));
this.viceEyes.push(this.node.getChildByName("sprite").getChildByName("limb5").getChildByName("tentacle1").getChildByName("tentacle2").getChildByName("tentacle3").getChildByName("eye"));
this.viceEyes.push(this.node.getChildByName("sprite").getChildByName("limb6").getChildByName("tentacle1").getChildByName("tentacle2").getChildByName("tentacle3").getChildByName("eye"));
this.viceShooters = new Array();
this.viceShooters.push(this.node.getChildByName("Shooter1").getComponent(s.default));
this.viceShooters.push(this.node.getChildByName("Shooter2").getComponent(s.default));
this.viceShooters.push(this.node.getChildByName("Shooter3").getComponent(s.default));
this.viceShooters.push(this.node.getChildByName("Shooter4").getComponent(s.default));
this.viceShooters.push(this.node.getChildByName("Shooter5").getComponent(s.default));
this.viceShooters.push(this.node.getChildByName("Shooter6").getComponent(s.default));
var t = d.default.getClone(this.actorName(), "evileyeeye");
this.shooter.from.valueCopy(t);
for (var e = 0, i = this.viceShooters; e < i.length; e++) i[e].from.valueCopy(t);
};
e.prototype.start = function() {
t.prototype.start.call(this);
};
e.prototype.takeDamage = function(t) {
var e = this;
if (this.sc.isDied || !this.sc.isShow || this.anim.getAnimationState("EvilEyeHurt").isPlaying) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
if (this.data.currentHealth < this.data.Common.MaxHealth / 2 && !this.isHalfBlood) {
this.isHalfBlood = !0;
this.anim.play("EvilEyeHurt");
this.scheduleOnce(function() {
e.anim.play("EvilEyeBite");
}, 2.5);
}
var i = [ h.default.MONSTER_HIT, h.default.MONSTER_HIT1, h.default.MONSTER_HIT2 ];
h.default.play(i[y.default.getRandomNum(0, 2)]);
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
f.default.addMonsterKillAchievement(this.data.resName);
cc.tween(this.node).to(3, {
opacity: 0
}).start();
this.sc.isDied = !0;
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
this.getLoot();
}
};
e.prototype.bossAction = function() {
if (!this.sc.isDied && this.sc.isShow && this.dungeon) {
this.entity.Transform.position = r.default.fixOuterMap(this.entity.Transform.position);
this.pos = r.default.getIndexInMap(this.entity.Transform.position);
this.changeZIndex();
var t = this.getMovePos(), e = this.getNearPlayerDistance(this.dungeon.player.node), i = this.data.currentHealth < this.data.Common.MaxHealth / 2;
e < 100 && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
this.mainEyesFireSkill.IsExcuting || !i || this.anim.getAnimationState("EvilEyeHurt").isPlaying || this.dash();
this.fireWithViceEyes(i);
this.dashSkill.IsExcuting || this.fireWithMainEye();
if (!t.equals(cc.Vec3.ZERO) && e > 100 && !this.shooter.isAiming && !this.dashSkill.IsExcuting) {
t = t.normalizeSelf();
this.move(t, 1);
}
}
};
e.prototype.getMovePos = function() {
var t = this.dungeon.player.pos.clone(), e = r.default.getPosInMap(t);
e.y += 32;
(e = e.sub(this.entity.Transform.position)).x;
return e;
};
e.prototype.fireWithViceEyes = function(t) {
var e = this;
this.viceEyesFireSkill.next(function() {
e.viceEyesFireSkill.IsExcuting = !0;
e.scheduleOnce(function() {
e.viceEyesFireSkill.IsExcuting = !1;
}, 2);
t ? e.schedule(function() {
e.fireViceBullet();
}, .5, 2, 0) : e.fireViceBullet();
}, 2);
};
e.prototype.fireViceBullet = function() {
for (var t = 0; t < this.viceShooters.length; t++) {
var e = this.viceEyes[t].convertToWorldSpaceAR(cc.v3(0, 0));
e = this.node.convertToNodeSpaceAR(e);
this.viceShooters[t].node.setPosition(e);
var i = this.entity.Transform.position.clone().add(e), o = this.dungeon.player.getCenterPosition().sub(i);
if (!o.equals(cc.Vec3.ZERO)) {
this.viceShooters[t].setHv(cc.v2(o).normalize());
this.fireShooter(this.viceShooters[t], "bullet101", 0, 0, 0, cc.v3(0, 0));
}
}
};
e.prototype.fireWithMainEye = function() {
var t = this;
this.mainEyesFireSkill.next(function() {
t.mainEyesFireSkill.IsExcuting = !0;
t.scheduleOnce(function() {
t.mainEyesFireSkill.IsExcuting = !1;
}, 3);
var e = t.shooter.node.convertToWorldSpaceAR(cc.v3(0, 0));
e = t.node.convertToNodeSpaceAR(e);
t.shooter.node.setPosition(e);
var i = t.entity.Transform.position.clone().add(e), o = t.dungeon.player.getCenterPosition().sub(i);
if (!o.equals(cc.Vec3.ZERO)) {
t.shooter.setHv(cc.v2(o).normalize());
t.shooter.data.isLineAim = 1;
t.fireShooter(t.shooter, "laser003", 0, 3, 0, cc.v3(0, 0));
t.anim.playAdditive("EvilEyeStone");
}
}, 7);
};
e.prototype.dash = function() {
var t = this;
this.dashSkill.next(function() {
h.default.play(h.default.MELEE);
t.dashSkill.IsExcuting = !0;
t.anim || (t.anim = t.getComponent(cc.Animation));
t.anim.play("EvilEyeBite");
var e = t.getMovePos(), i = e.x, o = e.y, a = cc.v2(i, o);
a = a.normalize().mul(E.default.getDashSpeedByDistance(1500 / v.MoveComponent.PIXELS_PER_UNIT, t.entity.Move.damping));
t.entity.Move.linearVelocity = a;
t.scheduleOnce(function() {
t.dashSkill.IsExcuting = !1;
}, 2);
}, 3, !0);
};
e.prototype.fireShooter = function(t, e, i, o, a, n) {
t.dungeon = this.dungeon;
t.actor = this;
t.data.bulletType = e;
t.data.bulletArcExNum = i;
t.data.bulletLineExNum = o;
t.shootBaseHeight = 32;
t.fireBullet(a, n);
};
e.prototype.showBoss = function() {
this.sc.isShow = !0;
this.entity.NodeRender.node = this.node;
this.entity.Move.damping = 6;
if (this.healthBar) {
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.healthBar.node.active = !this.sc.isDied;
}
};
e.prototype.isActionTimeDelay = function(t) {
this.actionTimeDelay += t;
if (this.actionTimeDelay > .2) {
this.actionTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t) {
this.timeDelay += t;
this.timeDelay > 1 && (this.timeDelay = 0);
this.isActionTimeDelay(t) && this.bossAction();
this.data.currentHealth < 1 && this.killed();
this.healthBar.node.active = !this.sc.isDied;
this.sc.isDied && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
};
e.prototype.move = function(t, e) {
if (!this.sc.isDied) {
t.equals(cc.Vec3.ZERO) || (this.pos = r.default.getIndexInMap(this.entity.Transform.position));
var i = t.x, o = t.y, a = (Math.abs(i), Math.abs(o), cc.v2(i, o));
a = a.mul(e);
this.entity.Move.linearVelocity = a;
this.isMoving = 0 != i || 0 != o;
this.changeZIndex();
}
};
e.prototype.onColliderEnter = function(t, e) {
if (e.tag == m.default.TAG.BOSS_HIT) {
var i = g.default.getEnemyCollisionTarget(t);
if (i && this.dashSkill.IsExcuting) {
var o = new l.default();
o.physicalDamage = 15;
var a = d.default.getClone(this.actorName(), "evileyeeye");
i.takeDamage(o, a, this) && i.addStatus(c.default.BLEEDING, a);
}
}
};
e.prototype.actorName = function() {
return "邪眼";
};
return n([ T ], e);
}(u.default));
i.default = D;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../ecs/component/MoveComponent": "MoveComponent",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/NextStep": "NextStep",
"../utils/Utils": "Utils",
"./Boss": "Boss"
} ],
ExitData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "76ad8SnMG9NL67Zj9BTup1j", "ExitData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../logic/Logic"), a = t("../utils/DataUtils"), n = function() {
function t() {
this.fromRoomPos = cc.v3(0, 0);
this.fromPos = cc.v3(0, 0);
this.fromZ = 0;
this.fromChapter = 0;
this.fromLevel = 0;
this.toChapter = 0;
this.toLevel = 0;
this.toPos = cc.v3(0, 0);
this.toPosZ = 0;
this.res = "";
}
t.prototype.valueCopy = function(t) {
if (t) {
a.default.baseCopy(this, t);
this.fromRoomPos = t.fromRoomPos ? cc.v3(t.fromRoomPos.x, t.fromRoomPos.y) : cc.v3(0, 0);
this.toPos = t.toPos ? cc.v3(t.toPos.x, t.toPos.y) : cc.v3(0, 0);
this.fromPos = t.fromPos ? cc.v3(t.fromPos.x, t.fromPos.y) : cc.v3(0, 0);
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.getRealWorldExitDataFromDream = function(e, i) {
var a = new t();
a.fromChapter = e;
a.fromLevel = i;
a.toChapter = o.default.CHAPTER099;
a.toLevel = 0;
a.toPos = cc.v3(6, 16);
return a;
};
t.getDreamExitDataFromReal = function(e) {
var i = new t();
i.fromChapter = o.default.CHAPTER099;
i.fromLevel = 0;
i.toChapter = e ? e.chapter : o.default.savePoinitData.chapter;
i.toLevel = e ? e.level : o.default.savePoinitData.level;
i.toPos = e ? cc.v3(e.x, e.y) : cc.v3(o.default.savePoinitData.x, o.default.savePoinitData.y);
return i;
};
return t;
}();
i.default = n;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"../utils/DataUtils": "DataUtils"
} ],
ExitDoor: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "479c1KI84hEjY9sMAyTcSmq", "ExitDoor");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Player"), s = t("../logic/Logic"), l = t("./Building"), c = t("../utils/AudioPlayer"), u = t("../utils/IndexZ"), p = t("../data/ExitData"), h = t("../logic/Dungeon"), d = t("../collider/CCollider"), f = t("../utils/Random"), g = cc._decorator, y = g.ccclass, m = g.property, v = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.root = null;
e.isOpen = !1;
e.isDoor = !0;
e.bgSprite = null;
e.closeSprite = null;
e.openSprite = null;
e.spriteNode = null;
e.roof = null;
e.isBackToUpLevel = !1;
e.dir = 0;
e.exitData = new p.default();
e.type = 0;
return e;
}
e.prototype.init = function(t, e, i) {
this.dir = e;
this.type = t;
this.exitData.valueCopy(i);
this.isBackToUpLevel = 2 == t || 3 == t;
var o = this.node.getComponent(d.default);
if (this.type % 2 == 1) {
this.node.opacity = 0;
this.roof.node.opacity = 0;
var a = this.data.defaultPos.clone();
o.setSize(cc.size(128, 128));
o.offset = cc.v2(0, 0);
0 == this.dir && (a.y += 1);
1 == this.dir && (a.y -= 1);
2 == this.dir && (a.x -= 1);
3 == this.dir && (a.x += 1);
this.entity.Transform.position = h.default.getPosInMap(a);
this.node.position = this.entity.Transform.position.clone();
}
this.root.y = this.exitData.fromZ;
this.entity.Transform.z = this.exitData.fromZ;
this.roof.getComponentInChildren(cc.Label).string = "-" + s.default.worldLoader.getLevelData(this.exitData.toChapter, this.exitData.toLevel).name;
};
e.prototype.onLoad = function() {
this.spriteNode = this.root.getChildByName("sprite");
this.bgSprite = this.root.getChildByName("sprite").getChildByName("exitbg").getComponent(cc.Sprite);
this.closeSprite = this.root.getChildByName("sprite").getChildByName("exitopen").getComponent(cc.Sprite);
this.openSprite = this.root.getChildByName("sprite").getChildByName("exitclose").getComponent(cc.Sprite);
this.roof = this.root.getChildByName("roof").getComponent(cc.Sprite);
this.openSprite.node.zIndex = u.default.FLOOR;
this.closeSprite.node.zIndex = u.default.ACTOR;
};
e.prototype.start = function() {
var t;
switch (s.default.chapterIndex) {
case s.default.CHAPTER00:
this.changeRes("exit000");
break;

case s.default.CHAPTER01:
this.changeRes("exit001");
break;

case s.default.CHAPTER02:
this.changeRes("exit002");
break;

case s.default.CHAPTER03:
this.changeRes("exit003");
break;

case s.default.CHAPTER04:
case s.default.CHAPTER05:
this.changeRes("exit004");
break;

case s.default.CHAPTER099:
this.changeRes("exit000");
}
(null === (t = this.exitData.res) || void 0 === t ? void 0 : t.length) > 0 && this.changeRes(this.exitData.res);
var e = s.default.spriteFrameRes("roof" + s.default.worldLoader.getCurrentLevelData().wallRes1 + "anim000");
(this.dir % 4 > 1 || this.dir > 7) && (e = null);
this.type > 1 && (this.roof.getComponentInChildren(cc.Label).node.parent.active = !1);
this.roof.spriteFrame = e;
this.roof.node.parent = this.node.parent;
var i = this.root.convertToWorldSpaceAR(cc.v3(0, 128));
this.roof.node.position = this.roof.node.parent.convertToNodeSpaceAR(i);
this.roof.node.zIndex = u.default.OVERHEAD;
this.roof.node.opacity = 255;
this.dir;
};
e.prototype.openGate = function(t) {
if (!this.isOpen) {
this.isOpen = !0;
this.getComponent(d.default).sensor = !0;
cc.tween(this.closeSprite.node).to(t ? 0 : 1, {
opacity: 0
}).start();
}
};
e.prototype.closeGate = function(t) {
if (this.isOpen) {
this.isOpen = !1;
this.getComponent(d.default).sensor = !1;
cc.tween(this.closeSprite.node).to(t ? 0 : 1, {
opacity: 255
}).start();
}
};
e.prototype.onColliderEnter = function(t, e) {
if (e.sensor && t.tag == d.default.TAG.PLAYER) {
var i = t.node.getComponent(r.default);
if (i && this.isOpen) {
this.isOpen = !1;
c.default.play(c.default.EXIT);
s.default.playerData = i.data.clone();
s.default.loadingNextLevel(this.exitData);
}
}
};
e.prototype.changeRes = function(t) {
this.bgSprite.spriteFrame = s.default.spriteFrameRes(t + "bg");
this.openSprite.spriteFrame = s.default.spriteFrameRes(t + "open");
this.closeSprite.spriteFrame = s.default.spriteFrameRes(t + "close");
};
e.prototype.disappear = function() {
t.prototype.disappear.call(this);
cc.tween(this.roof.node).to(.5 + f.default.rand(), {
scaleY: 0
}).start();
};
n([ m(cc.Node) ], e.prototype, "root", void 0);
return n([ y ], e);
}(l.default);
i.default = v;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/ExitData": "ExitData",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Player": "Player",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/Random": "Random",
"./Building": "Building"
} ],
FallStone: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "606fd8guh5COozFgkmej6tZ", "FallStone");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("./Building"), l = t("../utils/AudioPlayer"), c = t("../data/FromData"), u = t("../logic/NonPlayer"), p = t("../utils/ActorUtils"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isFall = !1;
e.isAuto = !0;
e.isFalling = !1;
return e;
}
e.prototype.onLoad = function() {
this.isFall = !1;
};
e.prototype.fall = function(t) {
if (t) {
this.node.getChildByName("stone").getChildByName("fire").active = !0;
this.node.getChildByName("stone").color = cc.color(253, 122, 37);
}
this.anim = this.getComponent(cc.Animation);
this.anim.play();
this.isFalling = !0;
};
e.prototype.FallFinish = function() {
var t = this;
l.default.play(l.default.BOOM);
this.isFall = !0;
this.scheduleOnce(function() {
t.isFall = !1;
}, .1);
this.scheduleOnce(function() {
t.node && t.destroyEntityNode();
}, 2);
};
e.prototype.onColliderEnter = function(t) {
!p.default.getEnemyCollisionTarget(t) || this.isAuto || this.isFalling || this.fall();
};
e.prototype.onColliderStay = function(t) {
var e = p.default.getEnemyCollisionTarget(t);
if (e && this.isFall && this.isValid) {
this.isFall = !1;
e.takeDamage(new r.default(2), c.default.getClone("落石", "stone"));
}
var i = t.getComponent(u.default);
if (i && this.isFall && this.isValid) {
this.isFall = !1;
i.takeDamage(new r.default(2));
}
};
return n([ d ], e);
}(s.default));
i.default = f;
cc._RF.pop();
}, {
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/NonPlayer": "NonPlayer",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"./Building": "Building"
} ],
FireGhost: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "63945bTi0VH3q4BT6nw6+98", "FireGhost");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../manager/StatusManager"), l = t("../data/FromData"), c = t("../logic/Logic"), u = t("../utils/IndexZ"), p = t("../utils/ActorUtils"), h = t("../base/BaseColliderComponent"), d = t("../logic/EventHelper"), f = cc._decorator, g = f.ccclass, y = (f.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isRotating = !1;
e.isAttacking = !1;
e.angleOffset = 0;
e.angle = 0;
e.isDied = !1;
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
};
e.prototype.start = function() {};
e.prototype.init = function(t, e) {
var i = this;
this.player = t;
this.node.setPosition(t.node.position.clone());
this.node.zIndex = u.default.OVERHEAD;
this.angleOffset = e;
this.scheduleOnce(function() {
i.node.setPosition(i.getPlayerFarPosition(i.player, 50, i.angle + i.angleOffset));
i.isRotating = !0;
}, .2);
};
e.prototype.getPlayerFarPosition = function(t, e, i) {
var o = t.Hv.clone(), a = cc.v3(cc.v2(o).rotateSelf(i * Math.PI / 180).mul(e));
return t.node.position.clone().addSelf(cc.v3(8, 48).addSelf(a));
};
e.prototype.onColliderEnter = function(t, e) {
if (e.radius > 0 && this.isAttacking && this.isRotating && p.default.getEnemyCollisionTarget(t, !0)) {
this.isAttacking = !1;
this.attacking(t.node);
}
};
e.prototype.attacking = function(t) {
if (t) {
var e = new r.default(), i = s.default.BURNING;
e.magicDamage = 1;
var o = p.default.getEnemyActorByNode(t, !0);
if (o && !o.sc.isDied) {
o.takeDamage(e);
o.addStatus(i, new l.default());
}
this.isDied = !0;
d.EventHelper.emit(d.EventHelper.POOL_DESTORY_FIREGHLOST, {
targetNode: this.node
});
}
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
if (!c.default.isGamePause && this.isCheckTimeDelay(t)) {
var e = this.hasNearEnemy();
if (e.equals(cc.Vec3.ZERO)) {
if (this.isRotating && this.player) {
this.angle += 5;
this.angle > 360 && (this.angle = 0);
i = (e = this.getPlayerFarPosition(this.player, 50, this.angle + this.angleOffset)).sub(this.node.position).normalizeSelf().mulSelf(4);
this.entity.Move.linearVelocity = cc.v2(i.x, i.y);
}
} else {
this.isAttacking = !0;
var i = e.normalizeSelf().mulSelf(8);
this.entity.Move.linearVelocity = cc.v2(i.x, i.y);
}
}
};
e.prototype.hasNearEnemy = function() {
return this.player && this.isRotating ? p.default.getDirectionFromNearestEnemy(this.player.node.position, !1, this.player.dungeon, !1, 400) : cc.Vec3.ZERO;
};
return n([ g ], e);
}(h.default));
i.default = y;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/IndexZ": "IndexZ"
} ],
FloatingLabelData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a8f27wN8tBPFpbFtomBoQo+", "FloatingLabelData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../utils/DataUtils"), r = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.worldPos = cc.v3(0, 0);
e.d = 0;
e.isDodge = !1;
e.isMiss = !1;
e.isCritical = !1;
e.isBlock = !1;
e.isBackStab = !1;
e.isAvoidDeath = !1;
return e;
}
e.prototype.valueCopy = function(t) {
if (t) {
n.default.baseCopy(this, t);
this.worldPos = t.worldPos ? cc.v3(t.worldPos.x, t.worldPos.y) : cc.v3(0, 0);
}
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
e.create = function(t, i, o, a, n, r, s, l) {
var c = new e();
c.worldPos = cc.v3(t.x, t.y);
c.d = i;
c.isDodge = o;
c.isMiss = a;
c.isCritical = n;
c.isBlock = r;
c.isBackStab = s;
c.isAvoidDeath = l;
return c;
};
return e;
}(t("./BaseData").default);
i.default = r;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData"
} ],
FloatingLabelManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "70be4qc1pdJGpxF0vSkBTb1", "FloatingLabelManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("../ui/FloatingLabel"), l = t("../utils/IndexZ"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
return e;
}
e.prototype.clear = function() {};
e.prototype.onLoad = function() {
var t = this;
this.labelPool = new cc.NodePool();
r.EventHelper.on(r.EventHelper.POOL_DESTROY_LABEL, function(e) {
t.node && t.destroyLabel(e.labelNode);
});
r.EventHelper.on(r.EventHelper.HUD_SHOW_FLOATING_LABEL, function(e) {
t.node && t.showFloatFont(e.data);
});
};
e.prototype.showFloatFont = function(t) {
var e = this.getFloaingLabel(t.worldPos);
t.isDodge ? e.showDoge() : t.isMiss ? e.showMiss() : t.isBlock ? e.showBlock() : t.isAvoidDeath ? e.showAvoidDeath() : 0 != t.d && t.d ? e.showDamage(-t.d, t.isCritical, t.isBackStab) : e.hideLabel();
};
e.prototype.getFloaingLabel = function(t) {
var e = this.node.convertToNodeSpaceAR(t), i = null;
this.labelPool.size() > 0 && (i = this.labelPool.get());
i && !i.active || (i = cc.instantiate(this.label));
i.parent = this.node;
i.position = e;
var o = i.getComponent(s.default);
i.zIndex = l.default.UI;
i.opacity = 255;
i.active = !0;
return o;
};
e.prototype.destroyLabel = function(t) {
t.active = !1;
this.labelPool && this.labelPool.put(t);
};
e.prototype.start = function() {};
n([ p(cc.Prefab) ], e.prototype, "label", void 0);
return n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper",
"../ui/FloatingLabel": "FloatingLabel",
"../utils/IndexZ": "IndexZ"
} ],
FloatingLabel: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cae6fbyiQhHL5VOrhWuq2d6", "FloatingLabel");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../logic/EventHelper"), s = cc._decorator, l = s.ccclass, c = (s.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.onLoad = function() {
this.anim = this.getComponent(cc.Animation);
this.label = this.node.getChildByName("label").getComponent(cc.Label);
};
e.prototype.start = function() {};
e.prototype.showLabel = function(t, e, i) {
if (i) {
i > 3 && (i = 3);
this.node.scale = i;
}
var o = this.node.scale;
this.node.scale = 1.5 * o;
this.label.node.opacity = 255;
this.label.node.position = cc.v3(0, 0);
this.label.string = t;
this.label.node.color = e;
this.anim.play("FontFloating");
cc.tween(this.node).to(.1, {
scale: o
}).start();
};
e.prototype.showMiss = function() {
this.showLabel("丢失", cc.color(255, 255, 255), 1);
};
e.prototype.showDoge = function() {
this.showLabel("闪避", cc.color(255, 255, 255), 1);
};
e.prototype.showBlock = function() {
this.showLabel("格挡", cc.color(211, 211, 211), 1);
};
e.prototype.showAvoidDeath = function() {
this.showLabel("格挡致命伤", cc.color(255, 0, 0), 5);
};
e.prototype.showDamage = function(t, e, i) {
var o = t < 0 ? cc.color(255, 0, 0) : cc.color(0, 255, 0), a = 1;
if (e) {
o = cc.color(255, 255, 0);
a = 2;
}
i && (o = cc.color(186, 85, 211));
var n = Math.abs(t), r = parseFloat(t.toFixed(1));
this.showLabel((t > 0 ? "+" : "") + (0 != r ? r : ""), o, a + n / 50);
};
e.prototype.hideLabel = function() {
this.node.active = !1;
r.EventHelper.emit(r.EventHelper.POOL_DESTROY_LABEL, {
labelNode: this.node
});
};
e.prototype.FloatingFinish = function() {
this.hideLabel();
};
return n([ l ], e);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"./../logic/EventHelper": "EventHelper"
} ],
FloorPaper: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6a02buPxUlIgIX8vEcDbGVZ", "FloorPaper");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../ecs/component/MoveComponent"), s = t("../base/BaseColliderComponent"), l = t("../collider/CCollider"), c = t("../logic/Logic"), u = t("../utils/Random"), p = t("../utils/IndexZ"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.root = null;
e.shadow = null;
e.spriteIndex = 0;
e.rotateAngle = 0;
e.checkTimeDelay = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.init();
};
e.prototype.onEnable = function() {
this.init();
};
e.prototype.init = function() {
this.node.scale = 1.5 + u.default.rand();
this.spriteIndex = c.default.getRandomNum(0, i.SPRITES.length - 1);
this.rotateAngle = 0;
var t = c.default.getRandomNum(180, 255);
this.sprite.node.color = cc.color(t, t, t);
this.updateSprite();
this.unscheduleAllCallbacks();
};
e.prototype.updateSprite = function() {
this.spriteIndex > i.SPRITES.length - 1 && (this.spriteIndex = 0);
this.sprite.spriteFrame = c.default.spriteFrameRes(i.SPRITES[this.spriteIndex]);
this.shadow.spriteFrame = c.default.spriteFrameRes(i.SPRITES[this.spriteIndex]);
this.spriteIndex++;
};
e.prototype.rotateSprite = function() {
this.rotateAngle > 360 && (this.rotateAngle = 0);
this.sprite.node.angle = this.rotateAngle;
this.shadow.node.angle = this.rotateAngle;
this.rotateAngle++;
};
e.prototype.changeZIndex = function() {
var t = this.entity.Transform.base;
t > 0 && (t += 500);
this.node.zIndex = p.default.getActorZIndex(cc.v3(this.node.position.x, this.node.position.y - t));
};
e.prototype.update = function(t) {
var e = this.root.y - this.entity.Transform.base;
e < 0 && (e = 0);
var i = 1 - e / 64;
this.shadow.node.scale = i < .5 ? .5 : i;
e > 0 && this.rotateSprite();
if (this.isCheckTimeDelay(t)) {
this.changeZIndex();
e > 0 && this.updateSprite();
}
};
e.prototype.fly = function(t, e) {
this.entity.NodeRender.root = this.root;
this.entity.Move.linearVelocityZ = 2;
this.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY / 10;
var i = e ? c.default.getRandomNum(5, 8) : c.default.getRandomNum(2, 5), o = u.default.rand() * (c.default.getHalfChance() ? 1 : -1) * i, a = u.default.rand() * (c.default.getHalfChance() ? 1 : -1) * i;
if (t) {
var n = e ? this.node.position.sub(t) : t.sub(this.node.position);
if (!n.equals(cc.Vec3.ZERO)) {
o = (n = cc.v3(cc.v2(n.normalize()).rotate(c.default.getRandomNum(-45, 45) * Math.PI / 180)).normalize().mul(i)).x;
a = n.y;
}
}
this.entity.Move.linearVelocity = cc.v2(o, a);
this.entity.Move.damping = 3;
};
e.prototype.onColliderEnter = function(t) {
t.sensor ? t.tag == l.default.TAG.NONPLAYER || t.tag == l.default.TAG.GOODNONPLAYER ? this.fly(t.entity.Transform.position) : t.tag != l.default.TAG.PLAYER_HIT && t.tag != l.default.TAG.AOE && t.tag != l.default.TAG.NONPLAYER_HIT && t.tag != l.default.TAG.GOODNONPLAYER_HIT || this.fly(this.node.parent.convertToNodeSpaceAR(cc.v3(t.w_center)), !0) : t.isStatic ? this.entity.Move.linearVelocity = cc.Vec2.ZERO : this.fly(t.entity.Transform.position);
};
e.prototype.onColliderStay = function(t) {
!t.sensor && t.isStatic && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
var i;
e.SPRITES = [ "paper0", "paper1", "paper2", "paper3" ];
n([ f(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ f(cc.Node) ], e.prototype, "root", void 0);
n([ f(cc.Sprite) ], e.prototype, "shadow", void 0);
return i = n([ d ], e);
}(s.default);
i.default = g;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../collider/CCollider": "CCollider",
"../logic/Logic": "Logic",
"../utils/IndexZ": "IndexZ",
"../utils/Random": "Random",
"./../ecs/component/MoveComponent": "MoveComponent"
} ],
FootBoard: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a20d6iwPAJLg7AtbBgYX0yS", "FootBoard");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("./Building"), l = t("../utils/IndexZ"), c = t("../collider/CCollider"), u = cc._decorator, p = u.ccclass, h = u.property, d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.openSpriteFrame = null;
e.closeSpriteFrame = null;
e.isOpen = !1;
e.hasActive = !1;
e.pos = cc.v3(0, 0);
e.timeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.spriteNode = this.node.getChildByName("sprite");
this.sprite = this.spriteNode.getComponent(cc.Sprite);
};
e.prototype.start = function() {};
e.prototype.setPos = function(t) {
this.pos = t;
this.entity.Transform.position = r.default.getPosInMap(t);
this.node.position = this.entity.Transform.position.clone();
this.node.zIndex = l.default.FLOOR;
};
e.prototype.openTrap = function() {
if (!this.isOpen) {
this.isOpen = !0;
this.sprite.spriteFrame = this.isOpen ? this.openSpriteFrame : this.closeSpriteFrame;
}
};
e.prototype.onColliderEnter = function(t) {
if (t.tag == c.default.TAG.BUILDING) {
this.isOpen = !0;
this.hasActive = !0;
}
if (t.tag == c.default.TAG.PLAYER) {
this.isOpen = !0;
this.hasActive = !0;
}
};
e.prototype.onColliderStay = function(t) {
if (t.tag == c.default.TAG.BUILDING) {
this.isOpen = !0;
this.hasActive = !0;
}
if (t.tag == c.default.TAG.PLAYER) {
this.isOpen = !0;
this.hasActive = !0;
}
};
e.prototype.onColliderExit = function(t) {
t.tag == c.default.TAG.BUILDING && (this.isOpen = !1);
t.tag == c.default.TAG.PLAYER && (this.isOpen = !1);
};
e.prototype.update = function(t) {
this.timeDelay += t;
if (this.timeDelay > .2) {
this.timeDelay = 0;
this.sprite.spriteFrame = this.isOpen ? this.openSpriteFrame : this.closeSpriteFrame;
}
};
n([ h(cc.SpriteFrame) ], e.prototype, "openSpriteFrame", void 0);
n([ h(cc.SpriteFrame) ], e.prototype, "closeSpriteFrame", void 0);
return n([ p ], e);
}(s.default);
i.default = d;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../logic/Dungeon": "Dungeon",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
FrameAvatar: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6d76f19AT1M2ZsAiPFqPBOs", "FrameAvatar");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("../data/AvatarData"), l = t("../utils/Utils"), c = t("../base/BaseAvatar"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.avatarNode = null;
e.spriteNode = null;
e.animFrameSprite = null;
e.waterY = 0;
e.isAnimFrame = !1;
e.idleFrames = [ 0, 1 ];
e.walkFrames = [ 2, 5 ];
e.hitFrames = [ 6, 7 ];
e.dieFrames = [ 8 ];
e.attackFrames = [ 9, 10 ];
e.specialFrames = [ 12, 13 ];
e.disguiseFrames = [ 14 ];
e.resName = "";
return e;
}
i = e;
e.create = function(t, e, o, a) {
var n = cc.instantiate(t).getComponent(i);
n.node.parent = e;
n.node.zIndex = 0;
n.init(o, a);
return n;
};
e.prototype.init = function(t, e) {
if (!this.isInit) {
this.isInit = !0;
this.resName = e;
this.data = new s.default();
this.data.valueCopy(t);
this.anim = this.getComponent(cc.Animation);
this.avatarNode = this.getSpriteChildNode([ "sprite", "avatar" ]);
this.spriteNode = this.getSpriteChildNode([ "sprite" ]);
this.animFrameSprite = this.getSpriteChildSprite([ "sprite", "animframe" ]);
this.changeAvatarByDir(c.default.DIR_RIGHT);
}
};
e.prototype.playAnim = function(t, e, i) {
if (this.isInit && !this.isAniming && c.default.STATE_DIE != this.status) {
var o = null != i ? i : 1;
switch (t) {
case c.default.STATE_IDLE:
this.status != t && this.playIdle(o);
break;

case c.default.STATE_WALK:
this.status != t && c.default.STATE_ATTACK != this.status && c.default.STATE_AIRKICK != this.status && this.playWalk(o);
break;

case c.default.STATE_ATTACK:
this.playAttack(o);
break;

case c.default.STATE_AIRKICK:
this.playAirKick(o);
break;

case c.default.STATE_DIE:
this.playDie(o);
break;

case c.default.STATE_FALL:
this.playFall(o);
break;

case c.default.STATE_JUMP_UP:
this.status != t && this.playJumpUp(o);
break;

case c.default.STATE_JUMP_DOWN:
this.status != t && this.playJumpDown(o);
break;

case c.default.STATE_DISGUISE:
this.playDisguise(o);
break;

case c.default.STATE_HIT:
this.playHit(o);
break;

case c.default.STATE_SPECIAL:
this.playSpecial(o);
}
this.status = t;
4 != e && (this.dir = e);
}
};
e.prototype.playAnimFrames = function(t, e, i, o) {
var a = this;
if (!(t.length < 1)) {
for (var n = cc.tween(), r = t[0], s = t[1], c = t[t.length - 1], u = function(t) {
n.then(cc.tween().call(function() {
a.changeAnimFrames(a.resName, "anim" + l.default.getNumberStr3(t));
t == s && o && o();
}).delay(.2 * e));
}, p = r; p <= c; p++) u(p);
this.animFrameSprite.node.stopAllActions();
i && t[1] > t[0] ? cc.tween(this.animFrameSprite.node).repeatForever(n).start() : cc.tween(this.animFrameSprite.node).then(n).start();
}
};
e.prototype.changeAnimFrames = function(t, e) {
this.animFrameSprite || this.getSpriteChildSprite([ "sprite", "animframe" ]);
var i = this.getSpriteFrameByName(t, e);
if (i) {
this.animFrameSprite.spriteFrame = i;
this.animFrameSprite.node.width = i.getOriginalSize().width;
this.animFrameSprite.node.height = i.getOriginalSize().height;
} else this.animFrameSprite.spriteFrame = null;
};
e.prototype.getSpriteFrameByName = function(t, e) {
var i = r.default.spriteFrameRes(t + e);
i || (i = r.default.spriteFrameRes(t));
return i;
};
e.prototype.changeAvatarByDir = function(t) {
this.isAniming || 4 != t && (this.dir = t);
};
e.prototype.showLegsWithWater = function(t, e) {
this.waterY = e ? -32 : 0;
this.node.y = r.default.lerp(this.node.y, this.waterY, .2);
this.setInWaterMat(this.animFrameSprite, t);
};
e.prototype.setInWaterMat = function(t, e) {
if (t && t.spriteFrame) {
t.spriteFrame.getOffset();
var i = t.spriteFrame.getRect(), o = t.spriteFrame.getTexture();
t.getMaterial(0).setProperty("rect", [ i.x / o.width, i.y / o.height, i.width / o.width, i.height / o.height ]);
t.getMaterial(0).setProperty("hidebottom", e ? 1 : 0);
if (!this.isAnimFrame) {
t.getMaterial(0).setProperty("angularVelocity", 300);
t.getMaterial(0).setProperty("amplitude", .001);
}
t.getMaterial(0).setProperty("isRotated", t.spriteFrame.isRotated() ? 1 : 0);
}
};
e.prototype.playJumpDown = function(t) {
this.playAnimFrames([], t, !1);
};
e.prototype.playJumpUp = function(t) {
this.playAnimFrames([], t, !1);
};
e.prototype.playDisguise = function(t) {
this.playAnimFrames(this.disguiseFrames, t, !1);
};
e.prototype.playHit = function(t) {
var e = [ this.hitFrames[r.default.getRandomNum(0, this.hitFrames.length - 1)] ];
this.playAnimFrames(e, t, !1);
};
e.prototype.playSpecial = function() {};
e.prototype.playFall = function(t) {
this.playAnimFrames(this.hitFrames, t, !1);
};
e.prototype.playDie = function(t) {
this.playAnimFrames(this.dieFrames, t, !1);
};
e.prototype.playIdle = function(t) {
this.playAnimFrames(this.idleFrames, t, !0);
};
e.prototype.playWalk = function(t) {
this.playAnimFrames(this.walkFrames, t, !0);
};
e.prototype.playAttack = function(t, e) {
this.playAnimFrames(this.attackFrames, t, !1, e);
};
e.prototype.playAirKick = function() {};
e.prototype.playCooking = function() {};
e.prototype.playDrink = function() {};
e.prototype.playToilet = function() {};
e.prototype.playSleep = function() {};
e.prototype.playRead = function() {};
var i;
return i = n([ p ], e);
}(c.default));
i.default = h;
cc._RF.pop();
}, {
"../base/BaseAvatar": "BaseAvatar",
"../data/AvatarData": "AvatarData",
"../utils/Utils": "Utils",
"./Logic": "Logic"
} ],
FromData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cf8a1Noa0FD6qIEI4bqHV5c", "FromData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.name = "";
this.res = "";
this.id = 0;
}
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t);
};
t.getClone = function(e, i, o) {
var a = new t();
a.name = e;
a.res = i;
a.id = o;
return a;
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
FsmEvent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b77f3K+NxhBaYwLRNLbbGxg", "FsmEvent");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function() {};
cc._RF.pop();
}, {} ],
FurnitureData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "995a0Fy66ZBko3/UdM2GS2a", "FurnitureData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("./InventoryData"), n = function() {
function t() {
this.id = "";
this.price = 0;
this.nameCn = "";
this.nameEn = "";
this.resName = "";
this.info = "";
this.desc = "";
this.scale = 1;
this.collider = "";
this.isOpen = !1;
this.purchased = !1;
this.storageList = [];
this.storage = 0;
this.spritePos = "";
}
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t);
this.scale = t.scale ? t.scale : 1;
this.storage > 32 && (this.storage = 32);
if (t.storageList && t.storage > 0) {
this.storageList = [];
for (var e = 0, i = t.storageList; e < i.length; e++) {
var n = i[e], r = new a.default();
r.valueCopy(n);
this.storageList.push(r);
}
}
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = n;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./InventoryData": "InventoryData"
} ],
Furniture: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "12170bzXSpDtaz5MoM+l14L", "Furniture");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../logic/EventHelper"), s = t("../logic/Achievement"), l = t("../data/FurnitureData"), c = t("../logic/Dungeon"), u = t("../logic/Logic"), p = t("../ui/Tips"), h = t("../utils/AudioPlayer"), d = t("../utils/LocalStorage"), f = t("../utils/Utils"), g = t("./Building"), y = t("./RoomFishtank"), m = t("./RoomStool"), v = t("./RoomTv"), E = t("../collider/CCollider"), _ = t("../utils/NextStep"), T = t("../data/InventoryData"), D = t("./RoomWaterDispenser"), S = t("./RoomTrashCan"), O = t("./RoomKitchen"), A = t("../utils/IndexZ"), R = t("../manager/EquipmentManager"), C = t("../manager/InventoryManager"), P = cc._decorator, L = P.ccclass, b = (P.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isOpening = !1;
e.isNormal = !1;
e.unlockStep = new _.default();
e.bookStep = new _.default();
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.anim = this.getComponent(cc.Animation);
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
this.boxcover = this.node.getChildByName("boxcover").getComponent(cc.Sprite);
this.boxback = this.node.getChildByName("boxback").getComponent(cc.Sprite);
this.lock = this.node.getChildByName("lock").getComponent(cc.Sprite);
this.tips = this.getComponentInChildren(p.default);
this.tips.onInteract(function(e, i) {
t.furnitureData && (t.furnitureData.purchased ? t.furnitureData.isOpen ? t.interact(i) : t.openBox() : t.unlockStep.next(function() {
t.getComponent(cc.Animation).play("FurnitureUnlock");
h.default.play(h.default.SELECT_FAIL);
f.default.toast("暂未解锁，请下单购买:-D", !0, !0);
r.EventHelper.emit(r.EventHelper.HUD_CELLPHONE_SHOW);
}, 3, !0));
});
this.tips.onEnter(function() {
t.furnitureData && t.furnitureData.purchased && t.furnitureData.isOpen && t.onTipsEnter(!0);
});
this.tips.onExit(function() {
t.furnitureData && t.furnitureData.purchased && t.furnitureData.isOpen && t.onTipsExit(!0);
});
r.EventHelper.on(r.EventHelper.HUD_FURNITURE_REFRESH, function(e) {
t.node && e.id == t.furnitureData.id && t.init(t.furnitureData, t.isNormal);
});
};
e.prototype.interact = function(t) {
switch (this.furnitureData.id) {
case i.TV:
var e = this.getComponent(v.default);
e && e.interact(t);
break;

case i.STOOL:
var o = this.getComponent(m.default);
o && o.open();
break;

case i.FISHTANK:
var a = this.getComponent(y.default);
a && a.feed(t);
break;

case i.WATERDISPENER:
var n = this.getComponent(D.default);
n && n.getWater(t);
break;

case i.CUPBOARD:
var s = [ R.default.getNewEquipData(R.default.CLOTHES_VEST), R.default.getNewEquipData(R.default.TROUSERS_LONG), R.default.getNewEquipData(R.default.TROUSERS_SHORT), R.default.getNewEquipData(R.default.CLOTHES_SHIRT), R.default.getNewEquipData(R.default.SHOES_SKATEBOARD) ];
if (this.furnitureData.storageList.length < 1) {
for (var l = 0; l < this.furnitureData.storage; l++) {
var c = new T.default();
l < s.length && !this.data.isOpen && (c = C.default.buildEquipInventoryData(s[l]));
this.furnitureData.storageList.push(c);
}
d.default.saveFurnitureData(this.furnitureData);
}
this.data.isOpen = !0;
u.default.mapManager.setCurrentBuildingData(this.data.clone());
r.EventHelper.emit(r.EventHelper.HUD_INVENTORY_SHOW, {
id: this.furnitureData.id
});
break;

case i.LITTLE_TABLE_2:
f.default.toast("现在是" + f.default.getYear(u.default.realTime) + f.default.getDay(u.default.realTime) + f.default.getHour(u.default.realTime), !1, !0);
break;

case i.TRASHCAN:
var p = this.getComponent(S.default);
p && p.getTrash();
break;

case i.BOOKSHELF:
this.bookStep.next(function() {
t.read();
}, 5);
break;

case i.COOKING_BENCH:
var g = this.getComponent(O.default);
g && g.getFood(t);
break;

case i.DOLL_MACHINE:
r.EventHelper.emit(r.EventHelper.HUD_DOLL_MACHINE_DIALOG);
break;

default:
h.default.play(h.default.SELECT_FAIL);
f.default.toast("梦境开发中,无法使用。");
}
};
e.prototype.onTipsEnter = function() {
switch (this.furnitureData.id) {
case i.FISHTANK:
var t = this.getComponent(y.default);
t && t.zoomCamera(!0);
break;

case i.LITTLE_TABLE_2:
case i.WATERDISPENER:
case i.TRASHCAN:
this.zoomCamera(!0);
}
};
e.prototype.onTipsExit = function() {
switch (this.furnitureData.id) {
case i.FISHTANK:
var t = this.getComponent(y.default);
t && t.zoomCamera(!1);
break;

case i.TV:
var e = this.getComponent(v.default);
e && e.close();
break;

case i.LITTLE_TABLE_2:
case i.WATERDISPENER:
case i.TRASHCAN:
this.zoomCamera(!1);
}
};
e.prototype.init = function(t, e) {
this.isNormal = e;
var i = d.default.getFurnitureData(t.id);
if (i) {
t.isOpen = i.isOpen;
t.purchased = i.purchased;
t.storage = i.storage ? i.storage : t.storage;
t.storageList = [];
if (i.storageList && i.storageList.length > 0) for (var o = 0, a = i.storageList; o < a.length; o++) {
var n = a[o];
n.itemData ? t.storageList.push(C.default.buildItemInventoryData(n.itemData)) : n.equipmentData && t.storageList.push(C.default.buildEquipInventoryData(n.equipmentData));
}
}
if (t.price <= 0) {
t.isOpen = !0;
t.purchased = !0;
}
this.furnitureData = new l.default();
this.furnitureData.valueCopy(t);
u.default.inventoryManager.furnitureMap.set(t.id, this.furnitureData);
if (this.furnitureData.purchased) {
this.sprite.node.color = cc.color(255, 255, 255, 255);
this.sprite.node.opacity = 255;
this.lock.node.active = !1;
if (this.furnitureData.isOpen) {
this.boxcover.node.active = !1;
this.boxback.node.active = !1;
} else {
this.boxcover.node.active = !0;
this.boxback.node.active = !0;
}
} else {
this.sprite.node.color = cc.color(128, 128, 128, 255);
this.sprite.node.opacity = 128;
this.boxcover.node.active = !1;
this.boxback.node.active = !1;
this.lock.node.active = !0;
}
this.changeRes(this.furnitureData.resName, e);
var r = this.getComponent(E.default);
if (e) {
if (this.furnitureData.collider.length > 0) {
var c = this.furnitureData.collider.split(",");
r.offset = cc.v2(parseInt(c[0]), parseInt(c[1]));
r.setSize(cc.size(parseInt(c[2]), parseInt(c[3])), parseInt(c[4]));
}
if (this.furnitureData.spritePos.length > 0) {
c = this.furnitureData.spritePos.split(",");
this.sprite.node.x = parseInt(c[0]);
this.sprite.node.y = parseInt(c[1]);
}
}
d.default.saveFurnitureData(this.furnitureData);
s.default.addFurnituresAchievement(this.furnitureData.id);
this.node.zIndex = A.default.getActorZIndex(cc.v3(this.node.position.x, this.node.position.y + r.offset.y));
};
e.prototype.changeRes = function(t, e) {
var i = u.default.spriteFrameRes(t);
if (i && e) {
this.sprite.spriteFrame = i;
this.sprite.node.width = i.getOriginalSize().width;
this.sprite.node.height = i.getOriginalSize().height;
this.boxback.node.width = i.getOriginalSize().width;
this.boxback.node.height = i.getOriginalSize().height;
this.boxcover.node.width = i.getOriginalSize().width;
this.boxcover.node.height = i.getOriginalSize().height;
this.sprite.node.scale = this.furnitureData.scale;
this.tips.node.scale = 2;
this.boxback.node.scale = this.furnitureData.scale;
this.boxcover.node.scale = this.furnitureData.scale;
this.boxback.node.y = this.sprite.node.y;
this.boxcover.node.y = this.sprite.node.y;
var o = this.sprite.node.width * this.sprite.node.scale, a = this.sprite.node.height * this.sprite.node.scale;
this.tips.node.position = cc.v3(o / 2 - c.default.TILE_SIZE / 2, c.default.TILE_SIZE);
this.lock.node.position = cc.v3(o / 2 - c.default.TILE_SIZE / 2, a / 2 - c.default.TILE_SIZE / 2);
var n = this.tips.node.getComponent(E.default);
n.radius = o > a ? a / 4 : o / 4;
if (o > a) {
n.radius = a / 4;
n.offset = cc.v2(0, -c.default.TILE_SIZE / 2);
} else {
n.radius = o / 4;
n.offset = cc.v2(0, -c.default.TILE_SIZE / 2);
}
}
};
e.prototype.zoomCamera = function(t) {
r.EventHelper.emit(t ? r.EventHelper.HUD_CAMERA_ZOOM_IN : r.EventHelper.HUD_CAMERA_ZOOM_OUT);
};
e.prototype.openBox = function() {
if (!this.furnitureData.isOpen) {
this.furnitureData.isOpen = !0;
d.default.saveFurnitureData(this.furnitureData);
this.anim.play("FurnitureOpen");
}
};
e.prototype.start = function() {
this.changeRes(this.furnitureData.resName, this.isNormal);
};
e.prototype.onColliderEnter = function() {};
e.prototype.onColliderStay = function() {};
e.prototype.onColliderExit = function() {};
e.prototype.onColliderPreSolve = function() {};
var i;
e.SOFA = "furniture001";
e.BATH = "furniture002";
e.DINNER_TABLE = "furniture003";
e.WASHING_MACHINE = "furniture004";
e.COOKING_BENCH = "furniture005";
e.DOLL_MACHINE = "furniture006";
e.COOKING_BENCH_2 = "furniture007";
e.COOKING_BENCH_3 = "furniture008";
e.FRIDGE = "furniture009";
e.DESK = "furniture010";
e.CUPBOARD = "furniture011";
e.LITTLE_TABLE = "furniture012";
e.LITTLE_TABLE_1 = "furniture013";
e.LITTLE_TABLE_2 = "furniture014";
e.STOOL = "furniture015";
e.TV = "furniture016";
e.FISHTANK = "furniture017";
e.BOOKSHELF = "furniture018";
e.WATERDISPENER = "furniture019";
e.TRASHCAN = "furniture020";
return i = n([ L ], e);
}(g.default));
i.default = b;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/FurnitureData": "FurnitureData",
"../data/InventoryData": "InventoryData",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../manager/EquipmentManager": "EquipmentManager",
"../manager/InventoryManager": "InventoryManager",
"../ui/Tips": "Tips",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/LocalStorage": "LocalStorage",
"../utils/NextStep": "NextStep",
"../utils/Utils": "Utils",
"./../logic/EventHelper": "EventHelper",
"./Building": "Building",
"./RoomFishtank": "RoomFishtank",
"./RoomKitchen": "RoomKitchen",
"./RoomStool": "RoomStool",
"./RoomTrashCan": "RoomTrashCan",
"./RoomTv": "RoomTv",
"./RoomWaterDispenser": "RoomWaterDispenser"
} ],
GameFinish: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "98577N+o/RGi4cE+Wsz8Pp4", "GameFinish");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("./WxHelper"), l = t("../utils/AudioPlayer"), c = t("../ui/StartBackground"), u = t("../ui/CursorArea"), p = t("../utils/Utils"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.wxhelper = null;
e.level = null;
e.clock = null;
e.cursorAreaPrefab = null;
return e;
}
e.prototype.onLoad = function() {
u.default.init(this.cursorAreaPrefab);
};
e.prototype.start = function() {
this.clock && (this.clock.string = "" + p.default.getPlayTime(r.default.totalTime));
this.level && (this.level.string = "Level " + (r.default.chapterIndex + 1) + "-" + r.default.level);
};
e.prototype.retry = function() {
r.default.resetData();
l.default.play(l.default.SELECT);
var t = this.getComponentInChildren(c.default);
t && t.startPressed();
this.scheduleOnce(function() {
cc.director.loadScene("loading");
}, 1);
};
e.prototype.home = function() {
this.wxhelper && this.wxhelper.CloseDialog();
l.default.play(l.default.SELECT);
var t = this.getComponentInChildren(c.default);
t && t.startPressed();
this.scheduleOnce(function() {
cc.director.loadScene("start");
}, 1);
};
n([ f(s.default) ], e.prototype, "wxhelper", void 0);
n([ f(cc.Label) ], e.prototype, "level", void 0);
n([ f(cc.Label) ], e.prototype, "clock", void 0);
n([ f(cc.Prefab) ], e.prototype, "cursorAreaPrefab", void 0);
return n([ d ], e);
}(cc.Component);
i.default = g;
cc._RF.pop();
}, {
"../ui/CursorArea": "CursorArea",
"../ui/StartBackground": "StartBackground",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils",
"./Logic": "Logic",
"./WxHelper": "WxHelper"
} ],
GameHud: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "34bc5nmZdpM3J3SaZigF3c3", "GameHud");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../logic/EventHelper"), s = t("./PlayerInfoDialog"), l = t("../logic/HealthBar"), c = t("../data/PlayerData"), u = t("../logic/Logic"), p = t("./dialog/SettingsDialog"), h = t("./dialog/MartShelvesDialog"), d = t("./dialog/InventoryDialog"), f = t("../utils/AudioPlayer"), g = t("./SatietyView"), y = t("./dialog/DollMachineDialog"), m = t("./Dialogue"), v = t("./dialog/CellphoneDialog"), E = t("./dialog/ActionSettingDialog"), _ = t("../utils/Utils"), T = cc._decorator, D = T.ccclass, S = T.property, O = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.healthBar = null;
e.dreamBar = null;
e.bossHealthBar = null;
e.playerInfoDialog = null;
e.level = null;
e.clock = null;
e.damageCorner = null;
e.pasueButton = null;
e.zoomButton = null;
e.settingsDialog = null;
e.martShelvesDialog = null;
e.completeLabel = null;
e.oilGoldLabel = null;
e.inventoryDialog = null;
e.followArrows = null;
e.satietyView = null;
e.dollMachineDialog = null;
e.AmmoLabel = null;
e.dialogue = null;
e.cellphoneDialog = null;
e.actionSettingDialog = null;
e.arrowList = [];
e.isCompleteShowed = !1;
e.checkTimeDelay = 0;
e.startCountTime = !0;
return e;
}
e.prototype.onLoad = function() {
var t = this;
r.EventHelper.on(r.EventHelper.HUD_UPDATE_PLAYER_INFODIALOG, function(e) {
var i = new c.default();
i.valueCopy(e.data);
t.statusUpdate(i);
});
r.EventHelper.on(r.EventHelper.HUD_UPDATE_PLAYER_HEALTHBAR, function(e) {
t.healthBarUpdate(e.x, e.y);
});
r.EventHelper.on(r.EventHelper.HUD_UPDATE_PLAYER_DREAMBAR, function(e) {
t.dreamBarUpdate(e.x, e.y);
});
r.EventHelper.on(r.EventHelper.HUD_SHAKE_PLAYER_DREAMBAR, function() {
t.dreamBar && t.dreamBar.shake();
});
r.EventHelper.on(r.EventHelper.HUD_UPDATE_PLAYER_LIFE_BAR, function(e) {
t.lifeBarUpdate(e.sanity, e.solid, e.poo, e.liquid, e.pee);
});
r.EventHelper.on(r.EventHelper.HUD_DAMAGE_CORNER_SHOW, function() {
t.showDamageCorner();
t.healthBar && t.healthBar.shake();
});
r.EventHelper.on(r.EventHelper.HUD_MART_SHELVES_DIALOG, function(e) {
t.showMartShelvesDialog(e.type, e.goodsNameList);
});
r.EventHelper.on(r.EventHelper.HUD_COMPLETE_SHOW, function(e) {
t.showComplete(e.map);
});
r.EventHelper.on(r.EventHelper.HUD_OILGOLD_LOSE_SHOW, function() {
t.showOilGoldInfo(!0);
});
r.EventHelper.on(r.EventHelper.HUD_OILGOLD_RECOVERY_SHOW, function() {
t.showOilGoldInfo(!1);
});
r.EventHelper.on(r.EventHelper.HUD_INVENTORY_SHOW, function(e) {
t.showInventoryDialog(e.id);
});
r.EventHelper.on(r.EventHelper.HUD_CANCEL_OR_PAUSE, function() {
t.cancelOrPause();
});
r.EventHelper.on(r.EventHelper.HUD_STOP_COUNTTIME, function() {
t.startCountTime = !1;
});
r.EventHelper.on(r.EventHelper.HUD_FADE_IN, function() {
t.fadeIn();
});
r.EventHelper.on(r.EventHelper.HUD_FADE_OUT, function() {
t.fadeOut();
});
r.EventHelper.on(r.EventHelper.HUD_DOLL_MACHINE_DIALOG, function() {
t.showDollMachineDialog();
});
r.EventHelper.on(r.EventHelper.HUD_UPDATE_PLAYER_AMMO, function(e) {
t.ammoUpdate(e.x, e.y);
});
r.EventHelper.on(r.EventHelper.HUD_CELLPHONE_SHOW, function() {
t.showCellphoneDialog();
});
r.EventHelper.on(r.EventHelper.HUD_ACTION_SETTING_DIALOG, function() {
t.showActionSettingDialog();
});
this.clock && (this.clock.string = "" + _.default.getPlayTime(u.default.totalTime));
this.level && (this.level.string = "" + u.default.worldLoader.getCurrentLevelData().name);
this.damageCorner && (this.damageCorner.opacity = 0);
this.pasueButton.on(cc.Node.EventType.TOUCH_START, function() {
t.pauseGame();
});
this.zoomButton.on(cc.Node.EventType.TOUCH_START, function() {
r.EventHelper.emit(r.EventHelper.HUD_CAMERA_ZOOM_IN, {});
});
this.zoomButton.on(cc.Node.EventType.TOUCH_END, function() {
r.EventHelper.emit(r.EventHelper.HUD_CAMERA_ZOOM_OUT, {});
});
this.zoomButton.on(cc.Node.EventType.TOUCH_CANCEL, function() {
r.EventHelper.emit(r.EventHelper.HUD_CAMERA_ZOOM_OUT, {});
r.EventHelper.emit(r.EventHelper.TEST_SHOW_NODE_COUNT);
});
var e = u.default.playerData.FinalCommon;
this.healthBarUpdate(u.default.playerData.currentHealth, u.default.playerData.getHealth(e).y);
this.dreamBarUpdate(u.default.playerData.currentDream, u.default.playerData.getDream(e).y);
this.ammoUpdate(u.default.playerData.currentAmmo, e.MaxAmmo);
this.fadeIn();
this.initFollowArrows();
};
e.prototype.initFollowArrows = function() {
this.arrowList.push(this.followArrows.getChildByName("arrow0"));
this.arrowList.push(this.followArrows.getChildByName("arrow1"));
this.arrowList.push(this.followArrows.getChildByName("arrow2"));
this.arrowList.push(this.followArrows.getChildByName("arrow3"));
for (var t = 0, e = this.arrowList; t < e.length; t++) e[t].active = !1;
};
e.prototype.showOilGoldInfo = function(t) {
var e = this;
if (this.oilGoldLabel) {
t || f.default.play(f.default.COMPLETE);
var i = t ? [ "碎", "碎片", "碎片丢", "碎片丢失", "碎片丢失", "碎片丢失", "碎片丢失", "碎片丢失", "碎片丢失", "碎片丢失", "碎片丢", "碎片", "碎", "" ] : [ "碎", "碎片", "碎片找", "碎片找回", "碎片找回", "碎片找回", "碎片找回", "碎片找回", "碎片找回", "碎片找回", "碎片找", "碎片", "碎", "" ];
this.oilGoldLabel.node.color = t ? cc.Color.RED : cc.color().fromHEX("#EDB411");
this.oilGoldLabel.node.parent.color = t ? cc.Color.RED : cc.color().fromHEX("#EDB411");
var o = 0;
this.oilGoldLabel.string = "";
this.oilGoldLabel.unscheduleAllCallbacks();
cc.tween(this.oilGoldLabel.node.parent).to(.15, {
height: 80,
width: 80
}).to(.15 * 3, {
width: 1e3
}).delay(.15 * i.length).to(.15, {
height: 0
}).start();
this.oilGoldLabel.schedule(function() {
o < i.length && (e.oilGoldLabel.string = i[o++]);
}, .15, i.length);
}
};
e.prototype.showComplete = function(t) {
var e = this;
if (this.completeLabel && !this.isCompleteShowed) {
f.default.play(f.default.COMPLETE);
var i = [ "清", "清理", "清理完", "清理完成", "清理完成", "清理完成", "清理完成", "清理完成", "清理完成", "清理完成", "清理完", "清理", "清", "" ], o = 0;
this.completeLabel.string = "";
this.completeLabel.unscheduleAllCallbacks();
this.isCompleteShowed = !0;
cc.tween(this.completeLabel.node.parent).delay(.5).to(.1, {
height: 80,
width: 80
}).to(.1 * 3, {
width: 1e3
}).delay(.1 * i.length).to(.1, {
height: 0
}).start();
this.completeLabel.schedule(function() {
o < i.length && (e.completeLabel.string = i[o++]);
}, .1, i.length, .5);
if (t && t.size > 0) for (var a = 0; a < 4; a++) if (t.has(a)) {
this.arrowList[a].active = !0;
this.arrowList[a].getChildByName("sprite").color = t.get(a) ? cc.Color.WHITE : cc.color(55, 55, 55, 255);
} else this.arrowList[a].active = !1;
}
};
e.prototype.fadeOut = function() {
if (this.node) {
this.node.opacity = 255;
cc.tween(this.node).to(.5, {
opacity: 0
}).start();
}
};
e.prototype.fadeIn = function() {
if (this.node) {
this.node.opacity = 0;
cc.tween(this.node).to(3, {
opacity: 255
}).start();
}
};
e.prototype.statusUpdate = function(t) {
this.playerInfoDialog && this.playerInfoDialog.refreshDialog(t, t.EquipmentTotalData, t.StatusTotalData);
};
e.prototype.showDamageCorner = function() {
if (this.damageCorner) {
this.damageCorner.stopAllActions();
this.damageCorner.opacity = 255;
this.damageCorner.scale = 1;
cc.tween(this.damageCorner).parallel(cc.tween(this.damageCorner).to(.5, {
scale: 1.05
}), cc.tween(this.damageCorner).to(1, {
opacity: 0
})).start();
}
};
e.prototype.ammoUpdate = function(t, e) {
if (this.AmmoLabel) {
this.AmmoLabel.string = (t <= 0 ? "-" : t) + "/" + (e <= 0 ? "-" : e);
cc.tween(this.AmmoLabel.node).to(.05, {
scale: 1.05
}).to(.05, {
scale: .95
}).to(.1, {
scale: 1.05
}).to(.05, {
scale: 1
}).start();
}
};
e.prototype.healthBarUpdate = function(t, e) {
this.healthBar && this.healthBar.refreshHealth(t, e);
};
e.prototype.dreamBarUpdate = function(t, e) {
this.dreamBar && this.dreamBar.refreshHealth(t, e);
};
e.prototype.lifeBarUpdate = function(t, e, i, o, a) {
this.satietyView && this.satietyView.refreshPercent(t, e, i, o, a);
};
e.prototype.start = function() {};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 1) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
Object.defineProperty(e.prototype, "HasModalDialogShow", {
get: function() {
return this.settingsDialog.node.active || this.martShelvesDialog.node.active || this.cellphoneDialog.node.active || this.actionSettingDialog.node.active || this.dollMachineDialog.node.active || this.dialogue.isShow;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsTimeCountDialogShow", {
get: function() {
return this.cellphoneDialog.node.active;
},
enumerable: !1,
configurable: !0
});
e.prototype.closeCurrentOtherDialog = function() {
if (this.martShelvesDialog.isShow) {
this.martShelvesDialog.dismiss();
return !0;
}
if (this.cellphoneDialog.isShow) {
this.cellphoneDialog.dismiss();
return !0;
}
if (this.actionSettingDialog.isShow) {
this.actionSettingDialog.dismiss();
return !0;
}
if (this.dollMachineDialog.isShow) {
this.dollMachineDialog.dismiss();
return !0;
}
if (this.inventoryDialog.isShow) {
this.inventoryDialog.dismiss();
return !0;
}
return !!this.dialogue.isShow;
};
e.prototype.update = function(t) {
if (this.isCheckTimeDelay(t) && this.clock && this.startCountTime) {
this.changeTime();
this.clock.string = "" + _.default.getPlayTime(u.default.totalTime);
}
this.HasModalDialogShow ? u.default.isGamePause = !0 : u.default.isGamePause = !1;
};
e.prototype.useItem = function() {};
e.prototype.changeTime = function() {
if (!u.default.isGamePause || this.IsTimeCountDialogShow) {
u.default.totalTime += 1e3;
u.default.realTime = u.default.realTime + (u.default.chapterIndex == u.default.CHAPTER099 ? 1e4 : 6e4);
r.EventHelper.emit(r.EventHelper.HUD_TIME_TICK);
}
};
e.prototype.cancelOrPause = function() {
if (this.node) {
f.default.play(f.default.SELECT);
this.closeCurrentOtherDialog() || this.showSettingsDialog();
}
};
e.prototype.showCellphoneDialog = function() {
this.cellphoneDialog && (this.cellphoneDialog.isShow ? this.cellphoneDialog.dismiss() : this.cellphoneDialog.show());
};
e.prototype.showActionSettingDialog = function() {
this.actionSettingDialog && (this.actionSettingDialog.isShow ? this.actionSettingDialog.dismiss() : this.actionSettingDialog.show());
};
e.prototype.pauseGame = function() {
f.default.play(f.default.SELECT);
this.showSettingsDialog();
};
e.prototype.showInventoryDialog = function(t) {
if (this.node) {
f.default.play(f.default.SELECT);
this.inventoryDialog.isShow ? this.inventoryDialog.dismiss() : t && t.length > 0 ? this.inventoryDialog.showFurniture(t) : this.inventoryDialog.show();
}
};
e.prototype.showSettingsDialog = function() {
var t = this;
if (this.node) if (this.settingsDialog.isShow) {
this.settingsDialog.dismiss();
cc.director.getScheduler().setTimeScale(1);
} else {
this.scheduleOnce(function() {
t.settingsDialog.isShow && !t.settingsDialog.isAniming ? cc.director.getScheduler().setTimeScale(0) : cc.director.getScheduler().setTimeScale(1);
}, 1);
this.settingsDialog.show();
}
};
e.prototype.showMartShelvesDialog = function(t, e) {
if (this.martShelvesDialog) if (this.martShelvesDialog.isShow) this.martShelvesDialog.dismiss(); else {
this.martShelvesDialog.updateUI(t, e);
this.martShelvesDialog.show();
}
};
e.prototype.showDollMachineDialog = function() {
this.dollMachineDialog && (this.dollMachineDialog.isShow ? this.dollMachineDialog.dismiss() : this.dollMachineDialog.show());
};
n([ S(l.default) ], e.prototype, "healthBar", void 0);
n([ S(l.default) ], e.prototype, "dreamBar", void 0);
n([ S(l.default) ], e.prototype, "bossHealthBar", void 0);
n([ S(s.default) ], e.prototype, "playerInfoDialog", void 0);
n([ S(cc.Label) ], e.prototype, "level", void 0);
n([ S(cc.Label) ], e.prototype, "clock", void 0);
n([ S(cc.Node) ], e.prototype, "damageCorner", void 0);
n([ S(cc.Node) ], e.prototype, "pasueButton", void 0);
n([ S(cc.Node) ], e.prototype, "zoomButton", void 0);
n([ S(p.default) ], e.prototype, "settingsDialog", void 0);
n([ S(h.default) ], e.prototype, "martShelvesDialog", void 0);
n([ S(cc.Label) ], e.prototype, "completeLabel", void 0);
n([ S(cc.Label) ], e.prototype, "oilGoldLabel", void 0);
n([ S(d.default) ], e.prototype, "inventoryDialog", void 0);
n([ S(cc.Node) ], e.prototype, "followArrows", void 0);
n([ S(g.default) ], e.prototype, "satietyView", void 0);
n([ S(y.default) ], e.prototype, "dollMachineDialog", void 0);
n([ S(cc.Label) ], e.prototype, "AmmoLabel", void 0);
n([ S(m.default) ], e.prototype, "dialogue", void 0);
n([ S(v.default) ], e.prototype, "cellphoneDialog", void 0);
n([ S(E.default) ], e.prototype, "actionSettingDialog", void 0);
return n([ D ], e);
}(cc.Component);
i.default = O;
cc._RF.pop();
}, {
"../data/PlayerData": "PlayerData",
"../logic/HealthBar": "HealthBar",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils",
"./../logic/EventHelper": "EventHelper",
"./Dialogue": "Dialogue",
"./PlayerInfoDialog": "PlayerInfoDialog",
"./SatietyView": "SatietyView",
"./dialog/ActionSettingDialog": "ActionSettingDialog",
"./dialog/CellphoneDialog": "CellphoneDialog",
"./dialog/DollMachineDialog": "DollMachineDialog",
"./dialog/InventoryDialog": "InventoryDialog",
"./dialog/MartShelvesDialog": "MartShelvesDialog",
"./dialog/SettingsDialog": "SettingsDialog"
} ],
GameOver: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "0e28bkl25dNTqUQmquXpqGi", "GameOver");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("../utils/AudioPlayer"), l = t("../utils/Random"), c = t("../data/ExitData"), u = t("../utils/LocalStorage"), p = t("../ui/CursorArea"), h = t("../utils/Utils"), d = cc._decorator, f = d.ccclass, g = d.property, y = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.info = null;
e.infoIcon = null;
e.level = null;
e.clock = null;
e.tips = null;
e.cursorAreaPrefab = null;
e.tipsStr = "";
return e;
}
i = e;
e.prototype.onLoad = function() {
p.default.init(this.cursorAreaPrefab);
};
e.prototype.start = function() {
var t = this, e = u.default.getAchievementData();
this.clock && (this.clock.string = "存活时间：" + h.default.getPlayTime(r.default.totalTime));
this.level && (this.level.string = "");
var o = "死于非命";
r.default.dieFrom.name.length > 0 && (o = "第" + e.playerLifes + "次死亡，在 " + r.default.worldLoader.getCurrentLevelData().name + " 被 " + r.default.dieFrom.name + " 击倒");
if (this.infoIcon && r.default.dieFrom.res.length > 0) {
this.infoIcon.spriteFrame = r.default.spriteFrameRes(r.default.dieFrom.res);
this.infoIcon.node.width = 64;
this.infoIcon.node.height = 64 / this.infoIcon.spriteFrame.getOriginalSize().width * this.infoIcon.spriteFrame.getOriginalSize().height;
}
this.info && (this.info.string = o);
if (this.tips) {
var a = 0;
this.tips.string = "";
var n = i.TIPS[l.default.getRandomNum(0, i.TIPS.length - 1)];
this.schedule(function() {
++a > n.length && (a = n.length);
t.tips.string = n.substr(0, a);
}, .05, n.length, .2);
}
};
e.prototype.retry = function() {
r.default.resetData();
s.default.play(s.default.SELECT);
r.default.loadingNextLevel(c.default.getRealWorldExitDataFromDream(r.default.chapterIndex, r.default.level));
};
e.prototype.home = function() {
s.default.play(s.default.SELECT);
cc.director.loadScene("start");
};
e.prototype.resetWorld = function() {};
var i;
e.TIPS = [ "当你凝视深渊的时候,深渊也在凝视着你", "上锁的门需要从另一面才能打开", "梦醒可以躺在床上回到上一个翠金点", "盾牌可以格挡子弹，甚至弹反对面", "翠湖的水很冰冷", "合理使用物品来增强自己", "你沉沉地睡着了", "电眼会麻痹你的思维", "翠金点是用来自动保存进度的", "激光有一个短暂的瞄准期，抓住机会再补一刀", "冰魔的刺会阻挡你的行动", "武士刀可以反击子弹", "你的头盖骨被做成了碗", "幽光在呼唤着你" ];
n([ g(cc.Label) ], e.prototype, "info", void 0);
n([ g(cc.Sprite) ], e.prototype, "infoIcon", void 0);
n([ g(cc.Label) ], e.prototype, "level", void 0);
n([ g(cc.Label) ], e.prototype, "clock", void 0);
n([ g(cc.Label) ], e.prototype, "tips", void 0);
n([ g(cc.Prefab) ], e.prototype, "cursorAreaPrefab", void 0);
return i = n([ f ], e);
}(cc.Component);
i.default = y;
cc._RF.pop();
}, {
"../data/ExitData": "ExitData",
"../ui/CursorArea": "CursorArea",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/LocalStorage": "LocalStorage",
"../utils/Random": "Random",
"../utils/Utils": "Utils",
"./Logic": "Logic"
} ],
GameWorldSystem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a00e4kRmPFPe6A8ApaCWdtB", "GameWorldSystem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../ECS"), r = t("./ColliderSystem"), s = t("./MoveSystem"), l = function(t) {
a(e, t);
function e(i, o) {
var a = t.call(this) || this;
e.colliderSystem = new r.default(i, o);
a.add(e.colliderSystem);
a.add(new s.default());
return a;
}
return e;
}(n.ecs.RootSystem);
i.default = l;
cc._RF.pop();
}, {
"../ECS": "ECS",
"./ColliderSystem": "ColliderSystem",
"./MoveSystem": "MoveSystem"
} ],
GameWorld: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cf0d2aiaG9EvZLNdlduf8fH", "GameWorld");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.start = function() {};
return n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
Game: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "c30ffLX6hVIjoNslRhRCM7w", "Game");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Dungeon"), s = t("./Logic"), l = t("../ui/GameHud"), c = t("../utils/LocalStorage"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.onLoad = function() {
s.default.settings.valueCopy(c.default.getSystemSettings());
cc.director.getScheduler().setTimeScale(1);
};
Object.defineProperty(e.prototype, "Dungeon", {
get: function() {
this.dungeonBase || (this.dungeonBase = this.getComponentInChildren(r.default));
return this.dungeonBase;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "hud", {
get: function() {
this.hudBase || (this.hudBase = this.getComponentInChildren(l.default));
return this.hudBase;
},
enumerable: !1,
configurable: !0
});
e.prototype.update = function() {
this.node;
};
return n([ p ], e);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"../ui/GameHud": "GameHud",
"../utils/LocalStorage": "LocalStorage",
"./Dungeon": "Dungeon",
"./Logic": "Logic"
} ],
GoodsData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9eba4cjM5REaKZZ0yKseRh9", "GoodsData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../utils/DataUtils"), r = t("./BaseData"), s = t("./ItemData"), l = function(t) {
a(e, t);
function e() {
var e = t.call(this) || this;
e.uuid = "";
e.count = 10;
e.item = new s.default();
return e;
}
e.prototype.valueCopy = function(t) {
if (t) {
n.default.baseCopy(this, t);
this.item.valueCopy(t.item);
}
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
return e;
}(r.default);
i.default = l;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData",
"./ItemData": "ItemData"
} ],
Goods: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1cb63YYvfBC97O0f5MEeafg", "Goods");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/GoodsData"), s = t("../logic/EventHelper"), l = t("../logic/Logic"), c = t("../utils/AudioPlayer"), u = cc._decorator, p = u.ccclass, h = u.property, d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.data = new r.default();
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.sprite1 = this.node.getChildByName("sprite1").getComponent(cc.Sprite);
this.sprite2 = this.node.getChildByName("sprite2").getComponent(cc.Sprite);
this.sprite3 = this.node.getChildByName("sprite3").getComponent(cc.Sprite);
this.node.on(cc.Node.EventType.TOUCH_END, function() {
s.EventHelper.emit(s.EventHelper.HUD_MART_SHELVES_DIALOG_PAY, {
data: t.data
});
c.default.play(c.default.SELECT);
});
};
e.prototype.init = function(t) {
this.data = t;
this.updateSprite();
};
e.prototype.updateSprite = function() {
if (!this.sprite1) {
this.sprite1 = this.node.getChildByName("sprite1").getComponent(cc.Sprite);
this.sprite2 = this.node.getChildByName("sprite2").getComponent(cc.Sprite);
this.sprite3 = this.node.getChildByName("sprite3").getComponent(cc.Sprite);
}
this.sprite1.node.opacity = 255;
this.sprite2.node.opacity = 255;
this.sprite3.node.opacity = 255;
this.sprite1.spriteFrame = l.default.spriteFrameRes(this.data.item.resName);
this.sprite2.spriteFrame = l.default.spriteFrameRes(this.data.item.resName);
this.sprite3.spriteFrame = l.default.spriteFrameRes(this.data.item.resName);
this.sprite1.node.width = this.sprite1.spriteFrame.getRect().width;
this.sprite2.node.width = this.sprite2.spriteFrame.getRect().width;
this.sprite2.node.width = this.sprite2.spriteFrame.getRect().width;
this.sprite1.node.height = this.sprite1.spriteFrame.getRect().height;
this.sprite2.node.height = this.sprite2.spriteFrame.getRect().height;
this.sprite2.node.height = this.sprite2.spriteFrame.getRect().height;
this.label.string = this.data.item.nameCn + "\n$:" + this.data.item.price;
if (2 == this.data.count) this.sprite1.node.opacity = 0; else if (1 == this.data.count) {
this.sprite2.node.opacity = 0;
this.sprite1.node.opacity = 0;
} else if (this.data.count <= 0) {
this.sprite1.node.opacity = 0;
this.sprite2.node.opacity = 0;
this.sprite3.node.opacity = 0;
}
};
e.prototype.click = function() {};
n([ h(cc.Label) ], e.prototype, "label", void 0);
return n([ p ], e);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../data/GoodsData": "GoodsData",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer"
} ],
GroundOilGoldData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "06da22NYo5DOLe6uR2c2v0D", "GroundOilGoldData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.x = 0;
this.y = 0;
this.chapter = 0;
this.level = 0;
this.value = 0;
}
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t);
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
HealthBar: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4298eVZsIJFhKykTJYXRBP0", "HealthBar");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.backbar = null;
e.label = null;
e.isPlayer = !1;
e.timeDelay = 0;
e.hideWhenFull = !1;
return e;
}
i = e;
e.prototype.onLoad = function() {
this.progressBar = this.getComponent(cc.ProgressBar);
this.progressBar.progress = 1;
};
e.prototype.start = function() {};
e.prototype.refreshHealth = function(t, e) {
if (this.progressBar) {
if (this.isPlayer) {
var o = e * i.ICON_SIZE;
this.progressBar.totalLength = o < 200 ? o : 200;
this.node.width = this.progressBar.totalLength;
}
this.progressBar.progress = t / e;
this.label && (this.label.string = parseFloat(t.toFixed(1)) + "/" + e);
}
};
e.prototype.shake = function() {
cc.tween(this.node).to(.05, {
scale: 1.05
}).to(.05, {
scale: .95
}).to(.1, {
scale: 1.05
}).to(.05, {
scale: 1
}).start();
};
e.prototype.update = function(t) {
this.backbar.width = this.lerp(this.backbar.width, this.progressBar.barSprite.node.width, 1 * t);
this.hideWhenFull && (1 == this.progressBar.progress ? this.node.opacity = 0 : this.node.opacity = 255);
};
e.prototype.lerp = function(t, e, i) {
return t + (e - t) * i;
};
var i;
e.ICON_SIZE = 10;
n([ l(cc.Node) ], e.prototype, "backbar", void 0);
n([ l(cc.Label) ], e.prototype, "label", void 0);
n([ l ], e.prototype, "isPlayer", void 0);
return i = n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
HitBlood: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e7c05ko9rFCI4QiNRcOjHhC", "HitBlood");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../ecs/component/MoveComponent"), s = t("../logic/Logic"), l = t("../utils/Random"), c = t("../utils/IndexZ"), u = t("../logic/EventHelper"), p = t("../base/BaseNodeComponent"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.root = null;
e.shadow = null;
e.spriteIndex = 0;
e.rotateAngle = 0;
e.checkTimeDelay = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.init();
};
e.prototype.onEnable = function() {
this.init();
};
e.prototype.init = function() {
var t = this;
this.node.scale = .5 + l.default.rand();
this.spriteIndex = s.default.getRandomNum(0, i.SPRITES.length - 1);
this.rotateAngle = 0;
var e = s.default.getRandomNum(0, 255), o = s.default.getRandomNum(0, 255), a = s.default.getRandomNum(0, 255);
this.sprite.node.color = cc.color(e, o, a);
this.sprite.node.opacity = 255;
this.updateSprite();
this.unscheduleAllCallbacks();
cc.tween(this.sprite.node).delay(5).to(.5, {
opacity: 0
}).call(function() {
u.EventHelper.emit(u.EventHelper.POOL_DESTORY_HIT_BLOOD, {
paperNode: t.node
});
}).start();
};
e.prototype.randomColor = function() {};
e.prototype.updateSprite = function() {
this.spriteIndex > i.SPRITES.length - 1 && (this.spriteIndex = 0);
this.sprite.spriteFrame = s.default.spriteFrameRes(i.SPRITES[this.spriteIndex]);
this.shadow.spriteFrame = s.default.spriteFrameRes(i.SPRITES[this.spriteIndex]);
this.spriteIndex++;
};
e.prototype.rotateSprite = function() {
this.rotateAngle > 360 && (this.rotateAngle = 0);
this.sprite.node.angle = this.rotateAngle;
this.shadow.node.angle = this.rotateAngle;
this.rotateAngle++;
};
e.prototype.changeZIndex = function() {
var t = this.entity.Transform.base;
t > 0 && (t += 500);
this.node.zIndex = c.default.getActorZIndex(cc.v3(this.node.position.x, this.node.position.y - t));
};
e.prototype.update = function(t) {
var e = this.root.y - this.entity.Transform.base;
e < 0 && (e = 0);
var i = 1 - e / 64;
this.shadow.node.scale = i < .5 ? .5 : i;
e > 0 && this.rotateSprite();
this.isCheckTimeDelay(t) && e > 0 && this.updateSprite();
};
e.prototype.fly = function(t, e) {
this.changeZIndex();
this.entity.NodeRender.root = this.root;
this.entity.Move.linearVelocityZ = 2;
this.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY / 10;
var i = e ? s.default.getRandomNum(5, 8) : s.default.getRandomNum(2, 5), o = l.default.rand() * (s.default.getHalfChance() ? 1 : -1) * i, a = l.default.rand() * (s.default.getHalfChance() ? 1 : -1) * i;
if (t) {
var n = e ? this.node.position.sub(t) : t.sub(this.node.position);
o = (n = cc.v3(cc.v2(n.normalize()).rotate(s.default.getRandomNum(-45, 45) * Math.PI / 180)).normalize().mul(i)).x;
a = n.y;
}
this.entity.Move.linearVelocity = cc.v2(o, a);
this.entity.Move.damping = 3;
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
var i;
e.SPRITES = [ "paper0", "paper1", "paper2", "paper3" ];
n([ f(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ f(cc.Node) ], e.prototype, "root", void 0);
n([ f(cc.Sprite) ], e.prototype, "shadow", void 0);
return i = n([ d ], e);
}(p.default);
i.default = g;
cc._RF.pop();
}, {
"../base/BaseNodeComponent": "BaseNodeComponent",
"../ecs/component/MoveComponent": "MoveComponent",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../utils/IndexZ": "IndexZ",
"../utils/Random": "Random"
} ],
IceDemonThron: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "24e5dr3bslGlZZLL6MjYCjj", "IceDemonThron");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../manager/StatusManager"), l = t("../data/FromData"), c = t("../utils/ActorUtils"), u = t("../base/BaseColliderComponent"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isUp = !1;
e.isAuto = !0;
e.isUping = !1;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.isUp = !1;
this.node.getChildByName("thron").getComponent(cc.Sprite).getMaterial(0).setProperty("addColor", cc.color(194, 255, 255));
this.entity && this.entity.Move && (this.entity.Move.isStatic = !0);
};
e.prototype.fall = function() {
this.anim = this.getComponent(cc.Animation);
this.anim.play();
this.isUping = !0;
};
e.prototype.ThronUp = function() {
var t = this;
this.isUp = !0;
this.scheduleOnce(function() {
t.isUp = !1;
}, .1);
this.scheduleOnce(function() {
t.node && t.destroyEntityNode();
}, 2);
};
e.prototype.start = function() {};
e.prototype.onColliderEnter = function(t) {
!c.default.getEnemyCollisionTarget(t) || this.isAuto || this.isUping || this.fall();
};
e.prototype.onColliderStay = function(t) {
var e = c.default.getEnemyCollisionTarget(t);
if (e && this.isUp && this.isValid) {
this.isUp = !1;
var i = l.default.getClone("冰刺", "bossicethron02");
e.takeDamage(new r.default(3), i) && e.addStatus(s.default.FROZEN, i);
}
};
return n([ h ], e);
}(u.default));
i.default = d;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils"
} ],
IceDemon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4043fv41gFB1o18Orugu9B9", "IceDemon");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../ecs/component/MoveComponent"), s = t("../logic/Dungeon"), l = t("../logic/Shooter"), c = t("../data/DamageData"), u = t("../manager/StatusManager"), p = t("./Boss"), h = t("../utils/NextStep"), d = t("../utils/AudioPlayer"), f = t("../data/FromData"), g = t("../logic/Achievement"), y = t("../data/AreaOfEffectData"), m = t("../utils/IndexZ"), v = t("../utils/ActorUtils"), E = t("../talent/MagicIce"), _ = t("../logic/Logic"), T = t("../collider/CCollider"), D = t("../utils/Utils"), S = cc._decorator, O = S.ccclass, A = S.property, R = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.timeDelay = 0;
e.isFaceRight = !0;
e.isMoving = !1;
e.dashSkill = new h.default();
e.thronSkill = new h.default();
e.defenceSkill = new h.default();
e.meleeSkill = new h.default();
e.groundThron = null;
e.selfThron = null;
e.magicice = null;
e.actionTimeDelay = 0;
return e;
}
e.prototype.init = function() {};
e.prototype.onLoad = function() {
this.sc.isDied = !1;
this.sc.isShow = !1;
this.anim = this.getComponent(cc.Animation);
this.shooter = this.node.getChildByName("Shooter").getComponent(l.default);
this.shooter.from.valueCopy(f.default.getClone(this.actorName(), "bossicepart01"));
this.statusManager = this.node.getChildByName("StatusManager").getComponent(u.default);
};
e.prototype.start = function() {
t.prototype.start.call(this);
};
e.prototype.takeDamage = function(t) {
if (this.sc.isDied || !this.sc.isShow) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
var e = this.data.currentHealth < this.data.Common.MaxHealth / 2;
this.defence(e);
if (this.defenceSkill.IsExcuting) d.default.play(d.default.BOSS_ICEDEMON_HIT); else {
var i = [ d.default.MONSTER_HIT, d.default.MONSTER_HIT1, d.default.MONSTER_HIT2 ];
d.default.play(i[_.default.getRandomNum(0, 2)]);
}
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
g.default.addMonsterKillAchievement(this.data.resName);
cc.tween(this.node).to(3, {
opacity: 0
}).start();
this.sc.isDied = !0;
this.anim.play("IceDemonDefence");
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
this.getLoot();
}
};
e.prototype.bossAction = function() {
if (!this.sc.isDied && this.sc.isShow && this.dungeon) {
this.entity.Transform.position = s.default.fixOuterMap(this.entity.Transform.position);
this.pos = s.default.getIndexInMap(this.entity.Transform.position);
this.changeZIndex();
var t = this.getMovePos(), e = this.getNearPlayerDistance(this.dungeon.player.node), i = this.data.currentHealth < this.data.Common.MaxHealth / 2;
e < 100 && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
!i || this.magicice.isShow || this.defenceSkill.IsInCooling || this.magicice.showIce();
!(e < 200) || this.defenceSkill.IsExcuting || this.meleeSkill.IsExcuting || this.thronSkill.IsExcuting || this.dashSkill.IsExcuting || this.attack();
this.meleeSkill.IsExcuting || this.defenceSkill.IsExcuting || this.thronSkill.IsExcuting || this.dash();
this.meleeSkill.IsExcuting || this.defenceSkill.IsExcuting || this.dashSkill.IsExcuting || this.thronGround(i);
if (!t.equals(cc.Vec3.ZERO) && !this.meleeSkill.IsExcuting && !this.defenceSkill.IsExcuting && !this.thronSkill.IsExcuting && !this.dashSkill.IsExcuting && e > 60) {
t = t.normalizeSelf();
this.move(t, 5);
}
}
};
e.prototype.getMovePos = function() {
var t = this.dungeon.player.pos.clone(), e = s.default.getPosInMap(t);
e.y += 32;
var i = (e = e.sub(this.node.position)).x;
this.isFaceRight = i > 0;
return e;
};
e.prototype.thronGround = function(t) {
var e = this;
this.thronSkill.next(function() {
e.thronSkill.IsExcuting = !0;
e.anim || (e.anim = e.getComponent(cc.Animation));
e.anim.play("IceDemonThron");
var i = 1;
e.scheduleOnce(function() {
d.default.play(d.default.BOSS_ICEDEMON_THRON);
}, 1);
e.scheduleOnce(function() {
d.default.play(d.default.BOSS_ICEDEMON_THRON);
}, 2);
e.schedule(function() {
for (var t = e.pos.clone(), o = [ cc.v3(t.x, t.y + i), cc.v3(t.x, t.y - i), cc.v3(t.x + i, t.y + i), cc.v3(t.x + i, t.y - i), cc.v3(t.x + i, t.y), cc.v3(t.x - i, t.y), cc.v3(t.x - i, t.y + i), cc.v3(t.x - i, t.y - i) ], a = 0; a < o.length; a++) {
var n = new c.default();
n.physicalDamage = 5;
e.shooter.dungeon = e.dungeon;
e.shooter.actor = e;
e.shooter.fireAoe(e.selfThron, new y.default().init(0, 2, .4, 4, m.default.getActorZIndex(s.default.getPosInMap(o[a])), !0, !0, !0, !1, !0, n, f.default.getClone("冰刺", "bossicethron02"), [ u.default.FROZEN ]), s.default.getPosInMap(o[a]).subSelf(e.getCenterPosition()), 0, null, !0);
}
i++;
}, .2, t ? 7 : 5, 1);
t && e.scheduleOnce(function() {
for (var t = e.pos.clone(), i = [ cc.v3(t.x + 2, t.y + 1), cc.v3(t.x + 2, t.y - 1), cc.v3(t.x - 2, t.y + 1), cc.v3(t.x - 2, t.y - 1), cc.v3(t.x + 4, t.y + 2), cc.v3(t.x + 4, t.y - 2), cc.v3(t.x - 4, t.y + 2), cc.v3(t.x - 4, t.y - 2), cc.v3(t.x + 5, t.y + 3), cc.v3(t.x + 5, t.y - 3), cc.v3(t.x - 5, t.y + 3), cc.v3(t.x - 5, t.y - 3), cc.v3(t.x + 6, t.y + 2), cc.v3(t.x + 6, t.y - 2), cc.v3(t.x - 6, t.y + 2), cc.v3(t.x - 6, t.y - 2), cc.v3(t.x + 6, t.y + 4), cc.v3(t.x + 6, t.y - 4), cc.v3(t.x - 6, t.y + 4), cc.v3(t.x - 6, t.y - 4), cc.v3(t.x + 1, t.y + 2), cc.v3(t.x + 1, t.y - 2), cc.v3(t.x - 1, t.y + 2), cc.v3(t.x - 1, t.y - 2), cc.v3(t.x + 2, t.y + 4), cc.v3(t.x + 2, t.y - 4), cc.v3(t.x - 2, t.y + 4), cc.v3(t.x - 2, t.y - 4), cc.v3(t.x + 3, t.y + 5), cc.v3(t.x + 3, t.y - 5), cc.v3(t.x - 3, t.y + 5), cc.v3(t.x - 3, t.y - 5), cc.v3(t.x + 2, t.y + 6), cc.v3(t.x + 2, t.y - 6), cc.v3(t.x - 2, t.y + 6), cc.v3(t.x - 2, t.y - 6), cc.v3(t.x + 4, t.y + 6), cc.v3(t.x + 4, t.y - 6), cc.v3(t.x - 4, t.y + 6), cc.v3(t.x - 4, t.y - 6) ], o = 0; o < i.length; o++) {
var a = new c.default();
a.physicalDamage = 5;
e.shooter.dungeon = e.dungeon;
e.shooter.actor = e;
e.shooter.fireAoe(e.selfThron, new y.default().init(0, 2, .4, 4, m.default.getActorZIndex(s.default.getPosInMap(i[o])), !0, !0, !0, !1, !0, a, f.default.getClone("冰刺", "bossicethron02"), [ u.default.FROZEN ]), s.default.getPosInMap(i[o]).subSelf(e.getCenterPosition()), 0, null, !0);
}
}, 1.5);
e.scheduleOnce(function() {
e.thronSkill.IsExcuting = !1;
}, 4);
}, 15, !0);
};
e.prototype.thronSelf = function() {
this.scheduleOnce(function() {
d.default.play(d.default.SKILL_ICETHRON);
}, 1);
var t = [ 0, 45, 90, 135, 180, 225, 270, 315 ], e = [ cc.v3(0, 40), cc.v3(-20, 20), cc.v3(-40, 0), cc.v3(-20, -20), cc.v3(0, -40), cc.v3(20, -20), cc.v3(40, 0), cc.v3(20, 20) ], i = (cc.v3(0, -40), 
cc.v3(-20, -20), cc.v3(-40, 0), cc.v3(-20, 20), cc.v3(0, 40), cc.v3(20, 20), cc.v3(40, 0), 
cc.v3(20, -20), new c.default());
i.magicDamage = 2;
for (var o = 0; o < t.length; o++) {
this.shooter.dungeon = this.dungeon;
this.shooter.actor = this;
this.shooter.fireAoe(this.selfThron, new y.default().init(0, 2, .4, 3, m.default.OVERHEAD, !0, !0, !0, !1, !0, i, f.default.getClone(this.actorName(), "bossicepart01"), [ u.default.FROZEN ]), cc.v3(e[o]), t[o], null, !0);
}
};
e.prototype.attack = function() {
var t = this;
this.meleeSkill.next(function() {
t.meleeSkill.IsExcuting = !0;
d.default.play(d.default.MELEE);
t.anim || (t.anim = t.getComponent(cc.Animation));
t.anim.play("IceDemonAttack001");
t.scheduleOnce(function() {
d.default.play(d.default.BOSS_ICEDEMON_ATTACK);
var e = t.getMovePos(), i = e.x, o = e.y, a = cc.v2(i, o);
a = a.normalize().mul(D.default.getDashSpeedByDistance(300 / r.MoveComponent.PIXELS_PER_UNIT, t.entity.Move.damping));
t.entity.Move.linearVelocity = a;
}, 1);
t.scheduleOnce(function() {
t.meleeSkill.IsExcuting = !1;
}, 2);
}, 3, !0);
};
e.prototype.dash = function() {
var t = this;
this.dashSkill.next(function() {
t.dashSkill.IsExcuting = !0;
t.anim || (t.anim = t.getComponent(cc.Animation));
t.scheduleOnce(function() {
d.default.play(d.default.BOSS_ICEDEMON_DASH);
}, 2.5);
t.anim.play("IceDemonDash");
t.scheduleOnce(function() {
var e = t.getMovePos(), i = e.x, o = e.y, a = cc.v2(i, o);
a = a.normalize().mul(D.default.getDashSpeedByDistance(1200 / r.MoveComponent.PIXELS_PER_UNIT, t.entity.Move.damping));
t.entity.Move.linearVelocity = a;
}, 2.4);
t.scheduleOnce(function() {
t.dashSkill.IsExcuting = !1;
}, 3);
}, 8, !0);
};
e.prototype.defence = function(t) {
var e = this;
this.defenceSkill.next(function() {
e.defenceSkill.IsExcuting = !0;
e.anim || (e.anim = e.getComponent(cc.Animation));
e.anim.play("IceDemonDefence");
e.data.Common.defence = 9999;
e.data.Common.magicDefence = 9999;
d.default.play(d.default.BOSS_ICEDEMON_DEFEND);
e.scheduleOnce(function() {
e.defenceSkill.IsExcuting = !1;
e.data.Common.defence = 0;
e.data.Common.magicDefence = 0;
}, 3);
if (t) {
e.magicice.isShow && e.magicice.breakIce();
e.thronSelf();
}
}, 6, !0);
};
e.prototype.fireShooter = function(t, e, i, o, a) {
t.dungeon = this.dungeon;
t.actor = this;
t.data.bulletType = e;
t.data.bulletArcExNum = i;
t.data.bulletLineExNum = o;
t.fireBullet(a);
};
e.prototype.showBoss = function() {
this.sc.isShow = !0;
this.entity.NodeRender.node = this.node;
this.entity.Move.damping = 6;
if (this.healthBar) {
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.healthBar.node.active = !this.sc.isDied;
}
};
e.prototype.isActionTimeDelay = function(t) {
this.actionTimeDelay += t;
if (this.actionTimeDelay > .2) {
this.actionTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t) {
this.timeDelay += t;
this.timeDelay > 1 && (this.timeDelay = 0);
this.isActionTimeDelay(t) && this.bossAction();
this.data.currentHealth < 1 && this.killed();
this.healthBar.node.active = !this.sc.isDied;
this.sc.isDied && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
this.node.scaleX = this.isFaceRight ? 1 : -1;
};
e.prototype.move = function(t, e) {
if (!this.sc.isDied) {
t.equals(cc.Vec3.ZERO) || (this.pos = s.default.getIndexInMap(this.node.position));
var i = t.x, o = t.y, a = (Math.abs(i), Math.abs(o), cc.v2(i, o));
a = a.normalize().mul(e);
this.entity.Move.linearVelocity = a;
this.isMoving = 0 != i || 0 != o;
this.isMoving ? this.anim.getAnimationState("IceDemonWalk").isPlaying || this.anim.playAdditive("IceDemonWalk") : this.anim.getAnimationState("IceDemonWalk").isPlaying && this.anim.play("IceDemonIdle");
this.changeZIndex();
}
};
e.prototype.onColliderEnter = function(t, e) {
if (e.tag == T.default.TAG.BOSS_HIT) {
if (t.tag == T.default.TAG.PLAYER_HIT) return;
var i = v.default.getEnemyCollisionTarget(t);
if (i && (this.meleeSkill.IsExcuting || this.dashSkill.IsExcuting) && !this.sc.isDied) {
var o = new c.default();
o.physicalDamage = 8;
var a = f.default.getClone(this.actorName(), "bossicepart01");
i.takeDamage(o, a, this) && i.addStatus(u.default.FROZEN, a);
}
}
};
e.prototype.actorName = function() {
return "冰魔";
};
n([ A(cc.Prefab) ], e.prototype, "groundThron", void 0);
n([ A(cc.Prefab) ], e.prototype, "selfThron", void 0);
n([ A(E.default) ], e.prototype, "magicice", void 0);
return n([ O ], e);
}(p.default);
i.default = R;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/AreaOfEffectData": "AreaOfEffectData",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../manager/StatusManager": "StatusManager",
"../talent/MagicIce": "MagicIce",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/NextStep": "NextStep",
"../utils/Utils": "Utils",
"./../ecs/component/MoveComponent": "MoveComponent",
"./Boss": "Boss"
} ],
IceThron: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "732e0QfOMxFu5eXTn+nHJEI", "IceThron");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../data/FromData"), l = t("../manager/StatusManager"), c = t("../utils/IndexZ"), u = t("../utils/ActorUtils"), p = t("../base/BaseColliderComponent"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.hasTargetMap = new Map();
e.isAttacking = !1;
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.entity && this.entity.Move && (this.entity.Move.isStatic = !0);
};
e.prototype.start = function() {};
e.prototype.AnimFinish = function() {
var t = this;
this.isAttacking = !1;
this.scheduleOnce(function() {
t.node && t.destroyEntityNode();
}, 1);
};
e.prototype.show = function(t, e, i, o) {
this.player = t;
this.node.active = !0;
this.node.parent = t.node.parent;
this.node.setPosition(this.getPlayerPosition(t, e, i));
this.node.scale = o;
e > 90 && e < 270 && (this.node.scaleX = -this.node.scaleX);
this.isAttacking = !0;
this.node.zIndex = c.default.getActorZIndex(this.node.position);
};
e.prototype.getPlayerPosition = function(t, e, i) {
var o = t.Hv.clone(), a = cc.v3(cc.v2(o).rotateSelf(e * Math.PI / 180)).normalizeSelf();
return t.node.position.clone().addSelf(a.mulSelf(i));
};
e.prototype.onColliderStay = function(t, e) {
if (e.radius > 0 && this.isAttacking) if (this.hasTargetMap.has(t.id) && this.hasTargetMap.get(t.id) > 0) this.hasTargetMap.set(t.id, this.hasTargetMap.get(t.id) + 1); else {
this.hasTargetMap.set(t.id, 1);
u.default.getEnemyCollisionTarget(t, !0) && this.attacking(t.node);
}
};
e.prototype.attacking = function(t) {
if (t) {
var e = new r.default(), i = l.default.FROZEN;
e.magicDamage = 4;
var o = u.default.getEnemyActorByNode(t, !0);
if (o && !o.sc.isDied) {
o.takeDamage(e);
o.addStatus(i, new s.default());
}
}
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .5) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.isCheckTimeDelay(t) && this.hasTargetMap.clear();
};
return n([ d ], e);
}(p.default));
i.default = f;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/IndexZ": "IndexZ"
} ],
IndexZ: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "ee2b0v0Hy5Er7bVWcKf3jFS", "IndexZ");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function t() {}
t.getActorZIndex = function(e) {
return t.ACTOR + 3e3 - e.y;
};
t.BACKGROUND = 100;
t.BACKGROUNDFLOOR = 300;
t.DOORWALLBEHIND = 400;
t.BASE = 500;
t.FLOOR = 600;
t.WATER = 610;
t.KRAKENBODY = 520;
t.DARKNESS = 650;
t.WALL = 700;
t.WALLCORNER = 800;
t.WALLINTERNAL = 900;
t.ACTOR = 2e3;
t.OVERHEAD = 6e3;
t.ROOF = 6100;
t.SHADOW = 6200;
t.FOG = 6500;
t.UI = 7e3;
return t;
}();
i.default = o;
cc._RF.pop();
}, {} ],
InputComponent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9625ac+//dMqqAiex6GDUXi", "InputComponent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.InputComponent = void 0;
var r = t("../ECS"), s = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.reset = function() {};
return n([ r.ecs.register("Input") ], e);
}(r.ecs.IComponent);
i.InputComponent = s;
cc._RF.pop();
}, {
"../ECS": "ECS"
} ],
InputSystem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "457d5Kq4DZGLqTyaRpFcFFM", "InputSystem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../../logic/EventHelper"), r = t("../component/InputComponent"), s = t("../ECS"), l = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.init = function() {
var t = this;
n.EventHelper.on(n.EventHelper.PLAYER_MOVE, function(e) {
t.playerAction(e.dir, e.pos, e.dt);
});
};
e.prototype.filter = function() {
return s.ecs.allOf(r.InputComponent);
};
e.prototype.update = function() {};
e.prototype.playerAction = function() {};
return e;
}(s.ecs.ComblockSystem);
i.default = l;
cc._RF.pop();
}, {
"../../logic/EventHelper": "EventHelper",
"../ECS": "ECS",
"../component/InputComponent": "InputComponent"
} ],
InteractBuilding: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "7b8abAQqgxLbKCSpiTgLOQk", "InteractBuilding");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = t("./Building"), c = t("../logic/EventHelper"), u = t("../utils/AudioPlayer"), p = t("../item/Item"), h = t("../utils/IndexZ"), d = t("../data/DamageData"), f = t("../boss/Boss"), g = t("../data/AvatarData"), y = t("../data/CommonData"), m = t("../data/FromData"), v = t("../manager/StatusManager"), E = t("../logic/NonPlayer"), _ = t("./Box"), T = t("../collider/CCollider"), D = t("../utils/ActorUtils"), S = t("./NormalBuilding"), O = cc._decorator, A = O.ccclass, R = O.property, C = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.timeDelay = 0;
e.decorateType = 0;
e.resName = "decorate000";
e.root = null;
e.shadow = null;
e.isTaken = !1;
e.isAttacking = !1;
e.isThrowing = !1;
e.isLift = !1;
e.isAniming = !1;
e.hasTargetMap = new Map();
e.saveTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.root.getChildByName("sprite").getComponent(cc.Sprite);
this.shadow = this.node.getChildByName("shadow");
};
e.prototype.start = function() {};
e.prototype.init = function(t, e) {
this.decorateType = e;
this.data.interact = t ? 1 : 0;
switch (s.default.chapterIndex) {
case s.default.CHAPTER00:
this.resName = "decorate000" + this.decorateType;
break;

case s.default.CHAPTER01:
this.resName = "decorate010" + this.decorateType;
break;

case s.default.CHAPTER02:
this.resName = "decorate020" + this.decorateType;
break;

case s.default.CHAPTER03:
this.resName = "decorate030" + this.decorateType;
break;

case s.default.CHAPTER04:
case s.default.CHAPTER05:
this.resName = "decorate040" + this.decorateType;
break;

case s.default.CHAPTER099:
this.resName = "decorate000" + this.decorateType;
}
this.updateCollider();
this.changeRes(this.resName);
};
e.prototype.updateCollider = function() {
var t = s.default.spriteFrameRes(this.resName), e = t.getOriginalSize().width * this.sprite.node.scale, i = t.getOriginalSize().height * this.sprite.node.scale / 3, o = this.getComponent(T.default);
0 == this.sprite.node.angle ? o.setSize(cc.size(e, i), i) : o.setSize(cc.size(i, e), e);
this.entity.Move.damping = this.isThrowing ? 1 : 2;
o.sensor = this.data.currentHealth <= 0;
o.bounce = 2;
this.entity.NodeRender.root = this.root;
};
e.prototype.changeRes = function(t, e) {
this.sprite || (this.sprite = this.root.getChildByName("sprite").getComponent(cc.Sprite));
var i = s.default.spriteFrameRes(t);
e && s.default.spriteFrameRes(t + e) && (i = s.default.spriteFrameRes(t + e));
this.sprite.node.opacity = 255;
this.sprite.spriteFrame = i;
this.mat || (this.mat = this.root.getChildByName("sprite").getComponent(cc.Sprite).getMaterial(0));
this.mat.setProperty("textureSizeWidth", i.getTexture().width * this.sprite.node.scaleX);
this.mat.setProperty("textureSizeHeight", i.getTexture().height * this.sprite.node.scaleY);
this.mat.setProperty("outlineColor", cc.color(200, 200, 200));
this.sprite.node.angle = this.data.rollover > 0 ? 90 : 0;
};
e.prototype.hitLight = function(t) {
this.mat || (this.mat = this.root.getChildByName("sprite").getComponent(cc.Sprite).getMaterial(0));
this.mat.setProperty("addColor", t ? cc.color(200, 200, 200, 100) : cc.Color.TRANSPARENT);
};
e.prototype.highLight = function(t) {
this.mat || (this.mat = this.root.getChildByName("sprite").getComponent(cc.Sprite).getMaterial(0));
this.mat.setProperty("openOutline", t ? 1 : 0);
};
e.prototype.takeDamage = function(t, e, i) {
var o = this;
if (!(this.data.currentHealth <= 0)) {
this.data.currentHealth -= t.getTotalDamage();
var a = [ u.default.MONSTER_HIT, u.default.MONSTER_HIT1, u.default.MONSTER_HIT2 ];
u.default.play(a[s.default.getRandomNum(0, 2)]);
if (this.data.currentHealth > 0) {
this.hitLight(!0);
this.scheduleOnce(function() {
o.hitLight(!1);
}, .1);
return !0;
}
var n = this.node.position.clone();
i && (n = i.node.position.clone());
c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_FLOORPAPER, {
fromPos: n,
targetPos: this.node.position,
count: s.default.getRandomNum(3, 6)
});
this.isTaken = !1;
this.isAttacking = !1;
cc.tween(this.sprite.node).call(function() {
o.changeRes(o.resName, "anim001");
o.hitLight(!0);
}).delay(.1).call(function() {
o.hitLight(!1);
o.changeRes(o.resName, "anim002");
}).delay(.1).call(function() {
o.changeRes(o.resName, "anim003");
}).delay(.1).call(function() {
o.changeRes(o.resName, "anim004");
o.sprite.node.angle = 0;
o.updateCollider();
var t = s.default.mapManager.getRandom4Save(s.default.mapManager.getRebornSeed(o.seed)), e = t.rand();
e > .6 && e < .8 ? c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_COIN, {
pos: o.entity.Transform.position,
count: t.getRandomNum(1, 3)
}) : e >= .8 && e < .85 ? c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_ITEM, {
pos: o.entity.Transform.position,
res: p.default.HEART
}) : e >= .85 && e < .9 && c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_ITEM, {
pos: o.entity.Transform.position,
res: p.default.DREAM
});
}).delay(10).call(function() {
o.reset();
}).start();
return !0;
}
};
e.prototype.reset = function() {
this.entity.Transform.position = r.default.getPosInMap(cc.v3(-10, -10));
this.node.position = this.entity.Transform.position.clone();
this.data.currentHealth = this.data.maxHealth;
};
e.prototype.rollover = function() {
this.data.rollover = this.data.rollover > 0 ? 0 : 1;
cc.tween(this.sprite.node).to(.5, {
angle: this.data.rollover > 0 ? 90 : 0
}, {
easing: "bounceOut"
}).start();
this.updateCollider();
};
e.prototype.interact = function(t, e, i, o) {
if (this.data.interact < 1 || this.isAniming) return !1;
this.player = t;
return i ? this.attack() : o ? this.throwOrKick() : e ? this.putDown() : this.switchMode();
};
e.prototype.taken = function(t, e) {
if (!(this.data.interact < 1 || this.isAniming)) {
this.player = t;
if (this.isTaken) return !1;
if (e) {
this.rollover();
return !1;
}
this._taken();
return !0;
}
};
e.prototype._taken = function() {
if (!this.isAniming) {
this.isTaken = !0;
this.isLift = !0;
return !0;
}
};
e.prototype.putDown = function() {
if (!this.isAniming) {
this.isTaken = !1;
return !0;
}
};
e.prototype.switchMode = function() {
if (!this.isAniming) {
this.isLift = !this.isLift;
return !0;
}
};
e.prototype.throwOrKick = function() {
var t = this;
if (!this.isAniming && !this.isThrowing) {
this.isAttacking = !0;
this.isThrowing = !0;
this.isAniming = !0;
u.default.play(u.default.MELEE);
this.updateCollider();
this.beatBack(this, this.player.Hv.clone(), this.isLift ? 10 : 20);
this.scheduleOnce(function() {
c.EventHelper.emit(c.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: !1
});
}, this.isLift ? .5 : 0);
if (this.isLift) {
cc.tween(this.sprite.node).to(.2, {
position: cc.v3(0, 128)
}).to(.2, {
position: cc.v3(0, 0)
}, {
easing: "bounceOut"
}).start();
cc.tween(this.shadow).to(.5, {
scale: 3
}).to(.5, {
scale: 4
}).start();
}
this.scheduleOnce(function() {
t.isAniming = !1;
t.isAttacking = !1;
t.isTaken = !1;
t.isThrowing = !1;
t.updateCollider();
}, 1);
return !0;
}
};
e.prototype.attack = function() {
var t = this;
if (!this.isTaken || this.isAniming || !this.player) return !1;
this.isAniming = !0;
this.hasTargetMap.clear();
u.default.play(u.default.MELEE);
if (this.isLift) {
var e = this.node.parent.convertToNodeSpaceAR(this.player.weaponLeft.meleeWeapon.node.convertToWorldSpaceAR(cc.v3(-32, 0))), i = this.node.parent.convertToNodeSpaceAR(this.player.weaponLeft.meleeWeapon.node.convertToWorldSpaceAR(cc.v3(64, 0)));
cc.tween(this.sprite.node).to(.2, {
position: cc.v3(0, 64)
}).call(function() {
t.isAttacking = !0;
}).to(.1, {
position: cc.v3(0, 96)
}).to(.1, {
position: cc.v3(0, 0)
}).call(function() {
t.isAttacking = !1;
}).to(.2, {
position: cc.v3(0, 96)
}).call(function() {
t.isAniming = !1;
}).start();
cc.tween(this.node).to(.2, {
position: e
}).to(.2, {
position: i
}).start();
} else {
e = this.node.parent.convertToNodeSpaceAR(this.player.weaponLeft.meleeWeapon.node.convertToWorldSpaceAR(cc.v3(0, 64))), 
i = this.node.parent.convertToNodeSpaceAR(this.player.weaponLeft.meleeWeapon.node.convertToWorldSpaceAR(cc.v3(44.8, 44.8)));
var o = this.node.parent.convertToNodeSpaceAR(this.player.weaponLeft.meleeWeapon.node.convertToWorldSpaceAR(cc.v3(64, 0))), a = this.node.parent.convertToNodeSpaceAR(this.player.weaponLeft.meleeWeapon.node.convertToWorldSpaceAR(cc.v3(44.8, -44.8))), n = this.node.parent.convertToNodeSpaceAR(this.player.weaponLeft.meleeWeapon.node.convertToWorldSpaceAR(cc.v3(0, -64)));
cc.tween(this.node).to(.15, {
position: e
}).call(function() {
t.isAttacking = !0;
}).to(.1, {
position: i
}).to(.1, {
position: o
}).to(.1, {
position: a
}).to(.1, {
position: n
}).to(.1, {
position: a
}).to(.1, {
position: o
}).call(function() {
t.isAttacking = !1;
t.isAniming = !1;
}).start();
}
return !0;
};
e.prototype.onColliderPreSolve = function(t, e) {
t.tag == T.default.TAG.PLAYER && (this.isTaken || this.isAttacking) && (e.disabledOnce = !0);
};
e.prototype.onColliderStay = function(t) {
if (t.tag != T.default.TAG.PLAYER && this.player && this.isTaken && this.isAttacking) {
t.tag != T.default.TAG.BUILDING && t.tag != T.default.TAG.WALL && t.tag != T.default.TAG.WALL_TOP || this.isThrowing && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
if (this.hasTargetMap.has(t.id) && this.hasTargetMap.get(t.id) > 0) {
this.hasTargetMap.set(t.id, this.hasTargetMap.get(t.id) + 1);
return !1;
}
this.hasTargetMap.set(t.id, 1);
return this.attacking(t);
}
};
e.prototype.updatePosition = function() {
this.shadow.opacity = 255;
if (this.player && this.isTaken) {
this.shadow.opacity = this.isThrowing ? 255 : 0;
if (!this.isAniming) if (this.isLift) {
this.sprite.node.position = s.default.lerpPos(this.sprite.node.position, cc.v3(0, 96), .1);
this.entity.Transform.position = this.player.node.position.clone();
} else {
var t = this.player.Hv.clone().mul(64), e = this.player.node.position.add(cc.v3(t));
this.sprite.node.position = s.default.lerpPos(this.sprite.node.position, cc.v3(0, 0), .1);
this.entity.Transform.position = s.default.lerpPos(this.entity.Transform.position, e, .1);
}
}
this.node.zIndex = h.default.getActorZIndex(this.entity.Transform.position);
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .016) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.isSaveTimeDelay = function(t) {
this.saveTimeDelay += t;
if (this.saveTimeDelay > .2) {
this.saveTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.isTimeDelay(t) && this.updatePosition();
if (this.isSaveTimeDelay(t)) {
this.data.position = this.entity.Transform.position;
var e = s.default.mapManager.getCurrentMapBuilding(this.data.defaultPos);
e && e.valueCopy(this.data);
}
var i = this.root.y - this.entity.Transform.base;
i < 0 && (i = 0);
var o = 1 - i / 64;
this.shadow.scale = o < .5 ? .5 : o;
this.shadow.y = this.entity.Transform.base;
};
e.prototype.beatBack = function(t, e, i) {
var o = e;
o.equals(cc.Vec2.ZERO) && (o = cc.v2(1, 0));
o = o.normalize().mul(i);
this.scheduleOnce(function() {
t.entity.Move.linearVelocity = cc.v2(o.x, o.y);
}, .1);
};
e.prototype.attacking = function(t) {
if (!t || !this.isAttacking) return !1;
var e = new d.default(), i = new y.default();
if (this.player) {
e = this.player.data.getFinalAttackPoint();
if (this.player.data.LifeData.sanity <= 0) {
e.physicalDamage = e.physicalDamage > 1 ? 1 : e.physicalDamage;
e.magicDamage = e.magicDamage > 1 ? 1 : e.magicDamage;
e.realDamage = e.realDamage > 1 ? 1 : e.realDamage;
}
i = this.player.data.FinalCommon;
}
e.isMelee = !0;
e.physicalDamage += this.isThrowing ? 5 : 3;
var o = !1, a = !1;
if (t.tag == T.default.TAG.NONPLAYER) {
var n = t.node.getComponent(E.default);
if (n && !n.sc.isDied && n.data.isEnemy > 0) {
e.isBackAttack = D.default.isBehindTarget(this.player, n) && i.DamageBack > 0;
e.isBackAttack && (e.realDamage += i.DamageBack);
if (o = n.takeDamage(e)) {
this.beatBack(n, this.player.Hv.clone(), 200);
this.addTargetAllStatus(i, n);
}
}
} else if (t.tag == T.default.TAG.BOSS) {
var r = t.node.getComponent(f.default);
r && !r.sc.isDied && (o = r.takeDamage(e)) && this.addTargetAllStatus(i, r);
} else if (t.tag == T.default.TAG.BUILDING || t.tag == T.default.TAG.WALL) {
var s = t.node.getComponent(_.default);
if (s) {
a = !0;
s.breakBox();
}
if (!a) {
var l = t.node.getComponent(S.default);
if (l) {
a = !0;
l.takeDamage(e);
}
}
}
(o || a) && c.EventHelper.emit(c.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: !1
});
o && this.player.data.AvatarData.organizationIndex == g.default.TECH && this.player.updateDream(-1);
return o || a;
};
e.prototype.addTargetAllStatus = function(t, e) {
this.addTargetStatus(t.iceRate, e, v.default.FROZEN);
this.addTargetStatus(t.fireRate, e, v.default.BURNING);
this.addTargetStatus(t.lighteningRate, e, v.default.DIZZ);
this.addTargetStatus(t.toxicRate, e, v.default.TOXICOSIS);
this.addTargetStatus(t.curseRate, e, v.default.CURSING);
this.addTargetStatus(t.realRate, e, v.default.BLEEDING);
};
e.prototype.addTargetStatus = function(t, e, i) {
s.default.getRandomNum(0, 100) < t && e.addStatus(i, new m.default());
};
e.BOX = 0;
e.PLANT = 1;
e.BOXBREAKABLE = 2;
n([ R(cc.Node) ], e.prototype, "root", void 0);
n([ R(cc.Node) ], e.prototype, "shadow", void 0);
return n([ A ], e);
}(l.default);
i.default = C;
cc._RF.pop();
}, {
"../boss/Boss": "Boss",
"../collider/CCollider": "CCollider",
"../data/AvatarData": "AvatarData",
"../data/CommonData": "CommonData",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../item/Item": "Item",
"../logic/Dungeon": "Dungeon",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../logic/NonPlayer": "NonPlayer",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"./Box": "Box",
"./Building": "Building",
"./NormalBuilding": "NormalBuilding"
} ],
InventoryData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "8d617FHrhNC9JdBH0sgyrgd", "InventoryData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../utils/DataUtils"), r = t("./BaseData"), s = t("./EquipmentData"), l = t("./ItemData"), c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.id = 0;
e.createTime = 0;
e.level = 0;
e.type = 0;
return e;
}
e.prototype.valueCopy = function(t) {
if (t) {
n.default.baseCopy(this, t);
if (t.equipmentData) {
this.equipmentData = new s.default();
this.equipmentData.valueCopy(t.equipmentData);
this.price = this.equipmentData.price;
this.id = this.equipmentData.id;
this.level = this.equipmentData.level;
}
this.equipmentData = t.equipmentData;
if (t.itemData) {
this.itemData = new l.default();
this.itemData.valueCopy(t.itemData);
this.price = this.itemData.price;
this.id = this.itemData.id;
this.level = 0;
}
this.itemData = t.itemData;
}
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
e.prototype.setEmpty = function() {
this.type = 0;
this.equipmentData = null;
this.itemData = null;
this.createTime = 0;
this.id = 0;
this.price = 0;
this.level = 0;
};
return e;
}(r.default);
i.default = c;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData",
"./EquipmentData": "EquipmentData",
"./ItemData": "ItemData"
} ],
InventoryDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "66439SRIlRDCK2s/WLS+qDi", "InventoryDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../data/AvatarData"), s = t("../../data/InventoryData"), l = t("../../logic/EventHelper"), c = t("../../item/Item"), u = t("../../logic/Logic"), p = t("../../manager/InventoryManager"), h = t("../../utils/AudioPlayer"), d = t("../InventoryItem"), f = t("./BaseDialog"), g = t("./EquipmentAndItemDialog"), y = t("../../utils/Utils"), m = t("../../talent/Talent"), v = t("../../data/EquipmentData"), E = t("../../data/ItemData"), _ = cc._decorator, T = _.ccclass, D = _.property, S = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.item = null;
e.layer = null;
e.layout = null;
e.layoutEquip = null;
e.layoutItem = null;
e.layoutOther = null;
e.otherDialog = null;
e.toggleContainer = null;
e.equipmentAndItemDialogPrefab = null;
e.useButton = null;
e.dropButton = null;
e.saleButton = null;
e.list = [];
e.equipList = [];
e.itemList = [];
e.otherList = [];
e.furnitureId = "";
e.select = null;
e.discountLabel = null;
e.discount = .5;
e.equipmentAndItemDialog = null;
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.select.opacity = 0;
this.equipmentAndItemDialog = this.initDialog();
this.initLayout(this.layout, this.list, p.default.MAX_BAG, 0);
this.initLayout(this.layoutEquip, this.equipList, p.default.MAX_EQUIP, p.default.MAX_BAG);
this.initLayout(this.layoutItem, this.itemList, p.default.MAX_ITEM, p.default.MAX_BAG + p.default.MAX_EQUIP);
this.initLayout(this.layoutOther, this.otherList, 0, 0);
l.EventHelper.on(l.EventHelper.HUD_INVENTORY_ALL_UPDATE, function() {
if (t.node) {
t.updateList(u.default.bagSortIndex);
t.updateEquipList();
t.updateItemList();
t.furnitureId.length > 0 && t.updateOtherList(u.default.sortIndexs[t.furnitureId]);
}
});
l.EventHelper.on(l.EventHelper.HUD_INVENTORY_EQUIP_UPDATE, function() {
t.node && t.updateEquipList();
});
l.EventHelper.on(l.EventHelper.HUD_INVENTORY_ITEM_UPDATE, function() {
t.node && t.updateItemList();
});
l.EventHelper.on(l.EventHelper.HUD_INVENTORY_SELECT_UPDATE, function(e) {
if (t.node) {
var i = u.default.inventoryManager.inventoryList[e.index], o = e.furnitureId;
if (o && o.length > 0) {
i = u.default.inventoryManager.furnitureMap.get(o).storageList[e.index];
t.otherList[e.index].updateData(i);
} else t.list[e.index].updateData(i);
}
});
this.toggleContainer.toggleItems[u.default.bagSortIndex].isChecked = !0;
u.default.playerData.AvatarData.organizationIndex == r.default.HUNTER && (this.discount += .1);
m.default.TALENT_010 == u.default.playerData.AvatarData.professionData.talent && (this.discount += .1);
};
e.prototype.initDialog = function() {
var t = cc.instantiate(this.equipmentAndItemDialogPrefab);
t.parent = this.node.getChildByName("layer");
var e = t.getComponent(g.default);
e.changeBgAndAnchor(g.default.BG_TYPE_ARROW_NONE);
e.hideDialog();
return e;
};
e.prototype.initLayout = function(t, e, i, o) {
t.removeAllChildren();
for (var a = 0; a < i; a++) {
var n = new s.default();
n.createTime = new Date().getTime();
e.push(this.getItem(o + a, n, t));
}
};
e.prototype.getItem = function(t, e, i) {
var o = cc.instantiate(this.item);
o.parent = i;
var a = o.getComponent(d.default);
a.init(this, t, e);
return a;
};
e.prototype.show = function() {
this._show("");
};
e.prototype.showFurniture = function(t) {
this._show(t);
};
e.prototype._show = function(e) {
this.layer.x = 0;
var i = e && e.length > 0;
this.otherDialog.active = i;
this.furnitureId = i ? e : "";
t.prototype.show.call(this);
this.updateList(u.default.bagSortIndex);
this.updateEquipList();
this.updateItemList();
this.updateOtherList(i ? u.default.sortIndexs[e] : 0);
i && cc.tween(this.layer).delay(.3).to(.5, {
x: 145
}).start();
};
e.prototype.changeSort = function(t, e) {
u.default.bagSortIndex = e;
this.updateList(e);
};
e.prototype.changeFurnitureSort = function(t, e) {
u.default.sortIndexs[this.furnitureId] = e;
this.updateOtherList(e);
};
e.prototype.clearSelect = function() {
this.currentSelectIndex = -1;
this.equipmentAndItemDialog.hideDialog();
this.useButton.active = !1;
this.dropButton.active = !1;
this.saleButton.active = !1;
this.select.opacity = 0;
};
e.prototype.showSelect = function(t) {
this.currentSelectIndex = t.index;
this.select.position = this.node.convertToNodeSpaceAR(t.node.convertToWorldSpaceAR(cc.Vec3.ZERO));
this.select.opacity = 200;
this.useButton.getComponentInChildren(cc.Label).string = this.currentSelectIndex >= p.default.MAX_BAG ? "卸下" : "装备";
if (this.furnitureId.length > 0) if (this.currentSelectIndex >= p.default.MAX_BAG + p.default.MAX_EQUIP + p.default.MAX_ITEM) {
this.dropButton.getComponentInChildren(cc.Label).string = "取出";
this.useButton.getComponentInChildren(cc.Label).string = "装备";
} else this.dropButton.getComponentInChildren(cc.Label).string = "存入"; else this.dropButton.getComponentInChildren(cc.Label).string = "放下";
h.default.play(h.default.SELECT);
if (t.data.type == d.default.TYPE_EQUIP) {
this.discountLabel.string = "-" + 100 * this.discount + "%(" + Math.floor(t.data.equipmentData.price * this.discount) + ")";
this.useButton.active = !0;
this.dropButton.active = !0;
this.saleButton.active = !0;
this.equipmentAndItemDialog.showDialog(cc.v3(420, 260), null, null, t.data.equipmentData, null);
} else {
this.discountLabel.string = "-" + 100 * this.discount + "%(" + Math.floor(t.data.itemData.count > 1 ? t.data.itemData.price * t.data.itemData.count * this.discount : t.data.itemData.price * this.discount) + ")";
this.useButton.active = !0;
this.dropButton.active = !0;
this.saleButton.active = !0;
this.equipmentAndItemDialog.showDialog(cc.v3(420, 160), null, t.data.itemData, null, null);
}
};
e.prototype.updateItemList = function() {
for (var t = [], e = 0, i = u.default.inventoryManager.itemList; e < i.length; e++) {
var o = i[e], a = p.default.buildItemInventoryData(o);
t.push(a);
}
for (var n = 0; n < p.default.MAX_ITEM; n++) if (n < t.length && t[n].type != d.default.TYPE_EMPTY) {
a = t[n];
this.itemList[n].updateData(a);
} else this.itemList[n].setEmpty();
};
e.prototype.updateEquipList = function() {
var t = [];
for (var e in u.default.inventoryManager.equips) {
var i = u.default.inventoryManager.equips[e], o = !1;
e != p.default.REMOTE && e != p.default.SHIELD ? o = !0 : e == p.default.REMOTE ? i.equipmetType != p.default.REMOTE && u.default.inventoryManager.equips[p.default.SHIELD].equipmetType != p.default.EMPTY || (o = !0) : e == p.default.SHIELD && i.equipmetType == p.default.SHIELD && (o = !0);
if (o) {
var a = p.default.buildEquipInventoryData(i);
t.push(a);
}
}
for (var n = 0; n < p.default.MAX_EQUIP; n++) if (n < t.length && t[n].type != d.default.TYPE_EMPTY) {
a = t[n];
this.equipList[n].updateData(a);
} else this.equipList[n].setEmpty();
};
e.prototype.updateOtherList = function(t) {
this.clearSelect();
this.otherList = [];
this.layoutOther.removeAllChildren();
if (!(this.furnitureId.length < 1)) {
var e = u.default.inventoryManager.furnitureMap.get(this.furnitureId);
if (e) {
for (var i = 0; i < e.storage; i++) {
var o = new s.default();
i < e.storageList.length && o.valueCopy(e.storageList[i]);
this.otherList.push(this.getItem(p.default.MAX_BAG + p.default.MAX_EQUIP + p.default.MAX_ITEM + i, o, this.layoutOther));
}
var a = this.getSortList(t, e.storageList);
for (i = 0; i < e.storage; i++) if (i < a.length && a[i].type != d.default.TYPE_EMPTY) {
o = a[i];
this.otherList[i].updateData(o);
} else this.otherList[i].setEmpty();
e.storageList = a;
}
}
};
e.prototype.updateList = function(t) {
this.clearSelect();
for (var e = this.getSortList(t, u.default.inventoryManager.inventoryList), i = 0; i < p.default.MAX_BAG; i++) if (i < e.length && e[i].type != d.default.TYPE_EMPTY) {
var o = e[i];
this.list[i].updateData(o);
} else this.list[i].setEmpty();
u.default.inventoryManager.inventoryList = e;
};
e.prototype.getSortList = function(t, e) {
for (var i = [], o = [], a = [], n = 0; n < e.length; n++) {
var r = e[n];
if (r.type != d.default.TYPE_EMPTY) {
a.push(r);
r.type == d.default.TYPE_EQUIP ? o.push(r) : r.type == d.default.TYPE_ITEM && i.push(r);
}
}
if (0 == t) a.sort(function(t, e) {
return t.createTime - e.createTime;
}); else if (1 == t) a.sort(function(t, e) {
return t.id - e.id;
}); else if (2 == t) {
i.sort(function(t, e) {
return t.id - e.id;
});
o.sort(function(t, e) {
return e.equipmentData.level - t.equipmentData.level;
});
a = o.concat(i);
} else 3 == t && a.sort(function(t, e) {
return e.price - t.price;
});
return a;
};
e.getItemInsertIndex = function(t, e, o) {
for (var a = e.length < o ? e.length : -1, n = 0; n < e.length; n++) {
var r = e[n];
if (p.default.isItemEqualCanAdd(r.itemData, t)) {
a = n;
break;
}
}
return -1 == a ? i.getEmptyInsertIndex(e, o) : a;
};
e.getEmptyInsertIndex = function(t, e) {
for (var i = t.length < e ? t.length : -1, o = 0; o < t.length; o++) if (t[o].type == d.default.TYPE_EMPTY) {
i = o;
break;
}
return i;
};
e.addEquipOrItemToBag = function(t, e, i, o, a) {
var n = o ? this.getItemInsertIndex(t.itemData, e, i) : this.getEmptyInsertIndex(e, i);
if (-1 == n) return !1;
var r = new s.default();
r.valueCopy(t);
if (n < e.length) {
if (o) {
var l = r.itemData, c = e[n].itemData;
if (p.default.isItemEqualCanAdd(l, c)) {
var u = l.count + c.count;
r.itemData.valueCopy(c);
r.itemData.count = u;
}
}
e[n] = r;
a && a[n].updateData(r);
} else {
e.push(r);
a && a[e.length - 1].updateData(r);
}
return !0;
};
e.prototype.takeOffEquip = function(t, e) {
if (!(this.currentSelectIndex >= p.default.MAX_BAG && this.currentSelectIndex < p.default.MAX_BAG + p.default.MAX_EQUIP)) return !1;
h.default.play(h.default.SELECT);
var o = this.equipList[this.currentSelectIndex - p.default.MAX_BAG];
if (o.data.type == d.default.TYPE_EMPTY) return !1;
var a = new v.default();
a.valueCopy(o.data.equipmentData);
var n = u.default.inventoryManager.inventoryList;
if (e) {
l.EventHelper.emit(l.EventHelper.HUD_ADD_COIN, {
count: Math.floor(a.price * this.discount)
});
h.default.play(h.default.COIN);
} else {
var r = !1;
t || (r = i.addEquipOrItemToBag(o.data, n, this.list.length, !1, this.list));
if (!r && this.furnitureId && this.furnitureId.length > 0) {
n = u.default.inventoryManager.furnitureMap.get(this.furnitureId).storageList;
r = i.addEquipOrItemToBag(o.data, n, this.otherList.length, !1, this.otherList);
}
if (!r) {
t || y.default.toast("物品栏已满");
l.EventHelper.emit(l.EventHelper.DUNGEON_SETEQUIPMENT, {
res: a.img,
equipmentData: a
});
}
}
u.default.inventoryManager.equips[a.equipmetType] = new v.default();
l.EventHelper.emit(l.EventHelper.PLAYER_EQUIPMENT_REFRESH, {
equipmetType: a.equipmetType
});
o.setEmpty();
this.clearSelect();
return !0;
};
e.prototype.takeOffItem = function(t, e) {
if (!(this.currentSelectIndex >= p.default.MAX_BAG + p.default.MAX_EQUIP && this.currentSelectIndex < p.default.MAX_BAG + p.default.MAX_EQUIP + p.default.MAX_ITEM)) return !1;
h.default.play(h.default.SELECT);
var o = this.itemList[this.currentSelectIndex - p.default.MAX_BAG - p.default.MAX_EQUIP];
if (o.data.type == d.default.TYPE_EMPTY) return !1;
var a = new E.default();
a.valueCopy(o.data.itemData);
var n = u.default.inventoryManager.inventoryList;
if (e) {
l.EventHelper.emit(l.EventHelper.HUD_ADD_COIN, {
count: Math.floor(a.count > 1 ? a.price * a.count * this.discount : a.price * this.discount)
});
h.default.play(h.default.COIN);
} else {
var r = !1;
t || (r = i.addEquipOrItemToBag(o.data, n, this.list.length, !0, this.list));
if (!r && this.furnitureId && this.furnitureId.length > 0) {
n = u.default.inventoryManager.furnitureMap.get(this.furnitureId).storageList;
r = i.addEquipOrItemToBag(o.data, n, this.otherList.length, !0, this.otherList);
}
if (!r) {
t || y.default.toast("物品栏已满");
l.EventHelper.emit(l.EventHelper.DUNGEON_ADD_ITEM, {
res: a.resName,
count: a.count
});
}
}
u.default.inventoryManager.itemList[this.currentSelectIndex - p.default.MAX_BAG - p.default.MAX_EQUIP] = new E.default();
l.EventHelper.emit(l.EventHelper.PLAYER_ITEM_REFRESH);
o.setEmpty();
this.clearSelect();
return !0;
};
e.prototype.takeOnEquipOrItem = function(t, e, o) {
if (o[t].data.type != d.default.TYPE_EMPTY) {
h.default.play(h.default.SELECT);
var a = o[t];
if (a.data.type == d.default.TYPE_EQUIP) {
var n = new v.default();
n.valueCopy(a.data.equipmentData);
if (n.equipmetType != p.default.EMPTY) {
if (n.requireLevel > u.default.playerData.OilGoldData.level) {
y.default.toast("当前人物等级太低，无法装备");
return;
}
a.setEmpty();
e[t].setEmpty();
if (n.equipmetType == p.default.REMOTE) {
i.addEquipOrItemToBag(p.default.buildEquipInventoryData(u.default.inventoryManager.equips[p.default.REMOTE]), e, o.length, !1, o);
i.addEquipOrItemToBag(p.default.buildEquipInventoryData(u.default.inventoryManager.equips[p.default.SHIELD]), e, o.length, !1, o);
u.default.inventoryManager.equips[p.default.SHIELD].valueCopy(new v.default());
l.EventHelper.emit(l.EventHelper.PLAYER_EQUIPMENT_REFRESH, {
equipmetType: p.default.SHIELD
});
} else if (n.equipmetType == p.default.SHIELD) {
i.addEquipOrItemToBag(p.default.buildEquipInventoryData(u.default.inventoryManager.equips[p.default.REMOTE]), e, o.length, !1, o);
i.addEquipOrItemToBag(p.default.buildEquipInventoryData(u.default.inventoryManager.equips[p.default.SHIELD]), e, o.length, !1, o);
u.default.inventoryManager.equips[p.default.REMOTE].valueCopy(new v.default());
l.EventHelper.emit(l.EventHelper.PLAYER_EQUIPMENT_REFRESH, {
equipmetType: p.default.REMOTE
});
} else i.addEquipOrItemToBag(p.default.buildEquipInventoryData(u.default.inventoryManager.equips[n.equipmetType]), e, o.length, !1, o);
u.default.inventoryManager.equips[n.equipmetType] = n;
this.updateEquipList();
l.EventHelper.emit(l.EventHelper.PLAYER_EQUIPMENT_REFRESH, {
equipmetType: n.equipmetType
});
}
} else {
var r = new E.default();
r.valueCopy(a.data.itemData);
if (r.resName != c.default.EMPTY) {
a.setEmpty();
e[t].setEmpty();
for (var s = !1, f = 0; f < u.default.inventoryManager.itemList.length; f++) {
var g = u.default.inventoryManager.itemList[f];
if (p.default.isItemEqualCanAdd(g, r)) {
var m = g.count + r.count;
g.valueCopy(r);
g.count = m;
s = !0;
break;
}
}
if (!s) for (f = 0; f < u.default.inventoryManager.itemList.length; f++) if ((g = u.default.inventoryManager.itemList[f]).resName == c.default.EMPTY) {
g.valueCopy(r);
s = !0;
break;
}
if (!s) {
var _ = u.default.inventoryManager.itemList[0].clone(), T = new Array();
for (f = 1; f < u.default.inventoryManager.itemList.length; f++) T.push(u.default.inventoryManager.itemList[f]);
T.push(r);
for (f = 0; f < u.default.inventoryManager.itemList.length; f++) u.default.inventoryManager.itemList[f].valueCopy(T[f]);
i.addEquipOrItemToBag(p.default.buildItemInventoryData(_), e, o.length, !0, o);
}
this.updateItemList();
l.EventHelper.emit(l.EventHelper.PLAYER_ITEM_REFRESH);
}
}
this.clearSelect();
}
};
e.prototype.dropEquipOrItem = function(t, e, o, a, n) {
if (o[t].data.type != d.default.TYPE_EMPTY) {
var r = !1;
h.default.play(h.default.SELECT);
var s = o[t];
if (s.data.type == d.default.TYPE_EQUIP) {
var f = new v.default();
f.valueCopy(s.data.equipmentData);
if (f.equipmetType != p.default.EMPTY) if (n) {
l.EventHelper.emit(l.EventHelper.HUD_ADD_COIN, {
count: Math.floor(f.price * this.discount)
});
h.default.play(h.default.COIN);
} else {
a ? r = i.addEquipOrItemToBag(s.data, u.default.inventoryManager.inventoryList, this.list.length, !1, this.list) : this.furnitureId && this.furnitureId.length > 0 && (r = i.addEquipOrItemToBag(s.data, u.default.inventoryManager.furnitureMap.get(this.furnitureId).storageList, this.otherList.length, !1, this.otherList));
r || l.EventHelper.emit(l.EventHelper.DUNGEON_SETEQUIPMENT, {
res: f.img,
equipmentData: f
});
}
} else {
var g = new E.default();
g.valueCopy(s.data.itemData);
if (g.resName != c.default.EMPTY) if (n) {
l.EventHelper.emit(l.EventHelper.HUD_ADD_COIN, {
count: Math.floor(g.count > 1 ? g.price * g.count * this.discount : g.price * this.discount)
});
h.default.play(h.default.COIN);
} else {
a ? r = i.addEquipOrItemToBag(s.data, u.default.inventoryManager.inventoryList, this.list.length, !0, this.list) : this.furnitureId && this.furnitureId.length > 0 && (r = i.addEquipOrItemToBag(s.data, u.default.inventoryManager.furnitureMap.get(this.furnitureId).storageList, this.otherList.length, !0, this.otherList));
r || l.EventHelper.emit(l.EventHelper.DUNGEON_ADD_ITEM, {
res: g.resName,
count: g.count
});
}
}
o[t].setEmpty();
e[t].setEmpty();
this.clearSelect();
}
};
e.prototype.use = function() {
if (-1 != this.currentSelectIndex && !this.takeOffEquip(!1, !1) && !this.takeOffItem(!1, !1)) {
var t = this.list, e = u.default.inventoryManager.inventoryList, i = this.currentSelectIndex;
if (this.currentSelectIndex >= p.default.MAX_BAG + p.default.MAX_EQUIP + p.default.MAX_ITEM) {
t = this.otherList;
e = u.default.inventoryManager.furnitureMap.get(this.furnitureId).storageList;
i = this.currentSelectIndex - p.default.MAX_BAG - p.default.MAX_EQUIP - p.default.MAX_ITEM;
}
this.takeOnEquipOrItem(i, e, t);
}
};
e.prototype.drop = function() {
if (-1 != this.currentSelectIndex && !this.takeOffEquip(!0, !1) && !this.takeOffItem(!0, !1)) {
var t = this.list, e = u.default.inventoryManager.inventoryList, i = this.currentSelectIndex, o = this.currentSelectIndex >= p.default.MAX_BAG + p.default.MAX_EQUIP + p.default.MAX_ITEM;
if (o) {
t = this.otherList;
e = u.default.inventoryManager.furnitureMap.get(this.furnitureId).storageList;
i = this.currentSelectIndex - p.default.MAX_BAG - p.default.MAX_EQUIP - p.default.MAX_ITEM;
}
this.dropEquipOrItem(i, e, t, o, !1);
}
};
e.prototype.sale = function() {
if (-1 != this.currentSelectIndex && !this.takeOffEquip(!1, !0) && !this.takeOffItem(!1, !0)) {
var t = this.list, e = u.default.inventoryManager.inventoryList, i = this.currentSelectIndex, o = this.currentSelectIndex >= p.default.MAX_BAG + p.default.MAX_EQUIP + p.default.MAX_ITEM;
if (o) {
t = this.otherList;
e = u.default.inventoryManager.furnitureMap.get(this.furnitureId).storageList;
i = this.currentSelectIndex - p.default.MAX_BAG - p.default.MAX_EQUIP - p.default.MAX_ITEM;
}
this.dropEquipOrItem(i, e, t, o, !0);
}
};
e.prototype.close = function() {
h.default.play(h.default.SELECT);
this.dismiss();
};
var i;
n([ D(cc.Prefab) ], e.prototype, "item", void 0);
n([ D(cc.Node) ], e.prototype, "layer", void 0);
n([ D(cc.Node) ], e.prototype, "layout", void 0);
n([ D(cc.Node) ], e.prototype, "layoutEquip", void 0);
n([ D(cc.Node) ], e.prototype, "layoutItem", void 0);
n([ D(cc.Node) ], e.prototype, "layoutOther", void 0);
n([ D(cc.Node) ], e.prototype, "otherDialog", void 0);
n([ D(cc.ToggleContainer) ], e.prototype, "toggleContainer", void 0);
n([ D(cc.Prefab) ], e.prototype, "equipmentAndItemDialogPrefab", void 0);
n([ D(cc.Node) ], e.prototype, "useButton", void 0);
n([ D(cc.Node) ], e.prototype, "dropButton", void 0);
n([ D(cc.Node) ], e.prototype, "saleButton", void 0);
n([ D(cc.Node) ], e.prototype, "select", void 0);
n([ D(cc.Label) ], e.prototype, "discountLabel", void 0);
return i = n([ T ], e);
}(f.default);
i.default = S;
cc._RF.pop();
}, {
"../../data/AvatarData": "AvatarData",
"../../data/EquipmentData": "EquipmentData",
"../../data/InventoryData": "InventoryData",
"../../data/ItemData": "ItemData",
"../../item/Item": "Item",
"../../logic/EventHelper": "EventHelper",
"../../logic/Logic": "Logic",
"../../manager/InventoryManager": "InventoryManager",
"../../talent/Talent": "Talent",
"../../utils/AudioPlayer": "AudioPlayer",
"../../utils/Utils": "Utils",
"../InventoryItem": "InventoryItem",
"./BaseDialog": "BaseDialog",
"./EquipmentAndItemDialog": "EquipmentAndItemDialog"
} ],
InventoryItem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "51ad8KPmpFIULMuWCViUiMp", "InventoryItem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/InventoryData"), s = t("../logic/Logic"), l = t("../manager/InventoryManager"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isSelect = !1;
e.sprite = null;
e.label = null;
e.index = 0;
e.data = new r.default();
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.node.on(cc.Node.EventType.TOUCH_END, function() {
t.isSelect && t.index == t.dialog.currentSelectIndex ? t.isSelect = !1 : t.isSelect = t.data.type != i.TYPE_EMPTY;
t.dialog.clearSelect();
t.isSelect && t.dialog.showSelect(t);
}, this);
};
e.prototype.init = function(t, e, i) {
this.dialog = t;
this.index = e;
this.isSelect = !1;
this.updateData(i);
};
e.prototype.updateData = function(t) {
this.isSelect = !1;
this.data.valueCopy(t);
this.label.string = "";
this.sprite.spriteFrame = null;
this.node.color = cc.Color.WHITE;
if (this.data.type == i.TYPE_ITEM && this.data.itemData) {
this.label.string = t.itemData.count > 0 ? "x" + t.itemData.count : "";
this.sprite.spriteFrame = s.default.spriteFrameRes(this.data.itemData.resName);
} else if (this.data.equipmentData) {
var e = s.default.spriteFrameRes(this.data.equipmentData.img);
this.data.equipmentData.equipmetType == l.default.CLOTHES ? e = s.default.spriteFrameRes(this.data.equipmentData.img + "anim0") : this.data.equipmentData.equipmetType == l.default.HELMET ? e = s.default.spriteFrameRes(this.data.equipmentData.img + "anim0") : this.data.equipmentData.equipmetType == l.default.REMOTE && (e = s.default.spriteFrameRes(this.data.equipmentData.img + "anim0"));
this.sprite.spriteFrame = e;
var o = cc.color(255, 255, 255).fromHEX(this.data.equipmentData.color), a = cc.color(255, 255, 255).fromHEX(this.data.equipmentData.titlecolor);
this.sprite.node.color = o;
this.node.color = a;
}
};
e.prototype.setEmpty = function() {
this.data.setEmpty();
this.label.string = "";
this.sprite.spriteFrame = null;
this.node.color = cc.Color.WHITE;
};
e.prototype.start = function() {};
var i;
e.TYPE_EMPTY = 0;
e.TYPE_EQUIP = 1;
e.TYPE_ITEM = 2;
n([ p(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ p(cc.Label) ], e.prototype, "label", void 0);
return i = n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"../data/InventoryData": "InventoryData",
"../logic/Logic": "Logic",
"../manager/InventoryManager": "InventoryManager"
} ],
InventoryManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1dc08IgWM1D6q2nqBDxwhzD", "InventoryManager");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../data/EquipmentData"), a = t("../data/InventoryData"), n = t("../data/ItemData"), r = t("../ui/InventoryItem"), s = t("../utils/NextStep"), l = t("../item/Item"), c = function() {
function t() {
this.buffer = new o.default();
this.itemList = [];
this.inventoryList = [];
this.itemCoolDownList = [];
this.equips = {};
this.suitMap = {};
this.suitEquipMap = {};
this.furnitureMap = new Map();
this.emptyEquipData = new o.default();
this.totalEquipData = new o.default();
for (var e = 0, i = t.EQUIP_TAGS; e < i.length; e++) {
var a = i[e];
this.equips[a] = new o.default();
}
for (var r = 0; r < t.MAX_ITEM; r++) {
var l = new n.default();
l.count = -1;
this.itemList.push(l);
this.itemCoolDownList.push(new s.default());
}
this.suitMap = {};
this.suitEquipMap = {};
this.furnitureMap = new Map();
}
t.isEquipTag = function(e) {
if (!e || e.length < 1) return !1;
for (var i = 0, o = t.EQUIP_TAGS; i < o.length; i++) {
var a = o[i];
if (e.indexOf(a) > -1) return !0;
}
return !1;
};
t.prototype.clear = function() {};
t.prototype.getEquipBySuit = function(t) {
return t && this.suitEquipMap[t.suitType] ? this.suitEquipMap[t.suitType] : this.emptyEquipData;
};
Object.defineProperty(t.prototype, "TotalEquipData", {
get: function() {
return this.totalEquipData;
},
enumerable: !1,
configurable: !0
});
t.prototype.updateTotalEquipData = function() {
var t = new o.default(), e = [];
for (var i in this.equips) {
var a = this.equips[i];
t.Common.add(a.Common);
for (var n = 0, r = a.exTriggers; n < r.length; n++) {
var s = r[n];
e.push(s);
}
}
t.Common.add(this.buffer.Common);
for (var i in this.suitEquipMap) if (a = this.suitEquipMap[i]) {
t.Common.add(a.Common);
for (var l = 0, c = a.exTriggers; l < c.length; l++) {
s = c[l];
e.push(s);
}
}
t.exTriggers = e;
this.totalEquipData = t;
};
t.buildItemInventoryData = function(t) {
var e = new a.default();
e.itemData = new n.default();
e.itemData.valueCopy(t);
e.type = t.resName == l.default.EMPTY ? r.default.TYPE_EMPTY : r.default.TYPE_ITEM;
e.createTime = new Date().getTime();
e.id = e.itemData.id;
return e;
};
t.buildEquipInventoryData = function(e) {
var i = new a.default();
i.equipmentData = new o.default();
i.equipmentData.valueCopy(e);
i.type = e.equipmetType == t.EMPTY ? r.default.TYPE_EMPTY : r.default.TYPE_EQUIP;
i.price = i.equipmentData.price;
i.createTime = new Date().getTime();
i.id = i.equipmentData.id;
return i;
};
t.isItemEqualCanAdd = function(t, e) {
return t && e && t.resName != l.default.EMPTY && t.resName == e.resName && t.count > 0 && e.count > 0;
};
t.MAX_BAG = 32;
t.MAX_EQUIP = 8;
t.MAX_ITEM = 6;
t.EMPTY = "empty";
t.WEAPON = "weapon";
t.REMOTE = "remote";
t.SHIELD = "shield";
t.HELMET = "helmet";
t.CLOTHES = "clothes";
t.TROUSERS = "trousers";
t.GLOVES = "gloves";
t.SHOES = "shoes";
t.CLOAK = "cloak";
t.EQUIP_TAGS = [ t.WEAPON, t.REMOTE, t.SHIELD, t.HELMET, t.CLOTHES, t.TROUSERS, t.GLOVES, t.SHOES, t.CLOAK ];
t.TAG = cc.Enum({
DEFAULT: 0,
EQUIP: 1,
ITEM: 2,
CUPBOARD: 3
});
return t;
}();
i.default = c;
cc._RF.pop();
}, {
"../data/EquipmentData": "EquipmentData",
"../data/InventoryData": "InventoryData",
"../data/ItemData": "ItemData",
"../item/Item": "Item",
"../ui/InventoryItem": "InventoryItem",
"../utils/NextStep": "NextStep"
} ],
Inventory: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "3b411lPIzZAv7ApO4pixeng", "Inventory");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = t("./EventHelper"), u = t("./Logic"), p = t("../data/EquipmentData"), h = t("../manager/InventoryManager"), d = t("./Dungeon"), f = t("../data/FromData"), g = t("../item/Item"), y = t("../data/SuitData"), m = t("../ui/dialog/EquipmentAndItemDialog"), v = t("../utils/LocalStorage"), E = t("../utils/Utils"), _ = t("../ui/dialog/InventoryDialog"), T = t("../data/TriggerData"), D = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.dungeon = null;
e.weapon = null;
e.remote = null;
e.shield = null;
e.helmet = null;
e.clothes = null;
e.trousers = null;
e.gloves = null;
e.shoes = null;
e.cloak = null;
e.itemsprite1 = null;
e.itemsprite2 = null;
e.itemsprite3 = null;
e.itemsprite4 = null;
e.itemsprite5 = null;
e.itemsprite6 = null;
e.itemlabel1 = null;
e.itemlabel2 = null;
e.itemlabel3 = null;
e.itemlabel4 = null;
e.itemlabel5 = null;
e.itemlabel6 = null;
e.equipmentAndItemDialogPrefab = null;
e.mainCamera = null;
e.equipmentNode = null;
e.dialogNode = null;
e.equipmentAndItemDialog = null;
e.equipmentGroundDialog = null;
e.itemGroundDialog = null;
e.graphics = null;
e.equipAndItemTimeDelays = new Map();
e.equipSprites = new Map();
e.equipCovers = new Map();
e.itemPositions = [];
e.itemCovers = [];
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.equipmentNode.active = u.default.settings.showEquipDialog;
this.equipmentGroundDialog = this.initDialog(!0);
this.itemGroundDialog = this.initDialog(!0);
this.equipmentAndItemDialog = this.initDialog(!1);
this.graphics = this.getComponent(cc.Graphics);
this.inventoryManager = u.default.inventoryManager;
c.EventHelper.on(c.EventHelper.PLAYER_CHANGEEQUIPMENT, function(e) {
if (t.node) {
t.refreshEquipment(e.equipmetType, e.equipData, !1, e.isReplace);
t.refreshSuits();
u.default.inventoryManager.updateTotalEquipData();
}
});
c.EventHelper.on(c.EventHelper.PLAYER_EQUIPMENT_REFRESH, function(e) {
if (t.node) {
t.refreshEquipmentRes(e.equipmetType);
t.refreshSuits();
u.default.inventoryManager.updateTotalEquipData();
}
});
c.EventHelper.on(c.EventHelper.PLAYER_ITEM_REFRESH, function() {
t.node && t.refreshItemRes();
});
this.equipmentGroundDialog && this.equipmentGroundDialog.hideDialog();
this.itemGroundDialog && this.itemGroundDialog.hideDialog();
c.EventHelper.on(c.EventHelper.PLAYER_CHANGEITEM, function(e) {
t.node && t.refreshItem(e.itemData, e.isReplace);
});
c.EventHelper.on(c.EventHelper.HUD_GROUND_EQUIPMENT_INFO_SHOW, function(e) {
if (t.equipmentGroundDialog) {
var i = e.worldPos, o = t.node.convertToNodeSpaceAR(i);
t.equipmentGroundDialog.showDialog(o.sub(t.mainCamera.node.position), null, e.itemData, e.equipData, null);
}
});
c.EventHelper.on(c.EventHelper.HUD_GROUND_EQUIPMENT_INFO_HIDE, function() {
t.equipmentGroundDialog && t.equipmentGroundDialog.hideDialog();
});
c.EventHelper.on(c.EventHelper.HUD_GROUND_ITEM_INFO_SHOW, function(e) {
if (t.itemGroundDialog) {
var i = e.worldPos, o = t.node.convertToNodeSpaceAR(i);
t.itemGroundDialog.showDialog(o.sub(t.mainCamera.node.position), null, e.itemData, null, null);
}
});
c.EventHelper.on(c.EventHelper.HUD_GROUND_ITEM_INFO_HIDE, function() {
t.itemGroundDialog && t.itemGroundDialog.hideDialog();
});
c.EventHelper.on(c.EventHelper.USEITEM_KEYBOARD, function(e) {
t.userItem(e.index);
});
c.EventHelper.on(c.EventHelper.HUD_FADE_IN, function() {
t.fadeIn();
});
c.EventHelper.on(c.EventHelper.HUD_FADE_OUT, function() {
t.fadeOut();
});
this.remote.node.parent.active = !0;
this.shield.node.parent.active = !1;
for (var e = 0, i = h.default.EQUIP_TAGS; e < i.length; e++) {
var o = i[e];
this.equipAndItemTimeDelays.set(o, 0);
}
this.equipSprites.set(h.default.WEAPON, this.weapon);
this.equipSprites.set(h.default.REMOTE, this.remote);
this.equipSprites.set(h.default.SHIELD, this.shield);
this.equipSprites.set(h.default.HELMET, this.helmet);
this.equipSprites.set(h.default.CLOTHES, this.clothes);
this.equipSprites.set(h.default.TROUSERS, this.trousers);
this.equipSprites.set(h.default.GLOVES, this.gloves);
this.equipSprites.set(h.default.SHOES, this.shoes);
this.equipSprites.set(h.default.CLOAK, this.cloak);
};
e.prototype.initDialog = function(t) {
var e = cc.instantiate(this.equipmentAndItemDialogPrefab);
e.parent = this.node;
var i = e.getComponent(m.default);
i.changeBgAndAnchor(t ? m.default.BG_TYPE_ARROW_DOWN : m.default.BG_TYPE_ARROW_RIGHT);
i.hideDialog();
t || (e.parent = this.dialogNode);
return i;
};
e.prototype.showEquipment = function() {
this.equipmentNode.active = !this.equipmentNode.active;
u.default.settings.showEquipDialog = this.equipmentNode.active;
v.default.saveSystemSettings(u.default.settings);
};
e.prototype.fadeOut = function() {
if (this.equipmentNode) {
this.node.opacity = 255;
cc.tween(this.equipmentNode).to(.5, {
opacity: 0
}).start();
}
};
e.prototype.fadeIn = function() {
if (this.equipmentNode) {
this.node.opacity = 0;
cc.tween(this.equipmentNode).to(3, {
opacity: 255
}).start();
}
};
e.prototype.start = function() {
var t = this;
this.equipSprites.forEach(function(e, i) {
e.spriteFrame = null;
t.addEquipSpriteTouchEvent(e, i);
t.equipCovers.set(i, e.node.parent.getChildByName("cover"));
});
for (var e in this.inventoryManager.equips) this.refreshEquipment(e, this.inventoryManager.equips[e].clone(), !0, !1);
this.refreshItemRes();
for (var i = [ this.itemsprite1, this.itemsprite2, this.itemsprite3, this.itemsprite4, this.itemsprite5, this.itemsprite6 ], o = [ this.itemlabel1, this.itemlabel2, this.itemlabel3, this.itemlabel4, this.itemlabel5, this.itemlabel6 ], a = 0; a < o.length; a++) {
this.itemPositions[a] = i[a].node.convertToWorldSpaceAR(cc.Vec3.ZERO);
this.addItemSpriteTouchEvent(i[a], o[a].node.parent, a);
this.itemCovers.push(o[a].node.parent.getChildByName("cover"));
}
this.refreshSuits();
u.default.inventoryManager.updateTotalEquipData();
};
e.prototype.addEquipSpriteTouchEvent = function(t, e) {
var i = this;
t.node.parent.on(cc.Node.EventType.TOUCH_START, function() {
if (null != t.spriteFrame) {
var o = new p.default();
i.inventoryManager.equips[e] && (o = i.inventoryManager.equips[e].clone());
if (o.equipmetType != h.default.EMPTY) {
var a = i.node.convertToNodeSpaceAR(t.node.parent.convertToWorldSpaceAR(cc.Vec3.ZERO));
i.equipmentAndItemDialog.showDialog(a.add(cc.v3(-32, 0)), null, null, o, null, i.inventoryManager, m.default.BG_TYPE_ARROW_RIGHT);
}
}
});
t.node.parent.on(cc.Node.EventType.TOUCH_END, function() {
i.equipmentAndItemDialog.hideDialog();
});
t.node.parent.on(cc.Node.EventType.TOUCH_CANCEL, function() {
i.equipmentAndItemDialog.hideDialog();
});
};
e.prototype.addItemSpriteTouchEvent = function(t, e, i) {
var o = this, a = !1, n = !1;
e.on(cc.Node.EventType.TOUCH_START, function() {
if (null != t.spriteFrame) {
n = !0;
o.scheduleOnce(function() {
if (n && o.inventoryManager && o.inventoryManager.itemList && !(i > o.inventoryManager.itemList.length - 1)) {
a = !0;
var t = o.inventoryManager.itemList[i].clone();
if (t.resName != g.default.EMPTY) {
var r = o.node.convertToNodeSpaceAR(e.convertToWorldSpaceAR(cc.Vec3.ZERO));
o.equipmentAndItemDialog.showDialog(r.add(cc.v3(32, 0)), null, t, null, null, null, m.default.BG_TYPE_ARROW_LEFT);
}
}
}, .3);
}
});
e.on(cc.Node.EventType.TOUCH_END, function() {
o.equipmentAndItemDialog.hideDialog();
a || o.userItem(i);
n = !1;
a = !1;
});
e.on(cc.Node.EventType.TOUCH_CANCEL, function() {
o.equipmentAndItemDialog.hideDialog();
n = !1;
a = !1;
});
};
e.prototype.refreshSuits = function() {
this.inventoryManager.suitMap = {};
this.inventoryManager.suitEquipMap = {};
for (var t in this.inventoryManager.equips) {
var e = this.inventoryManager.equips[t];
if (!(e.suitType.length < 1)) if (this.inventoryManager.suitMap[e.suitType]) this.inventoryManager.suitMap[e.suitType].count++; else {
var i = new y.default();
i.valueCopy(u.default.suits[e.suitType]);
i.count = 1;
this.inventoryManager.suitMap[e.suitType] = i;
}
}
for (var t in this.inventoryManager.suitMap) {
var o = this.inventoryManager.suitMap[t], a = new p.default();
if (o) {
for (var n = 0; n < o.count - 1; n++) n < o.EquipList.length && a.add(o.EquipList[n]);
this.inventoryManager.suitEquipMap[t] = a;
}
}
};
e.prototype.refreshEquipmentRes = function(t) {
if (t) {
var e = this.inventoryManager.equips[t], i = cc.color(255, 255, 255).fromHEX(e.color), o = u.default.spriteFrameRes(e.img);
e.equipmetType == h.default.CLOTHES ? o = u.default.spriteFrameRes(e.img + "anim0") : e.equipmetType == h.default.HELMET ? o = u.default.spriteFrameRes(e.img + "anim0") : e.equipmetType == h.default.REMOTE && (o = u.default.spriteFrameRes(e.img + "anim0"));
var a = this.equipSprites.get(t);
if (a) {
a.node.color = i;
a.spriteFrame = 1 == e.trouserslong ? u.default.spriteFrameRes("trousers000") : o;
t == h.default.TROUSERS && 1 == e.trouserslong && (a.spriteFrame = u.default.spriteFrameRes("trousers000"));
}
switch (t) {
case h.default.REMOTE:
this.remote.node.parent.active = !0;
this.shield.node.parent.active = !0;
this.inventoryManager.equips[t].equipmetType != h.default.EMPTY && (this.shield.node.parent.active = !1);
break;

case h.default.SHIELD:
this.remote.node.parent.active = !0;
this.shield.node.parent.active = !0;
if (this.inventoryManager.equips[t].equipmetType != h.default.EMPTY) {
this.remote.node.parent.active = !1;
this.shield.node.parent.active = !0;
} else {
this.remote.node.parent.active = !0;
this.shield.node.parent.active = !1;
}
}
this.dungeon && this.dungeon.player && this.dungeon.player.changeEquipment(t, e, o);
}
};
e.prototype.refreshEquipment = function(t, e, i, o) {
if (e && this.weapon && t) {
var a = this.inventoryManager.equips[t], n = a && a.equipmetType != h.default.EMPTY;
if (!n) {
t == h.default.REMOTE && this.inventoryManager.equips[h.default.SHIELD].equipmetType != h.default.EMPTY && (n = !0);
t == h.default.SHIELD && this.inventoryManager.equips[h.default.REMOTE].equipmetType != h.default.EMPTY && (n = !0);
}
if (!o && !i && a && n || e.requireLevel > u.default.playerData.OilGoldData.level) this.setEquipmentToBag(e, i); else {
if (a) {
this.setEquipmentToBag(a, i);
a.valueCopy(e);
i || c.EventHelper.emit(c.EventHelper.HUD_INVENTORY_EQUIP_UPDATE);
}
switch (t) {
case h.default.REMOTE:
if (this.inventoryManager.equips[t].equipmetType != h.default.EMPTY) {
this.setEquipmentToBag(this.inventoryManager.equips[h.default.SHIELD], i);
this.inventoryManager.equips[h.default.SHIELD].valueCopy(new p.default());
this.refreshEquipmentRes(h.default.SHIELD);
}
break;

case h.default.SHIELD:
if (this.inventoryManager.equips[t].equipmetType != h.default.EMPTY) {
this.setEquipmentToBag(this.inventoryManager.equips[h.default.REMOTE], i);
this.inventoryManager.equips[h.default.REMOTE].valueCopy(new p.default());
this.refreshEquipmentRes(h.default.REMOTE);
}
}
this.refreshEquipmentRes(t);
}
}
};
e.prototype.getTimeDelay = function(t, e, i) {
t || (t = 0);
return (t += i) > e ? t = 0 : t;
};
e.prototype.isTimeDelay = function(t, e, i) {
if (i <= 0) return !1;
this.equipAndItemTimeDelays.set(e, this.getTimeDelay(this.equipAndItemTimeDelays.get(e), i, t));
return 0 == this.equipAndItemTimeDelays.get(e);
};
e.prototype.update = function(t) {
var e = this;
if (!u.default.isGamePause) {
for (var i = this.inventoryManager.TotalEquipData, o = 0, a = i.exTriggers; o < a.length; o++) {
var n = a[o];
this.isTimeDelay(t, n.uuid, n.autoInterval) && this.dungeon && this.dungeon.player && this.dungeon.player.exTriggerDo(n, T.default.GROUP_AUTO, T.default.TYPE_AUTO, f.default.getClone(i.nameCn, i.img), null);
}
var r = Date.now();
this.equipCovers.forEach(function(t, i) {
var o = e.inventoryManager.equips[i];
if (o) {
var a = (r - o.lastTime) / (1e3 * o.cooldown);
a > 1 && (a = 1);
t.height = t.width * (1 - a);
}
});
for (var s in this.equipCovers) if (c = this.inventoryManager.equips[s]) {
(d = (r - c.lastTime) / (1e3 * c.cooldown)) > 1 && (d = 1);
this.equipCovers.get(s).height = this.equipCovers.get(s).width * (1 - d);
}
for (var l = 0; l < this.inventoryManager.itemList.length; l++) {
for (var c, p = 0, h = (c = this.inventoryManager.itemList[l]).exTriggers; p < h.length; p++) {
n = h[p];
this.isTimeDelay(t, "itemIndex" + l, n.autoInterval) && this.dungeon && this.dungeon.player && this.dungeon.player.exTriggerDo(n, T.default.GROUP_AUTO, T.default.TYPE_AUTO, f.default.getClone(c.nameCn, c.resName), null);
}
var d;
(d = (r - c.lastTime) / (1e3 * c.cooldown)) > 1 && (d = 1);
this.itemCovers[l].height = this.itemCovers[l].width * (1 - d);
}
}
};
e.prototype.userItem = function(t) {
if (this.inventoryManager && this.inventoryManager.itemList && !(t > this.inventoryManager.itemList.length - 1)) {
var e = this.inventoryManager.itemList[t].clone();
if (e.resName != g.default.EMPTY && this.dungeon.player.canEatOrDrink(e)) {
var i = Date.now();
if (i - e.lastTime > 1e3 * e.cooldown) {
e.lastTime = i;
-1 != e.count && e.count--;
e.count <= 0 && -1 != e.count ? this.inventoryManager.itemList[t].valueCopy(u.default.items[g.default.EMPTY]) : this.inventoryManager.itemList[t].valueCopy(e);
this.refreshItemRes();
e.resName != g.default.EMPTY && c.EventHelper.emit(c.EventHelper.PLAYER_USEITEM, {
itemData: e
});
}
}
}
};
e.prototype.refreshItem = function(t, e) {
if (this.node) {
for (var i = !1, o = 0; o < this.inventoryManager.itemList.length; o++) {
var a = this.inventoryManager.itemList[o];
if (h.default.isItemEqualCanAdd(a, t)) {
var n = a.count + t.count;
a.valueCopy(t);
a.count = n;
i = !0;
break;
}
}
if (!i) for (o = 0; o < this.inventoryManager.itemList.length; o++) if ((a = this.inventoryManager.itemList[o]).resName == g.default.EMPTY) {
a.valueCopy(t);
i = !0;
break;
}
if (!i) if (e) {
var r = this.inventoryManager.itemList[0].clone(), s = new Array();
for (o = 1; o < this.inventoryManager.itemList.length; o++) s.push(this.inventoryManager.itemList[o]);
s.push(t);
for (o = 0; o < this.inventoryManager.itemList.length; o++) this.inventoryManager.itemList[o].valueCopy(s[o]);
this.setItemToBag(r);
} else this.setItemToBag(t);
this.refreshItemRes();
}
};
e.prototype.refreshItemRes = function() {
for (var t = [ this.itemsprite1, this.itemsprite2, this.itemsprite3, this.itemsprite4, this.itemsprite5, this.itemsprite6 ], e = [ this.itemlabel1, this.itemlabel2, this.itemlabel3, this.itemlabel4, this.itemlabel5, this.itemlabel6 ], i = 0; i < t.length; i++) {
var o = this.inventoryManager.itemList[i];
t[i].spriteFrame = u.default.spriteFrameRes(o.resName);
e[i].string = o.count > 0 ? "x" + o.count : "";
}
};
e.prototype.setEquipmentToBag = function(t, e) {
if (!e && t.equipmetType != h.default.EMPTY) {
var i = u.default.inventoryManager.inventoryList, o = h.default.buildEquipInventoryData(t);
if (!_.default.addEquipOrItemToBag(o, i, h.default.MAX_BAG, !1, null)) {
E.default.toast("物品栏已满！");
c.EventHelper.emit(c.EventHelper.DUNGEON_SETEQUIPMENT, {
res: t.img,
equipmentData: t
});
}
}
};
e.prototype.setItemToBag = function(t) {
var e = u.default.inventoryManager.inventoryList, i = h.default.buildItemInventoryData(t);
if (!_.default.addEquipOrItemToBag(i, e, h.default.MAX_BAG, !0, null)) {
E.default.toast("物品栏已满！");
c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_ITEM, {
res: t.resName,
count: t.count
});
}
};
n([ l(d.default) ], e.prototype, "dungeon", void 0);
n([ l(cc.Sprite) ], e.prototype, "weapon", void 0);
n([ l(cc.Sprite) ], e.prototype, "remote", void 0);
n([ l(cc.Sprite) ], e.prototype, "shield", void 0);
n([ l(cc.Sprite) ], e.prototype, "helmet", void 0);
n([ l(cc.Sprite) ], e.prototype, "clothes", void 0);
n([ l(cc.Sprite) ], e.prototype, "trousers", void 0);
n([ l(cc.Sprite) ], e.prototype, "gloves", void 0);
n([ l(cc.Sprite) ], e.prototype, "shoes", void 0);
n([ l(cc.Sprite) ], e.prototype, "cloak", void 0);
n([ l(cc.Sprite) ], e.prototype, "itemsprite1", void 0);
n([ l(cc.Sprite) ], e.prototype, "itemsprite2", void 0);
n([ l(cc.Sprite) ], e.prototype, "itemsprite3", void 0);
n([ l(cc.Sprite) ], e.prototype, "itemsprite4", void 0);
n([ l(cc.Sprite) ], e.prototype, "itemsprite5", void 0);
n([ l(cc.Sprite) ], e.prototype, "itemsprite6", void 0);
n([ l(cc.Label) ], e.prototype, "itemlabel1", void 0);
n([ l(cc.Label) ], e.prototype, "itemlabel2", void 0);
n([ l(cc.Label) ], e.prototype, "itemlabel3", void 0);
n([ l(cc.Label) ], e.prototype, "itemlabel4", void 0);
n([ l(cc.Label) ], e.prototype, "itemlabel5", void 0);
n([ l(cc.Label) ], e.prototype, "itemlabel6", void 0);
n([ l(cc.Prefab) ], e.prototype, "equipmentAndItemDialogPrefab", void 0);
n([ l(cc.Camera) ], e.prototype, "mainCamera", void 0);
n([ l(cc.Node) ], e.prototype, "equipmentNode", void 0);
n([ l(cc.Node) ], e.prototype, "dialogNode", void 0);
return n([ s ], e);
}(cc.Component);
i.default = D;
cc._RF.pop();
}, {
"../data/EquipmentData": "EquipmentData",
"../data/FromData": "FromData",
"../data/SuitData": "SuitData",
"../data/TriggerData": "TriggerData",
"../item/Item": "Item",
"../manager/InventoryManager": "InventoryManager",
"../ui/dialog/EquipmentAndItemDialog": "EquipmentAndItemDialog",
"../ui/dialog/InventoryDialog": "InventoryDialog",
"../utils/LocalStorage": "LocalStorage",
"../utils/Utils": "Utils",
"./Dungeon": "Dungeon",
"./EventHelper": "EventHelper",
"./Logic": "Logic"
} ],
ItemData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "371e21tzPlAtY0KmtggGqZV", "ItemData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../utils/DataUtils"), r = t("./BaseData"), s = t("./CommonData"), l = function(t) {
a(e, t);
function e() {
var e = t.call(this) || this;
e.uuid = "";
e.id = 2e7;
e.pos = cc.v3(0, 0);
e.nameCn = "";
e.nameEn = "";
e.duration = 0;
e.desc = "";
e.info = "";
e.resName = "emptyitem";
e.price = 0;
e.isTaken = !1;
e.count = 1;
e.cooldown = 1;
e.statusList = "";
e.canSave = 0;
e.sanity = 0;
e.solidSatiety = 0;
e.liquidSatiety = 0;
e.lastTime = 0;
e.exTriggers = [];
e.common = new s.default();
return e;
}
Object.defineProperty(e.prototype, "Common", {
get: function() {
return this.common;
},
enumerable: !1,
configurable: !0
});
e.prototype.valueCopy = function(t) {
if (t) {
var e = this.nameCn;
n.default.baseCopy(this, t);
this.id = t.id ? t.id : 2e7;
this.common.valueCopy(t.common);
this.pos = t.pos ? cc.v3(t.pos.x, t.pos.y) : cc.v3(0, 0);
this.nameCn = t.nameCn ? t.nameCn : e;
this.resName = t.resName ? t.resName : "emptyitem";
this.count = t.count ? t.count : 1;
this.cooldown = t.cooldown ? t.cooldown : 1;
this.exTriggers = t.exTriggers ? t.exTriggers : [];
}
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
return e;
}(r.default);
i.default = l;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData",
"./CommonData": "CommonData"
} ],
ItemManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9211357HjhKqavyVFqZ4zof", "ItemManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../item/Coin"), s = t("../logic/Dungeon"), l = t("../item/OilGold"), c = t("../utils/IndexZ"), u = t("./BaseManager"), p = t("../logic/Logic"), h = t("../item/Item"), d = t("../logic/EventHelper"), f = cc._decorator, g = f.ccclass, y = f.property, m = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.coin = null;
e.oilGold = null;
e.item = null;
e.groundList = [];
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.coinPool = new cc.NodePool();
this.oilPool = new cc.NodePool();
d.EventHelper.on("destorycoin", function(e) {
t.destroyCoin(e.coinNode);
});
d.EventHelper.on("destoryoilgold", function(e) {
t.destroyOilGold(e.oilGoldNode);
});
};
e.prototype.clear = function() {
if (this.coinPool) {
this.coinPool.clear();
this.oilPool.clear();
}
this.groundList = [];
};
e.prototype.getValueCoin = function(t, e, i, o) {
for (var a = r.default.FACE_VALUE, n = t % a, s = 0; s < n; s++) this.getCoinItem(1, e, i, !0, o);
var l = (t - n) / a;
for (s = 0; s < l; s++) this.getCoinItem(a, e, i, !0, o);
};
e.prototype.getValueOilGold = function(t, e, i) {
for (var o = l.default.FACE_VALUE, a = t % o, n = 0; n < a; n++) this.getCoinItem(1, e, i, !1, !1);
var r = (t - a) / o;
for (n = 0; n < r; n++) this.getCoinItem(o, e, i, !1, !1);
};
e.prototype.getCoinItem = function(t, e, i, o, a) {
var n, u = o ? this.coinPool : this.oilPool, h = o ? this.coin : this.oilGold, d = i.getComponent(s.default);
d && (n = d.player);
var f = null;
u.size() > 0 && (f = u.get());
f && !f.active || (f = cc.instantiate(h));
f.parent = i;
var g = cc.v3(e.x + p.default.getRandomNum(-50, 50), e.y + p.default.getRandomNum(-50, 50));
f.position = g;
var y = o ? f.getComponent(r.default) : f.getComponent(l.default);
y.entity.Transform.position = g;
y.player = n;
y.isReal = a;
y.changeValue(t);
y.node.zIndex = c.default.OVERHEAD;
f.active = !0;
};
e.prototype.destroyCoin = function(t) {
t.active = !1;
this.coinPool && this.coinPool.put(t);
};
e.prototype.destroyOilGold = function(t) {
t.active = !1;
this.oilPool && this.oilPool.put(t);
};
e.prototype.addItem = function(t, e, i, o) {
if (this.item && p.default.items[e]) {
var a = cc.instantiate(this.item);
a.parent = this.node;
a.position = t;
var n = s.default.getIndexInMap(t);
a.zIndex = c.default.OVERHEAD;
var r = a.getComponent(h.default);
r.init(e, n.clone(), i, o);
var l = a.getComponent(h.default).data;
this.groundList.push(r);
if (!o) {
var u = p.default.mapManager.getCurrentMapItems();
if (u) u.push(l); else {
(u = new Array()).push(l);
p.default.mapManager.setCurrentItemsArr(u);
}
}
}
};
e.prototype.addItemFromMap = function(t, e) {
"A0" == t && this.addItem(s.default.getPosInMap(e), h.default.HEART);
"A1" == t && this.addItem(s.default.getPosInMap(e), h.default.DREAM);
"A3" == t && this.addItem(s.default.getPosInMap(e), h.default.REDCAPSULE);
"A1" == t && this.addItem(s.default.getPosInMap(e), h.default.BLUECAPSULE);
"A4" == t && this.addItem(s.default.getPosInMap(e), h.default.SHIELD);
"A5" == t && this.addItem(s.default.getPosInMap(e), h.default.GOLDAPPLE);
"Aa" == t && this.addItem(s.default.getPosInMap(e), h.default.BOTTLE_HEALING);
"Ab" == t && this.addItem(s.default.getPosInMap(e), h.default.BOTTLE_MOVESPEED);
"Ac" == t && this.addItem(s.default.getPosInMap(e), h.default.BOTTLE_ATTACK);
"Ad" == t && this.addItem(s.default.getPosInMap(e), h.default.BOTTLE_DREAM);
"Ae" == t && this.addItem(s.default.getPosInMap(e), h.default.BOTTLE_REMOTE);
"Af" == t && this.addItem(s.default.getPosInMap(e), h.default.BOTTLE_JUMP);
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t, e) {
if (this.isCheckTimeDelay(t)) {
for (var i = 200, o = null, a = this.groundList.length - 1; a >= 0; a--) {
var n = this.groundList[a];
n.highLight(!1);
if (n.isValid && !n.data.isTaken) {
var r = p.default.getDistanceNoSqrt(n.node.position, e.node.position);
if (r < i) {
i = r;
o = n;
}
} else this.groundList.splice(a, 1);
}
if (i < (o && o.data.canSave ? 64 : 48) && o) {
o.highLight(!0);
if (o.data.canSave) {
if (!this.lastGroundItem || this.lastGroundItem.uuid != o.uuid) {
cc.tween(o.taketips).to(.2, {
opacity: 255
}).delay(1).to(.2, {
opacity: 0
}).start();
d.EventHelper.emit(d.EventHelper.HUD_GROUND_ITEM_INFO_SHOW, {
worldPos: o.node.convertToWorldSpaceAR(cc.v3(0, 32)),
itemData: o.data
});
}
this.lastGroundItem = o;
} else if (e && e.canEatOrDrink(o.data)) {
o.taken(e, !1);
this.lastGroundItem = null;
}
} else {
this.lastGroundItem = null;
d.EventHelper.emit(d.EventHelper.HUD_GROUND_ITEM_INFO_HIDE);
}
}
};
n([ y(cc.Prefab) ], e.prototype, "coin", void 0);
n([ y(cc.Prefab) ], e.prototype, "oilGold", void 0);
n([ y(cc.Prefab) ], e.prototype, "item", void 0);
return n([ g ], e);
}(u.default);
i.default = m;
cc._RF.pop();
}, {
"../item/Coin": "Coin",
"../item/Item": "Item",
"../item/OilGold": "OilGold",
"../logic/Dungeon": "Dungeon",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../utils/IndexZ": "IndexZ",
"./BaseManager": "BaseManager"
} ],
Item: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "ce4de5SY9BKg5Ay5wKpP9r7", "Item");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../ecs/component/MoveComponent"), s = t("../logic/EventHelper"), l = t("../logic/Logic"), c = t("../data/ItemData"), u = t("../utils/AudioPlayer"), p = t("../data/FromData"), h = t("../logic/Achievement"), d = t("../data/StatusData"), f = t("../manager/StatusManager"), g = t("../base/BaseNodeComponent"), y = cc._decorator, m = y.ccclass, v = y.property, E = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.root = null;
e.sprite = null;
e.shadow = null;
e.data = new c.default();
return e;
}
i = e;
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.taketips = this.sprite.node.getChildByName("taketips");
this.entity.NodeRender.root = this.root;
};
e.prototype.start = function() {
this.anim = this.getComponent(cc.Animation);
};
e.prototype.init = function(t, e, i, o) {
this.data.valueCopy(l.default.items[t]);
this.data.uuid = this.data.genNonDuplicateID();
for (var a = 0, n = this.data.exTriggers; a < n.length; a++) n[a].uuid = this.data.genNonDuplicateID();
this.data.pos = e;
this.data.count = i || this.data.count;
if (o) {
this.shopTable = o;
o.data.itemdata = new c.default();
o.data.itemdata.valueCopy(l.default.items[t]);
o.data.price = this.data.price;
}
var r = l.default.spriteFrameRes(this.data.resName);
if (r) {
this.sprite.spriteFrame = r;
this.sprite.node.width = r.getOriginalSize().width;
this.sprite.node.height = r.getOriginalSize().height;
this.mat = this.sprite.getComponent(cc.Sprite).getMaterial(0);
this.mat.setProperty("textureSizeWidth", r.getTexture().width * this.sprite.node.scaleX);
this.mat.setProperty("textureSizeHeight", r.getTexture().height * this.sprite.node.scaleY);
this.mat.setProperty("outlineColor", cc.color(200, 200, 200));
this.highLight(!1);
this.shadow.node.width = this.sprite.node.width;
this.shadow.node.height = this.sprite.node.height;
this.entity.Move.linearVelocityZ = 6;
this.entity.Transform.position = this.node.position.clone();
}
};
e.prototype.fly = function(t) {
if (t) {
this.entity.Move.gravity = 0;
this.entity.Transform.z <= 0 ? this.entity.Move.linearVelocityZ = 4 : this.entity.Transform.z > 32 && (this.entity.Move.linearVelocityZ = 0);
} else this.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY;
};
e.prototype.highLight = function(t) {
this.mat || (this.mat = this.sprite.getComponent(cc.Sprite).getMaterial(0));
this.fly(t);
this.mat.setProperty("openOutline", t ? 1 : 0);
};
e.prototype.taken = function(t, e) {
if (this.data.isTaken) return !1;
if (!this.data.canSave) {
this._taken(t, e);
return !0;
}
if (!this.shopTable) {
this._taken(t, e);
return !0;
}
if (l.default.coins >= this.data.price) {
s.EventHelper.emit(s.EventHelper.HUD_ADD_COIN, {
count: -this.data.price
});
var i = [ u.default.COIN, u.default.COIN1, u.default.COIN2 ];
u.default.play(i[l.default.getRandomNum(0, i.length - 1)]);
this._taken(t, e);
this.shopTable.sale(!0);
return !0;
}
return !1;
};
e.prototype._taken = function(t, e) {
var o = this;
if (!this.data.isTaken && this.anim) {
this.anim.play("ItemTaken");
h.default.addItemAchievement(this.data.resName);
this.data.isTaken = !0;
u.default.play(u.default.PICK_ITEM);
this.data.canSave < 1 ? i.userIt(this.data, t) : s.EventHelper.emit(s.EventHelper.PLAYER_CHANGEITEM, {
itemData: this.data,
isReplace: e
});
this.scheduleOnce(function() {
o.node && o.destroyEntityNode();
}, 3);
}
var a = l.default.mapManager.getCurrentMapItems(), n = new Array();
if (a) for (var r = 0, c = a; r < c.length; r++) {
var p = c[r];
p.uuid && p.uuid != this.data.uuid && n.push(p);
}
l.default.mapManager.setCurrentItemsArr(n);
s.EventHelper.emit(s.EventHelper.HUD_GROUND_ITEM_INFO_HIDE);
};
e.userIt = function(t, e) {
var o = p.default.getClone(t.nameCn, t.resName);
t.resName != i.EMPTY && t.canSave && u.default.play(u.default.PICK_ITEM);
switch (t.resName) {
case i.GOLDFINGER:
e.stopAllDebuffs();
}
if (t.statusList.length > 0) for (var a = 0, n = t.statusList.split(","); a < n.length; a++) {
var r = n[a];
e.addStatus(r, o);
e.dungeon.nonPlayerManager.isPetAlive() && e.dungeon.nonPlayerManager.pet.addStatus(r, o);
}
e.sanityChange(t.sanity);
if (t.solidSatiety > 0 || t.liquidSatiety > 0) {
u.default.play(u.default.DRINK);
if (t.solidSatiety) {
(s = new d.default()).valueCopy(l.default.status[f.default.EAT]);
s.solidDirect = t.solidSatiety;
e.addCustomStatus(s, o);
}
if (t.liquidSatiety) {
var s;
(s = new d.default()).valueCopy(l.default.status[f.default.DRINK]);
s.liquidDirect = t.liquidSatiety;
e.addCustomStatus(s, o);
}
}
};
var i;
e.EMPTY = "emptyitem";
e.HEART = "heart";
e.DREAM = "dream";
e.BOTTLE_HEALING = "bottle001";
e.BOTTLE_MOVESPEED = "bottle002";
e.BOTTLE_ATTACK = "bottle003";
e.BOTTLE_DREAM = "bottle004";
e.BOTTLE_REMOTE = "bottle005";
e.BOTTLE_JUMP = "bottle006";
e.REDCAPSULE = "redcapsule";
e.BLUECAPSULE = "bluecapsule";
e.SHIELD = "shield";
e.GOLDAPPLE = "goldapple";
e.GOLDFINGER = "goldfinger";
e.FRIEDRICE = "food000";
n([ v(cc.Node) ], e.prototype, "root", void 0);
n([ v(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ v(cc.Sprite) ], e.prototype, "shadow", void 0);
return i = n([ m ], e);
}(g.default);
i.default = E;
cc._RF.pop();
}, {
"../base/BaseNodeComponent": "BaseNodeComponent",
"../data/FromData": "FromData",
"../data/ItemData": "ItemData",
"../data/StatusData": "StatusData",
"../logic/Achievement": "Achievement",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/StatusManager": "StatusManager",
"../utils/AudioPlayer": "AudioPlayer",
"./../ecs/component/MoveComponent": "MoveComponent"
} ],
JoyController: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "246e3R5w7RM/68kAxSEZZAX", "JoyController");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./EventHelper"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.anglePreDirQuadrant = 23;
e.fixedPoint = null;
e.movePoint = null;
e.movePointMoveRadius = 100;
e.timeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
var t = this.node.getContentSize();
this.touchArea = new cc.Vec3(t.width, t.height);
this.fixedPointMoveCenterPos = cc.v3(0, 0);
this.fixedPointMoveRadius = this.touchArea.x / 2 - this.movePointMoveRadius;
this.node.on(cc.Node.EventType.TOUCH_START, function(t) {
if (-1 == this.touchID) {
var e = t.getLocation(), i = new cc.Vec3(e.x, e.y);
i.subSelf(this.node.position);
var o = this.clampPos(i, this.fixedPointMoveCenterPos, this.fixedPointMoveRadius);
this.movePointMoveCenterPos = o;
this.setFixedPointPos(o);
this.touchID = t.getID();
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(t) {
if (this.touchID == t.getID()) {
var e = t.getLocation(), i = new cc.Vec3(e.x, e.y);
i.subSelf(this.node.position);
var o = this.clampPos(i, this.movePointMoveCenterPos, this.movePointMoveRadius);
console.log(o);
this.setMovePointPos(o);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function() {
this.init();
r.EventHelper.emit(r.EventHelper.PLAYER_ATTACK);
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {
this.init();
r.EventHelper.emit(r.EventHelper.PLAYER_ATTACK);
}, this);
this.init();
};
e.prototype.init = function() {
this.touchID = -1;
this.joystickInputDir = new cc.Vec3();
this.setFixedPointPos(this.fixedPointMoveCenterPos);
this.setMovePointPos(this.fixedPointMoveCenterPos);
};
e.prototype.setFixedPointPos = function() {
this.fixedPoint.setPosition(cc.v3(0, 0));
};
e.prototype.getFixedPointPos = function() {
return this.fixedPoint.getPosition();
};
e.prototype.setMovePointPos = function(t) {
this.movePoint.setPosition(t);
};
e.prototype.getMovePointPos = function() {
return this.movePoint.getPosition();
};
e.prototype.clampPos = function(t, e, i) {
var o = t.sub(e);
return o.mag() > i ? o.normalize().mul(i).add(e) : t;
};
e.prototype.getInputDir = function() {
var t = this.movePoint.getPosition().sub(this.fixedPoint.getPosition());
t.mag() > 0 && t.normalizeSelf();
return t;
};
e.prototype.getInputQuadrantDir = function() {
return this.getVec2ByQuadrant(this.getDirQuadrant(this.getInputDir()));
};
e.prototype.getDirQuadrant = function(t) {
var e = null;
t.mag() > 0 && (e = Math.floor(this.getAngleByVec2(t) / this.anglePreDirQuadrant));
return e;
};
e.prototype.getAngleByVec2 = function(t) {
return 180 * -Math.atan2(t.y, t.x) / Math.PI + this.anglePreDirQuadrant / 2;
};
e.prototype.getVec2ByAngle = function(t) {
var e = new cc.Vec2(), i = (this.anglePreDirQuadrant / 2 - t) * (Math.PI / 180);
e.x = Math.cos(i);
e.y = Math.sin(i);
return e.normalizeSelf();
};
e.prototype.getVec2ByQuadrant = function(t) {
if (null != t) {
var e = t * this.anglePreDirQuadrant;
e += this.anglePreDirQuadrant / 2;
return this.getVec2ByAngle(e);
}
return cc.Vec2.ZERO;
};
e.prototype.sendMoveMessageToPlayer = function(t) {
var e = this.getInputQuadrantDir(), i = 4;
if (Math.abs(e.x) < Math.abs(e.y)) {
e.y > .3 && (i = 0);
e.y < -.3 && (i = 1);
}
if (Math.abs(e.x) > Math.abs(e.y)) {
e.x < -.3 && (i = 2);
e.x > .3 && (i = 3);
}
var o = this.getInputDir();
r.EventHelper.emit(r.EventHelper.PLAYER_ROTATE, {
dir: i,
pos: o,
dt: t
});
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .016) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.isTimeDelay(t) && this.sendMoveMessageToPlayer(t);
};
n([ c(cc.Integer) ], e.prototype, "anglePreDirQuadrant", void 0);
n([ c(cc.Node) ], e.prototype, "fixedPoint", void 0);
n([ c(cc.Node) ], e.prototype, "movePoint", void 0);
n([ c ], e.prototype, "movePointMoveRadius", void 0);
return n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"./EventHelper": "EventHelper"
} ],
Joystick: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a3868eVgi9Ewpbgxpufia3p", "Joystick");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Controller"), s = t("./EventHelper"), l = t("./Logic"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.anglePreDirQuadrant = 23;
e.fixedPoint = null;
e.movePoint = null;
e.movePointMoveRadius = 100;
e.stopCount = 0;
e.timeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
var t = this, e = this.node.getContentSize();
this.touchArea = new cc.Vec3(e.width, e.height);
this.fixedPointMoveCenterPos = this.touchArea.div(0, this.touchArea);
this.fixedPointMoveRadius = this.touchArea.x / 2 - this.movePointMoveRadius;
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
if (!r.default.isMouseMode() && -1 == t.touchID) {
var i = e.getLocation(), o = new cc.Vec3(i.x, i.y), a = t.clampPos(o, t.fixedPointMoveCenterPos, t.fixedPointMoveRadius);
t.movePointMoveCenterPos = a;
t.setFixedPointPos(a);
t.setMovePointPos(a);
t.touchID = e.getID();
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
if (!r.default.isMouseMode() && t.touchID == e.getID()) {
var i = e.getLocation(), o = new cc.Vec3(i.x, i.y), a = t.clampPos(o, t.movePointMoveCenterPos, t.movePointMoveRadius);
t.setMovePointPos(a);
}
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function() {
r.default.isMouseMode() || t.init();
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {
r.default.isMouseMode() || t.init();
}, this);
this.init();
};
e.prototype.init = function() {
this.touchID = -1;
this.joystickInputDir = new cc.Vec3();
this.setFixedPointPos(this.fixedPointMoveCenterPos);
this.setMovePointPos(this.fixedPointMoveCenterPos);
};
e.prototype.setFixedPointPos = function(t) {
this.fixedPoint.setPosition(this.node.convertToNodeSpaceAR(t));
};
e.prototype.getFixedPointPos = function() {
return this.fixedPoint.getPosition();
};
e.prototype.setMovePointPos = function(t) {
this.movePoint.setPosition(this.node.convertToNodeSpaceAR(t));
};
e.prototype.getMovePointPos = function() {
return this.movePoint.getPosition();
};
e.prototype.clampPos = function(t, e, i) {
var o = t.sub(e);
return o.mag() > i ? o.normalize().mul(i).add(e) : t;
};
e.prototype.getInputDir = function() {
var t = this.movePoint.getPosition().sub(this.fixedPoint.getPosition());
(isNaN(t.x) || isNaN(t.y)) && (t = cc.v2(0, 0));
t.mag() > 0 && t.normalizeSelf();
return t;
};
e.prototype.getInputQuadrantDir = function() {
return this.getVec2ByQuadrant(this.getDirQuadrant(this.getInputDir()));
};
e.prototype.getDirQuadrant = function(t) {
var e = null;
t.mag() > 0 && (e = Math.floor(this.getAngleByVec2(t) / this.anglePreDirQuadrant));
return e;
};
e.prototype.getAngleByVec2 = function(t) {
return 180 * -Math.atan2(t.y, t.x) / Math.PI + this.anglePreDirQuadrant / 2;
};
e.prototype.getVec2ByAngle = function(t) {
var e = new cc.Vec2(), i = (this.anglePreDirQuadrant / 2 - t) * (Math.PI / 180);
e.x = Math.cos(i);
e.y = Math.sin(i);
return e.normalizeSelf();
};
e.prototype.getVec2ByQuadrant = function(t) {
if (null != t) {
var e = t * this.anglePreDirQuadrant;
e += this.anglePreDirQuadrant / 2;
return this.getVec2ByAngle(e);
}
return cc.Vec2.ZERO;
};
e.prototype.sendMoveMessageToPlayer = function(t) {
if (!l.default.isGamePause) {
var e = this.getInputQuadrantDir(), i = 4;
if (Math.abs(e.x) < Math.abs(e.y)) {
e.y > .3 && (i = 0);
e.y < -.3 && (i = 1);
}
if (Math.abs(e.x) > Math.abs(e.y)) {
e.x < -.3 && (i = 2);
e.x > .3 && (i = 3);
}
var o = this.getInputDir();
o.equals(cc.Vec2.ZERO) ? this.stopCount++ : this.stopCount = 0;
this.stopCount < 2 && s.EventHelper.emit(s.EventHelper.PLAYER_MOVE, {
dir: i,
pos: o,
dt: t
});
}
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .016) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.isTimeDelay(t) && this.sendMoveMessageToPlayer(t);
};
n([ p(cc.Integer) ], e.prototype, "anglePreDirQuadrant", void 0);
n([ p(cc.Node) ], e.prototype, "fixedPoint", void 0);
n([ p(cc.Node) ], e.prototype, "movePoint", void 0);
n([ p ], e.prototype, "movePointMoveRadius", void 0);
return n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"./Controller": "Controller",
"./EventHelper": "EventHelper",
"./Logic": "Logic"
} ],
JumpingAbility: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "564dcom86FNkLRCoy3EfPyP", "JumpingAbility");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../ecs/component/MoveComponent"), s = t("../data/TriggerData"), l = t("../utils/AudioPlayer"), c = t("../utils/Utils"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isAcceleratedFall = !1;
e.currentJumpCount = 1;
e.maxJumpCount = 1;
e.lastLinearVelocityZ = 0;
e.lastZ = 0;
e.callbacks = new Map();
e.isJumpPressed = !1;
e.isAirPause = !1;
e.maxJumpHeight = 0;
e.maxFlyHeight = 0;
e.flySpeed = 0;
return e;
}
e.prototype.init = function(t, e, i, o) {
this.actor = t;
if (e && e > 0) {
this.currentJumpCount = e;
this.maxJumpCount = e;
}
o && this.callbacks.set(i, o);
};
e.prototype.jump = function(t, e, i, o) {
var a = this;
if (!this.isJumpPressed && !(this.isAcceleratedFall || this.currentJumpCount < 1)) {
o && this.callbacks.set(i, o);
var n = t;
if (e && e > 0) {
this.maxJumpHeight = e * r.MoveComponent.PIXELS_PER_UNIT + this.actor.entity.Transform.z;
var u = c.default.getDashSpeedByDistance(this.maxJumpHeight, this.actor.entity.Move.gravity);
n > u && (n = u);
}
this.currentJumpCount--;
this.isJumpPressed = !0;
this.isAirPause = !1;
l.default.play(l.default.DASH);
var p = c.default.getJumpTimeBySpeedDistance(e, n, this.actor.entity.Move.gravity);
this.unscheduleAllCallbacks();
this.scheduleOnce(function() {
a.actor.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY;
}, p);
this.actor.entity.Move.gravity = 0;
this.actor.entity.Move.linearVelocityZ = n;
this.callbacks.forEach(function(t) {
t(s.default.GROUP_JUMP, s.default.TYPE_JUMP_START);
});
this.actor.sc.isJumping = !0;
}
};
e.prototype.airPause = function(t, e, i, o) {
var a = this;
this.actor.entity.Move.gravity = 0;
this.actor.entity.Move.linearVelocityZ = t;
this.actor.sc.isJumping = !0;
this.isAirPause = !0;
o && this.callbacks.set(i, o);
this.unscheduleAllCallbacks();
this.scheduleOnce(function() {
a.actor.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY;
a.isAirPause = !1;
}, e);
};
e.prototype.acceleratedFall = function(t) {
this.isAcceleratedFall = !0;
var e = t > 0 ? t : 1;
this.actor.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY * e;
this.actor.entity.Move.linearVelocityZ > 0 && (this.actor.entity.Move.linearVelocityZ = 0);
};
e.prototype.cancel = function() {
this.isJumpPressed = !1;
this.isAcceleratedFall || (this.actor.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY);
};
e.prototype.fly = function(t, e) {
this.flySpeed = t;
this.actor.entity.Move.linearVelocityZ = t;
this.maxFlyHeight = e * r.MoveComponent.PIXELS_PER_UNIT;
this.actor.sc.isFlying = !0;
};
e.prototype.flyCancel = function(t) {
this.actor.sc.isFlying = !1;
this.acceleratedFall(t);
};
e.prototype.updateLogic = function() {
if (this.actor.entity.Move.linearVelocityZ <= 0 && this.lastLinearVelocityZ > 0 || this.maxJumpHeight > 0 && this.actor.entity.Transform.z > this.maxJumpHeight) {
this.callbacks.forEach(function(t) {
t(s.default.GROUP_JUMP, s.default.TYPE_JUMP_HIGHEST);
});
if (!this.isAirPause && !this.actor.sc.isFlying && !this.isAcceleratedFall) {
this.actor.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY;
this.actor.entity.Move.linearVelocityZ > 0 && (this.actor.entity.Move.linearVelocityZ = 0);
}
}
if (this.lastZ > this.actor.entity.Transform.base && this.actor.entity.Transform.z <= this.actor.entity.Transform.base) {
this.callbacks.forEach(function(t) {
t(s.default.GROUP_JUMP, s.default.TYPE_JUMP_END);
});
this.isAcceleratedFall = !1;
this.actor.sc.isJumping = !1;
this.currentJumpCount = this.maxJumpCount;
this.actor.entity.Move.gravity = r.MoveComponent.DEFAULT_GRAVITY;
this.isJumpPressed = !1;
this.isAirPause = !1;
}
this.lastLinearVelocityZ = this.actor.entity.Move.linearVelocityZ;
this.lastZ = this.actor.entity.Transform.z;
this.actor.sc.isFlying && (this.actor.entity.Move.linearVelocityZ = this.actor.entity.Transform.z > this.maxFlyHeight ? 0 : this.flySpeed);
};
e.prototype.removeCallback = function(t) {
this.callbacks.has(t) && this.callbacks.delete(t);
};
e.CALLBACK_INIT = 0;
e.CALLBACK_JUMP = 1;
e.CALLBACK_AIR_PAUSE = 2;
return n([ p ], e);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"../data/TriggerData": "TriggerData",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils",
"./../ecs/component/MoveComponent": "MoveComponent"
} ],
KeyboardController: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b57f7ePcl9JD6/oAh/+vpUg", "KeyboardController");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../ui/dialog/CellphoneDialog"), s = t("./Controller"), l = t("./EventHelper"), c = t("./Logic"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.stopCount = 0;
e.isUp = !1;
e.isDown = !1;
e.isLeft = !1;
e.isRight = !1;
e.isA = !1;
e.isB = !1;
e.isD = !1;
e.isE = !1;
e.isR = !1;
e.isF = !1;
e.isJ = !1;
e.isLongPress = !1;
e.touchStart = !1;
e.timeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);
};
e.prototype.start = function() {};
e.prototype.onKeyDown = function(t) {
var e = this;
switch (t.keyCode) {
case cc.macro.KEY.w:
this.isUp = !0;
break;

case cc.macro.KEY.s:
this.isDown = !0;
break;

case cc.macro.KEY.a:
this.isLeft = !0;
break;

case cc.macro.KEY.d:
this.isRight = !0;
break;

case cc.macro.KEY.i:
this.openInventory();
break;

case cc.macro.KEY.u:
this.openCellphone();
break;

case cc.macro.KEY.t:
r.default.changeFlashLight();
break;

case cc.macro.KEY.j:
this.isA = !0;
break;

case cc.macro.KEY.space:
s.default.isMouseMode ? this.isJ = !0 : this.isB = !0;
break;

case cc.macro.KEY.shift:
this.isD = !0;
break;

case cc.macro.KEY.k:
this.isJ = !0;
break;

case cc.macro.KEY.e:
this.isE = !0;
this.touchStart = !0;
this.scheduleOnce(function() {
if (e.touchStart) {
e.isLongPress = !0;
e.trigger(!0);
}
}, .3);
break;

case cc.macro.KEY.r:
this.isR = !0;
break;

case cc.macro.KEY.f:
this.isF = !0;
break;

case cc.macro.KEY.num1:
this.useItem(0);
break;

case cc.macro.KEY.num2:
this.useItem(1);
break;

case cc.macro.KEY.num3:
this.useItem(2);
break;

case cc.macro.KEY.num4:
this.useItem(3);
break;

case cc.macro.KEY.num5:
this.useItem(4);
break;

case cc.macro.KEY.num6:
this.useItem(5);
break;

case 49:
this.useItem(0);
c.default.isGamePause && l.EventHelper.emit(l.EventHelper.HUD_DIALOGUE_BUTTON, {
index: 0
});
break;

case 50:
this.useItem(1);
c.default.isGamePause && l.EventHelper.emit(l.EventHelper.HUD_DIALOGUE_BUTTON, {
index: 1
});
break;

case 51:
this.useItem(2);
c.default.isGamePause && l.EventHelper.emit(l.EventHelper.HUD_DIALOGUE_BUTTON, {
index: 2
});
break;

case 52:
this.useItem(3);
c.default.isGamePause && l.EventHelper.emit(l.EventHelper.HUD_DIALOGUE_BUTTON, {
index: 3
});
break;

case 53:
this.useItem(4);
break;

case 54:
this.useItem(5);
break;

case cc.macro.KEY.escape:
l.EventHelper.emit(l.EventHelper.HUD_CANCEL_OR_PAUSE);
c.default.isGamePause && l.EventHelper.emit(l.EventHelper.HUD_DIALOGUE_SKIP);
break;

case cc.macro.KEY.m:
l.EventHelper.emit(l.EventHelper.OPEN_MINIMAP);
}
};
e.prototype.trigger = function(t) {
c.default.isGamePause || l.EventHelper.emit(l.EventHelper.PLAYER_TRIGGER, {
isLongPress: t
});
};
e.prototype.openInventory = function() {
c.default.isGamePause || l.EventHelper.emit(l.EventHelper.HUD_INVENTORY_SHOW);
};
e.prototype.openCellphone = function() {
c.default.isGamePause || l.EventHelper.emit(l.EventHelper.HUD_CELLPHONE_SHOW);
};
e.prototype.useItem = function(t) {
c.default.isGamePause || l.EventHelper.emit(l.EventHelper.USEITEM_KEYBOARD, {
index: t
});
};
e.prototype.onKeyUp = function(t) {
switch (t.keyCode) {
case cc.macro.KEY.w:
this.isUp = !1;
break;

case cc.macro.KEY.s:
this.isDown = !1;
break;

case cc.macro.KEY.a:
this.isLeft = !1;
break;

case cc.macro.KEY.d:
this.isRight = !1;
break;

case cc.macro.KEY.j:
this.isA = !1;
break;

case cc.macro.KEY.space:
if (s.default.isMouseMode) {
this.isJ = !1;
l.EventHelper.emit(l.EventHelper.PLAYER_JUMP_CANCEL);
} else {
this.isB = !1;
l.EventHelper.emit(l.EventHelper.PLAYER_REMOTEATTACK_CANCEL);
}
c.default.isGamePause && l.EventHelper.emit(l.EventHelper.HUD_DIALOGUE_SKIP);
break;

case cc.macro.KEY.shift:
this.isD = !1;
break;

case cc.macro.KEY.k:
this.isJ = !1;
l.EventHelper.emit(l.EventHelper.PLAYER_JUMP_CANCEL);
break;

case cc.macro.KEY.e:
this.isE = !1;
this.isLongPress || this.trigger();
this.touchStart = !1;
this.isLongPress = !1;
break;

case cc.macro.KEY.r:
this.isR = !1;
break;

case cc.macro.KEY.f:
this.isF = !1;
}
};
e.prototype.update = function(t) {
this.isTimeDelay(t) && this.sendMoveMessageToPlayer(t);
};
e.prototype.sendMoveMessageToPlayer = function(t) {
var e = cc.v3(0, 0);
this.isUp && e.addSelf(cc.v3(0, .9));
this.isDown && e.addSelf(cc.v3(0, -.9));
this.isLeft && e.addSelf(cc.v3(-.9, 0));
this.isRight && e.addSelf(cc.v3(.9, 0));
e.mag() > 0 && e.normalizeSelf();
var i = 4;
if (Math.abs(e.x) < Math.abs(e.y)) {
e.y > .3 && (i = 0);
e.y < -.3 && (i = 1);
}
if (Math.abs(e.x) > Math.abs(e.y)) {
e.x < -.3 && (i = 2);
e.x > .3 && (i = 3);
}
e.equals(cc.Vec3.ZERO) ? this.stopCount++ : this.stopCount = 0;
if (c.default.isGamePause) {
this.isA && l.EventHelper.emit(l.EventHelper.KEYBOARD_INTERACT);
this.stopCount < 2 && l.EventHelper.emit(l.EventHelper.KEYBOARD_MOVE, {
dir: i,
pos: e,
dt: t
});
} else {
this.stopCount < 2 && l.EventHelper.emit(l.EventHelper.PLAYER_MOVE, {
dir: i,
pos: e,
dt: t
});
this.isA && l.EventHelper.emit(l.EventHelper.PLAYER_ATTACK);
this.isB && l.EventHelper.emit(l.EventHelper.PLAYER_REMOTEATTACK);
if (this.isR) {
this.isR = !1;
l.EventHelper.emit(l.EventHelper.PLAYER_SKILL);
}
if (this.isF) {
this.isF = !1;
l.EventHelper.emit(l.EventHelper.PLAYER_SKILL1);
}
this.isJ && l.EventHelper.emit(l.EventHelper.PLAYER_JUMP);
this.isD && l.EventHelper.emit(l.EventHelper.PLAYER_DASH);
}
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .03) {
this.timeDelay = 0;
return !0;
}
return !1;
};
return n([ p ], e);
}(cc.Component));
i.default = h;
cc._RF.pop();
}, {
"../ui/dialog/CellphoneDialog": "CellphoneDialog",
"./Controller": "Controller",
"./EventHelper": "EventHelper",
"./Logic": "Logic"
} ],
KrakenSwingHand: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "15ea4rtPQxD8pcJLX7yPozV", "KrakenSwingHand");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../data/FromData"), l = t("./Kraken"), c = t("../utils/ActorUtils"), u = t("../base/BaseColliderComponent"), p = cc._decorator, h = p.ccclass, d = p.property, f = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.damage = 8;
e.isShow = !1;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.anim = this.node.parent.getComponent(cc.Animation);
this.entity && this.entity.Move && (this.entity.Move.isStatic = !0);
};
e.prototype.swing = function() {
this.anim.play();
};
e.prototype.start = function() {
this.isShow = !1;
};
e.prototype.onColliderEnter = function(t) {
var e = c.default.getEnemyCollisionTarget(t);
if (e && this.isShow && this.node.active) {
this.node.stopAllActions();
var i = new r.default();
i.physicalDamage = this.damage;
e.takeDamage(i, s.default.getClone(this.actorName(), "boss001"), this.node.parent.getComponent(l.default));
}
};
e.prototype.actorName = function() {
return "海妖";
};
n([ d ], e.prototype, "damage", void 0);
return n([ h ], e);
}(u.default);
i.default = f;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../utils/ActorUtils": "ActorUtils",
"./Kraken": "Kraken"
} ],
Kraken: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cbbb1U+Yy5Jtb8PV4hyvH/c", "Kraken");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Shooter"), s = t("../logic/EventHelper"), l = t("./KrakenSwingHand"), c = t("../logic/Dungeon"), u = t("../logic/Logic"), p = t("./Boss"), h = t("../utils/NextStep"), d = t("../utils/AudioPlayer"), f = t("../data/FromData"), g = t("../logic/Achievement"), y = t("../utils/IndexZ"), m = t("../item/Item"), v = cc._decorator, E = v.ccclass, _ = v.property, T = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.swingHand = null;
e.timeDelay = 0;
e.remoteSkill = new h.default();
e.handSkill = new h.default();
e.nearHandSkill = new h.default();
e.hands = [];
e.actionTimeDelay = 0;
return e;
}
e.prototype.init = function() {
throw new Error("Method not implemented.");
};
e.prototype.onLoad = function() {
this.sc.isDied = !1;
this.sc.isShow = !1;
this.shooter = this.getComponentInChildren(r.default);
this.shooter.from.valueCopy(f.default.getClone(this.actorName(), "boss001"));
this.anim = this.getComponent(cc.Animation);
};
e.prototype.ShowFinish = function() {
this.anim.play("KrakenHeadIdle");
this.sc.isShow = !0;
var t = c.default.getPosInMap(cc.v3(c.default.WIDTH_SIZE, -4)), e = c.default.getPosInMap(cc.v3(-2, -4)), i = c.default.getPosInMap(cc.v3(c.default.WIDTH_SIZE, c.default.HEIGHT_SIZE)), o = c.default.getPosInMap(cc.v3(-2, c.default.HEIGHT_SIZE));
this.hand01 = this.addHand(t, !0, !0);
this.hand02 = this.addHand(e, !1, !0);
this.hand03 = this.addHand(i, !0, !1);
this.hand04 = this.addHand(o, !1, !1);
};
e.prototype.addHand = function(t, e, i) {
var o = cc.instantiate(this.swingHand);
this.dungeon.node.addChild(o);
o.setPosition(t);
o.scaleX = e ? -80 : 80;
o.scaleY = i ? -80 : 80;
o.zIndex = y.default.OVERHEAD;
var a = o.getComponentInChildren(l.default);
this.scheduleOnce(function() {
a.isShow = !0;
}, 2);
this.hands.push(a);
return a;
};
e.prototype.updatePlayerPos = function() {
var t = c.default.getPosInMap(cc.v3(c.default.WIDTH_SIZE / 2, c.default.HEIGHT_SIZE + 2));
this.entity.Transform.position = t;
this.node.setPosition(t);
};
e.prototype.changeZIndex = function() {
this.node.zIndex = y.default.KRAKENBODY;
};
e.prototype.start = function() {
t.prototype.start.call(this);
};
e.prototype.takeDamage = function(t) {
var e = this;
if (this.sc.isDied || !this.sc.isShow) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
var i = [ d.default.MONSTER_HIT, d.default.MONSTER_HIT1, d.default.MONSTER_HIT2 ];
d.default.play(i[u.default.getRandomNum(0, 2)]);
this.nearHandSkill.next(function() {
e.dungeon.player.pos.x > c.default.WIDTH_SIZE / 2 ? e.hand03 && e.hand03.swing() : e.hand04 && e.hand04.swing();
}, 5);
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
g.default.addMonsterKillAchievement(this.data.resName);
this.sc.isDied = !0;
this.changeZIndex();
for (var e = 0, i = this.hands; e < i.length; e++) {
var o = i[e];
o.isShow = !1;
o.node.active = !1;
}
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
this.getLoot();
}
};
e.prototype.getLoot = function(t) {
if (this.dungeon) {
var e = u.default.mapManager.getRandom4Save(this.seed), i = cc.v3(Math.floor(c.default.WIDTH_SIZE / 2), Math.floor(c.default.HEIGHT_SIZE / 2)), o = c.default.getPosInMap(i);
s.EventHelper.emit(s.EventHelper.DUNGEON_ADD_COIN, {
pos: o,
count: 19
});
t || s.EventHelper.emit(s.EventHelper.DUNGEON_ADD_OILGOLD, {
pos: this.entity.Transform.position,
count: 100
});
if (u.default.getHalfChance() && t || !t) {
s.EventHelper.emit(s.EventHelper.DUNGEON_ADD_ITEM, {
pos: this.entity.Transform.position,
res: m.default.HEART
});
s.EventHelper.emit(s.EventHelper.DUNGEON_ADD_ITEM, {
pos: this.entity.Transform.position,
res: m.default.DREAM
});
}
this.dungeon.addEquipment(u.default.getRandomEquipType(e), c.default.getPosInMap(i), null, 4);
}
};
e.prototype.showBoss = function() {
this.entity.NodeRender.node = this.node;
this.changeZIndex();
this.entity.Move.damping = 6;
if (this.healthBar) {
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.healthBar.node.active = !this.sc.isDied;
}
this.anim || (this.anim = this.getComponent(cc.Animation));
this.anim.play("KrakenHeadShow");
};
e.prototype.isActionTimeDelay = function(t) {
this.actionTimeDelay += t;
if (this.actionTimeDelay > .2) {
this.actionTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t) {
this.isActionTimeDelay(t) && this.bossAction();
this.data.currentHealth < 1 && this.killed();
this.label && (this.label.string = "" + this.node.zIndex);
this.healthBar.node.active = !this.sc.isDied;
};
e.prototype.bossAction = function() {
var t = this;
if (!this.sc.isDied && this.sc.isShow && this.dungeon) {
this.hand01 && (this.hand01.node.parent.y = u.default.lerp(this.hand01.node.y, this.dungeon.player.node.y, .1));
this.hand02 && (this.hand02.node.parent.y = u.default.lerp(this.hand02.node.y, this.dungeon.player.node.y, .1));
this.shooter && this.remoteSkill.next(function() {
var e = t.entity.Transform.position.clone().add(t.shooter.node.position), i = t.dungeon.player.getCenterPosition().sub(e);
if (!i.equals(cc.Vec3.ZERO)) {
t.shooter.setHv(cc.v2(i).normalize());
t.shooter.dungeon = t.dungeon;
t.shooter.actor = t;
t.shooter.ignoreEmptyWall = !0;
t.shooter.data.bulletType = "bullet004";
t.shooter.fireBullet();
t.shooter.fireBullet(30);
t.shooter.fireBullet(-30);
}
if (t.data.currentHealth < t.data.Common.MaxHealth / 2) {
t.dungeon.addFallStone(t.dungeon.player.node.position, !0);
t.shooter.fireBullet(30);
t.shooter.fireBullet(-30);
t.shooter.fireBullet(15);
t.shooter.fireBullet(-15);
}
}, 3);
this.handSkill.next(function() {
t.dungeon.player.pos.x > c.default.WIDTH_SIZE / 2 ? t.hand01 && t.hand01.swing() : t.hand02 && t.hand02.swing();
}, 10);
}
};
e.prototype.actorName = function() {
return "海妖";
};
n([ _(cc.Label) ], e.prototype, "label", void 0);
n([ _(cc.Prefab) ], e.prototype, "swingHand", void 0);
return n([ E ], e);
}(p.default);
i.default = T;
cc._RF.pop();
}, {
"../data/FromData": "FromData",
"../item/Item": "Item",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/NextStep": "NextStep",
"./Boss": "Boss",
"./KrakenSwingHand": "KrakenSwingHand"
} ],
Ladder: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4c910QJu91E2qesuKf+AEbE", "Ladder");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../collider/CCollider"), s = t("../ecs/component/MoveComponent"), l = t("../logic/Dungeon"), c = t("./Building"), u = cc._decorator, p = u.ccclass, h = u.property, d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
return e;
}
e.prototype.onLoad = function() {
this.collider = this.getComponent(r.default);
};
e.prototype.init = function(t) {
for (var e = (parseInt(t[1]) + 1) * l.default.TILE_SIZE / 2, i = 0, o = this.ccolliders; i < o.length; i++) o[i].zHeight = e;
this.sprite.node.height = e / 4 + 4;
};
e.prototype.onColliderExit = function(t) {
t.tag != r.default.TAG.PLAYER && t.tag != r.default.TAG.NONPLAYER && t.tag != r.default.TAG.GOODNONPLAYER || (t.entity.Move.gravity = s.MoveComponent.DEFAULT_GRAVITY);
};
e.prototype.onColliderStay = function(t) {
if (t.tag == r.default.TAG.PLAYER || t.tag == r.default.TAG.NONPLAYER || t.tag == r.default.TAG.GOODNONPLAYER) if (t.entity.Move.linearVelocity.y > 0) {
t.entity.Move.gravity = s.MoveComponent.DEFAULT_GRAVITY;
t.entity.Move.linearVelocity.y = 0;
t.entity.Move.linearVelocityZ < 5 && (t.entity.Move.linearVelocityZ = 5);
} else t.entity.Move.gravity = s.MoveComponent.DEFAULT_GRAVITY / 5;
};
n([ h(cc.Sprite) ], e.prototype, "sprite", void 0);
return n([ p ], e);
}(c.default);
i.default = d;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../ecs/component/MoveComponent": "MoveComponent",
"../logic/Dungeon": "Dungeon",
"./Building": "Building"
} ],
Laser: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "5c9a5lk5itEM7gD+Oy8SkoT", "Laser");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/NonPlayer"), s = t("../logic/Player"), l = t("../data/DamageData"), c = t("../logic/Logic"), u = t("../boss/Boss"), p = t("../data/BulletData"), h = t("../manager/StatusManager"), d = t("../utils/AudioPlayer"), f = t("../data/FromData"), g = t("../base/Actor"), y = t("../building/InteractBuilding"), m = t("../building/EnergyShield"), v = t("../utils/Utils"), E = t("../logic/MeleeShadowWeapon"), _ = t("../logic/Shield"), T = t("../collider/CCollider"), D = t("../base/BaseColliderComponent"), S = t("../ecs/system/GameWorldSystem"), O = t("../logic/MeleeCollideHelper"), A = t("../effect/ShadowOfSight"), R = t("../manager/LightManager"), C = t("../building/NormalBuilding"), P = cc._decorator, L = P.ccclass, b = P.property, I = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.root = null;
e.shadow = null;
e.data = new p.default();
e.dir = 0;
e.tagetPos = cc.v3(0, 0);
e.hv = cc.v2(0, 0);
e.isFromPlayer = !1;
e.isReserved = !1;
e.isStop = !1;
e.targetMap = new Map();
e.sensorTargetMap = new Map();
e.ignoreMap = new Map();
e.startPos = cc.v2(0, 0);
e.angleOffset = 0;
e.lights = [];
e.timeDelay = 0;
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.initSpriteNode();
for (var e = 0, i = [ T.default.TAG.BOSS, T.default.TAG.BUILDING, T.default.TAG.ENERGY_SHIELD, T.default.TAG.WALL, T.default.TAG.WALL_TOP ]; e < i.length; e++) {
var o = i[e];
this.targetMap.set(o, !0);
}
for (var a = 0, n = [ T.default.TAG.ENERGY_SHIELD ]; a < n.length; a++) {
o = n[a];
this.sensorTargetMap.set(o, !0);
}
this.lights = this.getComponentsInChildren(A.default);
R.default.registerLight(this.lights, this.node);
};
e.prototype.initIgnoreMap = function(t) {
if (!t) return !1;
this.ignoreMap.clear();
var e = t.node.getComponentsInChildren(T.default);
if (e && e.length > 0) for (var i = 0, o = e; i < o.length; i++) {
var a = o[i];
this.ignoreMap.set(a.id, !0);
}
return !0;
};
e.prototype.initSpriteNode = function() {
if (!this.sprite) {
this.sprite = this.root.getChildByName("sprite");
this.lineNode = this.sprite.getChildByName("line");
this.lightSprite = this.sprite.getChildByName("light").getComponent(cc.Sprite);
this.lightCenterSprite = this.sprite.getChildByName("light").getChildByName("center").getComponent(cc.Sprite);
this.headSprite = this.sprite.getChildByName("head").getComponent(cc.Sprite);
this.graphics = this.root.getComponent(cc.Graphics);
}
};
e.prototype.onEnable = function() {
this.tagetPos = cc.v3(0, 0);
this.entity.NodeRender.node = this.node;
this.entity.Move.linearVelocity = cc.v2(0, 0);
this.initSpriteNode();
this.isReserved = !1;
R.default.unRegisterLight(this.lights);
R.default.registerLight(this.lights, this.node);
};
e.prototype.update = function(t) {
if (c.default.isGamePause) this.entity.Move.linearVelocity = cc.v2(0, 0); else {
this.updatePos();
this.checkTimeDelay += t;
if (this.checkTimeDelay > .15) {
this.updateLaser();
this.checkTimeDelay = 0;
}
var e = this.root.y - this.entity.Transform.base;
e < 0 && (e = 0);
var i = 1 - e / 64;
this.shadow.scaleY = i < .5 ? .5 : i;
}
};
e.prototype.changeBullet = function(t, e) {
this.entity.NodeRender.node = this.node;
this.entity.NodeRender.root = this.root;
this.entity.Move.gravity = 0;
this.data = t;
this.node.scale = t.size > 0 ? t.size : 1;
this.root.scale = 1;
this.node.stopAllActions();
this.initSpriteNode();
this.initIgnoreMap(this.shooter.getParentNode().getComponent(g.default));
if (this.shooter && this.shooter.actor) {
this.entity.Transform.base = this.shooter.actor.entity.Transform.base;
this.entity.Transform.z = e / this.node.scale;
}
};
e.prototype.fire = function(t, e) {
var i = this;
this.hv = t;
this.angleOffset = e;
this.node.stopAllActions();
this.unscheduleAllCallbacks();
this.rotateCollider(cc.v2(this.hv.x, this.hv.y));
this.isStop = !1;
this.data.lifeTime > 0 ? this.scheduleOnce(function() {
i.stopLaser();
}, this.data.lifeTime) : this.scheduleOnce(function() {
i.stopLaser();
}, 5);
this.lightSprite.node.color = cc.color(255, 255, 255).fromHEX(this.data.lightColor);
cc.tween(this.lightSprite.node).repeatForever(cc.tween().delay(.05).call(function() {
i.lightSprite.spriteFrame = i.getSpriteFrameByName("laser000light001");
i.lightCenterSprite.spriteFrame = i.getSpriteFrameByName("laser000light001");
}).delay(.05).call(function() {
i.lightSprite.spriteFrame = i.getSpriteFrameByName("laser000light002");
i.lightCenterSprite.spriteFrame = i.getSpriteFrameByName("laser000light002");
}).delay(.05).call(function() {
i.lightSprite.spriteFrame = i.getSpriteFrameByName("laser000light003");
i.lightCenterSprite.spriteFrame = i.getSpriteFrameByName("laser000light003");
})).start();
cc.tween(this.sprite).repeatForever(cc.tween(this.sprite).to(.1, {
scaleY: .9
}).to(.1, {
scaleY: 1.1
})).start();
if (this.isFromPlayer) {
this.targetMap.has(T.default.TAG.PLAYER) && this.targetMap.delete(T.default.TAG.PLAYER);
this.targetMap.has(T.default.TAG.GOODNONPLAYER) && this.targetMap.delete(T.default.TAG.GOODNONPLAYER);
this.sensorTargetMap.has(T.default.TAG.ENERGY_SHIELD) && this.sensorTargetMap.delete(T.default.TAG.ENERGY_SHIELD);
this.sensorTargetMap.has(T.default.TAG.PLAYER_HIT) && this.sensorTargetMap.delete(T.default.TAG.PLAYER_HIT);
this.targetMap.set(T.default.TAG.NONPLAYER, !0);
this.targetMap.set(T.default.TAG.BOSS, !0);
} else {
this.targetMap.has(T.default.TAG.NONPLAYER) && this.targetMap.delete(T.default.TAG.PLAYER);
this.targetMap.has(T.default.TAG.BOSS) && this.targetMap.delete(T.default.TAG.BOSS);
this.targetMap.set(T.default.TAG.PLAYER, !0);
this.targetMap.set(T.default.TAG.GOODNONPLAYER, !0);
this.sensorTargetMap.set(T.default.TAG.ENERGY_SHIELD, !0);
this.sensorTargetMap.set(T.default.TAG.PLAYER_HIT, !0);
}
this.updatePos();
this.updateLaser();
d.default.play(d.default.LASER);
};
e.prototype.updatePos = function() {
if (this.shooter && this.shooter.actor) {
var t = this.shooter.getFireBasePos(this.shooter.defaultPos), e = t.z, i = cc.v3(t.x, t.y);
this.startPos = cc.v2(this.dungeon.node.convertToWorldSpaceAR(i));
this.entity.Transform.position = i;
this.shadow.y = this.entity.Transform.base;
this.node.position = i;
this.hv = cc.v2(this.shooter.Hv).rotateSelf(this.angleOffset * Math.PI / 180);
this.rotateCollider(cc.v2(this.hv.x, this.hv.y));
this.entity.Transform.base = this.shooter.actor.entity.Transform.base;
this.entity.Transform.z = e / this.node.scale;
}
};
e.prototype.changeAngle = function(t) {
this.root.angle = t;
this.shadow.angle = t;
};
e.prototype.updateLaser = function() {
if (this.shooter && !this.isStop) {
var t = this.shadow.convertToWorldSpaceAR(cc.v2(this.data.laserRange > 0 ? this.data.laserRange : 2e3, 0)), e = S.default.colliderSystem.nearestRayCast(this.startPos, t, this.shooter.actor.entity.Transform.z, 32, this.targetMap, this.sensorTargetMap, this.ignoreMap);
e && (t = e.point);
var i = c.default.getDistance(this.startPos, t);
i <= 0 && (i = 0);
var o = i;
this.lineNode.width = o / this.node.scaleY;
this.lightSprite.node.setPosition(this.lineNode.width, 0);
this.shadow.width = o / this.node.scaleY;
this.graphics.clear();
var a = cc.color(255, 255, 255).fromHEX(this.data.lightColor);
this.graphics.strokeColor = a;
this.graphics.lineWidth = 32;
this.graphics.moveTo(0, 0);
this.graphics.lineTo(this.lightSprite.node.position.x + 32, 0);
this.graphics.stroke();
this.graphics.lineWidth = 64;
this.graphics.moveTo(0, 0);
this.graphics.lineTo(1, 0);
this.graphics.stroke();
this.graphics.moveTo(this.lightSprite.node.position.x + 32, 0);
this.graphics.lineTo(this.lightSprite.node.position.x + 32 + 1, 0);
this.graphics.stroke();
e && this.attacking(e.collider.node, e.collider.tag);
this.lights.length > 0 && this.lights[0].setCustomColliderStyle(!0, this.lineNode.width, 64, 0, this.lineNode.width / 2, 0);
}
};
e.prototype.stopLaser = function() {
var t = this;
this.isStop = !0;
cc.tween(this.root).to(.2, {
scaleY: 0
}).to(.1, {
scaleX: 0
}).call(function() {
R.default.unRegisterLight(t.lights);
t.shooter.addDestroyBullet(t.node, !0);
}).start();
};
e.prototype.getSpriteFrameByName = function(t, e, i) {
var o = c.default.spriteFrameRes(t + e);
o || (o = c.default.spriteFrameRes(i ? t + "anim000" : t));
return o;
};
e.prototype.attacking = function(t, e) {
if (t) {
var i = new l.default(), o = !1;
i.valueCopy(this.data.damage);
i.isRemote = !0;
if (e == T.default.TAG.NONPLAYER || e == T.default.TAG.GOODNONPLAYER) {
var a = t.getComponent(r.default);
a && !a.sc.isDied && (o = a.takeDamage(i)) && this.addTargetAllStatus(a, new f.default());
} else if (e == T.default.TAG.PLAYER) {
var n = t.getComponent(s.default);
if (n && !n.sc.isDied) {
var c = !1;
n.shield.Status == _.default.STATUS_PARRY && 1 == n.shield.data.isReflect && (c = this.revserseBullet(n.node.convertToWorldSpaceAR(cc.Vec2.ZERO)));
c || (o = n.takeDamage(i, this.data.from)) && this.addTargetAllStatus(n, this.data.from);
}
} else if (e == T.default.TAG.BOSS) {
var p = t.getComponent(u.default);
p && !p.sc.isDied && (o = p.takeDamage(i)) && this.addTargetAllStatus(p, new f.default());
} else if (e == T.default.TAG.PLAYER_HIT) {
var h = t.getComponent(O.default), d = void 0;
h && (d = h.meleeWeapon);
var g = void 0;
d || (g = t.getComponent(E.default)) && (d = g.meleeWeapon);
if (d && d.IsAttacking && !this.isFromPlayer) {
c = !1;
if (d.IsReflect) {
var v = g ? g.meleeWeapon.node : d.node;
c = this.revserseBullet(v.convertToWorldSpaceAR(cc.Vec2.ZERO));
}
}
} else if (e == T.default.TAG.BUILDING || e == T.default.TAG.WALL || e == T.default.TAG.WALL_TOP) {
var D = t.getComponent(y.default);
if (1 == this.data.canBreakBuilding && D) {
o = !0;
D.takeDamage(i);
}
if (!o) {
var S = t.getComponent(C.default);
if (1 == this.data.canBreakBuilding && S) {
o = !0;
S.takeDamage(i);
}
}
} else if (!this.isFromPlayer && e == T.default.TAG.ENERGY_SHIELD) {
var A = t.getComponent(m.default);
A && A.isValid && (o = A.takeDamage(i));
}
}
};
e.prototype.revserseBullet = function() {
if (this.isReserved) {
this.isReserved = !0;
return !1;
}
if (1 != this.data.isLaser) {
var t = -180 + c.default.getRandomNum(0, 10) - 20;
this.changeAngle(this.root.angle + t);
this.isFromPlayer = !0;
this.data.isTracking = 0;
return !0;
}
return !1;
};
e.prototype.rotateCollider = function(t) {
t.equals(cc.Vec2.ZERO) || 1 != this.data.fixedRotation && this.changeAngle(v.default.getRotateAngle(t, !1));
};
e.prototype.addTargetAllStatus = function(t, e) {
this.addTargetStatus(this.data.damage.iceRate, t, h.default.FROZEN, e);
this.addTargetStatus(this.data.damage.fireRate, t, h.default.BURNING, e);
this.addTargetStatus(this.data.damage.lighteningRate, t, h.default.DIZZ, e);
this.addTargetStatus(this.data.damage.toxicRate, t, h.default.TOXICOSIS, e);
this.addTargetStatus(this.data.damage.curseRate, t, h.default.CURSING, e);
this.addTargetStatus(this.data.damage.realRate, t, h.default.BLEEDING, e);
this.addTargetStatus(this.data.statusRate, t, this.data.statusType, e);
};
e.prototype.addTargetStatus = function(t, e, i, o) {
c.default.getRandomNum(0, 100) < t && e.addStatus(i, o);
};
n([ b(cc.Node) ], e.prototype, "root", void 0);
n([ b(cc.Node) ], e.prototype, "shadow", void 0);
return n([ L ], e);
}(D.default);
i.default = I;
cc._RF.pop();
}, {
"../base/Actor": "Actor",
"../base/BaseColliderComponent": "BaseColliderComponent",
"../boss/Boss": "Boss",
"../building/EnergyShield": "EnergyShield",
"../building/InteractBuilding": "InteractBuilding",
"../building/NormalBuilding": "NormalBuilding",
"../collider/CCollider": "CCollider",
"../data/BulletData": "BulletData",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../ecs/system/GameWorldSystem": "GameWorldSystem",
"../effect/ShadowOfSight": "ShadowOfSight",
"../logic/Logic": "Logic",
"../logic/MeleeCollideHelper": "MeleeCollideHelper",
"../logic/MeleeShadowWeapon": "MeleeShadowWeapon",
"../logic/NonPlayer": "NonPlayer",
"../logic/Player": "Player",
"../logic/Shield": "Shield",
"../manager/LightManager": "LightManager",
"../manager/StatusManager": "StatusManager",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils"
} ],
LevelData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "58686Q/aZlPRJziOF8GmsMo", "LevelData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("./EquipItemMapData"), n = t("./ExitData"), r = function() {
function t() {
this.name = "";
this.index = 0;
this.chapter = 0;
this.width = 0;
this.height = 0;
this.seed = 0;
this.roomWidth = 0;
this.roomHeight = 0;
this.floorRes = "";
this.floorRes1 = "";
this.floorRes2 = "";
this.floorRes3 = "";
this.floorRes4 = "";
this.floorRes5 = "";
this.floorRes6 = "";
this.floorRes7 = "";
this.floorRes8 = "";
this.floorRes9 = "";
this.wallRes0 = "";
this.wallRes1 = "";
this.wallRes2 = "";
this.wallRes3 = "";
this.wallRes4 = "";
this.wallRes5 = "";
this.wallRes6 = "";
this.wallRes7 = "";
this.wallRes8 = "";
this.wallRes9 = "";
this.wallResOther0 = "";
this.wallResOther1 = "";
this.wallResOther2 = "";
this.wallResOther3 = "";
this.wallResOther4 = "";
this.wallResOther5 = "";
this.wallResOther6 = "";
this.wallResOther7 = "";
this.wallResOther8 = "";
this.wallResOther9 = "";
this.equipitems = "";
this.needRandomDecorate = !1;
this.minimapOnlyCurrentRoom = !1;
this.isOutside = !1;
this.map = [];
this.floormap = [];
this.roomTypes = [];
this.shadowMap = [];
this.outSideMap = [];
this.exits = "";
}
t.prototype.getWallRes = function(t, e) {
switch (t) {
case 0:
return e ? this.wallResOther0 : this.wallRes0;

case 1:
return e ? this.wallResOther1 : this.wallRes1;

case 2:
return e ? this.wallResOther2 : this.wallRes2;

case 3:
return e ? this.wallResOther3 : this.wallRes3;

case 4:
return e ? this.wallResOther4 : this.wallRes4;

case 5:
return e ? this.wallResOther5 : this.wallRes5;

case 6:
return e ? this.wallResOther6 : this.wallRes6;

case 7:
return e ? this.wallResOther7 : this.wallRes7;

case 8:
return e ? this.wallResOther8 : this.wallRes8;

case 9:
return e ? this.wallResOther9 : this.wallRes9;
}
};
t.prototype.getFloorRes = function(t) {
switch (t) {
case 0:
return this.floorRes;

case 1:
return this.floorRes1;

case 2:
return this.floorRes2;

case 3:
return this.floorRes3;

case 4:
return this.floorRes4;

case 5:
return this.floorRes5;

case 6:
return this.floorRes6;

case 7:
return this.floorRes7;

case 8:
return this.floorRes8;

case 9:
return this.floorRes9;
}
};
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t);
this.map = t.map;
this.floormap = t.floormap;
this.roomTypes = t.roomTypes;
this.shadowMap = t.shadowMap;
this.outSideMap = t.outSideMap;
this.lights = t.lights;
}
};
t.prototype.getRoomMap = function(t, e) {
var i = new Array();
if (t < 0 || e < 0 || t > this.width - 1 || e > this.height - 1) return i;
for (var o = 0; o < this.roomWidth; o++) {
i[o] = new Array();
for (var a = 0; a < this.roomHeight; a++) i[o][a] = this.map[o + t * this.roomWidth][a + e * this.roomHeight];
}
return i;
};
t.prototype.getRoomFloorMap = function(t, e) {
var i = new Array();
if (t < 0 || e < 0 || t > this.width - 1 || e > this.height - 1) return i;
for (var o = 0; o < this.roomWidth; o++) {
i[o] = new Array();
for (var a = 0; a < this.roomHeight; a++) i[o][a] = this.floormap[o + t * this.roomWidth][a + e * this.roomHeight];
}
return i;
};
t.prototype.getExitList = function() {
var t = new Array();
if (this.exits && this.exits.length > 0) for (var e = 0, i = this.exits.split("#"); e < i.length; e++) {
var o = i[e], a = new n.default(), r = o.split(","), s = parseInt(r[0]), l = this.roomHeight * this.height - parseInt(r[1]) - 1, c = parseInt(r[4]), u = parseInt(r[5]), p = Math.floor(s / this.roomWidth), h = Math.floor(l / this.roomHeight);
a.fromRoomPos = cc.v3(p, h);
a.fromPos = cc.v3(s % this.roomWidth, l % this.roomHeight);
a.fromChapter = this.chapter;
a.fromLevel = this.index;
a.toChapter = parseInt(r[2]);
a.toLevel = parseInt(r[3]);
a.toPos = cc.v3(c, u);
r.length > 6 && (a.fromZ = parseInt(r[6]));
r.length > 7 && (a.toPosZ = parseInt(r[7]));
r.length > 8 && (a.res = r[8]);
t.push(a);
}
return t;
};
t.prototype.getEquipItemList = function() {
var t = new Array();
if (this.equipitems && this.equipitems.length > 0) for (var e = 0, i = this.equipitems.split("#"); e < i.length; e++) {
var o = i[e], n = new a.default(), r = o.split(","), s = parseInt(r[0]), l = this.roomHeight * this.height - parseInt(r[1]) - 1, c = Math.floor(s / this.roomWidth), u = Math.floor(l / this.roomHeight);
n.fromRoomPos = cc.v3(c, u);
n.fromPos = cc.v3(s % this.roomWidth, l % this.roomHeight);
n.resName = r[2];
t.push(n);
}
return t;
};
return t;
}();
i.default = r;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./EquipItemMapData": "EquipItemMapData",
"./ExitData": "ExitData"
} ],
LifeData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f7167eNvVlCr6WZO6jChPq+", "LifeData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../utils/DataUtils"), r = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sanity = 75;
e.solidSatiety = 75;
e.liquidSatiety = 75;
e.poo = 0;
e.pee = 0;
e.timeScale = 1;
return e;
}
e.prototype.valueCopy = function(t) {
if (t) {
n.default.baseCopy(this, t);
this.timeScale = t.timeScale ? t.timeScale : 1;
}
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
e.SOLID_LOSS = .0035;
e.LIQUID_LOSS = .005;
e.POO_RATE = .2;
e.PEERATE = .2;
return e;
}(t("./BaseData").default);
i.default = r;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData"
} ],
LightBuilding: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b2591n42odFIbhfimSigtUE", "LightBuilding");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Building"), s = cc._decorator, l = s.ccclass, c = (s.property, function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.onLoad = function() {};
return n([ l ], e);
}(r.default));
i.default = c;
cc._RF.pop();
}, {
"./Building": "Building"
} ],
LightManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "28a3dFSvA1P3KOJyNBCO1Gn", "LightManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./BaseManager"), s = t("../logic/Logic"), l = t("../utils/IndexZ"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.camera = null;
e.shadowCamera = null;
e.shadowCamera1 = null;
e.shadow = null;
e.shadow1 = null;
e.shadowRay = null;
e.shadowAlpha = i.ALPHA_START;
e.hasOutSideLight = !1;
e.isFirstRender = !0;
e.checkTimeDelay = 0;
e.checkTimeChangeDelay = 0;
return e;
}
i = e;
e.prototype.clear = function() {
i.lightList = [];
};
e.prototype.onLoad = function() {
this.mat = this.shadow.getMaterial(0);
this.mat1 = this.shadow1.getMaterial(0);
this.timeChange();
};
e.prototype.render = function() {
this.hasOutSideLight = !1;
for (var t = 0; t < i.lightList.length; t++) {
var e = i.lightList[t];
if (e) {
e.fromOutside && (this.hasOutSideLight = !0);
e.renderSightArea(this.camera);
this.renderRay(e, 0 == t, this.shadowRay);
}
}
if (!this.shadowTexture) {
this.shadowTexture = new cc.RenderTexture();
this.shadowTexture.initWithSize(cc.visibleRect.width / 8, cc.visibleRect.height / 8);
this.shadowTexture.setFilters(cc.Texture2D.Filter.LINEAR, cc.Texture2D.Filter.LINEAR);
this.shadowCamera.targetTexture = this.shadowTexture;
this.shadow.spriteFrame = new cc.SpriteFrame(this.shadowTexture);
}
if (!this.shadowTexture1) {
this.shadowTexture1 = new cc.RenderTexture();
this.shadowTexture1.initWithSize(cc.visibleRect.width / 8, cc.visibleRect.height / 8);
this.shadowTexture1.setFilters(cc.Texture2D.Filter.LINEAR, cc.Texture2D.Filter.LINEAR);
this.shadowCamera1.targetTexture = this.shadowTexture1;
this.shadow1.spriteFrame = new cc.SpriteFrame(this.shadowTexture1);
}
if (this.isFirstRender) {
this.isFirstRender = !1;
this.timeChange();
}
};
e.registerLight = function(t, e) {
if (t && !(t.length < 1)) for (var o = 0, a = t; o < a.length; o++) {
var n = a[o];
n.showShadow = n.node.active;
if (n.fromSky) {
var r = n.node.convertToWorldSpaceAR(cc.Vec3.ZERO);
n.node.parent = e.parent;
n.node.position = n.node.parent.convertToNodeSpaceAR(r);
n.node.zIndex = l.default.OVERHEAD;
}
i.lightList.push(n);
}
};
e.unRegisterLight = function(t) {
if (t && !(t.length < 1)) for (var e = 0, o = t; e < o.length; e++) {
var a = o[e], n = i.lightList.indexOf(a);
-1 != n && i.lightList.splice(n, 1);
}
};
e.prototype.renderRay = function(t, e, i) {
var o = t.lightVertsArray, a = t.lightRects, n = t.circle;
e && i.clear(!1);
if (t.showShadow) {
i.lineWidth = 10;
i.fillColor = t.renderColor;
if (o && o.length > 0) {
var r = i.node.convertToNodeSpaceAR(o[0]);
i.moveTo(r.x, r.y);
for (var s = 1; s < o.length; s++) {
var l = i.node.convertToNodeSpaceAR(o[s]);
i.lineTo(l.x, l.y);
}
i.close();
i.fill();
}
for (var c in a) {
var u = a[c], p = i.node.convertToNodeSpaceAR(cc.v2(u.x, u.y));
i.rect(p.x, p.y, u.width, u.height);
i.fill();
}
n && n.z > 0 && this.drawCircle(i, n.x, n.y, n.z);
}
};
e.prototype.drawCircle = function(t, e, i, o) {
var a = t.node.convertToNodeSpaceAR(cc.v3(e, i));
t.circle(a.x, a.y, o);
t.fill();
};
e.prototype.fixShadowPos = function() {
if (this.camera) {
var t = this.camera.node.convertToWorldSpaceAR(cc.v2(0, 0));
if (this.shadow) {
var e = this.shadowRay.node.convertToNodeSpaceAR(t);
this.shadow.node.position = cc.v3(e);
this.shadow1.node.position = cc.v3(e);
}
}
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .03) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.isCheckTimeChangeDelay = function(t) {
this.checkTimeChangeDelay += t;
if (this.checkTimeChangeDelay > 1) {
this.checkTimeChangeDelay = 0;
return !0;
}
return !1;
};
e.prototype.timeChange = function() {
var t = this.getShadowAlphaByTime();
this.shadowAlpha = i.ALPHA_START + t;
this.shadowAlpha > i.ALPHA_END && (this.shadowAlpha = i.ALPHA_END);
this.shadowAlpha < i.ALPHA_START && (this.shadowAlpha = i.ALPHA_START);
this.shadowAlpha += this.getShadowAlphaByRoom();
this.shadowAlpha > 240 && (this.shadowAlpha = 240);
this.shadowAlpha < 0 && (this.shadowAlpha = 0);
this.mat.setProperty("lightColor", cc.color(0, 0, 20, this.shadowAlpha));
};
e.prototype.getShadowAlphaByRoom = function() {
var t = s.default.mapManager.getCurrentRoom().shadowLevel;
return !t || isNaN(parseInt(t)) ? 0 : 25 * parseInt(t);
};
e.prototype.getShadowAlphaByTime = function() {
if (!this.hasOutSideLight) return 0;
var t = new Date(s.default.realTime), e = t.getHours(), i = t.getMinutes(), o = Math.floor(20 * i / 60);
return e > 12 ? 20 * (e - 12) + o : 20 * (12 - e) - o;
};
e.prototype.update = function(t) {
this.isCheckTimeDelay(t) && this.render();
this.isCheckTimeChangeDelay(t) && this.timeChange();
this.fixShadowPos();
};
var i;
e.lightList = [];
e.ALPHA_START = 20;
e.ALPHA_END = 220;
e.ROOM_LIGHT = 50;
n([ p(cc.Camera) ], e.prototype, "camera", void 0);
n([ p(cc.Camera) ], e.prototype, "shadowCamera", void 0);
n([ p(cc.Camera) ], e.prototype, "shadowCamera1", void 0);
n([ p(cc.Sprite) ], e.prototype, "shadow", void 0);
n([ p(cc.Sprite) ], e.prototype, "shadow1", void 0);
n([ p(cc.Graphics) ], e.prototype, "shadowRay", void 0);
return i = n([ u ], e);
}(r.default);
i.default = h;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"../utils/IndexZ": "IndexZ",
"./BaseManager": "BaseManager"
} ],
Light: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "03c71kep4JPC4OkHwKVSXdP", "Light");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.layer = null;
e.lightPrefab = null;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.start = function() {};
n([ l(cc.Node) ], e.prototype, "layer", void 0);
n([ l(cc.Prefab) ], e.prototype, "lightPrefab", void 0);
return n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
LoadingIcon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "69f56NploZJ85VmIt+4fEdC", "LoadingIcon");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../logic/EventHelper"), s = t("../logic/Logic"), l = t("../utils/Random"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label1 = null;
e.icon = null;
e.label2 = null;
e.isFirst = !1;
e.layout = null;
e.map0 = null;
e.map1 = null;
e.npc0 = null;
e.npc1 = null;
e.equip0 = null;
e.equip1 = null;
e.item0 = null;
e.item1 = null;
e.audio0 = null;
e.audio1 = null;
e.texture0 = null;
e.texture1 = null;
e.textureauto0 = null;
e.textureauto1 = null;
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.isFirst = s.default.isFirstLoading;
this.getComponent(cc.Animation).play(s.default.isFirstLoading ? "LoadingIconWithLabel" : "LoadingIcon");
this.label2.string = "" + i.WORDS[l.default.getRandomNum(0, i.WORDS.length - 1)];
r.EventHelper.on(r.EventHelper.LOADING_ICON, function(e) {
if (t.node) switch (e.type) {
case i.TYPE_MAP:
t.mapLoaded();
break;

case i.TYPE_NPC:
t.npcLoaded();
break;

case i.TYPE_EQUIP:
t.equipLoaded();
break;

case i.TYPE_ITEM:
t.itemLoaded();
break;

case i.TYPE_AUDIO:
t.audioLoaded();
break;

case i.TYPE_TEXTURE:
t.textureLoaded();
break;

case i.TYPE_TEXTURE_AUTO:
t.textureautoLoaded();
}
});
};
e.prototype.iconShow = function(t, e) {
cc.tween(t).to(.1, {
scale: .8
}).to(.1, {
scale: 2
}).to(.1, {
scale: 1
}).start();
cc.tween(e).to(.3, {
opacity: 255
}).start();
};
e.prototype.init = function(t) {
for (var e = [ this.map0, this.npc0, this.equip0, this.item0, this.audio0, this.texture0, this.textureauto0, this.audio0 ], i = 0, o = e; i < o.length; i++) o[i].active = !1;
for (var a = 0, n = t; a < n.length; a++) {
var r = n[a];
r >= 0 && r < e.length && (e[r].active = !0);
}
};
e.prototype.mapLoaded = function() {
this.iconShow(this.map0, this.map1);
};
e.prototype.npcLoaded = function() {
this.iconShow(this.npc0, this.npc1);
};
e.prototype.equipLoaded = function() {
this.iconShow(this.equip0, this.equip1);
};
e.prototype.itemLoaded = function() {
this.iconShow(this.item0, this.item1);
};
e.prototype.audioLoaded = function() {
this.iconShow(this.audio0, this.audio1);
};
e.prototype.textureLoaded = function() {
this.iconShow(this.texture0, this.texture1);
};
e.prototype.textureautoLoaded = function() {
this.iconShow(this.textureauto0, this.textureauto1);
};
e.prototype.start = function() {
s.default.isFirstLoading = !1;
};
var i;
e.TYPE_MAP = 0;
e.TYPE_NPC = 1;
e.TYPE_EQUIP = 2;
e.TYPE_ITEM = 3;
e.TYPE_AUDIO = 4;
e.TYPE_TEXTURE = 5;
e.TYPE_TEXTURE_AUTO = 6;
e.WORDS = [ "梦是大自然所作的聪明的安排,为了在基于意志的身体运动即肌肉运动暂时休息时,用不随意虚构出来的事物所产生的激情去刺激生命力。", "一方面,梦是反映生活的;另一方面,梦又是远离生活的。它以夸张、歪曲、甚至变形的方式反映生活。", "梦把人们从桎梏般的现实中,释放了出来,使他自由,使他在云中翱翔,使他在山峰上奔走。", "偶然做个白昼梦,想入非非,任想象去驰骋,获得一时的慰安,当然亦无不可,但是究竟只是一时有效的镇定剂,可以暂时止痛,但不根本治疗。", "梦与觉、醉与醒、幻与真、虚与实、显与隐、形与迹、光与影、暗与明,都是生活里一事的两面,互相依存,而泾渭自分。", "梦是不可思议的,也是不可捉摸的,既无法预料,也无法选择和控制。", "做噩梦时,痛苦或恐怖达到最高度,恐怖的本身便促使我们觉醒,梦中的妖魔鬼怪也接着消灭。在人生的梦中情形亦复如此。", "梦是不连贯的,它毫不迟疑地调和着荒谬的矛盾,它接受不可能性,漠视清醒状态时的权威性认识,而且它向我们显示对伦理道德的迟钝", "那永久沉睡的并非死者，在漫长而奇异的时光中，死亡亦有其终结。", "这个世界最仁慈的地方，莫过于人类思维无法融会贯通它的全部内容。", "永远躺下的并没有死去，在神秘的万古中即便是死亡也可以死去。", "人类居住在幽暗的海洋中一个名为无知的小岛上，这海洋浩淼无垠、蕴藏无穷秘密，但我们并不应该航行过远，探究太深。", "为什么失眠呢\n因为怕那个梦\n那个不是噩梦的噩梦。", "能给别人带来噩梦的人，他自己往往要承载着更多的噩梦。\n所以那既是一个怪物，更是一个可怜的受害者。", "与怪物战斗的人，应当小心自己不要成为怪物。\n当你远远凝视深渊时，深渊也在凝视你。", "精神分析有三大支柱：潜意识的心理机制，反抗和压抑的作用，以及性的重要性。", "梦有时会通过一种非常神奇的复制能力，让我们回想起遥远的事物，甚至是我们已经忘记的自己。", "事实上，梦之所以被修改成不愉快的，是因为有些梦是精神的第二步所不允许的，而这些正是精神的第一步所需要的欲望。", "在我们的梦中出现的是我们在外部世界或自身经历的。", "每一个梦都起源于第一种力量（欲望），但受到了第二种力量（意识）的防御和抵制。", "梦是一个人与自己内心的真实对话，是向自己学习的过程，是另一次与自己息息相关的人生。", "一切的不如意不了解,都可以用一层薄幕去遮蔽,这层薄幕,我们可以说是梦。" ];
n([ p(cc.Label) ], e.prototype, "label1", void 0);
n([ p(cc.Node) ], e.prototype, "icon", void 0);
n([ p(cc.Label) ], e.prototype, "label2", void 0);
n([ p(cc.Node) ], e.prototype, "layout", void 0);
n([ p(cc.Node) ], e.prototype, "map0", void 0);
n([ p(cc.Node) ], e.prototype, "map1", void 0);
n([ p(cc.Node) ], e.prototype, "npc0", void 0);
n([ p(cc.Node) ], e.prototype, "npc1", void 0);
n([ p(cc.Node) ], e.prototype, "equip0", void 0);
n([ p(cc.Node) ], e.prototype, "equip1", void 0);
n([ p(cc.Node) ], e.prototype, "item0", void 0);
n([ p(cc.Node) ], e.prototype, "item1", void 0);
n([ p(cc.Node) ], e.prototype, "audio0", void 0);
n([ p(cc.Node) ], e.prototype, "audio1", void 0);
n([ p(cc.Node) ], e.prototype, "texture0", void 0);
n([ p(cc.Node) ], e.prototype, "texture1", void 0);
n([ p(cc.Node) ], e.prototype, "textureauto0", void 0);
n([ p(cc.Node) ], e.prototype, "textureauto1", void 0);
return i = n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"../utils/Random": "Random",
"./../logic/EventHelper": "EventHelper"
} ],
LoadingManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cdbddTOfANNwo68tyWHiEGz", "LoadingManager");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = t("./../logic/EventHelper"), n = t("../data/ProfessionData"), r = t("../logic/Logic"), s = t("../ui/LoadingIcon"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function() {
function t() {
this.spriteFrameNames = null;
this.isEquipmentLoaded = !1;
this.isMonsterLoaded = !1;
this.isNonplayerLoaded = !1;
this.isBossLoaded = !1;
this.isBuffsLoaded = !1;
this.isSuitsLoaded = !1;
this.isBulletsLoaded = !1;
this.isProfessionLoaded = !1;
this.isItemsLoaded = !1;
this.isSkillsLoaded = !1;
this.isBuildingLoaded = !1;
this.isFurnituresLoaded = !1;
this.isNormalBuildingLoaded = !1;
this.isTransportAnimFinished = !0;
this.isSoundLoaded = !1;
this.isBgmLoaded = !1;
this.isDialogueLoaded = !1;
}
e = t;
t.prototype.init = function() {
this.setAllSpriteFramesUnload();
r.default.spriteFrames || (r.default.spriteFrames = {});
r.default.buildings || (r.default.buildings = {});
this.isEquipmentLoaded = !1;
this.isMonsterLoaded = !1;
this.isBuffsLoaded = !1;
this.isNonplayerLoaded = !1;
this.isBuildingLoaded = !1;
this.isFurnituresLoaded = !1;
this.isSoundLoaded = !1;
this.isBgmLoaded = !1;
this.isNormalBuildingLoaded = !1;
};
t.prototype.reset = function() {
this.isEquipmentLoaded = !1;
this.setAllSpriteFramesUnload();
this.isBuffsLoaded = !1;
this.isProfessionLoaded = !1;
this.isBulletsLoaded = !1;
this.isMonsterLoaded = !1;
this.isNonplayerLoaded = !1;
this.isItemsLoaded = !1;
this.isSkillsLoaded = !1;
this.isBuildingLoaded = !1;
this.isTransportAnimFinished = !1;
this.isSuitsLoaded = !1;
this.isFurnituresLoaded = !1;
this.isSoundLoaded = !1;
this.isBgmLoaded = !1;
this.isNormalBuildingLoaded = !1;
this.isDialogueLoaded = !1;
};
t.prototype.isSpriteFramesLoaded = function(t) {
return !!this.spriteFrameNames[t];
};
t.prototype.isAllSpriteFramesLoaded = function() {
for (var t in this.spriteFrameNames) if (!this.spriteFrameNames[t]) return !1;
return !0;
};
t.prototype.setAllSpriteFramesUnload = function() {
this.spriteFrameNames = {};
this.spriteFrameNames[e.KEY_AUTO] = !1;
this.spriteFrameNames[e.KEY_TEXTURES] = !1;
this.spriteFrameNames[e.KEY_EQUIPMENT] = !1;
this.spriteFrameNames[e.KEY_ITEM] = !1;
};
t.prototype.loadWorld = function() {
r.default.worldLoader.loadWorld();
};
t.prototype.loadSound = function() {
var t = this;
if (r.default.audioClips && r.default.audioClips.silence) {
this.isSoundLoaded = !0;
a.EventHelper.emit(a.EventHelper.LOADING_ICON, {
type: s.default.TYPE_AUDIO
});
} else cc.assetManager.getBundle(e.AB_SOUND).loadDir("", cc.AudioClip, function(e, i) {
for (var o = 0, n = i; o < n.length; o++) {
var l = n[o];
r.default.audioClips[l.name] = l;
}
t.isSoundLoaded = !0;
cc.log("加载音效完成");
a.EventHelper.emit(a.EventHelper.LOADING_ICON, {
type: s.default.TYPE_AUDIO
});
});
};
t.prototype.loadBgm = function() {
var t = this;
r.default.bgmClips && r.default.bgmClips.bgm001 ? this.isBgmLoaded = !0 : cc.assetManager.getBundle(e.AB_BGM).loadDir("", cc.AudioClip, function(e, i) {
for (var o = 0, a = i; o < a.length; o++) {
var n = a[o];
r.default.bgmClips[n.name] = n;
}
t.isBgmLoaded = !0;
cc.log("加载背景音乐完成");
});
};
t.prototype.loadDialogue = function() {
var t = this;
r.default.dialogues ? this.isDialogueLoaded = !0 : cc.resources.loadDir("Data/dialogue", cc.JsonAsset, function(e, i) {
if (e) cc.error(e); else {
r.default.dialogues = {};
for (var o = 0, a = i; o < a.length; o++) {
var n = a[o];
for (var s in n.json) r.default.dialogues[s] = n.json[s];
}
t.isDialogueLoaded = !0;
cc.log("加载对话完成");
}
});
};
t.prototype.loadEquipment = function() {
var t = this;
r.default.equipments ? this.isEquipmentLoaded = !0 : cc.resources.load("Data/equipment", function(e, i) {
if (e) cc.error(e); else {
r.default.equipments = i.json;
t.isEquipmentLoaded = !0;
r.default.equipmentNameList = new Array();
for (var o in i.json) r.default.equipmentNameList.push(o);
cc.log("加载装备(" + r.default.equipmentNameList.length + ")完成");
}
});
};
t.prototype.loadProfession = function() {
var t = this;
r.default.professionList && r.default.professionList.length > 0 ? this.isProfessionLoaded = !0 : cc.resources.load("Data/profession", function(e, i) {
if (e) cc.error(e); else {
r.default.professionList = new Array();
for (var o = i.json, a = 0; a < o.length; a++) {
var s = new n.default();
s.valueCopy(o[a]);
s.id = a;
r.default.professionList.push(s);
}
t.isProfessionLoaded = !0;
cc.log("加载职业(" + r.default.professionList.length + ")完成");
}
});
};
t.prototype.loadTalents = function() {
var t = this;
r.default.talents ? this.isSkillsLoaded = !0 : cc.resources.load("Data/talent", function(e, i) {
if (e) cc.error(e); else {
r.default.talents = i.json;
t.isSkillsLoaded = !0;
cc.log("加载技能完成");
}
});
};
t.prototype.loadStatus = function() {
var t = this;
r.default.status ? this.isBuffsLoaded = !0 : cc.resources.load("Data/status", function(e, i) {
if (e) cc.error(e); else {
r.default.status = i.json;
t.isBuffsLoaded = !0;
cc.log("加载状态完成");
}
});
};
t.prototype.loadSuits = function() {
var t = this;
r.default.suits ? this.isSuitsLoaded = !0 : cc.resources.load("Data/suits", function(e, i) {
if (e) cc.error(e); else {
r.default.suits = i.json;
t.isSuitsLoaded = !0;
cc.log("加载套装完成");
}
});
};
t.prototype.loadFurnitures = function() {
var t = this;
r.default.furnitures ? this.isFurnituresLoaded = !0 : cc.resources.load("Data/furnitures", function(e, i) {
if (e) cc.error(e); else {
r.default.furnitures = i.json;
t.isFurnituresLoaded = !0;
cc.log("加载家具完成");
}
});
};
t.prototype.loadNormalBuildings = function() {
var t = this;
r.default.normalBuildings ? this.isNormalBuildingLoaded = !0 : cc.resources.load("Data/buildings", function(e, i) {
if (e) cc.error(e); else {
r.default.normalBuildings = i.json;
for (var o in i.json) r.default.normalBuildings[o].id = o;
t.isNormalBuildingLoaded = !0;
cc.log("加载建筑完成");
}
});
};
t.prototype.loadBullets = function() {
var t = this;
r.default.bullets ? this.isBulletsLoaded = !0 : cc.resources.load("Data/bullet", function(e, i) {
if (e) cc.error(e); else {
r.default.bullets = i.json;
t.isBulletsLoaded = !0;
cc.log("加载子弹完成");
}
});
};
t.prototype.loadMonsters = function() {
var t = this;
r.default.monsters ? this.isMonsterLoaded = !0 : cc.resources.load("Data/monsters", function(e, i) {
if (e) cc.error(e); else {
r.default.monsters = i.json;
t.isMonsterLoaded = !0;
cc.log("加载怪物完成");
}
});
};
t.prototype.loadNonplayer = function() {
var t = this;
r.default.nonplayers ? this.isNonplayerLoaded = !0 : cc.resources.load("Data/nonplayers", function(e, i) {
if (e) cc.error(e); else {
r.default.nonplayers = i.json;
t.isNonplayerLoaded = !0;
cc.log("加载npc完成");
}
});
};
t.prototype.loadBosses = function() {
var t = this;
r.default.bosses ? this.isBossLoaded = !0 : cc.resources.load("Data/bosses", function(e, i) {
if (e) cc.error(e); else {
r.default.bosses = i.json;
t.isBossLoaded = !0;
cc.log("加载Boss完成");
}
});
};
t.prototype.loadBuildings = function() {
var t = this;
r.default.buildings && r.default.buildings.Door ? this.isBuildingLoaded = !0 : cc.resources.loadDir("Prefabs/buildings", cc.Prefab, function(e, i) {
for (var o = 0, a = i; o < a.length; o++) {
var n = a[o];
r.default.buildings[n.name] = n;
}
t.isBuildingLoaded = !0;
cc.log("加载建筑完成");
});
};
t.prototype.loadItems = function() {
var t = this;
r.default.items ? this.isItemsLoaded = !0 : cc.resources.load("Data/item", function(e, i) {
if (e) cc.error(e); else {
r.default.items = i.json;
r.default.itemNameList = new Array();
r.default.goodsNameList = new Array();
r.default.trashNameList = new Array();
r.default.dollNameList = new Array();
for (var o in i.json) r.default.items[o].canSave && -1 == o.indexOf("food") && -1 == o.indexOf("trash") && -1 == o.indexOf("doll") && -1 == o.indexOf("goods") ? r.default.itemNameList.push(o) : -1 != o.indexOf("goods") ? r.default.goodsNameList.push(o) : -1 != o.indexOf("trash") ? r.default.trashNameList.push(o) : -1 != o.indexOf("doll") && r.default.dollNameList.push(o);
t.isItemsLoaded = !0;
cc.log("加载物品完成");
}
});
};
t.prototype.loadAutoSpriteFrames = function() {
var t = this;
if (r.default.spriteFrames && r.default.spriteFrameRes("auto")) {
this.spriteFrameNames[e.KEY_AUTO] = !0;
a.EventHelper.emit(a.EventHelper.LOADING_ICON, {
type: s.default.TYPE_TEXTURE_AUTO
});
} else {
cc.log("加载自动图集");
cc.resources.loadDir("Texture/Auto", cc.SpriteFrame, function(i, o) {
for (var n = 0, l = o; n < l.length; n++) {
var c = l[n];
r.default.spriteFrames[c.name] = c;
}
t.spriteFrameNames[e.KEY_AUTO] = !0;
cc.log("加载自动图集完成");
a.EventHelper.emit(a.EventHelper.LOADING_ICON, {
type: s.default.TYPE_TEXTURE_AUTO
});
});
}
};
t.prototype.loadSpriteAtlas = function(t, i) {
var o = this, n = 0;
switch (t) {
case e.KEY_EQUIPMENT:
n = s.default.TYPE_EQUIP;
break;

case e.KEY_ITEM:
n = s.default.TYPE_ITEM;
break;

case e.KEY_TEXTURES:
n = s.default.TYPE_TEXTURE;
break;

case e.KEY_BOSS:
n = s.default.TYPE_NPC;
}
if (r.default.spriteFrames && r.default.spriteFrames[i]) {
this.spriteFrameNames[t] = !0;
a.EventHelper.emit(a.EventHelper.LOADING_ICON, {
type: n
});
} else {
cc.log("加载" + t + "图集");
cc.resources.load("Texture/" + t, cc.SpriteAtlas, function(e, i) {
for (var s = 0, l = i.getSpriteFrames(); s < l.length; s++) {
var c = l[s];
r.default.spriteFrames[c.name] = c;
}
o.spriteFrameNames[t] = !0;
cc.log("加载" + t + "图集完成");
a.EventHelper.emit(a.EventHelper.LOADING_ICON, {
type: n
});
});
}
};
t.loadAllBundle = function(t, i) {
for (var o = 0, a = 0, n = t; a < n.length; a++) {
var r = n[a];
cc.assetManager.getBundle(r) ? ++o >= t.length && i() : e.loadBundle(r, function(e) {
e && o++;
o >= t.length && i();
});
}
};
t.loadBundle = function(t, e) {
var i = cc.assetManager.getBundle(t);
i ? e(i) : cc.assetManager.loadBundle(t, function(i, o) {
e(o, o);
cc.log("加载bundle:" + t + (o ? "完成" : "失败"));
});
};
t.loadNpcSpriteAtlas = function(t, i) {
if (r.default.spriteFrames && r.default.spriteFrames[t + "anim000"]) i && i(0); else if (e.resourceLoadMap.has(t)) e.resourceLoadMap.get(t).push(i); else {
e.resourceLoadMap.set(t, new Array());
cc.log("加载" + t + "图集");
cc.resources.load("npc/" + t, cc.SpriteAtlas, function(o, a) {
if (a) for (var n = 0, s = a.getSpriteFrames(); n < s.length; n++) {
var l = s[n];
r.default.spriteFrames[l.name] = l;
}
cc.log("加载" + t + "图集" + (a ? "完成" : "失败"));
i && i(a ? 1 : 2);
if (e.resourceLoadMap.has(t)) {
for (var c = 0, u = e.resourceLoadMap.get(t); c < u.length; c++) {
var p = u[c];
p && p(a ? 1 : 2);
}
e.resourceLoadMap.delete(t);
}
});
}
};
t.loadBuilding = function(t, i) {
if (r.default.buildings[t]) i && i(0); else if (e.resourceLoadMap.has(t)) e.resourceLoadMap.get(t).push(i); else {
e.resourceLoadMap.set(t, new Array());
cc.log("加载" + t + "预制");
cc.resources.load("Prefabs/buildings/" + t, cc.Prefab, function(o, a) {
a && (r.default.buildings[t] = a);
cc.log("加载" + t + "预制" + (a ? "完成" : "失败"));
i && i(a ? 1 : 2);
if (e.resourceLoadMap.has(t)) {
for (var n = 0, s = e.resourceLoadMap.get(t); n < s.length; n++) {
var l = s[n];
l && l(a ? 1 : 2);
}
e.resourceLoadMap.delete(t);
}
});
}
};
t.allResourceDone = function() {
return e.resourceLoadMap.size < 1;
};
var e;
t.KEY_AUTO = "auto";
t.KEY_TEXTURES = "textures";
t.KEY_EQUIPMENT = "equipment";
t.KEY_ITEM = "item";
t.KEY_BOSS = "bossicons";
t.LOAD_CACHE = 0;
t.LOAD_SUCCESS = 1;
t.LOAD_FAIL = 2;
t.AB_BGM = "ab_bgm";
t.AB_SOUND = "ab_sound";
t.ALL_BUNDLES = [ e.AB_BGM, e.AB_SOUND ];
t.resourceLoadMap = new Map();
return e = o([ c ], t);
}());
i.default = u;
cc._RF.pop();
}, {
"../data/ProfessionData": "ProfessionData",
"../logic/Logic": "Logic",
"../ui/LoadingIcon": "LoadingIcon",
"./../logic/EventHelper": "EventHelper"
} ],
Loading: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a2246gAT5JKc4YhD10URG7K", "Loading");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("../ui/CutScene"), l = t("../manager/LoadingManager"), c = t("../utils/AudioPlayer"), u = t("../ui/LoadingIcon"), p = t("../ui/CursorArea"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.loadingIcon = null;
e.cutScene = null;
e.shipTransportScene = null;
e.elevatorScene = null;
e.loadingIconPrefab = null;
e.cursorAreaPrefab = null;
e.timeDelay = 0;
e.isTransportAnimFinished = !0;
e.isElevatorAnimFinished = !0;
e.loadingManager = new l.default();
return e;
}
e.prototype.onLoad = function() {
p.default.init(this.cursorAreaPrefab);
this.loadingManager.init();
this.loadingIcon = cc.instantiate(this.loadingIconPrefab).getComponent(u.default);
this.loadingIcon.node.parent = this.node;
this.loadingIcon.init([ u.default.TYPE_TEXTURE_AUTO, u.default.TYPE_TEXTURE, u.default.TYPE_ITEM, u.default.TYPE_EQUIP, u.default.TYPE_NPC, u.default.TYPE_MAP, u.default.TYPE_AUDIO ]);
};
e.prototype.start = function() {
var t = this;
l.default.loadAllBundle(l.default.ALL_BUNDLES, function() {
t.loadingManager.loadEquipment();
t.loadingManager.loadAutoSpriteFrames();
t.loadingManager.loadSpriteAtlas(l.default.KEY_TEXTURES, "singleColor");
t.loadingManager.loadSpriteAtlas(l.default.KEY_EQUIPMENT, "emptyequipment");
t.loadingManager.loadSpriteAtlas(l.default.KEY_ITEM, "ammo");
t.loadingManager.loadMonsters();
t.loadingManager.loadStatus();
t.loadingManager.loadBullets();
t.loadingManager.loadItems();
t.loadingManager.loadTalents();
t.loadingManager.loadProfession();
t.loadingManager.loadNonplayer();
t.loadingManager.loadSound();
t.loadingManager.loadBgm();
t.loadingManager.loadSuits();
t.loadingManager.loadFurnitures();
t.loadingManager.loadNormalBuildings();
t.loadingManager.loadDialogue();
t.showLoadingLabel();
});
if (1 == r.default.isFirst) {
this.cutScene.isSkip = !0;
this.cutScene.unregisterClick();
}
};
e.prototype.showLoadingLabel = function() {
this.loadingManager.isAllSpriteFramesLoaded() || (this.loadingIcon.node.active = !0);
};
e.prototype.showCut = function() {
if (this.loadingManager.isAllSpriteFramesLoaded() && 1 != r.default.isFirst) {
r.default.isFirst = 1;
this.cutScene.playShow();
}
};
e.prototype.showElevator = function() {
var t = this;
if (this.loadingManager.isAllSpriteFramesLoaded() && r.default.elevatorScene > 0) {
this.isElevatorAnimFinished = !1;
this.elevatorScene.active = !0;
this.loadingIcon.node.active = !1;
1 == r.default.elevatorScene ? this.elevatorScene.getComponent(cc.Animation).play("ElevatorSceneUp") : 2 == r.default.elevatorScene && this.elevatorScene.getComponent(cc.Animation).play("ElevatorSceneDown");
r.default.elevatorScene = 0;
this.scheduleOnce(function() {
t.isElevatorAnimFinished = !0;
}, 1);
}
};
e.prototype.showTransport = function() {
var t = this;
if (this.loadingManager.isAllSpriteFramesLoaded() && r.default.shipTransportScene > 0) {
this.isTransportAnimFinished = !1;
this.loadingIcon.node.active = !1;
this.shipTransportScene.active = !0;
2 == r.default.shipTransportScene && (this.shipTransportScene.scaleX = -1);
c.default.play(c.default.TRANSPORTSHIP);
r.default.shipTransportScene = 0;
this.scheduleOnce(function() {
t.isTransportAnimFinished = !0;
}, 1);
}
};
e.prototype.update = function(t) {
this.timeDelay += t;
this.showCut();
this.showTransport();
if (this.timeDelay > .02 && this.loadingManager.isEquipmentLoaded && this.loadingManager.isAllSpriteFramesLoaded() && this.loadingManager.isMonsterLoaded && this.loadingManager.isNonplayerLoaded && this.loadingManager.isBuffsLoaded && this.loadingManager.isProfessionLoaded && this.loadingManager.isBulletsLoaded && this.loadingManager.isItemsLoaded && this.loadingManager.isSkillsLoaded && r.default.mapManager.isloaded && this.loadingManager.isSuitsLoaded && this.loadingManager.isFurnituresLoaded && this.loadingManager.isSoundLoaded && this.loadingManager.isBgmLoaded && this.loadingManager.isNormalBuildingLoaded && this.loadingManager.isDialogueLoaded && this.cutScene.isSkip && this.isTransportAnimFinished && this.isElevatorAnimFinished) {
this.timeDelay = 0;
this.cutScene.unregisterClick();
this.isTransportAnimFinished = !1;
this.isElevatorAnimFinished = !1;
this.loadingManager.reset();
cc.director.loadScene("game");
}
};
n([ f(s.default) ], e.prototype, "cutScene", void 0);
n([ f(cc.Node) ], e.prototype, "shipTransportScene", void 0);
n([ f(cc.Node) ], e.prototype, "elevatorScene", void 0);
n([ f(cc.Prefab) ], e.prototype, "loadingIconPrefab", void 0);
n([ f(cc.Prefab) ], e.prototype, "cursorAreaPrefab", void 0);
return n([ d ], e);
}(cc.Component);
i.default = g;
cc._RF.pop();
}, {
"../manager/LoadingManager": "LoadingManager",
"../ui/CursorArea": "CursorArea",
"../ui/CutScene": "CutScene",
"../ui/LoadingIcon": "LoadingIcon",
"../utils/AudioPlayer": "AudioPlayer",
"./Logic": "Logic"
} ],
LocalStorage: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "0a5cbOqRmZJE4RU1wzXgRD/", "LocalStorage");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = t("../data/AchievementData"), n = t("../data/FurnitureData"), r = t("../data/SettingsData"), s = cc._decorator, l = s.ccclass, c = (s.property, 
function() {
function t() {}
e = t;
t.getValue = function(t) {
return cc.sys.localStorage.getItem(t);
};
t.putValue = function(t, e) {
cc.sys.localStorage.setItem(t, JSON.stringify(e));
};
t.getData = function() {
var t = e.getValue(e.SAVE_NAME);
t || (t = "{}");
return JSON.parse(t);
};
t.getValueFromData = function(t) {
var i = e.getValue(e.SAVE_NAME);
i || (i = "{}");
return e.getData()[t];
};
t.saveData = function(t, i) {
var o = e.getData();
o[t] = i;
e.putValue(e.SAVE_NAME, o);
};
t.getAchievementData = function() {
var t = new a.default();
t.valueCopy(e.getData()[e.KEY_ACHIEVEMENT]);
return t;
};
t.saveAchievementData = function(t) {
e.saveData(e.KEY_ACHIEVEMENT, t);
};
t.getSystemSettings = function() {
var t = new r.default();
t.valueCopy(e.getData()[e.KEY_SYSTEM_SETTINGS]);
return t;
};
t.saveSystemSettings = function(t) {
e.saveData(e.KEY_SYSTEM_SETTINGS, t);
};
t.getFurnitureData = function(t) {
var i = e.getData()[e.KEY_FURNITURES];
i || (i = {});
return i[t];
};
t.saveFurnitureData = function(t) {
if (t) {
var i = e.getData()[e.KEY_FURNITURES];
i || (i = {});
var o = new n.default();
o.valueCopy(i[t.id]);
var a = o.purchased, r = o.isOpen;
o.valueCopy(t);
a && (o.purchased = a);
r && (o.isOpen = r);
i[t.id] = o;
e.saveData(e.KEY_FURNITURES, i);
}
};
t.getLastSaveSlotKey = function() {
var t = e.getValueFromData(e.KEY_LAST_SAVE_SLOT), i = parseInt(t);
isNaN(i) && (i = 0);
return i;
};
t.setLastSaveSlotKey = function(t) {
e.saveData(e.KEY_LAST_SAVE_SLOT, t);
};
var e;
t.SAVE_NAME = "SINKDUNGEON_SAVE";
t.SAVE_DUNGEON = "SAVE_DUNGEON";
t.KEY_ACHIEVEMENT = "KEY_ACHIEVEMENT";
t.KEY_SYSTEM_SETTINGS = "KEY_SYSTEM_SETTINGS";
t.KEY_REAL_COINS = "KEY_REAL_COINS";
t.KEY_FURNITURES = "KEY_FURNITURES";
t.VAULE_OPEN = "1";
t.KEY_LAST_SAVE_SLOT = "KEY_LAST_SAVE_SLOT";
return e = o([ l ], t);
}());
i.default = c;
cc._RF.pop();
}, {
"../data/AchievementData": "AchievementData",
"../data/FurnitureData": "FurnitureData",
"../data/SettingsData": "SettingsData"
} ],
Logic: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "2225fYJ0sRMTZjuD7WFmbVi", "Logic");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./EventHelper"), s = t("../data/PlayerData"), l = t("../manager/MapManager"), c = t("./Dungeon"), u = t("../manager/InventoryManager"), p = t("../utils/Random"), h = t("../manager/ProfileManager"), d = t("../utils/AudioPlayer"), f = t("../data/FromData"), g = t("../map/WorldLoader"), y = t("../utils/LocalStorage"), m = t("../data/SavePointData"), v = t("../data/NonPlayerData"), E = t("../data/InventoryData"), _ = t("../data/GroundOilGoldData"), T = t("../data/OilGoldData"), D = t("../manager/LoadingManager"), S = t("../data/SettingsData"), O = t("../utils/Utils"), A = cc._decorator, R = A.ccclass, C = (A.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
i = e;
e.prototype.onLoad = function() {
i.settings.valueCopy(y.default.getSystemSettings());
i.settings.lowPower ? cc.game.setFrameRate(45) : cc.game.setFrameRate(60);
cc.game.addPersistRootNode(this.node);
r.EventHelper.on(r.EventHelper.SETTINGS_LOW_POWER, function() {
i.settings.lowPower ? cc.game.setFrameRate(45) : cc.game.setFrameRate(60);
});
};
e.prototype.start = function() {};
e.saveData = function() {
i.profileManager.data.playerData = i.playerData.clone();
if (i.chapterIndex == this.CHAPTER099) {
i.profileManager.data.playerEquipsReality = i.inventoryManager.equips;
i.profileManager.data.playerItemListReality = i.inventoryManager.itemList;
i.profileManager.data.playerInventoryListReality = i.inventoryManager.inventoryList;
} else {
i.profileManager.data.playerEquips = i.inventoryManager.equips;
i.profileManager.data.playerItemList = i.inventoryManager.itemList;
i.profileManager.data.playerInventoryList = i.inventoryManager.inventoryList;
}
i.profileManager.data.nonPlayerList = i.nonPlayerList;
i.profileManager.data.rectDungeons[i.mapManager.rectDungeon.id] = i.mapManager.rectDungeon;
i.profileManager.data.level = i.level;
i.profileManager.data.chapterIndex = i.chapterIndex;
i.profileManager.data.chapterMaxIndex = i.chapterMaxIndex;
i.profileManager.data.totalTime = i.totalTime;
i.profileManager.data.realTime = i.realTime;
i.profileManager.data.savePointData = i.savePoinitData.clone();
i.profileManager.data.groundOilGoldData = i.groundOilGoldData.clone();
i.profileManager.data.killPlayerCounts = O.default.cloneKeyValueNumber(i.killPlayerCounts);
i.profileManager.data.dialogueCounts = O.default.cloneKeyValue(i.dialogueCounts);
i.profileManager.data.oilGolds = i.oilGolds;
i.profileManager.data.coins = i.coins;
i.profileManager.data.coinCounts = i.coinCounts;
i.profileManager.data.lastSaveTime = new Date().getTime();
i.profileManager.saveData(i.jumpSlotIndex);
y.default.saveData(y.default.KEY_REAL_COINS, i.realCoins);
y.default.setLastSaveSlotKey(i.jumpSlotIndex);
i.inventoryManager.furnitureMap.forEach(function(t) {
y.default.saveFurnitureData(t);
});
};
e.resetData = function(t) {
i.profileManager = new h.default();
i.profileManager.loadData(i.jumpSlotIndex);
i.totalTime = i.profileManager.data.totalTime;
i.realTime = i.profileManager.data.realTime;
i.profileManager.data.chapterIndex = t || i.profileManager.data.chapterIndex;
i.profileManager.data.chapterIndex > i.profileManager.data.chapterMaxIndex && i.profileManager.data.chapterIndex < this.CHAPTER05 && (i.profileManager.data.chapterMaxIndex = i.profileManager.data.chapterIndex);
i.chapterIndex = i.profileManager.data.chapterIndex;
i.chapterMaxIndex = i.profileManager.data.chapterMaxIndex;
i.level = i.profileManager.data.level;
i.savePoinitData = i.profileManager.data.savePointData.clone();
i.groundOilGoldData = i.profileManager.data.groundOilGoldData.clone();
i.oilGolds = i.profileManager.data.oilGolds;
i.playerData = i.profileManager.data.playerData.clone();
i.nonPlayerList = [];
for (var e = 0; e < i.profileManager.data.nonPlayerList.length; e++) {
var o = new v.default();
o.valueCopy(i.profileManager.data.nonPlayerList[e]);
i.nonPlayerList.push(o);
}
i.resetInventoryAndOtherData();
c.default.WIDTH_SIZE = 15;
c.default.HEIGHT_SIZE = 9;
i.coins = i.profileManager.data.coins;
i.coinCounts = i.profileManager.data.coinCounts;
var a = y.default.getValueFromData(y.default.KEY_REAL_COINS);
i.realCoins = a ? parseInt(a) : 0;
i.lastBgmIndex = 0;
i.killPlayerCounts = O.default.cloneKeyValueNumber(i.profileManager.data.killPlayerCounts);
i.dialogueCounts = O.default.cloneKeyValue(i.profileManager.data.dialogueCounts);
i.playerData.OilGoldData.valueCopy(i.getOilGoldData(i.oilGolds));
};
e.resetInventoryAndOtherData = function() {
i.inventoryManager = new u.default();
if (i.chapterIndex == this.CHAPTER099) {
for (var t in i.profileManager.data.playerEquipsReality) i.inventoryManager.equips[t].valueCopy(i.profileManager.data.playerEquipsReality[t]);
for (var e = 0; e < i.profileManager.data.playerItemListReality.length; e++) i.inventoryManager.itemList[e].valueCopy(i.profileManager.data.playerItemListReality[e]);
for (e = 0; e < i.profileManager.data.playerInventoryListReality.length; e++) {
(o = new E.default()).valueCopy(i.profileManager.data.playerInventoryListReality[e]);
i.inventoryManager.inventoryList.push(o);
}
} else {
for (var t in i.profileManager.data.playerEquips) i.inventoryManager.equips[t].valueCopy(i.profileManager.data.playerEquips[t]);
for (e = 0; e < i.profileManager.data.playerItemList.length; e++) i.inventoryManager.itemList[e].valueCopy(i.profileManager.data.playerItemList[e]);
for (e = 0; e < i.profileManager.data.playerInventoryList.length; e++) {
var o;
(o = new E.default()).valueCopy(i.profileManager.data.playerInventoryList[e]);
i.inventoryManager.inventoryList.push(o);
}
}
};
e.getOilGoldData = function(t) {
for (var e = t, o = new T.default(), a = 0; a < i.OIL_GOLD_LIST.length; a++) {
var n = e - i.OIL_GOLD_LIST[a];
if (!(n >= 0)) {
o.index = a;
break;
}
e = n;
o.level++;
}
o.fragments = e;
o.Common.damageMin = o.level;
o.Common.maxHealth = o.level;
o.Common.maxDream = o.level;
o.Common.remoteDamage = .1 * o.level;
return o;
};
e.changeDungeonSize = function() {
var t = i.mapManager.getCurrentMapSize();
if (t) {
c.default.WIDTH_SIZE = t.x;
c.default.HEIGHT_SIZE = t.y;
}
};
e.posToMapPos = function(t) {
var e = i.worldLoader.getCurrentLevelData(), o = i.mapManager.rectDungeon.currentPos, a = cc.v3(0, 0);
a.x = e.roomWidth * o.x + t.x;
a.y = e.height * e.roomHeight - 1 - e.roomWidth * o.y - t.y;
return a;
};
e.savePonit = function(t) {
if (i.chapterIndex != i.CHAPTER099) {
var e = new m.default(), o = i.posToMapPos(t);
e.x = o.x;
e.y = o.y;
e.level = i.level;
e.chapter = i.chapterIndex;
i.savePoinitData.valueCopy(e);
i.saveData();
}
};
e.saveGroundOilGold = function(t) {
var e = new _.default();
if (t > 0) {
var o = i.mapManager.rectDungeon.currentPos;
e.x = o.x;
e.y = o.y;
e.level = i.level;
e.chapter = i.chapterIndex;
e.value = t;
}
i.groundOilGoldData.valueCopy(e);
i.saveData();
};
e.loadingNextRoom = function(t) {
i.mapManager.rand4save = null;
i.saveData();
d.default.play(d.default.EXIT);
if (i.mapManager.loadingNextRoom(t)) {
i.changeDungeonSize();
switch (t) {
case 0:
i.playerData.pos = cc.v3(i.playerData.pos.x, 1);
break;

case 1:
i.playerData.pos = cc.v3(i.playerData.pos.x, c.default.HEIGHT_SIZE - 2);
break;

case 2:
i.playerData.pos = cc.v3(c.default.WIDTH_SIZE - 2, i.playerData.pos.y);
break;

case 3:
i.playerData.pos = cc.v3(1, i.playerData.pos.y);
}
cc.director.loadScene("loading");
}
};
e.loadingNextLevel = function(t) {
i.worldLoader.loadWorld(function() {
if (t) {
var e = i.worldLoader.getLevelData(t.toChapter, t.toLevel);
if (e) {
i.mapManager.rectDungeon || i.mapManager.reset();
if (t.fromChapter != i.CHAPTER099 && t.fromChapter != t.toChapter) {
i.mapManager.rectDungeon.changeAllClearRoomsReborn();
for (var o in i.profileManager.data.rectDungeons) i.profileManager.data.rectDungeons[o] && i.profileManager.data.rectDungeons[o].changeAllClearRoomsReborn();
}
i.saveData();
i.chapterIndex = t.toChapter;
i.level = t.toLevel;
i.chapterMaxIndex < i.chapterIndex && i.chapterIndex < i.CHAPTER05 && (i.chapterMaxIndex = i.chapterIndex);
var a = e.height * e.roomHeight - 1 - t.toPos.y, n = Math.floor(t.toPos.x / e.roomWidth), r = Math.floor(a / e.roomHeight);
i.playerData.pos = cc.v3(t.toPos.x % e.roomWidth, a % e.roomHeight);
i.playerData.posZ = t.toPosZ;
i.mapManager.reset();
i.mapManager.changePos(cc.v3(n, r));
i.changeDungeonSize();
t.fromChapter == i.CHAPTER00 && i.chapterIndex == i.CHAPTER01 ? i.shipTransportScene = 1 : t.fromChapter == i.CHAPTER02 && i.chapterIndex == i.CHAPTER01 ? i.shipTransportScene = 2 : t.fromChapter == i.CHAPTER01 && i.chapterIndex == i.CHAPTER00 ? i.shipTransportScene = 2 : t.fromChapter == i.CHAPTER01 && i.chapterIndex == i.CHAPTER02 && (i.shipTransportScene = 1);
t.fromChapter == i.CHAPTER00 && i.chapterIndex == i.CHAPTER00 && (0 == t.fromLevel && 0 == t.toLevel || (i.elevatorScene = t.fromLevel > i.level ? 1 : 2));
i.playerData.isWakeUp = t.fromChapter != i.CHAPTER099 && t.toChapter == i.CHAPTER099;
i.resetInventoryAndOtherData();
}
}
});
cc.director.loadScene("loading");
};
e.getRandomNum = function(t, e) {
return t + Math.round(p.default.rand() * (e - t));
};
e.getHalfChance = function() {
return p.default.rand() > .5;
};
e.getChance = function(t) {
return i.getRandomNum(0, 100) < t;
};
e.getDistance = function(t, e) {
var i = t.x - e.x, o = t.y - e.y;
return Math.sqrt(i * i + o * o);
};
e.getDistanceNoSqrt = function(t, e) {
var i = t.x - e.x, o = t.y - e.y;
return Math.abs(i) + Math.abs(o);
};
e.lerp = function(t, e, i) {
return t + (e - t) * i;
};
e.lerpPos = function(t, e, i) {
var o = cc.v3(0, 0), a = t.x, n = t.y;
o.x = a + (e.x - a) * i;
o.y = n + (e.y - n) * i;
return o;
};
e.genNonDuplicateID = function() {
return Number(p.default.rand().toString().substr(3, 16) + Date.now()).toString(36);
};
e.getRandomEquipType = function(t) {
return i.equipmentNameList[t.getRandomNum(1, i.equipmentNameList.length - 1)];
};
e.getRandomItemType = function(t) {
return i.itemNameList[t.getRandomNum(1, i.itemNameList.length - 1)];
};
e.getRandomTrashType = function(t) {
return i.trashNameList[t.getRandomNum(1, i.trashNameList.length - 1)];
};
e.spriteFrameRes = function(t) {
return i.spriteFrames[t] ? i.spriteFrames[t] : null;
};
e.getBuildings = function(t, e) {
D.default.loadBuilding(t, function() {
e && e(i.buildings[t]);
});
};
e.getKillPlayerCount = function(t) {
return i.killPlayerCounts[t] ? i.killPlayerCounts[t] : 0;
};
e.setKillPlayerCounts = function(t, e) {
if (t && t.id) {
i.killPlayerCounts[t.id] = i.getKillPlayerCount(t.id) + (e ? 1 : -1);
var o = i.killPlayerCounts;
i.killPlayerCounts = {};
for (var a in o) o[a] && o[a] > 0 && (i.killPlayerCounts[a] = o[a]);
}
};
e.getDialogueCount = function(t) {
return i.dialogueCounts[t] ? i.dialogueCounts[t] : 0;
};
e.addDialogueCount = function(t) {
i.dialogueCounts[t] = i.dialogueCounts[t] + 1;
};
var i;
e.BOSS_LEVEL_1 = 10;
e.CHAPTER00 = 0;
e.CHAPTER01 = 1;
e.CHAPTER02 = 2;
e.CHAPTER03 = 3;
e.CHAPTER04 = 4;
e.CHAPTER05 = 5;
e.CHAPTER099 = 99;
e.OIL_GOLD_LIST = [ 100, 150, 200, 300, 500, 1e3, 1500, 2e3, 3e3, 5e3, 1e4, 15e3, 2e4, 3e4, 5e4, 1e5, 15e4, 2e5, 3e5, 5e5, 1e6, 15e5, 2e6, 3e6, 5e6 ];
e.equipments = null;
e.equipmentNameList = [];
e.itemNameList = [];
e.goodsNameList = [];
e.trashNameList = [];
e.dollNameList = [];
e.monsters = null;
e.nonplayers = null;
e.bosses = null;
e.spriteFrames = null;
e.status = null;
e.suits = null;
e.bullets = null;
e.items = null;
e.talents = null;
e.furnitures = null;
e.normalBuildings = null;
e.professionList = [];
e.buildings = null;
e.audioClips = {};
e.bgmClips = {};
e.dialogues = null;
e.level = 0;
e.chapterIndex = 0;
e.chapterMaxIndex = 0;
e.playerData = new s.default();
e.inventoryManager = new u.default();
e.mapManager = new l.default();
e.worldLoader = new g.default();
e.realCoins = 0;
e.coins = 0;
e.oilGolds = 0;
e.killCount = 0;
e.coinCounts = 0;
e.dialogueCounts = {};
e.totalTime = 0;
e.realTime = 15591456e5;
e.seed = 5;
e.isFirst = 1;
e.isFirstLoading = !0;
e.jumpChapter = 0;
e.jumpSlotIndex = 0;
e.shipTransportScene = 0;
e.elevatorScene = 0;
e.isCheatMode = !1;
e.isDebug = !1;
e.isTour = !1;
e.isGamePause = !1;
e.dieFrom = new f.default();
e.lastBgmIndex = 1;
e.savePoinitData = new m.default();
e.groundOilGoldData = new _.default();
e.killPlayerCounts = {};
e.profileManager = new h.default();
e.bagSortIndex = 0;
e.sortIndexs = {};
e.settings = new S.default();
e.nonPlayerList = [];
return i = n([ R ], e);
}(cc.Component));
i.default = C;
cc._RF.pop();
}, {
"../data/FromData": "FromData",
"../data/GroundOilGoldData": "GroundOilGoldData",
"../data/InventoryData": "InventoryData",
"../data/NonPlayerData": "NonPlayerData",
"../data/OilGoldData": "OilGoldData",
"../data/PlayerData": "PlayerData",
"../data/SavePointData": "SavePointData",
"../data/SettingsData": "SettingsData",
"../manager/InventoryManager": "InventoryManager",
"../manager/LoadingManager": "LoadingManager",
"../manager/MapManager": "MapManager",
"../manager/ProfileManager": "ProfileManager",
"../map/WorldLoader": "WorldLoader",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/LocalStorage": "LocalStorage",
"../utils/Random": "Random",
"../utils/Utils": "Utils",
"./Dungeon": "Dungeon",
"./EventHelper": "EventHelper"
} ],
MagicCircle: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4b4e32e5VZL3KOgwsnsl4rh", "MagicCircle");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isShow = !1;
e.spellNow = !1;
return e;
}
e.prototype.playMagic = function(t) {
this.anim || (this.anim = this.getComponent(cc.Animation));
this.anim.play();
this.anim.getAnimationState("PlayerMagicShow").speed = 2;
this.isShow = !0;
this.spellNow = t;
t && this.talentMaigc && this.talentMaigc.MagicFinish();
};
e.prototype.MagicFinish = function() {
!this.spellNow && this.talentMaigc && this.talentMaigc.MagicFinish();
this.isShow = !1;
};
return n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
MagicIce: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "593bdTc6U9L8aRhkgXkK2Pf", "MagicIce");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isShow = !1;
return e;
}
e.prototype.showIce = function() {
this.anim || (this.anim = this.getComponent(cc.Animation));
this.node.opacity = 128;
this.anim.play("PlayerMagicIceIdle");
this.isShow = !0;
};
e.prototype.breakIce = function() {
this.anim.play("PlayerMagicIceBreak");
this.isShow = !1;
};
return n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
MagicLightening: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6dfcbPWaC1Bm5ogHJjkBBm7", "MagicLightening");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../utils/AudioPlayer"), l = t("../data/FromData"), c = t("../manager/StatusManager"), u = t("../utils/ActorUtils"), p = t("./Building"), h = t("../logic/EventHelper"), d = cc._decorator, f = d.ccclass, g = (d.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.hasTargetMap = new Map();
e.needPrepare = !1;
e.showArea = !1;
e.isTrigger = !0;
e.isAttacked = !1;
e.damagePoint = 5;
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.start = function() {};
e.prototype.fall = function(t, e, i) {
i && i > 0 && (this.damagePoint = i);
this.needPrepare = t;
this.isAttacked = !1;
var o = "LighteningFall";
e && (o = "LighteningFallArea");
if (t) {
o = "LighteningPrepareFall";
this.isAttacked = !0;
}
this.anim = this.getComponent(cc.Animation);
this.anim.play(o);
s.default.play(s.default.BOOM);
h.EventHelper.emit(h.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: !1
});
};
e.prototype.AnimBegin = function() {
this.isAttacked = !1;
};
e.prototype.AnimFinish = function() {
var t = this;
this.scheduleOnce(function() {
t.node && t.destroyEntityNode();
}, 2);
};
e.prototype.onColliderEnter = function(t) {
if (u.default.getEnemyCollisionTarget(t) && this.isTrigger) {
this.isTrigger = !1;
this.fall(!0, !0);
}
};
e.prototype.onColliderStay = function(t, e) {
e.radius > 0 && !this.isAttacked && this.attacking(t.node);
};
e.prototype.attacking = function(t) {
if (t) {
var e = new r.default(), i = c.default.BURNING;
e.magicDamage = this.damagePoint;
i = c.default.DIZZ;
var o = u.default.getEnemyActorByNode(t, !this.needPrepare);
if (o && !o.sc.isDied) {
o.takeDamage(e);
var a = l.default.getClone("闪电", "magiclighteningdown1");
o.addStatus(i, a);
this.isAttacked = !0;
}
}
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .5) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function() {};
return n([ f ], e);
}(p.default));
i.default = g;
cc._RF.pop();
}, {
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/EventHelper": "EventHelper",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"./Building": "Building"
} ],
MapData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9d7bcZhUYBIzJR0A6/ryRxj", "MapData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function t(t) {
this.map = new Array();
this.init(t);
}
t.prototype.init = function(t) {
if (t) {
var e = (t = t.substring(2, t.length - 2)).split("\r\n");
this.map = new Array();
for (var i = 0; i < e.length; i++) this.map[i] = new Array();
for (i = 0; i < e.length; i++) for (var o = e[e.length - 1 - i].split(""), a = 0, n = 0; n < o.length - 1; a++) {
this.map[i][a] = o[n] + o[n + 1];
n += 2;
}
var r = new Array();
for (i = 0; i < this.map[0].length; i++) {
r[i] = new Array();
for (n = 0; n < this.map.length; n++) r[i][n] = this.map[n][i];
}
this.map = r;
}
};
t.prototype.logMap = function() {
for (var t = "", e = this.map[0].length - 1; e >= 0; e--) {
for (var i = 0; i < this.map.length; i++) t += "" + this.map[i][e];
t += "\n";
}
return t;
};
t.prototype.clone = function() {
var e = new t("");
e.map = this.map.slice();
return e;
};
t.prototype.valueCopy = function(t) {
this.map = t && t.map ? t.map : null;
return this;
};
return t;
}();
i.default = o;
cc._RF.pop();
}, {} ],
MapLightData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "c7371Xi6Z1FDZidBXLVH9FT", "MapLightData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {}
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t);
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
MapManagerData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "fc23bpSDqZOALYDNPFUGFLx", "MapManagerData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function() {};
cc._RF.pop();
}, {} ],
MapManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "3b0b2KGAWdGI6jcP8eIcPHE", "MapManager");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../data/MapData"), a = t("../rect/RectRoom"), n = t("../rect/RectDungeon"), r = t("../logic/Logic"), s = t("../utils/Random4Save"), l = t("../rect/RoomType"), c = function() {
function t() {
this.isloaded = !1;
this.rectDungeon = null;
this.init();
}
t.prototype.init = function() {
this.isloaded = !1;
};
t.prototype.clear = function() {};
t.prototype.reset = function() {
var t = r.default.worldLoader.getCurrentLevelData();
this.rand4save = null;
this.rectDungeon = new n.default();
r.default.profileManager.data && r.default.profileManager.data.rectDungeons["" + t.chapter + t.index] ? this.rectDungeon.buildMapFromSave(r.default.profileManager.data.rectDungeons["" + t.chapter + t.index], t) : this.rectDungeon.buildMap(t);
cc.log(this.rectDungeon.getDisPlay());
this.rectDungeon.changeRoomsIsFound(this.rectDungeon.currentPos.x, this.rectDungeon.currentPos.y);
this.isloaded = !0;
cc.log("加载地图完成");
};
t.prototype.changePos = function(t) {
this.rectDungeon.currentPos = t.clone();
this.rectDungeon.changeRoomsIsFound(this.rectDungeon.currentPos.x, this.rectDungeon.currentPos.y);
};
t.prototype.loadingNextRoom = function(t) {
var e = this.rectDungeon.getNeighborRoom(this.rectDungeon.currentPos.x, this.rectDungeon.currentPos.y, t);
if (e && e.roomType) {
this.rectDungeon.currentPos = cc.v3(e.x, e.y);
this.rectDungeon.changeRoomsIsFound(e.x, e.y);
}
return e;
};
t.prototype.getCurrentMapStringArray = function() {
var t = this.getCurrentRoom(), e = new o.default(""), i = r.default.worldLoader.getCurrentLevelData();
e.map = i.getRoomMap(t.x, t.y);
return this.addGenerateThings(e, t.roomType, t.seed, i.needRandomDecorate).map;
};
t.prototype.getCurrentSideMapStringArray = function(t) {
var e = this.getCurrentRoom(), i = new o.default(""), a = r.default.worldLoader.getCurrentLevelData();
i.map = a.getRoomMap(e.x + t.x, e.y + t.y);
return i.map;
};
t.prototype.getCurrentFloorMapStringArray = function() {
var t = this.getCurrentRoom(), e = new o.default(""), i = r.default.worldLoader.getCurrentLevelData();
e.map = i.getRoomFloorMap(t.x, t.y);
return e.map;
};
t.prototype.getCurrentSideFloorMapStringArray = function(t) {
var e = this.getCurrentRoom(), i = new o.default(""), a = r.default.worldLoader.getCurrentLevelData();
i.map = a.getRoomFloorMap(e.x + t.x, e.y + t.y);
return i.map;
};
t.prototype.getCurrentMapSize = function() {
var t = r.default.worldLoader.getCurrentLevelData();
return cc.v3(t.roomWidth, t.roomHeight);
};
t.prototype.getCurrentRoom = function() {
if (this.rectDungeon && this.rectDungeon.map) {
return this.rectDungeon.map[this.rectDungeon.currentPos.x][this.rectDungeon.currentPos.y] || new a.default(1, 1, l.default.Z_ROOM);
}
};
t.prototype.getCurrentMapBuilding = function(t) {
var e = this.rectDungeon.buildings["x=" + this.rectDungeon.currentPos.x + "y=" + this.rectDungeon.currentPos.y];
return e ? e["x=" + t.x + "y=" + t.y] : null;
};
t.prototype.setCurrentBuildingData = function(t) {
var e = this.rectDungeon.buildings["x=" + this.rectDungeon.currentPos.x + "y=" + this.rectDungeon.currentPos.y];
if (!e) {
e = {};
this.rectDungeon.buildings["x=" + this.rectDungeon.currentPos.x + "y=" + this.rectDungeon.currentPos.y] = e;
}
e["x=" + t.defaultPos.x + "y=" + t.defaultPos.y] = t;
};
t.prototype.getCurrentMapEquipments = function() {
return this.rectDungeon.equipments["x=" + this.rectDungeon.currentPos.x + "y=" + this.rectDungeon.currentPos.y];
};
t.prototype.setCurrentEquipmentsArr = function(t) {
this.rectDungeon.equipments["x=" + this.rectDungeon.currentPos.x + "y=" + this.rectDungeon.currentPos.y] = t;
};
t.prototype.getCurrentMapItems = function() {
return this.rectDungeon.items["x=" + this.rectDungeon.currentPos.x + "y=" + this.rectDungeon.currentPos.y];
};
t.prototype.setCurrentItemsArr = function(t) {
this.rectDungeon.items["x=" + this.rectDungeon.currentPos.x + "y=" + this.rectDungeon.currentPos.y] = t;
};
t.prototype.setRoomClear = function(t, e) {
if (this.rectDungeon && this.rectDungeon.map && t < this.rectDungeon.map.length && e < this.rectDungeon.map[0].length) {
this.rectDungeon.map[t][e].state = a.default.STATE_CLEAR;
this.rectDungeon.map[t][e].isReborn = !1;
}
};
t.prototype.getCurrentRoomState = function() {
return this.getCurrentRoom().state;
};
t.prototype.isCurrentRoomStateClear = function() {
return this.getCurrentRoomState() == a.default.STATE_CLEAR;
};
t.prototype.getCurrentRoomType = function() {
return this.getCurrentRoom().roomType;
};
t.prototype.isNeighborRoomExist = function(t) {
return !!this.rectDungeon.getNeighborRoom(this.rectDungeon.currentPos.x, this.rectDungeon.currentPos.y, t);
};
t.prototype.isNeighborRoomNew = function(t) {
var e = this.rectDungeon.getNeighborRoom(this.rectDungeon.currentPos.x, this.rectDungeon.currentPos.y, t);
return !!e && e.state != a.default.STATE_CLEAR;
};
t.prototype.isNeighborRoomStateClear = function(t) {
var e = this.rectDungeon.getNeighborRoom(this.rectDungeon.currentPos.x, this.rectDungeon.currentPos.y, t);
return !!e && e.state == a.default.STATE_CLEAR;
};
t.prototype.getCurrentRoomRandom4Save = function() {
var t = this.getCurrentRoom();
if (t) {
if (!this.rand4save) {
this.rand4save = new s.default(t.seed);
this.rand4save.Seed = t.seed;
}
} else this.rand4save || (this.rand4save = new s.default(0));
return this.rand4save;
};
t.prototype.getRebornSeed = function(t) {
return t + 1e8 * r.default.mapManager.getCurrentRoom().reborn;
};
t.prototype.getSeedFromRoom = function() {
return r.default.mapManager.getCurrentRoomRandom4Save().getRandomNum(0, 1e8);
};
t.prototype.getRandom4Save = function(t) {
var e = new s.default(t > 0 ? t : this.getSeedFromRoom());
e.rand();
return e;
};
t.prototype.addGenerateThings = function(t, e, i, o) {
var a = new s.default(i);
cc.log("seed:" + i);
if (l.default.isDecorateRoomType(e) && o) {
a = new s.default(i);
this.addDecorate(t, a);
}
return t;
};
t.prototype.addRandomTile = function(t, e) {
for (var i = [], o = 0; o < 10; o++) {
var a = e.getRandomNum(0, t.map.length - 1), n = e.getRandomNum(0, t.map[0].length - 1);
i.push(cc.v3(a, 0));
i.push(cc.v3(0, n));
i.push(cc.v3(a, n));
}
for (var r = 0, s = i; r < s.length; r++) {
var l = s[r];
"**" == t.map[l.x][l.y] && (t.map[l.x][l.y] = "*" + e.getRandomNum(0, 2));
}
};
t.prototype.addDecorate = function(t, e) {
for (var i = [], o = 0; o < 2; o++) {
var a = e.getRandomNum(1, t.map.length - 2), n = e.getRandomNum(1, t.map[0].length - 2);
i.push(cc.v3(a, n));
}
for (var r = 0, s = i; r < s.length; r++) {
var l = s[r];
t.map[l.x][l.y] && -1 == t.map[l.x][l.y].indexOf("W") || (t.map[l.x][l.y] = "W" + e.getRandomNum(0, 2));
}
};
return t;
}();
i.default = c;
cc._RF.pop();
}, {
"../data/MapData": "MapData",
"../logic/Logic": "Logic",
"../rect/RectDungeon": "RectDungeon",
"../rect/RectRoom": "RectRoom",
"../rect/RoomType": "RoomType",
"../utils/Random4Save": "Random4Save"
} ],
MartCashier: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "88c99phMSBLjpgR45Dw2hZG", "MartCashier");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/AudioPlayer"), s = t("./Building"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.onLoad = function() {};
e.prototype.start = function() {
r.default.play(r.default.WELCOME);
};
e.prototype.onColliderEnter = function() {};
e.prototype.onColliderExit = function() {};
return n([ c ], e);
}(s.default));
i.default = u;
cc._RF.pop();
}, {
"../utils/AudioPlayer": "AudioPlayer",
"./Building": "Building"
} ],
MartShelvesDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "24e528ueQhMDYfsDE3eSpqK", "MartShelvesDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../data/GoodsData"), s = t("../../logic/EventHelper"), l = t("../../item/Goods"), c = t("../../logic/Logic"), u = t("../../utils/AudioPlayer"), p = t("./BaseDialog"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.goods = null;
e.layer = null;
e.spriteNode = null;
e.fridgeNode = null;
e.fridgeLayer = null;
e.doorLeft = null;
e.doorRight = null;
e.payNode = null;
e.payTitle = null;
e.payDesc = null;
e.payIcon = null;
e.type = i.TYPE_NORMAL;
e.goodsList = [];
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
s.EventHelper.on(s.EventHelper.HUD_MART_SHELVES_DIALOG_PAY, function(e) {
t.node && t.showPay(e.data);
});
};
e.prototype.showPay = function(t) {
this.goodsData = t;
this.payTitle.string = "" + t.item.nameCn;
this.payDesc.string = "价格：" + t.item.price + "\n\n说明：" + t.item.info + "\n" + t.item.desc;
if (c.default.spriteFrameRes(t.item.resName)) {
this.payIcon.spriteFrame = c.default.spriteFrameRes(t.item.resName);
this.payIcon.node.width = this.payIcon.spriteFrame.getOriginalSize().width;
this.payIcon.node.height = this.payIcon.spriteFrame.getOriginalSize().height;
}
this.payNode.active = !0;
};
e.prototype.Pay = function() {
if (c.default.coins >= this.goodsData.item.price) {
s.EventHelper.emit(s.EventHelper.HUD_ADD_COIN, {
count: -this.goodsData.item.price
});
u.default.play(u.default.CASHIERING);
s.EventHelper.emit(s.EventHelper.PLAYER_CHANGEITEM, {
itemData: this.goodsData.item
});
this.close();
} else u.default.play(u.default.SELECT_FAIL);
};
e.prototype.Cancel = function() {
u.default.play(u.default.SELECT);
this.payNode.active = !1;
};
e.prototype.updateUI = function(t, e) {
this.payNode.active = !1;
this.spriteNode.active = !1;
this.fridgeNode.active = !1;
this.type = t;
this.changeBg(t);
this.addGoods(t, e);
};
e.prototype.changeBg = function(t) {
if (!this.martshelvesbg) {
this.martshelvesbg = this.node.getChildByName("sprite").getChildByName("martshelves");
this.martshelvesside0 = this.node.getChildByName("sprite").getChildByName("martshelvesside0");
this.martshelvesside1 = this.node.getChildByName("sprite").getChildByName("martshelvesside1");
this.martshelvesside2 = this.node.getChildByName("sprite").getChildByName("martshelvesside2");
this.martshelvesside3 = this.node.getChildByName("sprite").getChildByName("martshelvesside3");
}
if (t == i.TYPE_FRIDGE) {
this.fridgeNode.active = !0;
this.doorLeft.scaleX = 1;
this.doorRight.scaleX = 1;
} else this.spriteNode.active = !0;
var e = t == i.TYPE_WOOD ? "#DF8143" : "#FFFFFF";
this.martshelvesbg.color = cc.color().fromHEX(e);
this.martshelvesside0.color = cc.color().fromHEX(e);
this.martshelvesside1.color = cc.color().fromHEX(e);
this.martshelvesside2.color = cc.color().fromHEX(e);
this.martshelvesside3.color = cc.color().fromHEX(e);
};
e.prototype.addGoods = function(t, e) {
var o = this;
this.layer.removeAllChildren();
this.fridgeLayer.removeAllChildren();
for (var a = t == i.TYPE_FRIDGE, n = a ? this.fridgeLayer : this.layer, s = a ? i.SIZE_FRIDGE : i.SIZE, u = 0; u < s; u++) if (!(u > e.length - 1)) {
var p = cc.instantiate(this.goods).getComponent(l.default), h = new r.default();
h.count = 1;
h.item.valueCopy(c.default.items[e[u]]);
p.init(h);
this.goodsList.push(p);
n.addChild(p.node);
}
a && this.scheduleOnce(function() {
o.anim || (o.anim = o.getComponent(cc.Animation));
o.anim.play();
}, 1);
};
e.prototype.close = function() {
u.default.play(u.default.SELECT);
this.fridgeNode.active = !1;
this.spriteNode.active = !1;
this.payNode.active = !1;
this.dismiss();
};
var i;
e.SIZE = 21;
e.SIZE_FRIDGE = 12;
e.TYPE_NORMAL = "S3";
e.TYPE_WOOD = "S4";
e.TYPE_FRIDGE = "S5";
n([ f(cc.Prefab) ], e.prototype, "goods", void 0);
n([ f(cc.Node) ], e.prototype, "layer", void 0);
n([ f(cc.Node) ], e.prototype, "spriteNode", void 0);
n([ f(cc.Node) ], e.prototype, "fridgeNode", void 0);
n([ f(cc.Node) ], e.prototype, "fridgeLayer", void 0);
n([ f(cc.Node) ], e.prototype, "doorLeft", void 0);
n([ f(cc.Node) ], e.prototype, "doorRight", void 0);
n([ f(cc.Node) ], e.prototype, "payNode", void 0);
n([ f(cc.Label) ], e.prototype, "payTitle", void 0);
n([ f(cc.Label) ], e.prototype, "payDesc", void 0);
n([ f(cc.Sprite) ], e.prototype, "payIcon", void 0);
return i = n([ d ], e);
}(p.default);
i.default = g;
cc._RF.pop();
}, {
"../../data/GoodsData": "GoodsData",
"../../item/Goods": "Goods",
"../../logic/EventHelper": "EventHelper",
"../../logic/Logic": "Logic",
"../../utils/AudioPlayer": "AudioPlayer",
"./BaseDialog": "BaseDialog"
} ],
MartShelves: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4800aSbfApGHYS7nMK4o5Bn", "MartShelves");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/GoodsData"), s = t("../logic/EventHelper"), l = t("../item/Goods"), c = t("../logic/Logic"), u = t("../ui/Tips"), p = t("./Building"), h = t("../utils/IndexZ"), d = cc._decorator, f = d.ccclass, g = d.property, y = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.goods = null;
e.layer = null;
e.type = i.TYPE_NORMAL;
e.goodsList = [];
e.goodsNameList = [];
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.tips = this.getComponentInChildren(u.default);
this.tips.onInteract(function() {
t.node && s.EventHelper.emit(s.EventHelper.HUD_MART_SHELVES_DIALOG, {
type: t.type,
goodsNameList: t.goodsNameList
});
});
};
e.prototype.init = function(t, e) {
this.goodsNameList = e;
this.type = t;
this.changeBg(t);
this.addGoods(e);
this.node.zIndex = h.default.getActorZIndex(cc.v3(this.node.position.x, this.node.position.y + this.ccolliders[0].offset.y));
};
e.prototype.changeBg = function(t) {
if (!this.martshelvesbg) {
this.martshelvesbg = this.node.getChildByName("sprite").getChildByName("martshelves");
this.martshelvesside0 = this.node.getChildByName("sprite").getChildByName("martshelvesside0");
this.martshelvesside1 = this.node.getChildByName("sprite").getChildByName("martshelvesside1");
this.martshelvesside2 = this.node.getChildByName("sprite").getChildByName("martshelvesside2");
this.martshelvesside3 = this.node.getChildByName("sprite").getChildByName("martshelvesside3");
}
var e = t == i.TYPE_WOOD ? "#DF8143" : "#FFFFFF";
this.martshelvesbg.color = cc.color().fromHEX(e);
t != i.TYPE_FRIDGE && (this.martshelvesside0.color = cc.color().fromHEX(e));
this.martshelvesside1.color = cc.color().fromHEX(e);
this.martshelvesside2.color = cc.color().fromHEX(e);
this.martshelvesside3.color = cc.color().fromHEX(e);
};
e.prototype.addGoods = function(t) {
this.layer.removeAllChildren();
for (var e = this.type == i.TYPE_FRIDGE ? i.SIZE_FRIDGE : i.SIZE_NORMAL, o = 0; o < e; o++) {
if (o > t.length - 1) return;
var a = cc.instantiate(this.goods).getComponent(l.default), n = new r.default();
n.count = 10;
n.item.valueCopy(c.default.items[t[o]]);
a.init(n);
this.goodsList.push(a);
this.layer.addChild(a.node);
}
};
e.prototype.onColliderEnter = function() {};
e.prototype.onColliderExit = function() {};
var i;
e.SIZE_NORMAL = 21;
e.SIZE_FRIDGE = 12;
e.TYPE_NORMAL = "S3";
e.TYPE_WOOD = "S4";
e.TYPE_FRIDGE = "S5";
n([ g(cc.Prefab) ], e.prototype, "goods", void 0);
n([ g(cc.Node) ], e.prototype, "layer", void 0);
return i = n([ f ], e);
}(p.default);
i.default = y;
cc._RF.pop();
}, {
"../data/GoodsData": "GoodsData",
"../item/Goods": "Goods",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../ui/Tips": "Tips",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
MeleeCollideHelper: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "ce146frW1JL46/ZCU5RTQI5", "MeleeCollideHelper");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/Utils"), s = t("../base/BaseColliderComponent"), l = t("./MeleeWeapon"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.meleeWeapon = null;
e.hv = cc.v2(1, 0);
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.collider = this.entity.Collider.colliders[0];
this.entity && this.entity.Move && (this.entity.Move.isStatic = !0);
};
Object.defineProperty(e.prototype, "Hv", {
get: function() {
return this.hv;
},
set: function(t) {
this.hv = t.normalize();
},
enumerable: !1,
configurable: !0
});
e.prototype.updateLogic = function(t) {
if (this.collider) {
var e = this.meleeWeapon.Hv, i = this.meleeWeapon.ccolliders[0];
this.hv = e.clone();
this.collider.offset = i.offset;
this.collider.w = i.w;
this.collider.h = i.h;
this.collider.zHeight = i.zHeight;
this.entity.Transform.z = this.meleeWeapon.player.entity.Transform.z;
this.rotateCollider(this.hv);
this.node.position = t;
}
};
e.prototype.rotateCollider = function(t) {
t.equals(cc.Vec2.ZERO) || (this.node.angle = r.default.getRotateAngle(t, !1));
};
e.prototype.onColliderStay = function(t, e) {
this.meleeWeapon && this.meleeWeapon.onColliderStay(t, e);
};
n([ p(l.default) ], e.prototype, "meleeWeapon", void 0);
return n([ u ], e);
}(s.default);
i.default = h;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../utils/Utils": "Utils",
"./MeleeWeapon": "MeleeWeapon"
} ],
MeleeShadowWeapon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "42691fWENBA0qvnMd6/WcCK", "MeleeShadowWeapon");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/AudioPlayer"), s = t("../utils/Utils"), l = t("../base/BaseColliderComponent"), c = t("../data/TriggerData"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.player = null;
e.isAttacking = !1;
e.hv = cc.v2(1, 0);
e.comboType = 0;
e.hasTargetMap = new Map();
return e;
}
Object.defineProperty(e.prototype, "IsAttacking", {
get: function() {
return this.isAttacking;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsReflect", {
get: function() {
return !!this.meleeWeapon && this.meleeWeapon.IsReflect;
},
enumerable: !1,
configurable: !0
});
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.entity && this.entity.Move && (this.entity.Move.isStatic = !0);
};
e.prototype.init = function(t, e) {
this.anim = this.getComponent(cc.Animation);
this.player = t;
this.meleeWeapon = e;
};
Object.defineProperty(e.prototype, "Hv", {
get: function() {
return this.hv;
},
set: function(t) {
this.hv = t.normalizeSelf();
},
enumerable: !1,
configurable: !0
});
e.prototype.attack = function(t, e, i) {
this.updateHv(i);
this.comboType = e;
this.hasTargetMap.clear();
this.isAttacking = !0;
var o = this.meleeWeapon.getAttackAnimName(e);
this.anim.play(o);
this.anim.getAnimationState(o).speed = this.meleeWeapon.getAnimSpeed(t.FinalCommon);
return !0;
};
e.prototype.attackIdle = function(t) {
this.anim && this.anim.play(t ? "MeleeAttackIdleReverse" : "MeleeAttackIdle");
};
e.prototype.MeleeAttackFinish = function() {
this.isAttacking = !1;
};
e.prototype.ComboStart = function() {};
e.prototype.ComboFinish = function() {};
e.prototype.ComboTime = function() {};
e.prototype.ExAttackTime = function() {
this.player.exTrigger(c.default.GROUP_ATTACK, this.comboType, null, null);
};
e.prototype.AudioTime = function() {
this.meleeWeapon && this.meleeWeapon.AudioTime();
};
e.prototype.RefreshTime = function() {
this.hasTargetMap.clear();
};
e.prototype.DashTime = function() {
r.default.play(r.default.DASH);
};
e.prototype.EffectTime = function() {};
e.prototype.updateHv = function(t) {
this.hv = t;
this.rotateCollider(this.hv);
};
e.prototype.rotateCollider = function(t) {
if (!t.equals(cc.Vec2.ZERO)) {
var e = Math.abs(this.node.scaleX), i = Math.abs(this.node.scaleY);
this.node.scaleX = this.player.node.scaleX > 0 ? e : -e;
this.node.scaleY = this.node.scaleX < 0 ? -i : i;
this.node.angle = s.default.getRotateAngle(t, this.node.scaleX < 0);
}
};
e.prototype.onColliderStay = function(t, e) {
if (e.w > 0 && e.h > 0) {
if (this.hasTargetMap.has(t.id) && this.hasTargetMap.get(t.id) > 0) {
this.hasTargetMap.set(t.id, this.hasTargetMap.get(t.id) + 1);
return !1;
}
this.hasTargetMap.set(t.id, 1);
return !!this.meleeWeapon && this.meleeWeapon.attacking(t, e, this.anim, !0);
}
};
return n([ p ], e);
}(l.default));
i.default = h;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../data/TriggerData": "TriggerData",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils"
} ],
MeleeWeapon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "8747dgi/6dFupzO0r46t7Ya", "MeleeWeapon");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./NonPlayer"), s = t("./EventHelper"), l = t("../building/Box"), c = t("./Logic"), u = t("../data/DamageData"), p = t("../manager/StatusManager"), h = t("../boss/Boss"), d = t("../utils/NextStep"), f = t("../data/FromData"), g = t("../utils/AudioPlayer"), y = t("../utils/IndexZ"), m = t("../manager/InventoryManager"), v = t("../data/CommonData"), E = t("../data/AvatarData"), _ = t("../utils/ActorUtils"), T = t("../building/InteractBuilding"), D = t("../utils/Utils"), S = t("../collider/CCollider"), O = t("../base/BaseColliderComponent"), A = t("../data/TriggerData"), R = t("../building/Emplacement"), C = t("../base/PlayActor"), P = t("../base/BaseAvatar"), L = t("../effect/ReflectLight"), b = t("../building/NormalBuilding"), I = t("../ecs/system/GameWorldSystem"), M = cc._decorator, N = M.ccclass, w = M.property, H = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.playerNode = null;
e.player = null;
e.iceLight = null;
e.fireLight = null;
e.lighteningLight = null;
e.toxicLight = null;
e.curseLight = null;
e.reflectLight = null;
e.meleeLightLeftPos = cc.v3(8, 0);
e.meleeLightRightPos = cc.v3(-8, 0);
e.isAttacking = !1;
e.hv = cc.v2(1, 0);
e.isStab = !0;
e.isFar = !1;
e.isFist = !0;
e.isBlunt = !1;
e.weaponFirePoints = [];
e.isMiss = !1;
e.drainSkill = new d.default();
e.isReflect = !1;
e.spriteNode = null;
e.weaponSprite = null;
e.weaponLightSprite = null;
e.handSprite = null;
e.glovesSprite = null;
e.comboType = 0;
e.isComboing = !1;
e.hasTargetMap = new Map();
e.isSecond = !1;
e.currentAngle = 0;
e.fistCombo = 0;
e.exBeatBack = 0;
e.isAttackPressed = !1;
e.comboMiss = !1;
e.canMove = !1;
return e;
}
i = e;
Object.defineProperty(e.prototype, "CanMove", {
get: function() {
return this.canMove || !this.isAttacking;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsSword", {
get: function() {
return !(this.isStab || this.isFar || this.isFist || this.isBlunt);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsDagger", {
get: function() {
return this.isStab && !this.isFar && !this.isFist && !this.isBlunt;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsSecond", {
set: function(t) {
this.isSecond = t;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsFist", {
get: function() {
return this.isFist;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsComboing", {
get: function() {
return this.isComboing;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsAttacking", {
get: function() {
return this.isAttacking;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsReflect", {
get: function() {
return this.isReflect;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "GlovesSprite", {
get: function() {
return this.glovesSprite;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "ComboType", {
get: function() {
return this.comboType;
},
enumerable: !1,
configurable: !0
});
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.anim = this.getComponent(cc.Animation);
this.player = this.playerNode.getComponent(C.default);
this.meleeLightLeftPos = this.player.node.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(this.meleeLightLeftPos));
this.meleeLightRightPos = this.player.node.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(this.meleeLightRightPos));
this.initSprite();
this.entity.destroy();
};
e.prototype.initSprite = function() {
this.weaponFirePoint = this.node.getChildByName("firepoint");
this.weaponReflectPoint = this.node.getChildByName("reflectpoint");
this.spriteNode = this.node.getChildByName("sprite");
this.weaponSprite = this.getSpriteChildSprite([ "sprite", m.default.WEAPON ]);
this.weaponLightSprite = this.getSpriteChildSprite([ "sprite", "meleelight" ]);
this.handSprite = this.getSpriteChildSprite([ "sprite", "hand" ]);
this.glovesSprite = this.getSpriteChildSprite([ "sprite", "hand", "gloves" ]);
this.handSprite.node.color = cc.Color.WHITE.fromHEX(this.player.avatar.data.skinColor);
for (var t = 0; t < 4; t++) this.weaponFirePoints.push(this.weaponFirePoint.getChildByName("point" + t));
};
Object.defineProperty(e.prototype, "Hv", {
get: function() {
return this.hv;
},
set: function(t) {
this.hv = t;
},
enumerable: !1,
configurable: !0
});
e.prototype.getSpriteChildSprite = function(t) {
for (var e = this.node, i = 0, o = t; i < o.length; i++) {
var a = o[i];
e = e.getChildByName(a);
}
return e.getComponent(cc.Sprite);
};
e.prototype.changeSprite = function(t, e) {
this.weaponSprite.spriteFrame = e;
var i = cc.color(255, 255, 255).fromHEX(t.color), o = cc.color(255, 255, 255).fromHEX(t.lightcolor);
this.weaponSprite.node.color = i;
this.weaponLightSprite.node.color = o;
this.isStab ? this.weaponSprite.node.angle = 15 : this.weaponSprite.node.angle = -235;
this.weaponSprite.node.width = this.weaponSprite.spriteFrame.getOriginalSize().width;
this.weaponSprite.node.height = this.weaponSprite.spriteFrame.getOriginalSize().height;
};
e.prototype.changeEquipment = function(t, e) {
this.isStab = 1 == t.stab;
this.isFar = 1 == t.far;
this.isReflect = 1 == t.isReflect;
this.isFist = m.default.WEAPON != t.equipmetType;
this.isBlunt = 1 == t.blunt;
this.exBeatBack = c.default.inventoryManager.getEquipBySuit(t).exBeatBack;
this.changeSprite(t, e);
};
e.prototype.updateCombo = function() {
this.comboType == i.COMBO1 ? this.comboType = i.COMBO2 : this.comboType == i.COMBO2 ? this.comboType = i.COMBO3 : (this.comboType, 
i.COMBO3, this.comboType = i.COMBO1);
this.isComboing || (this.comboType = i.COMBO1);
};
e.prototype.attack = function(t, e) {
this.playerData = t.clone();
var i = c.default.getRandomNum(0, 100) < t.StatusTotalData.missRate;
if (this.isAttacking || !this.anim) {
if (this.isComboing) {
this.isAttackPressed = !0;
this.comboMiss = i;
}
return !1;
}
i && this.player.showFloatFont(0, !1, !0, !1, !1, !1, !1);
return this.attackDo(t, i, e);
};
e.prototype.attackDo = function(t, e, i) {
this.node.angle = this.currentAngle;
this.hasTargetMap.clear();
this.fistCombo = i;
this.isMiss = e;
this.isAttacking = !0;
this.canMove = !1;
this.updateCombo();
var o = this.getAttackAnimName();
this.anim.play(o);
this.anim.getAnimationState(o).speed = this.getAnimSpeed(t.FinalCommon);
this.player.sc.isJumping && this.player.jumpAbility.acceleratedFall(2);
return !0;
};
e.prototype.getAnimSpeed = function(t) {
var e = 1;
this.isStab && !this.isFar && (e = 1.8);
this.isStab || this.isFar || (e = 1.5);
this.isStab && this.isFar && (e = 1.5);
!this.isStab && this.isFar && (e = 1.2);
this.isFist && (e = 1);
var i = 1 + t.AttackSpeed / 500;
i < .8 && (i = .8);
i > 3 && (i = 3);
return i * e;
};
e.prototype.attackIdle = function(t) {
this.anim && this.anim.play(t ? "MeleeAttackIdleReverse" : "MeleeAttackIdle");
};
e.prototype.MoveAction = function() {
this.canMove = !0;
};
e.prototype.getMeleeSlowRatio = function() {
return this.canMove || !this.isAttacking ? 1 : !this.isFar && this.isStab ? .1 : this.isFar && this.isStab ? .04 : this.isFar || this.isStab ? .02 : .04;
};
e.prototype.getAttackAnimName = function(t) {
var e;
e = !this.isFar && this.isStab || this.isFist ? this.isFist ? "MeleeAttackFist" : "MeleeAttackStab" : this.isFar && this.isStab ? "MeleeAttackStabFar" : this.isFar && !this.isStab ? this.isBlunt ? "MeleeAttackBluntFar" : "MeleeAttackFar" : this.isBlunt ? "MeleeAttackBlunt" : "MeleeAttack";
return this.player.sc.isJumping ? "MeleeAttackKick1" : e + this.getComboSuffix(t);
};
e.prototype.getComboSuffix = function(t) {
return this.isFist ? this.isSecond ? "2" : "1" : (t = t || this.comboType) == i.COMBO1 ? "1" : t == i.COMBO2 ? "2" : t == i.COMBO3 ? "3" : "1";
};
e.prototype.getReflectLight = function(t, e, i, o, a, n, r, s) {
var l = this;
if (this.weaponReflectPoint && (!n || !this.player.sc.isJumping)) {
var c = e.w_center.sub(i.w_center).normalize(), u = this.player.node.convertToWorldSpaceAR(c.mul(this.weaponReflectPoint.position.mag())), p = I.default.colliderSystem.getNearestColliderPoint(i.w_center, u, e).point;
if (!(this.hv.dot(c) < -.8)) {
var h = this.player.node.convertToWorldSpaceAR(cc.Vec3.ZERO), d = this.node.convertToWorldSpaceAR(cc.Vec3.ZERO).y - h.y;
p.y += d;
var f = this.dungeon.node.convertToNodeSpaceAR(p);
if (n) {
var g = this.player.hv.clone();
this.player.sc.isMoving = !1;
this.player.isWeaponDashing = !0;
g = g.equals(cc.Vec2.ZERO) ? this.player.isFaceRight ? cc.v2(1, 0) : cc.v2(-1, 0) : g.normalizeSelf();
this.hv = g.clone();
g = g.mul(-3);
this.player.entity.Move.linearVelocity = g;
this.scheduleOnce(function() {
l.player.isWeaponDashing = !1;
l.player.entity.Move.linearVelocity = cc.Vec2.ZERO;
l.player.playerAnim(P.default.STATE_IDLE, l.player.currentDir);
}, .2);
}
if (this.reflectLight) {
var y = cc.instantiate(this.reflectLight).getComponent(L.default), m = L.default.AUDIO_TYPE_MELEE;
if (n) {
m = L.default.AUDIO_TYPE_METAL;
(e.audioMaterial != S.default.AUDIO_MATERIAL.METAL || this.isFist) && (m = L.default.AUDIO_TYPE_WOOD);
}
y.show(t, cc.v3(f), o, a, n, r, s, m);
}
}
}
};
e.prototype.getWaveLight = function(t, e, i) {
var o = [ this.iceLight, this.fireLight, this.lighteningLight, this.toxicLight, this.curseLight ], a = [ g.default.ELECTRIC_ATTACK, g.default.FIREBALL, g.default.ELECTRIC_ATTACK, g.default.ELECTRIC_ATTACK, g.default.ELECTRIC_ATTACK ];
if (!(i < 1 || i > o.length) && this.dungeon) {
var n = cc.instantiate(o[i - 1]);
g.default.play(a[i - 1]);
for (var r = this.anim.getAnimationState(this.getAttackAnimName()).speed, s = [ e ], l = 0, c = this.weaponFirePoints; l < c.length; l++) {
var u = c[l];
u && s.push(e.add(u.position));
}
for (var p = 0; p < s.length; p++) {
var h = s[p];
h = this.node.convertToWorldSpaceAR(h);
h = t.convertToNodeSpaceAR(h);
s[p] = h.clone();
}
n.parent = t;
n.position = s[0];
n.zIndex = y.default.OVERHEAD;
n.opacity = 255;
n.setScale(.2);
n.active = !0;
cc.tween(n).to(.1 / r, {
position: s[1]
}).to(.1 / r, {
position: s[2]
}).to(.1 / r, {
position: s[3]
}).to(.1 / r, {
position: s[4]
}).start();
}
};
e.prototype.MeleeAttackFinish = function() {
this.isAttacking = !1;
this.isFist || (this.isComboing = !1);
};
e.prototype.ComboStart = function() {
this.isComboing = !0;
};
e.prototype.ComboFinish = function() {
this.isComboing = !1;
};
e.prototype.ComboTime = function() {
if (this.isAttackPressed) {
this.isAttackPressed = !1;
this.anim.pause();
this.comboMiss && this.player.showFloatFont(0, !1, !0, !1, !1, !1, !1);
this.attackDo(this.playerData, this.comboMiss, this.fistCombo);
this.player.playerAnim(this.player.sc.isJumping ? P.default.STATE_AIRKICK : P.default.STATE_ATTACK, this.player.currentDir);
this.player.stopHiding();
this.isComboing = !1;
}
};
e.prototype.ExAttackTime = function() {
this.player.exTrigger(A.default.GROUP_ATTACK, this.comboType, null, null);
};
e.prototype.AudioTime = function() {
var t = g.default.MELEE, e = [ g.default.DAGGER_ATTACK1, g.default.DAGGER_ATTACK2 ], o = e[c.default.getRandomNum(0, e.length - 1)], a = [ g.default.SWORD_ATTACK, g.default.SWORD_ATTACK1, g.default.SWORD_ATTACK2 ], n = a[c.default.getRandomNum(0, a.length - 1)], r = [ g.default.FIST, g.default.FIST1, g.default.FIST2 ], s = r[c.default.getRandomNum(0, r.length - 1)], l = [ g.default.STICK_ATTACK1, g.default.STICK_ATTACK2, g.default.STICK_ATTACK3 ], u = r[c.default.getRandomNum(0, l.length - 1)];
if (this.isStab && !this.isFar) {
t = o;
this.comboType == i.COMBO3 && (t = g.default.DAGGER_ATTACK);
}
this.isStab || this.isFar || (t = n);
if (this.isStab && this.isFar) {
t = u;
this.comboType == i.COMBO3 && (t = n);
}
if (!this.isStab && this.isFar) {
t = u;
this.comboType == i.COMBO3 && (t = g.default.STICK_ATTACK);
}
this.isFist && (t = s);
this.player.sc.isJumping && (t = g.default.MELEE);
g.default.play(t);
};
e.prototype.RefreshTime = function() {
this.hasTargetMap.clear();
};
e.prototype.DashTime = function(t) {
var e = this;
g.default.play(g.default.DASH);
t || (t = 6);
this.player.sc.isJumping && (t = 8 + this.player.entity.Transform.z / 20);
this.schedule(function() {
e.player.getWalkSmoke(e.player.node, e.node.position);
}, .05, 4, 0);
var i = this.player.hv.clone();
this.player.sc.isMoving = !1;
this.player.isWeaponDashing = !0;
i = i.equals(cc.Vec2.ZERO) ? this.player.isFaceRight ? cc.v2(1, 0) : cc.v2(-1, 0) : i.normalizeSelf();
this.hv = i.clone();
i = i.mul(t);
this.player.entity.Move.linearVelocity = i;
this.scheduleOnce(function() {
e.player.isWeaponDashing = !1;
e.player.entity.Move.linearVelocity = cc.Vec2.ZERO;
e.player.playerAnim(P.default.STATE_IDLE, e.player.currentDir);
}, .2);
};
e.prototype.EffectTime = function() {
var t = this, e = this.weaponFirePoint.position.clone(), o = c.default.getRandomNum(0, 100), a = this.playerData.FinalCommon, n = [ a.MagicDamage > 0 && o < a.iceRate ? i.ELEMENT_TYPE_ICE : 0, a.MagicDamage > 0 && o < a.fireRate ? i.ELEMENT_TYPE_FIRE : 0, a.MagicDamage > 0 && o < a.lighteningRate ? i.ELEMENT_TYPE_LIGHTENING : 0, a.MagicDamage > 0 && o < a.toxicRate ? i.ELEMENT_TYPE_TOXIC : 0, a.MagicDamage > 0 && o < a.curseRate ? i.ELEMENT_TYPE_CURSE : 0 ];
this.scheduleOnce(function() {
for (var i = 0, o = n; i < o.length; i++) {
var a = o[i];
t.dungeon && t.getWaveLight(t.dungeon.node, e, a, t.isStab, t.isFar);
}
}, 0);
};
e.prototype.setWeaponInVisible = function(t) {
this.weaponSprite.node.opacity = t ? 0 : 255;
};
e.prototype.updateLogic = function(t) {
this.hv = this.player.Hv.clone();
this.CanMove && this.rotateCollider(this.hv);
this.node.angle = c.default.lerp(this.node.angle, this.currentAngle, 5 * t);
};
e.prototype.rotateCollider = function(t) {
if (!t.equals(cc.Vec2.ZERO)) {
var e = Math.abs(this.node.scaleX);
this.node.scaleX = this.player.node.scaleX > 0 ? e : -e;
var i = Math.abs(this.node.scaleY);
this.node.scaleY = this.node.scaleX < 0 ? -i : i;
this.currentAngle = D.default.getRotateAngle(t, this.node.scaleX < 0);
this.currentAngle < 0 && (this.currentAngle += 360);
this.currentAngle >= 0 && this.currentAngle <= 90 && this.node.angle >= 225 && this.node.angle <= 360 ? this.node.angle -= 360 : this.node.angle >= 0 && this.node.angle <= 90 && this.currentAngle >= 225 && this.currentAngle <= 360 && (this.node.angle += 360);
}
};
e.prototype.onColliderStay = function(t, e) {
if (e.w > 0 && e.h > 0) {
if (this.hasTargetMap.has(t.id) && this.hasTargetMap.get(t.id) > 0) {
this.hasTargetMap.set(t.id, this.hasTargetMap.get(t.id) + 1);
return !1;
}
this.hasTargetMap.set(t.id, 1);
return this.attacking(t, e, this.anim, !1);
}
};
e.prototype.beatBack = function(t) {
var e = this.Hv.clone();
e.equals(cc.Vec2.ZERO) && (e = cc.v2(1, 0));
var o = 3;
o = !this.isFar && this.isStab ? 3 : this.isFar && this.isStab ? 6 : this.isFar && !this.isStab ? 5 : (this.isFar || this.isStab, 
3);
this.comboType == i.COMBO3 && (o += 2);
o += this.exBeatBack;
e = e.normalize().mul(o);
this.scheduleOnce(function() {
t.entity.Move.linearVelocity = cc.v2(e.x, e.y).mul(t.sc.isAttacking ? .2 : 1);
}, .05);
};
e.prototype.attacking = function(t, e, o, a) {
var n = this;
if (!t || !this.isAttacking) return !1;
var p = new u.default(), d = new v.default();
if (this.player) {
p = this.player.playerData.getFinalAttackPoint();
d = this.player.playerData.FinalCommon;
}
p.isStab = this.isStab;
p.isFist = this.isFist;
p.isFar = this.isFar;
p.isBlunt = this.isBlunt;
p.isMelee = !0;
p.comboType = this.comboType;
this.isFist && (p.comboType = this.fistCombo);
var g = !1, y = !1;
if (t.tag == S.default.TAG.NONPLAYER) {
var m = t.node.getComponent(r.default);
if (m && !m.sc.isDied && !this.isMiss && m.data.isEnemy > 0) {
p.isBackAttack = _.default.isBehindTarget(this.player, m) && d.DamageBack > 0;
p.isBackAttack && (p.realDamage += d.DamageBack);
if (g = m.takeDamage(p, new f.default(), this.player)) {
this.getReflectLight(this.dungeon, t, e, this.isFar, this.isStab, !1, this.hv, this.weaponLightSprite.node.color);
this.beatBack(m);
this.addTargetAllStatus(d, m);
this.addHitExTrigger(p, m);
}
}
} else if (t.tag == S.default.TAG.BOSS) {
var D = t.node.getComponent(h.default);
if (D && !D.sc.isDied && !this.isMiss && (g = D.takeDamage(p, new f.default(), this.player))) {
this.getReflectLight(this.dungeon, t, e, this.isFar, this.isStab, !1, this.hv, this.weaponLightSprite.node.color);
this.addTargetAllStatus(d, D);
this.addHitExTrigger(p, D);
p.isCriticalStrike ? c.default.getRandomNum(12, 24) : c.default.getRandomNum(3, 6);
this.dungeon.addHitBlood(this.player.node.position, D.node.position, c.default.getRandomNum(3, 6));
}
} else if (t.tag == S.default.TAG.BUILDING || t.tag == S.default.TAG.WALL) {
var O = t.node.getComponent(l.default);
if (O) {
y = !0;
O.breakBox();
}
if (!y) {
var A = t.node.getComponent(T.default);
if (A && A.data.currentHealth > 0) {
y = !0;
A.takeDamage(p, new f.default(), this.player);
}
}
if (!y && (C = t.node.getComponent(b.default))) {
y = !0;
C.takeDamage(p, new f.default(), this.player);
}
if (!y) {
var C;
if ((C = t.node.getComponent(R.default)) && C.data.currentHealth > 0) {
y = !0;
C.takeDamage(p, new f.default(), this.player);
}
}
this.getReflectLight(this.dungeon, t, e, this.isFar, this.isStab, !0, this.hv, this.weaponLightSprite.node.color);
} else t.tag != S.default.TAG.BOSS_HIT && t.tag != S.default.TAG.NONPLAYER_HIT || this.getReflectLight(this.dungeon, t, e, this.isFar, this.isStab, !0, this.hv, this.weaponLightSprite.node.color);
g && this.drainSkill.next(function() {
var t = n.player.playerData.getLifeDrain();
t > 0 && n.player.takeDamage(new u.default(-t));
}, 1, !0);
this.isMiss = !1;
if (g || y) {
o.pause();
this.player.jumpAbility && this.player.sc.isJumping && this.player.jumpAbility.airPause(2, .2);
a || s.EventHelper.emit(s.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: this.comboType == i.COMBO3
});
this.scheduleOnce(function() {
o.resume();
}, .1);
}
g && this.player.playerData.AvatarData.organizationIndex == E.default.TECH && this.player.updateDream(-1);
return g || y;
};
e.prototype.addHitExTrigger = function(t, e) {
var i = !1;
if (t.isBackAttack) {
this.player.exTrigger(A.default.GROUP_HIT, A.default.TYPE_HIT_BACK, new f.default(), e);
i = !0;
}
if (t.isCriticalStrike) {
this.player.exTrigger(A.default.GROUP_HIT, A.default.TYPE_HIT_CRIT, new f.default(), e);
i = !0;
}
i || this.player.exTrigger(A.default.GROUP_HIT, A.default.TYPE_HIT, new f.default(), e);
};
e.prototype.addTargetAllStatus = function(t, e) {
this.addTargetStatus(t.iceRate, e, p.default.FROZEN);
this.addTargetStatus(t.fireRate, e, p.default.BURNING);
this.addTargetStatus(t.lighteningRate, e, p.default.DIZZ);
this.addTargetStatus(t.toxicRate, e, p.default.TOXICOSIS);
this.addTargetStatus(t.curseRate, e, p.default.CURSING);
this.addTargetStatus(t.realRate, e, p.default.BLEEDING);
};
e.prototype.addTargetStatus = function(t, e, i) {
c.default.getRandomNum(0, 100) < t && e.addStatus(i, new f.default());
};
var i;
e.ELEMENT_TYPE_ICE = 1;
e.ELEMENT_TYPE_FIRE = 2;
e.ELEMENT_TYPE_LIGHTENING = 3;
e.ELEMENT_TYPE_TOXIC = 4;
e.ELEMENT_TYPE_CURSE = 5;
e.COMBO1 = 1;
e.COMBO2 = 2;
e.COMBO3 = 3;
n([ w(cc.Node) ], e.prototype, "playerNode", void 0);
n([ w(cc.Prefab) ], e.prototype, "iceLight", void 0);
n([ w(cc.Prefab) ], e.prototype, "fireLight", void 0);
n([ w(cc.Prefab) ], e.prototype, "lighteningLight", void 0);
n([ w(cc.Prefab) ], e.prototype, "toxicLight", void 0);
n([ w(cc.Prefab) ], e.prototype, "curseLight", void 0);
n([ w(cc.Prefab) ], e.prototype, "reflectLight", void 0);
return i = n([ N ], e);
}(O.default);
i.default = H;
cc._RF.pop();
}, {
"../base/BaseAvatar": "BaseAvatar",
"../base/BaseColliderComponent": "BaseColliderComponent",
"../base/PlayActor": "PlayActor",
"../boss/Boss": "Boss",
"../building/Box": "Box",
"../building/Emplacement": "Emplacement",
"../building/InteractBuilding": "InteractBuilding",
"../building/NormalBuilding": "NormalBuilding",
"../collider/CCollider": "CCollider",
"../data/AvatarData": "AvatarData",
"../data/CommonData": "CommonData",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../data/TriggerData": "TriggerData",
"../ecs/system/GameWorldSystem": "GameWorldSystem",
"../effect/ReflectLight": "ReflectLight",
"../manager/InventoryManager": "InventoryManager",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/NextStep": "NextStep",
"../utils/Utils": "Utils",
"./EventHelper": "EventHelper",
"./Logic": "Logic",
"./NonPlayer": "NonPlayer"
} ],
MgCrack: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1d929jibO9BjosaDA5nr9aL", "MgCrack");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../utils/AudioPlayer"), l = t("./MonsterGenerator"), c = cc._decorator, u = c.ccclass, p = (c.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.frames = [ "crack000", "crack001", "crack002", "crack003" ];
return e;
}
e.prototype.init = function(e, i, o, a) {
t.prototype.init.call(this, e, i, o, a);
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
};
e.prototype.setFrames = function(t) {
this.frames = t;
};
e.prototype.open = function() {
var e = this;
if (t.prototype.open.call(this)) {
s.default.play(s.default.SCARABCRAWL);
for (var i = cc.tween(this.sprite), o = function(t) {
i.then(cc.tween(a.sprite).delay(.2).call(function() {
e.sprite.spriteFrame = r.default.spriteFrameRes(t);
}));
}, a = this, n = 0, l = this.frames; n < l.length; n++) o(l[n]);
i.call(function() {
e.showMonster();
}).start();
}
return !0;
};
e.prototype.addMonster = function() {
if (t.prototype.addMonster.call(this)) {
s.default.play(s.default.SCARABCRAWL);
this.showMonster();
}
return !0;
};
return n([ u ], e);
}(l.default));
i.default = p;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"./MonsterGenerator": "MonsterGenerator"
} ],
MgWentLine: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "657e7MsMqdJ2by+hThG3E0k", "MgWentLine");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/AudioPlayer"), s = t("./MonsterGenerator"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.init = function(e, i, o, a) {
t.prototype.init.call(this, e, i, o, a);
this.node.getChildByName("sprite").getChildByName("door").opacity = this.data.isOpen ? 0 : 255;
};
e.prototype.open = function() {
if (t.prototype.open.call(this)) {
this.anim.play("WentLineOpen");
r.default.play(r.default.WENTLINE_OPEN);
}
return !0;
};
e.prototype.ShowFinish = function() {
this.showMonster();
};
e.prototype.addMonster = function() {
if (t.prototype.addMonster.call(this)) {
this.anim.play("WentLineShow");
r.default.play(r.default.WENTLINE_SHOW);
}
return !0;
};
return n([ c ], e);
}(s.default));
i.default = u;
cc._RF.pop();
}, {
"../utils/AudioPlayer": "AudioPlayer",
"./MonsterGenerator": "MonsterGenerator"
} ],
MiniMap: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b8f7e0qah9Ot5qnGbL59sxK", "MiniMap");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("../logic/Logic"), l = t("./MiniTile"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.miniTile = null;
e.cover = null;
e.layer = null;
e.dialog = null;
e.closeButton = null;
e.width = 0;
e.height = 0;
e.tileSize = 0;
e.startPos = cc.v3(0, 0);
e.touchPos = cc.v2(0, 0);
e.isAniming = !1;
e.isDrag = !1;
e.lastPlayerPos = cc.v2(-1, -1);
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.closeButton.active = !1;
r.EventHelper.on(r.EventHelper.CHANGE_MINIMAP, function(e) {
t.node && t.changeMap(e.x, e.y);
});
r.EventHelper.on(r.EventHelper.OPEN_MINIMAP, function() {
t.node && t.openMap();
});
this.cover.on(cc.Node.EventType.TOUCH_END, function() {
t.openMap();
});
this.layer.on(cc.Node.EventType.TOUCH_START, function(e) {
t.touchPos = e.getLocation();
t.startPos = t.layer.position.clone();
t.unscheduleAllCallbacks();
t.isDrag = !0;
});
this.layer.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var i = e.getLocation().sub(t.touchPos).mul(.5);
t.layer.setPosition(t.startPos.x + i.x, t.startPos.y + i.y);
});
this.layer.on(cc.Node.EventType.TOUCH_END, function() {
t.scheduleOnce(function() {
t.isDrag = !1;
}, 5);
});
this.layer.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.scheduleOnce(function() {
t.isDrag = !1;
}, 5);
});
this.width = s.default.mapManager.rectDungeon.map.length;
this.height = s.default.mapManager.rectDungeon.map[0].length;
var e = cc.v3(s.default.mapManager.getCurrentRoom().x, s.default.mapManager.getCurrentRoom().y);
this.map = new Array();
this.layer.removeAllChildren();
this.layer.width = 100 * this.width;
this.layer.height = 100 * this.height;
for (var i = 0; i < this.width; i++) {
this.map[i] = new Array();
for (var o = 0; o < this.height; o++) {
var a = cc.instantiate(this.miniTile);
a.group = "ui";
this.tileSize = a.width;
this.map[i][o] = a.getComponent(l.default);
this.layer.addChild(this.map[i][o].node);
this.map[i][o].init(i, o, i == e.x && o == e.y);
this.map[i][o].isCurrentRoom && (this.currentTile = this.map[i][o]);
}
}
};
e.prototype.changeMap = function(t, e) {
if ((t != this.lastPlayerPos.x || e != this.lastPlayerPos.y) && this.currentTile) {
this.lastPlayerPos.x = t;
this.lastPlayerPos.y = e;
this.currentTile.updateMap(t, e);
}
};
e.prototype.openMap = function() {
var t = this;
if (!this.isAniming) {
this.isAniming = !0;
if (this.dialog.position.equals(cc.Vec3.ZERO)) {
this.closeButton.active = !0;
cc.tween(this.dialog).to(.3, {
position: cc.v3(310, -290),
width: 600,
height: 300,
scale: 1.5
}).call(function() {
t.cover.active = !1;
t.isAniming = !1;
}).start();
} else {
this.closeButton.active = !1;
this.cover.active = !0;
cc.tween(this.dialog).to(.3, {
position: cc.v3(0, 0),
width: 300,
height: 300,
scale: .3
}).call(function() {
t.isAniming = !1;
}).start();
}
}
};
e.prototype.update = function(t) {
!this.isDrag && this.currentTile && (this.layer.position = s.default.lerpPos(this.layer.position, cc.v3(-this.currentTile.node.position.x, -this.currentTile.node.position.y), 1 * t));
};
e.ColorLevel = {
EMPTY: -1,
HIDE: 0,
NORMAL: 1,
PLAYER: 2,
CLEAR: 3,
NORMAL_BOSS: 4,
CLEAR_PUZZLE: 5,
CLEAR_END: 6,
CLEAR_BOSS: 7,
NORMAL_LOOT: 8,
CLEAR_LOOT: 9,
NORMAL_START: 10,
NORMAL_END: 11,
NORMAL_REST: 12,
NORMAL_PREPARE: 13,
NORMAL_TEST: 14,
NORMAL_PUZZLE: 15,
NORMAL_MERCHANT: 16,
CLEAR_MERCHANT: 17
};
n([ p(cc.Prefab) ], e.prototype, "miniTile", void 0);
n([ p(cc.Node) ], e.prototype, "cover", void 0);
n([ p(cc.Node) ], e.prototype, "layer", void 0);
n([ p(cc.Node) ], e.prototype, "dialog", void 0);
n([ p(cc.Node) ], e.prototype, "closeButton", void 0);
return n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"./MiniTile": "MiniTile"
} ],
MiniTile: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "fc6deLOAaROjpYY/VRsNTJL", "MiniTile");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../rect/RectRoom"), l = t("../rect/RoomType"), c = t("./MiniMap"), u = cc._decorator, p = u.ccclass, h = u.property, d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.deathSign = null;
e.sign = null;
e.bg = null;
e.isCurrentRoom = !1;
return e;
}
e.prototype.onLoad = function() {
this.graphics = this.getComponent(cc.Graphics);
};
e.prototype.start = function() {};
e.prototype.init = function(t, e, i) {
this.isCurrentRoom = i;
this.x = t;
this.y = e;
this.graphics = this.getComponent(cc.Graphics);
this.initMap();
};
e.prototype.isFirstEqual = function(t, e) {
return !!t && t[0] == e;
};
e.prototype.isThe = function(t, e) {
return !!t && -1 != t.indexOf(e);
};
e.prototype.initMap = function() {
var t = r.default.worldLoader.getCurrentLevelData(), e = r.default.groundOilGoldData.clone();
this.map = t.getRoomMap(this.x, this.y);
this.floormap = t.getRoomFloorMap(this.x, this.y);
if (this.x < 0 || this.y < 0 || this.x > r.default.mapManager.rectDungeon.map.length - 1 || this.y > r.default.mapManager.rectDungeon.map[0].length - 1) this.node.opacity = 0; else {
var i = r.default.mapManager.rectDungeon.map[this.x][this.y];
if (i) {
this.node.opacity = 255;
var o = i.state, a = i.roomType;
e.chapter == r.default.chapterIndex && e.level == r.default.level && e.x == i.x && e.y == i.y && e.value > 0 && !this.isCurrentRoom ? this.deathSign.node.active = !0 : this.deathSign.node.active = !1;
this.bg.color = this.getColor(c.default.ColorLevel.HIDE);
this.bg.color = this.getColor(c.default.ColorLevel.NORMAL);
this.bg.opacity = 60;
var n = o == s.default.STATE_CLEAR;
this.bg.color = this.getColor(n ? c.default.ColorLevel.CLEAR : c.default.ColorLevel.NORMAL);
this.getMapColor(a, l.default.EMPTY_ROOM, n, c.default.ColorLevel.EMPTY, c.default.ColorLevel.EMPTY);
this.getMapColor(a, l.default.BOSS_ROOM, n, c.default.ColorLevel.NORMAL_BOSS, c.default.ColorLevel.CLEAR_BOSS);
this.getMapColor(a, l.default.LOOT_ROOM, n, c.default.ColorLevel.NORMAL_LOOT, c.default.ColorLevel.CLEAR_LOOT);
this.getMapColor(a, l.default.MERCHANT_ROOM, n, c.default.ColorLevel.NORMAL_MERCHANT, c.default.ColorLevel.CLEAR_MERCHANT);
this.getMapColor(a, l.default.START_ROOM, n, c.default.ColorLevel.NORMAL_START, c.default.ColorLevel.NORMAL_START);
this.getMapColor(a, l.default.END_ROOM, n, c.default.ColorLevel.NORMAL_END, c.default.ColorLevel.CLEAR_END);
this.getMapColor(a, l.default.ELITE_ROOM, n, c.default.ColorLevel.NORMAL_PUZZLE, c.default.ColorLevel.CLEAR_PUZZLE);
this.getMapColor(a, l.default.REST_ROOM, n, c.default.ColorLevel.NORMAL_REST, c.default.ColorLevel.NORMAL_REST);
this.getMapColor(a, l.default.PREPARE_ROOM, n, c.default.ColorLevel.NORMAL_PREPARE, c.default.ColorLevel.NORMAL_PREPARE);
this.getMapColor(a, l.default.TEST_ROOM, n, c.default.ColorLevel.NORMAL_TEST, c.default.ColorLevel.NORMAL_TEST);
a == l.default.START_ROOM && (this.bg.color = this.getColor(c.default.ColorLevel.NORMAL_START));
if (this.isCurrentRoom) {
this.bg.color = this.getColor(c.default.ColorLevel.PLAYER);
this.bg.opacity = 200;
}
(!t.minimapOnlyCurrentRoom || t.minimapOnlyCurrentRoom && this.isCurrentRoom) && this.drawMap(-1, -1, this.graphics);
} else this.node.opacity = 0;
}
};
e.prototype.drawMap = function(t, e, i) {
if (i) {
i.clear();
var o = r.default.worldLoader.getCurrentLevelData();
if (!(this.map.length < 1)) {
for (var a = this.node.width / o.roomWidth, n = this.map.length, s = this.map[0].length, l = 0; l < s; l++) for (var c = 0; c < n; c++) {
var u = this.map[c][l], p = this.floormap[c][l];
i.fillColor = cc.color(33, 33, 33, 200);
if (this.isFirstEqual(u, "#")) i.fillColor = cc.color(119, 136, 153, 200); else if (this.isFirstEqual(u, "J")) i.fillColor = cc.color(60, 179, 113, 200); else if ("@S" == u) i.fillColor = cc.color(60, 179, 113, 200); else if (this.isFirstEqual(u, "D")) {
var h = parseInt(u[2]), d = 1 == h;
i.fillColor = cc.color(240, 248, 255, 200);
d && (i.fillColor = cc.color(255, 69, 0, 200));
h >= 2 && (i.fillColor = cc.color(33, 33, 33, 200));
} else this.isFirstEqual(u, "E") ? i.fillColor = cc.color(0, 255, 0, 200) : this.isFirstEqual(u, "P") || (this.isFirstEqual(u, "C") ? i.fillColor = cc.color(255, 215, 0, 200) : this.isFirstEqual(u, "z") ? this.sign.spriteFrame = r.default.spriteFrameRes("minimapboss") : this.isFirstEqual(p, "*") ? i.fillColor = cc.color(33, 33, 33, 200) : this.isFirstEqual(p, "~") && (i.fillColor = cc.color(0, 128, 128, 200)));
!this.isFirstEqual(u, "###") && !this.isFirstEqual(u, "%%") && u && u.length > 0 && i.fillRect(c * a - this.node.width / 2, l * a - this.node.width / 2, a, a);
}
if (this.isCurrentRoom) {
i.strokeColor = cc.color(0, 255, 0, 255);
i.lineWidth = 2;
i.rect(t * a - this.node.width / 2, e * a - this.node.width / 2, a, a);
i.stroke();
}
}
}
};
e.prototype.updateMap = function(t, e) {
this.drawMap(t, e, this.graphics);
};
e.prototype.getMapColor = function(t, e, i, o, a) {
t.isEqual(e) && (this.node.color = this.getColor(i ? a : o));
};
e.prototype.getColor = function(t) {
var e = new cc.Color(0, 0, 0);
switch (t) {
case c.default.ColorLevel.EMPTY:
case c.default.ColorLevel.HIDE:
e = new cc.Color(0, 0, 0);
break;

case c.default.ColorLevel.NORMAL:
e = new cc.Color(128, 128, 128);
break;

case c.default.ColorLevel.CLEAR:
e = new cc.Color(255, 255, 255);
break;

case c.default.ColorLevel.PLAYER:
e = new cc.Color(0, 255, 0);
break;

case c.default.ColorLevel.NORMAL_START:
e = new cc.Color(144, 238, 144);
break;

case c.default.ColorLevel.NORMAL_END:
e = new cc.Color(100, 149, 237);
break;

case c.default.ColorLevel.NORMAL_BOSS:
e = new cc.Color(128, 0, 128);
break;

case c.default.ColorLevel.NORMAL_LOOT:
case c.default.ColorLevel.NORMAL_MERCHANT:
e = new cc.Color(255, 215, 0);
break;

case c.default.ColorLevel.NORMAL_REST:
e = new cc.Color(139, 69, 19);
break;

case c.default.ColorLevel.NORMAL_PREPARE:
e = new cc.Color(255, 165, 0);
break;

case c.default.ColorLevel.NORMAL_TEST:
e = new cc.Color(238, 130, 238);
break;

case c.default.ColorLevel.NORMAL_PUZZLE:
e = new cc.Color(128, 0, 128);
break;

case c.default.ColorLevel.CLEAR_LOOT:
case c.default.ColorLevel.CLEAR_MERCHANT:
e = new cc.Color(240, 230, 140);
break;

case c.default.ColorLevel.CLEAR_BOSS:
e = new cc.Color(75, 0, 130);
break;

case c.default.ColorLevel.CLEAR_END:
e = new cc.Color(176, 196, 222);
break;

case c.default.ColorLevel.CLEAR_PUZZLE:
e = new cc.Color(75, 0, 130);
}
return e;
};
e.prototype.getMixColor = function(t, e) {
var i = t.clone(), o = e.clone(), a = cc.color(), n = i.getR() + o.getR(), r = i.getG() + o.getG(), s = i.getB() + o.getB();
a.setR(n > 255 ? 255 : n);
a.setG(r > 255 ? 255 : r);
a.setB(s > 255 ? 255 : s);
return a;
};
n([ h(cc.Sprite) ], e.prototype, "deathSign", void 0);
n([ h(cc.Sprite) ], e.prototype, "sign", void 0);
n([ h(cc.Node) ], e.prototype, "bg", void 0);
return n([ p ], e);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"../rect/RectRoom": "RectRoom",
"../rect/RoomType": "RoomType",
"./MiniMap": "MiniMap"
} ],
MonsterGenerator: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b0bbeYGzEhP+4L1gNiAPnRb", "MonsterGenerator");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../collider/CCollider"), s = t("../logic/Dungeon"), l = t("../logic/Logic"), c = t("../utils/IndexZ"), u = t("./Building"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.canAdd = !1;
e.addFinish = !1;
e.count = 0;
e.addDelay = 2;
e.checkTimeDelay = 0;
return e;
}
e.prototype.init = function(t, e, i, o) {
this.dungeon = t;
this.data.generatorCount = i;
this.data.generatorInterval = e;
this.data.generatorList = o;
this.node.zIndex = c.default.getActorZIndex(this.entity.Transform.position.clone().add(cc.v3(0, 120)));
var a = l.default.mapManager.getCurrentRoom().isReborn, n = l.default.mapManager.getCurrentMapBuilding(this.data.defaultPos);
if (n) {
this.data.isOpen = n.isOpen;
a && (this.data.isOpen = !1);
} else l.default.mapManager.setCurrentBuildingData(this.data.clone());
this.anim = this.getComponent(cc.Animation);
this.addFinish = this.data.isOpen;
};
e.prototype.isTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > this.data.generatorInterval) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
l.default.isGamePause || this.isTimeDelay(t) && this.addMonster();
};
e.prototype.addMonster = function() {
if (this.count >= this.data.generatorCount) {
this.addFinish = !0;
return !1;
}
return !!this.canAdd;
};
e.prototype.showMonster = function() {
var t = s.default.getIndexInMap(this.entity.Transform.position.clone());
this.dungeon.monsterManager.addMonsterFromData(this.data.generatorList[l.default.getRandomNum(0, this.data.generatorList.length - 1)], t, this.dungeon, !0);
this.count++;
};
e.prototype.open = function() {
var t = this;
if (this.data.isOpen) return !1;
this.data.isOpen = !0;
this.scheduleOnce(function() {
t.canAdd = !0;
}, this.addDelay);
var e = l.default.mapManager.getCurrentMapBuilding(this.data.defaultPos);
e ? e.isOpen = this.data.isOpen : l.default.mapManager.setCurrentBuildingData(this.data.clone());
return !0;
};
e.prototype.onColliderEnter = function(t) {
this.data.isOpen || t.tag != r.default.TAG.PLAYER_INTERACT || this.open();
};
return n([ h ], e);
}(u.default));
i.default = d;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
MonsterManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "441f6g4iH9M574s+sdv3n8E", "MonsterManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/NonPlayer"), s = t("../logic/Dungeon"), l = t("../logic/Logic"), c = t("../rect/RoomType"), u = t("../boss/Boss"), p = t("./BaseManager"), h = t("../ui/GameHud"), d = t("./MonsterRandomAttr"), f = t("../utils/Random4Save"), g = t("../data/NonPlayerData"), y = t("./LoadingManager"), m = t("../utils/Utils"), v = t("../utils/AudioPlayer"), E = t("../ui/ActorIconList"), _ = cc._decorator, T = _.ccclass, D = _.property, S = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.monster = null;
e.kraken = null;
e.captain = null;
e.slime = null;
e.warmachine = null;
e.rah = null;
e.iceDemon = null;
e.evilEye = null;
e.dryad = null;
e.sphinx = null;
e.dragon = null;
e.actorIconList = null;
e.maxHealth00 = 200;
e.maxHealth01 = 400;
e.maxHealth02 = 600;
e.maxHealth03 = 800;
e.maxHealth04 = 1e3;
e.maxHealth05 = 1200;
e.maxHealth06 = 1400;
e.maxHealth07 = 1600;
e.maxHealth08 = 1800;
e.maxHealth09 = 2e3;
e.monsters = new Array();
e.bosses = new Array();
e.isRoomInitWithEnemy = !1;
e.loadingManager = new y.default();
e.seed = 0;
e.monsterRandomAttr = new d.default();
return e;
}
i = e;
Object.defineProperty(e.prototype, "monsterList", {
get: function() {
return this.monsters;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "bossList", {
get: function() {
return this.bosses;
},
enumerable: !1,
configurable: !0
});
e.prototype.clear = function() {
for (var t = 0, e = this.monsters; t < e.length; t++) {
var i = e[t];
i && i.isValid && i.destroyEntityNode();
}
for (var o = 0, a = this.bosses; o < a.length; o++) {
var n = a[o];
n && n.isValid && n.destroyEntityNode();
}
this.monsters = new Array();
this.bosses = new Array();
};
e.prototype.addMonsterFromData = function(t, e, i, o) {
var a = this;
this.getMonster(t, i, o, function(t) {
if ((t = a.addMonster(t, e, null)).data.childCount > 0 && t.data.childResName.length > 0) for (var n = 0; n < t.data.childCount; n++) a.getMonster(t.data.childResName, i, o, function(i) {
t.childNonPlayerList.push(a.addMonster(i, e, t));
});
});
};
e.prototype.addMonstersAndBossFromMap = function(t, e, i) {
if (s.default.isFirstEqual(e, "m")) this.addMonsterFromData("monster" + e.substring(1), i, t, !1); else {
if (m.default.isFirstEqual(e, "z")) {
l.default.lastBgmIndex = 2;
v.default.stopAllEffect();
v.default.play(v.default.PLAY_BG, !0);
}
if ("z0" == e) this.addBoss(this.iceDemon, "iconboss000", this.maxHealth00, 0, 2, i, t); else if ("z1" == e) this.addBoss(this.warmachine, "iconboss001", this.maxHealth01, 2, 3.5, i, t); else if ("z2" == e) this.addBoss(this.captain, "iconboss002", this.maxHealth02, 2, 0, i, t); else if ("z3" == e) {
t.shakeForKraken();
this.addBoss(this.kraken, "iconboss003", this.maxHealth03, 2, 3.5, i, t);
} else "z4" == e ? this.addBossSlime(0, i, t) : "z5" == e ? this.addBoss(this.dryad, "iconboss005", this.maxHealth05, 2, 2, i, t) : "z6" == e ? this.addBoss(this.rah, "iconboss006", this.maxHealth06, 2, 2, i, t) : "z7" == e ? this.addBoss(this.sphinx, "iconboss007", this.maxHealth07, 2, 2, i, t) : "z8" == e ? this.addBoss(this.evilEye, "iconboss008", this.maxHealth08, 2, 2, i, t) : "z9" == e && this.addBoss(this.dragon, "iconboss009", this.maxHealth09, 5, 2, i, t);
}
};
e.prototype.getRandomMonsterSeed = function() {
return l.default.mapManager.getCurrentRoom().seed + this.seed++;
};
e.prototype.getMonster = function(t, e, i, o) {
var a = this;
y.default.loadNpcSpriteAtlas(t, function(n) {
if (n != y.default.LOAD_FAIL) {
var s = null;
(s = cc.instantiate(a.monster)).active = !1;
s.parent = e.node;
var u = s.getComponent(r.default), p = new g.default();
u.seed = a.getRandomMonsterSeed();
u.killPlayerCount = l.default.getKillPlayerCount(u.seed);
var h = l.default.mapManager.getRandom4Save(u.seed);
u.dungeon = e;
p.valueCopy(l.default.monsters[t]);
var d = l.default.mapManager.getCurrentRoom().reborn;
p.reborn = d || 0;
u.isSummon = i;
if (h.rand() < .1 + u.killPlayerCount / 10) {
a.monsterRandomAttr.addRandomAttrs(2, h);
p = a.monsterRandomAttr.updateMonsterData(p);
u.attrmap = a.monsterRandomAttr.attrmap;
}
var f = 5 + 2 * u.killPlayerCount, m = 0;
l.default.mapManager.getCurrentRoomType().isEqual(c.default.DANGER_ROOM) && (m = 10);
l.default.mapManager.getCurrentRoomType().isEqual(c.default.INSANE_ROOM) && (m = 30);
f = f + 2 * l.default.chapterIndex + 2 * l.default.level + m;
u.isVariation = h.getRandomNum(0, 100) < f && p.isTest < 1;
if (u.isVariation) {
p.Common.maxHealth = 2 * p.Common.maxHealth;
p.Common.maxDream = 2 * p.Common.maxDream;
p.Common.damageMin = 2 * p.Common.damageMin;
p.currentHealth = p.Common.maxHealth;
p.melee > 0 && (p.melee = p.melee > 1 ? p.melee - 1 : 1);
p.remote > 0 && (p.remote = p.remote > 1 ? p.remote - 1 : 1);
p.dash > 0 && (p.dash = p.dash > 1 ? p.dash - 1 : 1);
p.Common.moveSpeed = p.Common.moveSpeed > 0 ? p.Common.moveSpeed + .5 + .1 * u.killPlayerCount : 0;
}
p.Common.maxDream += .25 * p.Common.maxDream * u.killPlayerCount;
p.Common.damageMin += .25 * p.Common.damageMin * u.killPlayerCount;
p.Common.maxHealth += .25 * p.Common.maxHealth * u.killPlayerCount;
p.Common.attackSpeed += 10 * u.killPlayerCount;
p.Common.defence += u.killPlayerCount;
p.currentHealth = p.Common.maxHealth;
p.melee - u.killPlayerCount > 1 && (p.melee -= u.killPlayerCount);
p.remote - u.killPlayerCount > 1 && (p.remote -= u.killPlayerCount);
p.dash - u.killPlayerCount > 1 && (p.dash -= u.killPlayerCount);
var v = h.getRandomNum(0, 100), E = h.getRandomNum(80, 100), _ = h.getRandomNum(80, 100), T = v <= 5 + 3 * u.killPlayerCount;
v = h.getRandomNum(0, 4);
if (T) {
p.Common.magicDamage += 1;
p.Common.magicDefence = p.Common.magicDefence + E > 100 ? 100 : p.Common.magicDefence + E;
switch (v) {
case 0:
p.Common.iceRate = p.Common.iceRate + _ > 100 ? 100 : p.Common.iceRate + _;
p.bodyColor = "#CCFFFF";
break;

case 1:
p.Common.fireRate = p.Common.fireRate + _ > 100 ? 100 : p.Common.fireRate + _;
p.bodyColor = "#FF6633";
break;

case 2:
p.Common.lighteningRate = p.Common.lighteningRate + _ > 100 ? 100 : p.Common.lighteningRate + _;
p.bodyColor = "#0099FF";
break;

case 3:
p.Common.toxicRate = p.Common.toxicRate + _ > 100 ? 100 : p.Common.toxicRate + _;
p.bodyColor = "#66CC00";
break;

case 4:
p.Common.curseRate = p.Common.curseRate + _ > 100 ? 100 : p.Common.curseRate + _;
p.bodyColor = "#660099";
}
}
p.isEnemy = 1;
u.data = p;
u.sc.isDisguising = p.disguise > 0;
u.sc.isDisguising ? u.changeBodyRes(p.resName, r.default.RES_DISGUISE) : u.changeBodyRes(t, r.default.RES_IDLE000);
u.addAttrIcon();
u.icon = a.actorIconList.getIcon(p.resName);
o(u);
}
});
};
e.prototype.addMonster = function(t, e, i) {
t.node.active = !0;
t.pos = e;
t.defautPos = e;
t.lastWaterPos = e;
t.updatePlayerPos();
t.parentNonPlayer = i;
this.isRoomInitWithEnemy = t.data.isTest < 1;
this.monsterList.push(t);
return t;
};
e.prototype.addBossSlime = function(t, e, i) {
if (this.bosses) {
this.isRoomInitWithEnemy = !0;
this.bosses.push(this.getSlime(i, e.clone(), t));
}
};
e.prototype.addBoss = function(t, e, i, o, a, n, r) {
var s = cc.instantiate(t);
s.active = !1;
s.parent = r.node;
var l = s.getComponent(u.default);
l.initCollider();
l.dungeon = r;
var c = new g.default();
c.resName = e;
c.updateHA(i, i, o);
l.data = c;
l.defaultPos = n.clone();
l.transportBoss(n.x, n.y);
l.healthBar = this.node.parent.getComponentInChildren(h.default).bossHealthBar;
l.node.active = !0;
this.bosses.push(l);
this.isRoomInitWithEnemy = !0;
this.scheduleOnce(function() {
l.showBoss();
}, a);
};
e.prototype.getSlime = function(t, e, i) {
var o = null;
(o = cc.instantiate(this.slime)).active = !1;
o.parent = t.node;
var a = o.getComponent(u.default);
a.initCollider();
a.dungeon = t;
var n = new g.default();
n.resName = "iconboss004";
n.Common.moveSpeed = 2;
switch (i) {
case 0:
n.updateHA(this.maxHealth04, this.maxHealth04, 9);
break;

case 1:
n.updateHA(200, 200, 7);
break;

case 2:
n.updateHA(100, 100, 7);
break;

case 3:
n.updateHA(50, 50, 5);
break;

case 4:
n.updateHA(25, 25, 3);
break;

case 5:
n.updateHA(10, 10, 2);
break;

default:
n.updateHA(5, 5, 1);
}
a.data = n;
a.init(i);
a.transportBoss(e.x, e.y);
a.healthBar = this.node.parent.getComponentInChildren(h.default).bossHealthBar;
a.node.active = !0;
this.bosses.push(a);
return a;
};
e.prototype.addRandomMonsters = function(t) {
var e = new Array(), o = new f.default(l.default.mapManager.getCurrentRoom().seed), a = o.getRandomNum(1, 3), n = 0;
l.default.mapManager.getCurrentRoomType().isEqual(c.default.DANGER_ROOM) && (n = 2);
l.default.mapManager.getCurrentRoomType().isEqual(c.default.INSANE_ROOM) && (n = 5);
switch (l.default.chapterIndex) {
case l.default.CHAPTER00:
e = i.MONSTERS_LAB;
a = o.getRandomNum(3, 6);
break;

case l.default.CHAPTER01:
e = i.MONSTERS_SHIP;
a = o.getRandomNum(3, 7);
break;

case l.default.CHAPTER02:
e = i.MONSTERS_FOREST;
a = o.getRandomNum(4, 8);
break;

case l.default.CHAPTER03:
e = i.MONSTERS_PYRAMID;
a = o.getRandomNum(4, 9);
break;

case l.default.CHAPTER04:
e = i.MONSTERS_DUNGEON;
a = o.getRandomNum(5, 10);
break;

case l.default.CHAPTER05:
e = i.MONSTERS_DUNGEON;
a = o.getRandomNum(5, 11);
break;

case l.default.CHAPTER099:
e = i.MONSTERS_LAB;
a = o.getRandomNum(3, 6);
}
(l.default.mapManager.getCurrentRoomType().isEqual(c.default.VERTICAL_ROOM) || l.default.mapManager.getCurrentRoomType().isEqual(c.default.HORIZONTAL_ROOM)) && (a = Math.floor(a / 2));
for (var r = [], s = [], u = 0; u < t.floorIndexMap.length; u++) {
var p = t.floorIndexMap[u];
t.buildingManager.emptyMap.has("x=" + p.x + "y=" + p.y) && r.push(p);
}
for (u = 0; u < t.waterIndexMap.length; u++) {
p = t.waterIndexMap[u];
t.buildingManager.emptyMap.has("x=" + p.x + "y=" + p.y) && s.push(p);
}
var h = 0;
for (u = 0; u <= a + n; u++) if (!(r.length < 1)) {
p = r[d = o.getRandomNum(0, r.length - 1)];
r.splice(d, 1);
h++;
this.addMonsterFromData(e[o.getRandomNum(0, e.length - 1)], cc.v3(p.x, p.y), t, !1);
}
for (u = 0; u <= a + n - h; u++) if (!(s.length < 1)) {
var d;
p = s[d = o.getRandomNum(0, s.length - 1)];
s.splice(d, 1);
this.addMonsterFromData(i.MONSTER_FISH, cc.v3(p.x, p.y), t, !1);
}
};
e.prototype.updateLogic = function(t) {
for (var e = this.monsters.length - 1; e >= 0; e--) {
var i = this.monsters[e];
i && i.node ? i.node.active && i.updateLogic(t) : this.monsters.splice(e, 1);
}
for (e = this.bosses.length - 1; e >= 0; e--) {
var o = this.bosses[e];
o && o.node ? o.node.active && o.updateLogic(t) : this.bosses.splice(e, 1);
}
};
var i;
e.BOSS_KRAKEN = "BOSS_KRAKEN";
e.MONSTER_SLIME = "monster000";
e.MONSTER_GOBLIN = "monster001";
e.MONSTER_MUMMY = "monster002";
e.MONSTER_ANUBIS = "monster003";
e.MONSTER_PIRATE = "monster004";
e.MONSTER_SAILOR = "monster005";
e.MONSTER_OCTOPUS = "monster006";
e.MONSTER_KILLER = "monster007";
e.MONSTER_STRONGSAILOR = "monster008";
e.MONSTER_CHEST = "monster009";
e.MONSTER_GARGOYLE = "monster010";
e.MONSTER_CHICKEN = "monster011";
e.MONSTER_SCARAB = "monster012";
e.MONSTER_GOBLIN_ARCHER = "monster013";
e.MONSTER_TERRORDRONE = "monster014";
e.MONSTER_WEREWOLF = "monster015";
e.MONSTER_DUMMY = "monster016";
e.MONSTER_ZEBRA = "monster017";
e.MONSTER_GIRAFFE = "monster018";
e.MONSTER_ZOOMBIE = "monster019";
e.MONSTER_ELECTRICEYE = "monster020";
e.MONSTER_FISHMAN = "monster021";
e.MONSTER_CROCODILE = "monster022";
e.MONSTER_SNAKE = "monster023";
e.MONSTER_DEMON = "monster024";
e.MONSTER_WARLOCK = "monster025";
e.MONSTER_SPIDER = "monster026";
e.MONSTER_BOOMER = "monster027";
e.MONSTER_SANDSTATUE = "monster028";
e.MONSTER_HIPPO = "monster029";
e.MONSTER_CYCLOPS = "monster030";
e.MONSTER_ICEDEMON = "monster031";
e.MONSTER_BITE_ZOMBIE = "monster032";
e.MONSTER_BANANA = "monster033";
e.MONSTER_HOLO_DEVICE = "monster034";
e.MONSTER_HOLO = "monster035";
e.MONSTER_LASRERDRONE = "monster036";
e.MONSTER_GHOST = "monster037";
e.MONSTER_FISH = "monster038";
e.MONSTER_MICE = "monster039";
e.MONSTERS_LAB = [ i.MONSTER_ZEBRA, i.MONSTER_TERRORDRONE, i.MONSTER_KILLER, i.MONSTER_ZOOMBIE, i.MONSTER_ELECTRICEYE, i.MONSTER_GIRAFFE, i.MONSTER_ICEDEMON, i.MONSTER_BITE_ZOMBIE, i.MONSTER_HOLO_DEVICE, i.MONSTER_LASRERDRONE ];
e.MONSTERS_SHIP = [ i.MONSTER_PIRATE, i.MONSTER_SAILOR, i.MONSTER_OCTOPUS, i.MONSTER_STRONGSAILOR, i.MONSTER_FISHMAN, i.MONSTER_BOOMER, i.MONSTER_GHOST ];
e.MONSTERS_FOREST = [ i.MONSTER_SLIME, i.MONSTER_GOBLIN, i.MONSTER_GOBLIN_ARCHER, i.MONSTER_WEREWOLF, i.MONSTER_SNAKE, i.MONSTER_CHICKEN, i.MONSTER_HIPPO, i.MONSTER_BANANA ];
e.MONSTERS_PYRAMID = [ i.MONSTER_MUMMY, i.MONSTER_ANUBIS, i.MONSTER_SCARAB, i.MONSTER_CROCODILE, i.MONSTER_SANDSTATUE ];
e.MONSTERS_DUNGEON = [ i.MONSTER_GARGOYLE, i.MONSTER_WARLOCK, i.MONSTER_DEMON, i.MONSTER_CYCLOPS, i.MONSTER_SPIDER, i.MONSTER_CYCLOPS ];
e.MONSTERS_SPECIAL = [ i.MONSTER_DUMMY, i.MONSTER_CHEST, i.MONSTER_FISH, i.MONSTER_MICE ];
n([ D(cc.Prefab) ], e.prototype, "monster", void 0);
n([ D(cc.Prefab) ], e.prototype, "kraken", void 0);
n([ D(cc.Prefab) ], e.prototype, "captain", void 0);
n([ D(cc.Prefab) ], e.prototype, "slime", void 0);
n([ D(cc.Prefab) ], e.prototype, "warmachine", void 0);
n([ D(cc.Prefab) ], e.prototype, "rah", void 0);
n([ D(cc.Prefab) ], e.prototype, "iceDemon", void 0);
n([ D(cc.Prefab) ], e.prototype, "evilEye", void 0);
n([ D(cc.Prefab) ], e.prototype, "dryad", void 0);
n([ D(cc.Prefab) ], e.prototype, "sphinx", void 0);
n([ D(cc.Prefab) ], e.prototype, "dragon", void 0);
n([ D(E.default) ], e.prototype, "actorIconList", void 0);
return i = n([ T ], e);
}(p.default);
i.default = S;
cc._RF.pop();
}, {
"../boss/Boss": "Boss",
"../data/NonPlayerData": "NonPlayerData",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/NonPlayer": "NonPlayer",
"../rect/RoomType": "RoomType",
"../ui/ActorIconList": "ActorIconList",
"../ui/GameHud": "GameHud",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Random4Save": "Random4Save",
"../utils/Utils": "Utils",
"./BaseManager": "BaseManager",
"./LoadingManager": "LoadingManager",
"./MonsterRandomAttr": "MonsterRandomAttr"
} ],
MonsterRandomAttr: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9949f1Fu8NGLLz3ZQCj49YJ", "MonsterRandomAttr");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function t() {
this.attrmap = {};
this.attrmap = {};
}
t.prototype.hasAttr = function(t) {
return this.attrmap[t] && this.attrmap[t] > 0;
};
t.prototype.addAttr = function(t) {
var e = t > 9 ? "" + t : "0" + t;
this.attrmap["attr_" + e] = 1;
};
t.prototype.removeAttr = function(t) {
var e = t > 9 ? "" + t : "0" + t;
this.attrmap["attr_" + e] = 0;
};
t.prototype.addRandomAttrs = function(t, e) {
this.attrmap = {};
for (var i = 0; i < t; i++) this.addAttr(e.getRandomNum(1, 23));
};
t.prototype.updateMonsterData = function(e) {
if (e.isTest > 0) return e;
if (this.hasAttr(t.ATTR_01)) {
e.Common.maxHealth = 1;
e.currentHealth = 1;
e.Common.defence += 50;
}
this.hasAttr(t.ATTR_02) && (e.Common.damageMin += 10);
if (this.hasAttr(t.ATTR_03)) {
e.Common.maxHealth += 50;
e.currentHealth += 50;
}
this.hasAttr(t.ATTR_04) && (e.Common.damageMin = 1);
if (this.hasAttr(t.ATTR_05)) {
e.Common.moveSpeed -= 1;
e.Common.moveSpeed < 0 && (e.Common.moveSpeed = .5);
}
this.hasAttr(t.ATTR_06) && (e.Common.moveSpeed += 1);
this.hasAttr(t.ATTR_07) && e.melee > 0 && (e.melee += 2);
this.hasAttr(t.ATTR_08) && e.melee > 0 && (e.melee = 1);
this.hasAttr(t.ATTR_09) && e.remote > 0 && e.isLineAim <= 0 && e.isArcAim <= 0 && (e.remote = 1);
this.hasAttr(t.ATTR_10) && e.remote > 0 && (e.remote += 2);
this.hasAttr(t.ATTR_11) && e.remote > 0 && (e.bulletLineExNum += 1);
this.hasAttr(t.ATTR_12) && e.remote > 0 && (e.bulletExSpeed = -1);
this.hasAttr(t.ATTR_13) && e.remote > 0 && (e.bulletExSpeed = 1);
if (this.hasAttr(t.ATTR_14)) {
e.Common.dodge += 50;
e.Common.dodge > 60 && (e.Common.dodge = 60);
}
this.hasAttr(t.ATTR_15) && (e.Common.damageBack = 15);
this.hasAttr(t.ATTR_16) && (e.blink > 0 ? e.blink = 2 : e.blink = 5);
if (this.hasAttr(t.ATTR_17)) {
e.Common.magicDamage += 1;
e.Common.iceRate = 100;
}
if (this.hasAttr(t.ATTR_18)) {
e.Common.magicDamage += 1;
e.Common.fireRate = 100;
}
if (this.hasAttr(t.ATTR_19)) {
e.Common.magicDamage += 1;
e.Common.lighteningRate = 100;
}
if (this.hasAttr(t.ATTR_20)) {
e.Common.magicDamage += 1;
e.Common.toxicRate = 100;
}
if (this.hasAttr(t.ATTR_21)) {
e.Common.magicDamage += 1;
e.Common.curseRate = 100;
}
if (this.hasAttr(t.ATTR_22)) {
e.Common.realDamage += 1;
e.Common.realRate = 100;
}
this.hasAttr(t.ATTR_23) && (e.isBoom = 1);
return e;
};
t.ATTR_01 = "attr_01";
t.ATTR_02 = "attr_02";
t.ATTR_03 = "attr_03";
t.ATTR_04 = "attr_04";
t.ATTR_05 = "attr_05";
t.ATTR_06 = "attr_06";
t.ATTR_07 = "attr_07";
t.ATTR_08 = "attr_08";
t.ATTR_09 = "attr_09";
t.ATTR_10 = "attr_10";
t.ATTR_11 = "attr_11";
t.ATTR_12 = "attr_12";
t.ATTR_13 = "attr_13";
t.ATTR_14 = "attr_14";
t.ATTR_15 = "attr_15";
t.ATTR_16 = "attr_16";
t.ATTR_17 = "attr_17";
t.ATTR_18 = "attr_18";
t.ATTR_19 = "attr_19";
t.ATTR_20 = "attr_20";
t.ATTR_21 = "attr_21";
t.ATTR_22 = "attr_22";
t.ATTR_23 = "attr_23";
return t;
}();
i.default = o;
cc._RF.pop();
}, {} ],
MoveComponent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e49028tZFJAEpXgxWdi6l8e", "MoveComponent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.MoveComponent = void 0;
var r = t("../ECS"), s = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.linearVelocity = cc.Vec2.ZERO;
e.damping = 0;
e.acceleration = 0;
e.gravity = i.DEFAULT_GRAVITY;
e.linearVelocityZ = 0;
e.isStatic = !1;
return e;
}
i = e;
e.prototype.reset = function() {
this.linearVelocity = cc.Vec2.ZERO;
this.damping = 0;
this.linearVelocityZ = 0;
};
var i;
e.PIXELS_PER_UNIT = 50;
e.DEFAULT_GRAVITY = i.PIXELS_PER_UNIT;
e.MIN_LINEAR_VELOCITY_Z = -10 * i.PIXELS_PER_UNIT * i.DEFAULT_GRAVITY;
return i = n([ r.ecs.register("Move") ], e);
}(r.ecs.IComponent);
i.MoveComponent = s;
cc._RF.pop();
}, {
"../ECS": "ECS"
} ],
MoveSystem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "0fa7ditzD9HI61HkRcz3YwC", "MoveSystem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../component/MoveComponent"), r = t("../component/TransformComponent"), s = t("../ECS"), l = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.filter = function() {
return s.ecs.allOf(n.MoveComponent, r.TransformComponent);
};
e.prototype.update = function(t) {
for (var e = .016, i = 0, o = t; i < o.length; i++) {
var a = o[i], r = a.Move;
if (!(r.isStatic || a.NodeRender.node && !a.NodeRender.node.active)) {
var s = a.Transform;
r.damping < 0 && (r.damping = 0);
var l = r.linearVelocity.mul(e * n.MoveComponent.PIXELS_PER_UNIT), c = cc.v3(s.position.x + l.x, s.position.y + l.y);
s.position = c;
var u = r.damping * e;
if (r.linearVelocity.x > 0) {
r.linearVelocity.x -= u;
r.linearVelocity.x < 0 && (r.linearVelocity.x = 0);
} else if (r.linearVelocity.x < 0) {
r.linearVelocity.x += u;
r.linearVelocity.x > 0 && (r.linearVelocity.x = 0);
}
if (r.linearVelocity.y > 0) {
r.linearVelocity.y -= u;
r.linearVelocity.y < 0 && (r.linearVelocity.y = 0);
} else if (r.linearVelocity.y < 0) {
r.linearVelocity.y += u;
r.linearVelocity.y > 0 && (r.linearVelocity.y = 0);
}
var p = r.acceleration * e;
r.linearVelocity.x += p;
r.linearVelocity.y += p;
a.NodeRender.node && a.NodeRender.node.setPosition(s.position);
s.z += r.linearVelocityZ * e * n.MoveComponent.PIXELS_PER_UNIT;
var h = r.gravity * e;
if (s.z < s.base) {
s.z = s.base;
r.linearVelocityZ = 0;
} else s.z > s.base && (r.linearVelocityZ -= h);
a.NodeRender.root && a.NodeRender.root.setPosition(cc.v3(0, s.z));
}
}
};
e.prototype.lerpPos = function(t, e, i) {
var o = cc.v2(0, 0), a = t.x, n = t.y;
o.x = a + (e.x - a) * i;
o.y = n + (e.y - n) * i;
return o;
};
e.prototype.lerp = function(t, e, i) {
return t + (e - t) * i;
};
return e;
}(s.ecs.ComblockSystem);
i.default = l;
cc._RF.pop();
}, {
"../ECS": "ECS",
"../component/MoveComponent": "MoveComponent",
"../component/TransformComponent": "TransformComponent"
} ],
MushRoomChild: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1cc30/RGadFmqTqY/1+mFMR", "MushRoomChild");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../collider/CCollider"), l = t("../base/BaseColliderComponent"), c = cc._decorator, u = c.ccclass, p = (c.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isRotate = !1;
e.isPlus = !1;
return e;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.entity && this.entity.Move && (this.entity.Move.isStatic = !0);
};
e.prototype.onColliderEnter = function(t) {
if (t.tag == s.default.TAG.PLAYER) {
this.isRotate = !0;
var e = t.node.convertToWorldSpaceAR(cc.Vec3.ZERO), i = this.node.convertToWorldSpaceAR(cc.Vec3.ZERO);
this.isPlus = e.x > i.x;
}
};
e.prototype.onColliderExit = function(t) {
t.tag == s.default.TAG.PLAYER && (this.isRotate = !1);
};
e.prototype.update = function(t) {
this.isRotate ? this.node.angle = r.default.lerp(this.node.angle, this.isPlus ? 15 : -15, 5 * t) : this.node.angle = r.default.lerp(this.node.angle, 0, 5 * t);
};
return n([ u ], e);
}(l.default));
i.default = p;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../collider/CCollider": "CCollider",
"../logic/Logic": "Logic"
} ],
NextStep: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "017cbligblAvaHFuvAAHvD9", "NextStep");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = cc._decorator, r = (n.ccclass, n.property, function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isExcuting = !1;
e.storePoint = 1;
e.storePointMax = 1;
e.duration = 0;
e.isLooping = !1;
e.excuteRest = !1;
e.lastTime = 0;
e.intervalTime = .1;
return e;
}
e.prototype.init = function(t, e, i, o, a, n, r) {
this.secondCallback = n;
this.storePointMax = e || 1;
this.duration = o && o > 0 ? o : 0;
this.intervalTime = r && r > 0 ? r : this.intervalTime;
this.storePointMax < 1 && (this.storePointMax = 1);
this.storePoint = i || 0 == i ? i : 1;
this.storePoint <= 0 && (this.storePoint = 0);
this.storePoint > this.storePointMax && (this.storePoint = this.storePointMax);
t ? this.storePoint = 0 : this.startLoop(a);
};
e.prototype.startLoop = function(t) {
var e = this;
if (!this.isLooping) {
this.unscheduleAllCallbacks();
this.isLooping = !0;
this.lastTime = t || 0 == t ? t : Date.now();
if (this.storePointMax != this.storePoint) {
var i = this.duration < this.intervalTime ? this.duration : this.intervalTime;
this.schedule(function() {
if (Date.now() - e.lastTime > 1e3 * e.duration) {
e.excuteRest && (e.isExcuting = !1);
e._refreshCoolDown();
}
e.secondCallback && e.secondCallback(e.lastTime);
}, i, cc.macro.REPEAT_FOREVER, i);
} else {
this._refreshCoolDown();
this.secondCallback && this.secondCallback(this.lastTime);
}
}
};
e.prototype.next = function(t, e, i, o, a) {
this.secondCallback = o;
this.excuteRest = i;
this.duration = e;
this.intervalTime = a && a > 0 ? a : this.intervalTime;
if (0 != this.storePoint) {
this.storePoint--;
this.storePoint <= 0 && (this.storePoint = 0);
this.startLoop();
t && t();
} else this.startLoop();
};
e.prototype.cutCoolDown = function(t) {
t && this.isLooping && (this.lastTime += 1e3 * t);
return this.lastTime;
};
e.prototype.refreshCoolDown = function(t) {
this._refreshCoolDown();
return this.cutCoolDown(t);
};
e.prototype._refreshCoolDown = function() {
this.storePoint++;
if (this.storePoint >= this.storePointMax) {
this.lastTime = 0;
this.storePoint = this.storePointMax;
this.isLooping = !1;
this.unscheduleAllCallbacks();
} else this.lastTime = Date.now();
};
Object.defineProperty(e.prototype, "IsInCooling", {
get: function() {
return this.storePoint < this.StorePointMax;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "IsExcuting", {
get: function() {
return this.isExcuting;
},
set: function(t) {
this.isExcuting = t;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "StorePoint", {
get: function() {
return this.storePoint;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "LastTime", {
get: function() {
return this.lastTime;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "StorePointMax", {
get: function() {
return this.storePointMax;
},
enumerable: !1,
configurable: !0
});
return e;
}(cc.Component));
i.default = r;
cc._RF.pop();
}, {} ],
NodeEntity: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "478c8MR3JxFH7AHI9bUF5qI", "NodeEntity");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
return e;
}(t("../ECS").ecs.Entity);
i.default = n;
cc._RF.pop();
}, {
"../ECS": "ECS"
} ],
NodeKey: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "61554+RantE/Yzl2Ewb7DHo", "NodeKey");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = cc._decorator, a = (o.ccclass, o.property, function(t, e) {
this.key = t;
this.node = e;
});
i.default = a;
cc._RF.pop();
}, {} ],
NodeRenderComponent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "7caa6sbwkpE5IS2EfvinvA9", "NodeRenderComponent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.NodeRenderComponent = void 0;
var r = t("../ECS"), s = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.reset = function() {
this.node = null;
this.root = null;
};
return n([ r.ecs.register("NodeRender") ], e);
}(r.ecs.IComponent);
i.NodeRenderComponent = s;
cc._RF.pop();
}, {
"../ECS": "ECS"
} ],
NonPlayerActorState: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9492bjmskVBUqR8oiksJoFq", "NonPlayerActorState");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
i.GLOBAL = i.FALL = i.BLINK = i.DIZZ = i.DODGE = i.DASH = i.DISGUISE = i.BLOCK = i.TALK = i.HURT = i.DIED = i.SHOW = i.PRPARE = i.ATTACK = i.WALK = i.IDLE = void 0;
var n = t("../base/BaseNonPlayerActorState"), r = t("../utils/Utils"), s = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(IDLE):enter");
e.enterIdle();
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDashing ? e.stateMachine.changeState(S.DASH) : e.sc.isBlinking ? e.stateMachine.changeState(S.BLINK) : e.sc.isDodging ? e.stateMachine.changeState(S.DODGE) : e.sc.isAttacking ? e.stateMachine.changeState(S.ATTACK) : e.sc.isTalking ? e.stateMachine.changeState(S.TALK) : e.sc.isMoving && e.stateMachine.changeState(S.WALK);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(IDLE):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(IDLE):event");
return !0;
};
return e;
}(n.default);
i.IDLE = s;
var l = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
e.enterWalk();
r.default.log("" + e.actorName() + e.node.uuid + "(WALK):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isMoving ? e.sc.isAttacking ? e.stateMachine.changeState(S.ATTACK) : e.sc.isDodging ? e.stateMachine.changeState(S.DODGE) : e.sc.isBlinking && e.stateMachine.changeState(S.BLINK) : e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(WALK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(WALK):event");
return !0;
};
return e;
}(n.default);
i.WALK = l;
var c = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(ATTACK):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isAttacking || e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(ATTACK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(ATTACK):event");
return !0;
};
return e;
}(n.default);
i.ATTACK = c;
var u = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(PRPARE):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDisguising ? e.stateMachine.changeState(S.DISGUISE) : e.stateMachine.changeState(S.SHOW);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(PRPARE):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(PRPARE):event");
return !0;
};
return e;
}(n.default);
i.PRPARE = u;
var p = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(SHOW):enter");
e.enterShow();
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isShow && e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(SHOW):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(SHOW):event");
return !0;
};
return e;
}(n.default);
i.SHOW = p;
var h = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DIE):enter");
e.killed();
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DIE):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(DIE):event");
return !0;
};
return e;
}(n.default);
i.DIED = h;
var d = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(HURT):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isHurting ? e.sc.isFalling ? e.stateMachine.changeState(S.FALL) : e.sc.isBlinking && e.stateMachine.changeState(S.BLINK) : e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(HURT):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(TAKEDAMAGE):event");
return !0;
};
return e;
}(n.default);
i.HURT = d;
var f = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(TALK):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isTalking || e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(TALK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(TALK):event");
return !0;
};
return e;
}(n.default);
i.TALK = f;
var g = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(BLOCK):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(BLOCK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(BLOCK):event");
return !0;
};
return e;
}(n.default);
i.BLOCK = g;
var y = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DISGUISE):enter");
e.enterDisguise();
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDisguising || e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DISGUISE):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(DISGUISE):event");
return !0;
};
return e;
}(n.default);
i.DISGUISE = y;
var m = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DASH):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDashing || e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DASH):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(DASH):event");
return !0;
};
return e;
}(n.default);
i.DASH = m;
var v = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DODGE):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDodging || e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DODGE):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(DODGE):event");
return !0;
};
return e;
}(n.default);
i.DODGE = v;
var E = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DIZZ):enter");
e.enterDizz();
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDizzing || e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DIZZ):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(DIZZ):event");
return !0;
};
return e;
}(n.default);
i.DIZZ = E;
var _ = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(BLINK):enter");
e.enterBlink();
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isBlinking || e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(BLINK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(BLINK):event");
return !0;
};
return e;
}(n.default);
i.BLINK = _;
var T = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(FALL):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isFalling || e.stateMachine.changeState(S.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(FALL):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(FALL):event");
return !0;
};
return e;
}(n.default);
i.FALL = T;
var D = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(GLOBAL):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDied || (e.data.currentHealth <= 0 ? e.stateMachine.changeState(S.DIED) : !S.HURT.isRunnig && e.sc.isHurting && e.stateMachine.changeState(S.HURT));
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(GLOBAL):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(GLOBAL):event");
return !0;
};
return e;
}(n.default);
i.GLOBAL = D;
var S = function() {
function t() {}
t.GLOBAL = new D();
t.WALK = new l();
t.ATTACK = new c();
t.IDLE = new s();
t.DISGUISE = new y();
t.DIED = new h();
t.DODGE = new v();
t.HURT = new d();
t.PRPARE = new u();
t.SHOW = new p();
t.BLINK = new _();
t.FALL = new T();
t.TALK = new f();
t.DASH = new m();
return t;
}();
i.default = S;
cc._RF.pop();
}, {
"../base/BaseNonPlayerActorState": "BaseNonPlayerActorState",
"../utils/Utils": "Utils"
} ],
NonPlayerData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e5e26RTCAFA6KSlJtwFy/GC", "NonPlayerData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("./DamageData"), a = t("./StatusData"), n = t("./CommonData"), r = t("../utils/DataUtils"), s = t("./AvatarData"), l = function() {
function t() {
this.nameCn = "";
this.nameEn = "";
this.resName = "";
this.chapter = 0;
this.stageLevel = 0;
this.invisible = 0;
this.remote = 0;
this.melee = 0;
this.dash = 0;
this.meleeDash = 0;
this.disguise = 0;
this.scale = 0;
this.bulletType = "";
this.bulletArcExNum = 0;
this.bulletLineExNum = 0;
this.bulletLineInterval = 0;
this.bulletExSpeed = 0;
this.specialBulletArcExNum = 0;
this.specialBulletLineExNum = 0;
this.specialRemoteAngle = 0;
this.isArcAim = 0;
this.isLineAim = 0;
this.blink = 0;
this.isBoom = 0;
this.isHeavy = 0;
this.isStatic = 0;
this.isRecovery = 0;
this.shooterOffsetX = 0;
this.shooterOffsetY = 0;
this.specialAttack = 0;
this.specialType = "";
this.specialDistance = 0;
this.specialDelay = 0;
this.specialDash = 0;
this.dashJump = 0;
this.bodyColor = "#ffffff";
this.pos = cc.v3(0, 0);
this.currentHealth = 0;
this.boxType = 0;
this.attackType = 0;
this.isEnemy = 0;
this.isFollow = 0;
this.lifeTime = 0;
this.isTest = 0;
this.reborn = 0;
this.attackFrames = 2;
this.specialFrames = 2;
this.attackFrameKeyStart = 1;
this.specialFrameKeyStart = 1;
this.attackFrameKeyEnd = 2;
this.specialFrameKeyEnd = 2;
this.remoteAudio = "";
this.specialAudio = "";
this.isPet = 0;
this.childResName = "";
this.childMode = 0;
this.childCount = 0;
this.flee = 0;
this.noLoot = 0;
this.water = 0;
this.fly = 0;
this.bodyRect = "";
this.attackRect = "";
this.statusTotalData = new a.default();
this.common = new n.default();
this.statusList = new Array();
this.avatar = new s.default();
}
Object.defineProperty(t.prototype, "StatusTotalData", {
get: function() {
return this.statusTotalData;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Common", {
get: function() {
return this.common;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "FinalCommon", {
get: function() {
return new n.default().add(this.common).add(this.statusTotalData.Common);
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "StatusList", {
get: function() {
return this.statusList;
},
set: function(t) {
if (t) {
this.statusList = new Array();
for (var e = 0, i = t; e < i.length; e++) {
var o = i[e], n = new a.default();
n.valueCopy(o);
this.statusList.push(n);
}
}
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "AvatarData", {
get: function() {
return this.avatar;
},
set: function(t) {
this.avatar = t;
},
enumerable: !1,
configurable: !0
});
t.prototype.updateHA = function(t, e, i) {
this.currentHealth = t;
this.common.maxHealth = e;
this.common.damageMin = i;
};
t.prototype.valueCopy = function(t) {
if (t) {
r.default.baseCopy(this, t);
this.common.valueCopy(t.common);
this.avatar.valueCopy(t.avatar);
this.StatusList = t.statusList;
this.pos = t.pos ? cc.v3(t.pos.x, t.pos.y) : cc.v3(0, 0);
this.attackFrames = t.attackFrames ? t.attackFrames : 2;
this.specialFrames = t.specialFrames ? t.specialFrames : 2;
this.attackFrameKeyStart = t.attackFrameKeyStart ? t.attackFrameKeyStart : 1;
this.specialFrameKeyStart = t.specialFrameKeyStart ? t.specialFrameKeyStart : 1;
this.attackFrameKeyEnd = t.attackFrameKeyEnd ? t.attackFrameKeyEnd : 2;
this.specialFrameKeyEnd = t.specialFrameKeyEnd ? t.specialFrameKeyEnd : 2;
this.bodyColor = t.bodyColor ? t.bodyColor : "#ffffff";
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.prototype.getAttackPoint = function() {
var t = this.FinalCommon, e = new o.default();
e.realDamage = t.RealDamage;
e.physicalDamage = t.DamageMin;
e.magicDamage = t.MagicDamage;
e.physicalDamage < 0 && (e.physicalDamage = 0);
return e;
};
t.prototype.getDamage = function(t) {
var e = this.FinalCommon, i = t.clone(), o = e.Defence, a = e.magicDefence;
i.physicalDamage = o >= 0 ? i.physicalDamage * (1 - .06 * o / (.06 * o + 1)) : i.physicalDamage * (2 - Math.pow(.94, -o));
i.magicDamage = i.magicDamage * (1 - a / 100);
return i;
};
t.prototype.getHealth = function() {
var t, e = this.FinalCommon.MaxHealth;
if (!(e > 0)) return cc.v3(1, 1);
t = this.currentHealth / e;
return cc.v3(e * t, e);
};
return t;
}();
i.default = l;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./AvatarData": "AvatarData",
"./CommonData": "CommonData",
"./DamageData": "DamageData",
"./StatusData": "StatusData"
} ],
NonPlayerManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "2a4f27Fn0RPWppWDoGhOHT3", "NonPlayerManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = t("./BaseManager"), c = t("../utils/Utils"), u = t("../logic/NonPlayer"), p = t("../data/NonPlayerData"), h = t("../logic/Achievement"), d = t("./LoadingManager"), f = cc._decorator, g = f.ccclass, y = f.property, m = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.nonplayer = null;
e.nonplayers = new Array();
e.timeDelay = 0;
return e;
}
Object.defineProperty(e.prototype, "nonPlayerList", {
get: function() {
return this.nonplayers;
},
enumerable: !1,
configurable: !0
});
e.prototype.clear = function() {
c.default.clearComponentArray(this.nonplayers);
};
e.prototype.addNonPlayerListFromSave = function(t, e, i, o) {
for (var a = this, n = 0, r = e; n < r.length; n++) {
var s = r[n];
(s.isPet || s.lifeTime > 0) && this.getNonPlayer(s, t, function(t) {
a.addNonPlayer(t, i, o);
});
}
};
e.prototype.addNonPlayerFromData = function(t, e, i, o) {
var a = this;
h.default.addNpcsAchievement(t.resName);
this.getNonPlayer(t, o, function(t) {
a.addNonPlayer(t, e, i);
});
};
e.prototype.isPetAlive = function() {
return !!(this.pet && this.pet.isValid && this.pet.node.active && this.pet.data.currentHealth > 0);
};
e.prototype.addPetFromData = function(t, e, i, o) {
for (var a = this, n = 0, r = this.nonPlayerList; n < r.length; n++) r[n].data.isPet;
if (!this.isPetAlive()) {
h.default.addNpcsAchievement(t.resName);
this.getNonPlayer(t, o, function(t) {
a.addNonPlayer(t, e, i);
});
}
};
e.prototype.addNonPlayerFromMap = function(t, e, i, o) {
if (r.default.isFirstEqual(e, "n")) {
var a = new p.default();
a.valueCopy(s.default.nonplayers["nonplayer" + e.substring(1)]);
this.addNonPlayerFromData(a, r.default.getPosInMap(i), o, t);
}
};
e.prototype.getNonPlayer = function(t, e, i) {
var o = this;
d.default.loadNpcSpriteAtlas(t.resName, function() {
var a = null;
(a = cc.instantiate(o.nonplayer)).active = !1;
a.parent = e.node;
var n = a.getComponent(u.default), r = new p.default();
n.dungeon = e;
r.valueCopy(s.default.nonplayers[t.resName]);
r.valueCopy(t);
r.isEnemy = 0;
n.data = r;
n.sc.isDisguising = r.disguise > 0;
n.sc.isDisguising ? n.changeBodyRes(r.resName, u.default.RES_DISGUISE) : n.changeBodyRes(r.resName, u.default.RES_IDLE000);
i(n);
});
};
e.prototype.addNonPlayer = function(t, e, i) {
t.node.active = !0;
t.pos = r.default.getIndexInMap(e);
t.entity.Transform.position = e;
i && (t.posZ = i);
this.nonPlayerList.push(t);
t.data.isPet > 0 && (this.pet = t);
};
e.prototype.updateLogic = function(t) {
s.default.nonPlayerList = [];
for (var e = this.nonplayers.length - 1; e >= 0; e--) {
var i = this.nonPlayerList[e];
if (i && i.node) {
if (i.node.active) {
i.updateLogic(t);
var o = i.data.clone();
i.leftLifeTime > 0 && (o.lifeTime = i.leftLifeTime);
o.currentHealth > 0 && s.default.nonPlayerList.push(o);
}
} else this.nonplayers.splice(e, 1);
}
};
e.NON_SHADOW = "nonplayer001";
e.SHOP_KEEPER = "nonplayer002";
e.SHOP_MONKEY = "nonplayer003";
e.DOG = "nonplayer100";
e.CAT = "nonplayer101";
e.FISH = "nonplayer102";
n([ y(cc.Prefab) ], e.prototype, "nonplayer", void 0);
return n([ g ], e);
}(l.default);
i.default = m;
cc._RF.pop();
}, {
"../data/NonPlayerData": "NonPlayerData",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/NonPlayer": "NonPlayer",
"../utils/Utils": "Utils",
"./BaseManager": "BaseManager",
"./LoadingManager": "LoadingManager"
} ],
NonPlayer: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b7513vXKLpHGrSf+utaohLs", "NonPlayer");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = t("./EventHelper"), u = t("./HealthBar"), p = t("./Logic"), h = t("./Dungeon"), d = t("./Shooter"), f = t("../manager/StatusManager"), g = t("../data/DamageData"), y = t("../utils/Random"), m = t("../utils/NextStep"), v = t("../item/Item"), E = t("./Achievement"), _ = t("../utils/AudioPlayer"), T = t("../manager/SpecialManager"), D = t("../data/FromData"), S = t("../utils/IndexZ"), O = t("../actor/AreaOfEffect"), A = t("../data/AreaOfEffectData"), R = t("../actor/ActorAttackBox"), C = t("../base/fsm/DefaultStateMachine"), P = t("../actor/NonPlayerActorState"), L = t("../data/NonPlayerData"), b = t("../utils/ActorUtils"), I = t("../collider/CCollider"), M = t("../actor/AreaDetector"), N = t("../actor/ActorBottomDir"), w = t("../actor/JumpingAbility"), H = t("../data/TriggerData"), x = t("../base/PlayActor"), F = t("./PlayerAvatar"), B = t("../base/BaseAvatar"), k = t("./FrameAvatar"), j = t("../ui/Tips"), U = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.pos = cc.v3(0, 0);
e.defautPos = cc.v3(0, 0);
e.posZ = 0;
e.root = null;
e.shadow = null;
e.healthBar = null;
e.statusManager = null;
e.specialManager = null;
e.boom = null;
e.dangerBoxNode = null;
e.dangerBox = null;
e.dangerTips = null;
e.attrPrefab = null;
e.bottomDir = null;
e.waterSpark = null;
e.avatarPrefab = null;
e.frameAvatarPrefab = null;
e.tips = null;
e.isFaceRight = !0;
e.shooter = null;
e.currentlinearVelocitySpeed = cc.Vec2.ZERO;
e.isVariation = !1;
e.isSummon = !1;
e.killPlayerCount = 0;
e.moveStep = new m.default();
e.remoteStep = new m.default();
e.meleeStep = new m.default();
e.specialStep = new m.default();
e.dashStep = new m.default();
e.blinkStep = new m.default();
e.trackStep = new m.default();
e.swimmingAudioStep = new m.default();
e.attrmap = {};
e.animStatus = i.ANIM_NONE;
e.data = new L.default();
e.leftLifeTime = 0;
e.childNonPlayerList = [];
e.isInWaterTile = !1;
e.lastWaterPos = cc.v3(0, 0);
e.attackRect = [];
e.bodyRect = [];
e.waterY = 0;
e.lastTimeInWater = !1;
e.statusPos = cc.v3(0, 0);
e.hurtReset = function() {
if (e.node) {
e.fly();
e.hitLight(!1);
e.resetBodyColor();
if (e.sc.isHurting) {
e.sc.isHurting = !1;
e.anim.resume();
}
}
};
e.stopMove = function() {
e.sc.isMoving = !1;
};
e.moveTimeDelay = 0;
return e;
}
i = e;
Object.defineProperty(e.prototype, "IsVariation", {
get: function() {
return this.isVariation || this.data.StatusTotalData.variation > 0;
},
enumerable: !1,
configurable: !0
});
e.prototype.init = function() {
var t = this;
this.triggerShooter = this.shooter;
this.statusMgr = this.statusManager;
this.nonPlayerData = this.data;
this.jumpAbility = this.addComponent(w.default);
this.jumpAbility.init(this, 1, 0, function(e, i) {
H.default.TYPE_JUMP_END == i && (t.sc.isMoving ? t.playerAnim(B.default.STATE_WALK, t.currentDir) : t.playerAnim(B.default.STATE_IDLE, t.currentDir));
t.exTrigger(e, i, null, null);
});
this.data.AvatarData.isAnimFrame ? this.frameAvatar = k.default.create(this.frameAvatarPrefab, this.root, p.default.playerData.AvatarData.clone(), this.data.resName) : this.avatar = F.default.create(this.avatarPrefab, this.root, p.default.playerData.AvatarData.clone(), this.node.group);
};
Object.defineProperty(e.prototype, "Root", {
get: function() {
return this.root;
},
enumerable: !1,
configurable: !0
});
e.prototype.playerAnim = function() {};
e.prototype.getWalkSmoke = function() {};
e.prototype.onLoad = function() {
this.init();
this.initCollider();
this.dangerBox = this.dangerBoxNode.getComponent(R.default);
this.graphics = this.getComponent(cc.Graphics);
this.anim = this.getComponent(cc.Animation);
this.sprite = this.root.getChildByName("sprite");
this.bodySprite = this.sprite.getChildByName("body").getComponent(cc.Sprite);
this.mat = this.bodySprite.getComponent(cc.Sprite).getMaterial(0);
this.boxCollider = this.getComponent(I.default);
this.node.scale = this.getScaleSize();
this.dashlight = this.sprite.getChildByName("dashlight");
this.dashlight.opacity = 0;
this.shooter = this.root.getChildByName("Shooter").getComponent(d.default);
this.effectNode = this.root.getChildByName("Effect");
this.hitLightSprite = this.root.getChildByName("Effect").getChildByName("hitlight").getComponent(cc.Sprite);
this.hitLightSprite.node.opacity = 0;
this.particleBlood = this.root.getChildByName("Effect").getChildByName("blood").getComponent(cc.ParticleSystem);
this.particleBlood.stopSystem();
this.attrNode = this.root.getChildByName("attr");
this.areaDetector = this.getComponentInChildren(M.default);
this.resetBodyColor();
this.statusPos = this.statusManager.node.position.clone();
if (this.data.isStatic > 0) {
this.entity.Collider.colliders[0].isStatic = !0;
this.node.width = this.entity.Collider.colliders[0].w;
this.node.height = this.entity.Collider.colliders[0].h;
}
this.bottomDir && this.bottomDir.init(this, this.data.isEnemy > 0 ? cc.Color.RED : cc.Color.YELLOW);
this.initSize();
this.dangerBox.init(this, this.data);
this.dangerTips.opacity = 0;
this.specialStep.init();
this.stateMachine = new C.default(this, P.default.PRPARE, P.default.GLOBAL);
};
e.prototype.start = function() {
var t = this;
this.changeZIndex();
this.healthBar.refreshHealth(this.data.getHealth().x, this.data.getHealth().y);
this.healthBar.hideWhenFull = !0;
if (this.data.lifeTime > 0) {
var e = new m.default();
this.leftLifeTime = this.data.lifeTime;
e.next(function() {}, this.data.lifeTime, !0, function() {
t.leftLifeTime--;
t.leftLifeTime <= 0 && t.data && (t.data.currentHealth = 0);
}, 1);
}
this.addSaveStatusList();
this.entity.Move.damping = 3;
this.entity.Move.linearVelocity = cc.v2(0, 0);
for (var i = this.data.attackRect.split(","), o = this.data.bodyRect.split(","), a = 0, n = i; a < n.length; a++) {
var r = n[a];
this.attackRect.push(parseInt(r));
}
for (var s = 0, l = o; s < l.length; s++) {
r = l[s];
this.bodyRect.push(parseInt(r));
}
};
e.prototype.jump = function() {
this.jumpAbility && this.jumpAbility.jump(6, 3);
};
e.prototype.jumpCancel = function() {
this.jumpAbility && this.jumpAbility.cancel();
};
e.prototype.fly = function() {
this.jumpAbility && this.data.fly > 0 && this.jumpAbility.fly(1, this.data.fly);
};
e.prototype.flyCancel = function() {
this.jumpAbility && this.data.fly > 0 && this.jumpAbility.flyCancel(1);
};
e.prototype.hitLightS = function(t) {
var e = !0, i = "hitlight1", o = 4, a = [ _.default.PUNCH, _.default.PUNCH1, _.default.PUNCH2 ], n = [ _.default.SWORD_HIT, _.default.SWORD_HIT1, _.default.SWORD_HIT2 ], r = [ _.default.MONSTER_HIT, _.default.MONSTER_HIT1, _.default.MONSTER_HIT2 ];
if (t.isFist) {
i = p.default.getHalfChance() ? "hitlight1" : "hitlight2";
_.default.play(a[p.default.getRandomNum(0, 2)]);
} else if (t.isRemote) {
i = p.default.getHalfChance() ? "hitlight9" : "hitlight10";
_.default.play(r[p.default.getRandomNum(0, 2)]);
} else if (t.isBlunt) {
i = p.default.getHalfChance() ? "hitlight3" : "hitlight4";
o = t.isFar ? 5 : 4;
_.default.play(n[p.default.getRandomNum(0, 2)]);
} else if (t.isMelee) {
_.default.play(n[p.default.getRandomNum(0, 2)]);
if (t.isStab) {
i = p.default.getHalfChance() ? "hitlight5" : "hitlight6";
o = t.isFar ? 5 : 4;
} else {
i = p.default.getHalfChance() ? "hitlight7" : "hitlight8";
o = t.isFar ? 5 : 4;
}
} else {
_.default.play(r[p.default.getRandomNum(0, 2)]);
e = !1;
}
if (e) {
this.hitLightSprite.node.stopAllActions();
this.hitLightSprite.spriteFrame = p.default.spriteFrameRes(i);
this.hitLightSprite.node.opacity = 255;
this.hitLightSprite.node.color = cc.Color.WHITE;
this.hitLightSprite.node.scale = t.isCriticalStrike ? o : o + 2;
cc.tween(this.hitLightSprite.node).delay(.2).to(.2, {
opacity: 0,
color: cc.Color.RED
}).start();
}
};
e.prototype.addSaveStatusList = function() {
this.statusManager && this.statusManager.addStatusListFromSave(this.data.StatusList);
};
e.prototype.hitLight = function(t) {
this.mat || (this.mat = this.root.getChildByName("sprite").getChildByName("body").getComponent(cc.Sprite).getMaterial(0));
this.mat.setProperty("addColor", t ? cc.color(200, 200, 200, 100) : cc.Color.TRANSPARENT);
};
e.prototype.addAttrIcon = function() {
this.attrNode || (this.attrNode = this.root.getChildByName("attr"));
this.attrNode.removeAllChildren();
for (var t in this.attrmap) {
var e = cc.instantiate(this.attrPrefab);
e.getComponent(cc.Sprite).spriteFrame = p.default.spriteFrameRes(t);
this.attrNode.addChild(e);
}
};
e.prototype.showDangerTips = function() {
var t = this;
this.dangerTips.opacity = 255;
this.scheduleOnce(function() {
t.dangerTips.opacity = 0;
}, 1);
};
e.prototype.getCurrentBodyRes = function() {
if (!this.sprite) {
this.sprite = this.root.getChildByName("sprite");
this.bodySprite = this.sprite.getChildByName("body").getComponent(cc.Sprite);
}
return this.bodySprite.spriteFrame.name;
};
e.prototype.initSize = function() {
var t = this.data.bodyRect.split(",");
this.boxCollider || (this.boxCollider = this.getComponent(I.default));
this.boxCollider.offset = cc.v2(parseInt(t[0]), parseInt(t[1]));
this.boxCollider.w = parseInt(t[2]);
this.boxCollider.h = parseInt(t[3]);
this.boxCollider.zHeight = parseInt(t[4]);
this.boxCollider.tag = this.data.isEnemy > 0 ? I.default.TAG.NONPLAYER : I.default.TAG.GOODNONPLAYER;
if (this.data.blink > 0) {
this.boxCollider.setIgnoreTags([ I.default.TAG.WALL ]);
this.boxCollider.setIgnoreTags([ I.default.TAG.WALL_TOP ]);
this.boxCollider.setIgnoreTags([ I.default.TAG.BUILDING ]);
this.boxCollider.setIgnoreTags([ I.default.TAG.WARTER ]);
}
this.shadow.width = this.boxCollider.w;
this.shadow.height = this.boxCollider.h;
};
e.prototype.changeBodyRes = function(t, e) {
if (!this.sprite) {
this.sprite = this.root.getChildByName("sprite");
this.bodySprite = this.sprite.getChildByName("body").getComponent(cc.Sprite);
}
if (this.hv.y > 0 && e && e.indexOf("anim0") > -1) {
var i = e.replace("anim0", "anim1");
this.getSpriteFrameByName(t, i) && (e = i);
}
var o = this.getSpriteFrameByName(t, e);
if (o) {
this.bodySprite.spriteFrame = o;
this.bodySprite.node.width = o.getOriginalSize().width;
this.bodySprite.node.height = o.getOriginalSize().height;
this.setInWaterMat(this.bodySprite, this.data.water < 1 && this.isInWater());
} else this.bodySprite.spriteFrame = null;
};
e.prototype.showWaterSpark = function() {
if (!this.lastTimeInWater && this.isInWater()) {
var t = cc.instantiate(this.waterSpark);
t.parent = this.node;
t.position = cc.v3(0, 0);
_.default.play(_.default.JUMP_WATER);
}
this.lastTimeInWater = this.isInWater();
};
e.prototype.isInWater = function() {
return this.isInWaterTile && this.entity.Transform.z < 32;
};
e.prototype.getSpriteFrameByName = function(t, e) {
var i = p.default.spriteFrameRes(t + e);
i || (i = p.default.spriteFrameRes(t));
return i;
};
e.prototype.updatePlayerPos = function() {
this.entity.Transform.position = h.default.getPosInMap(this.pos);
this.node.position = this.entity.Transform.position.clone();
};
e.prototype.transportPlayer = function(t, e) {
this.sprite.angle = 0;
this.sprite.scaleX = this.isFaceRight ? 1 : -1;
this.sprite.opacity = 255;
this.sprite.x = 0;
this.sprite.y = 0;
this.pos.x = t;
this.pos.y = e;
this.changeZIndex();
this.updatePlayerPos();
};
e.prototype.changeZIndex = function() {
var t = this.entity.Transform.base;
t > 0 && (t += 500);
this.node.zIndex = S.default.getActorZIndex(cc.v3(this.node.position.x, this.node.position.y - t));
};
e.prototype.remoteAttack = function(t, e) {
this.remoteStep.IsExcuting = !1;
this.hv = cc.v2(t.getCenterPosition().sub(this.node.position)).normalize();
if (!this.hv.equals(cc.Vec2.ZERO)) {
this.shooter.setHv(this.hv.clone());
this.shooter.from.valueCopy(D.default.getClone(this.data.nameCn, this.data.resName + "anim000", this.seed));
this.IsVariation && (this.shooter.data.bulletSize = .5);
this.shooter.dungeon = this.dungeon;
this.shooter.actor = this;
this.shooter.data.remoteAudio = this.data.remoteAudio;
this.shooter.isFromPlayer = this.data.isEnemy < 1;
this.shooter.data.bulletArcExNum = this.data.bulletArcExNum;
this.shooter.data.bulletLineExNum = this.data.bulletLineExNum;
this.shooter.data.bulletLineInterval = this.data.bulletLineInterval;
if (e) {
this.shooter.data.bulletLineExNum = this.data.specialBulletLineExNum;
this.shooter.data.bulletArcExNum = this.data.specialBulletArcExNum;
}
this.shooter.data.isLineAim = this.data.isLineAim;
this.shooter.data.bulletType = this.data.bulletType ? this.data.bulletType : "bullet001";
this.shooter.data.bulletExSpeed = this.data.bulletExSpeed;
this.shooter.node.position = cc.v3(this.isFaceRight ? this.data.shooterOffsetX : -this.data.shooterOffsetX, this.data.shooterOffsetY);
this.shooter.fireBullet(this.data.Common.remoteAngle);
}
};
e.prototype.bodyStopAllActions = function() {
this.bodySprite.node.stopAllActions();
this.sc.isBlinking = !1;
this.bodySprite.node.opacity = 255;
};
e.prototype.showAttackAnim = function(t, e, o, a, n, r, s) {
var l = this, c = 1 - this.data.FinalCommon.AttackSpeed / 10;
c < .5 && (c = .5);
c > 2 && (c = 2);
var u = cc.v2(a.node.position.clone().sub(this.node.position));
u.equals(cc.Vec2.ZERO) && (u = cc.v2(1, 0));
u = u.normalize().mul(this.isFaceRight ? 32 : -32);
this.isFaceRight || (u.y = -u.y);
this.anim.pause();
this.bodyStopAllActions();
this.sprite.stopAllActions();
var p = 0;
(!n && this.data.meleeDash > 0 || n && this.data.specialDash > 0) && r && (p = .4 * c);
for (var h = cc.tween().delay(.5 * c).call(function() {
t && t(n);
}), d = cc.tween().by(.02, {
position: cc.v3(5, 0)
}).by(.02, {
position: cc.v3(-5, 0)
}).by(.02, {
position: cc.v3(5, 0)
}).by(.02, {
position: cc.v3(-5, 0)
}).by(.02, {
position: cc.v3(5, 0)
}).by(.02, {
position: cc.v3(-5, 0)
}).by(.02, {
position: cc.v3(5, 0)
}).by(.02, {
position: cc.v3(-5, 0)
}), f = [ "anim009" ], g = [], y = 0, m = n ? this.data.specialFrameKeyStart : this.data.attackFrameKeyStart, v = n ? this.data.specialFrameKeyEnd : this.data.attackFrameKeyEnd; y < this.data.attackFrames - 1; ) f.push("anim0" + (10 + y++));
for (var E = 0; E < this.data.specialFrames; E++) g.push("anim0" + (10 + y++));
var S = n ? g : f, O = cc.tween().delay(0), A = function(t) {
O.then(cc.tween().delay(.2 * c).call(function() {
l.changeBodyRes(l.data.resName, S[t]);
_.default.play(_.default.MELEE);
}));
};
for (E = 0; E < m; E++) A(E);
var R = cc.tween().delay(0), C = function(t) {
R.then(cc.tween().delay(.2 * c).call(function() {
l.flyCancel();
l.changeBodyRes(l.data.resName, S[t]);
}));
};
for (E = m; E < v; E++) C(E);
var P = cc.tween().delay(0), L = function(t) {
P.then(cc.tween().delay(.2 * c).call(function() {
l.fly();
l.changeBodyRes(l.data.resName, S[t]);
}));
};
for (E = v; E < S.length; E++) L(E);
var I = cc.tween().to(.2 * c, {
position: cc.v3(-u.x, -u.y)
}).delay(p), M = cc.tween().to(.2 * c, {
position: this.data.fly > 0 ? cc.v3(0, 0) : cc.v3(u.x, u.y)
}).delay(p), N = this.data.specialType.length <= 0 || this.data.specialType == T.default.AFTER_ASH, w = cc.tween().call(function() {
(r && !n || n && r && N || n && l.data.specialDash > 0) && l.dangerBox.show(l.data.attackRect, n, b.default.getDashDistance(l, n ? l.data.specialDash : l.data.meleeDash, .4 * c), l.hv, !1);
n && l.scheduleOnce(function() {
if (!l.sc.isDied) {
l.specialManager.dungeon = l.dungeon;
l.specialManager.addEffect(l.data.specialType, l.data.specialDistance, l.isFaceRight, D.default.getClone(l.data.nameCn, l.data.resName + "anim000", l.seed), l.IsVariation);
}
}, l.data.specialDelay);
}), H = cc.tween().call(function() {
l.dangerBox.hide(s);
if (!n && l.data.meleeDash > 0 || n && l.data.specialDash > 0) {
l.move(cc.v3(l.hv), n ? l.data.specialDash : l.data.meleeDash);
l.data.dashJump > 0 && l.jumpAbility.jump(l.data.dashJump, 0);
}
n && l.scheduleOnce(function() {
if (!l.sc.isDied) {
l.specialManager.dungeon = l.dungeon;
l.specialManager.addPlacement(l.data.specialType, l.data.specialDistance, l.isFaceRight, D.default.getClone(l.data.nameCn, l.data.resName + "anim000", l.seed), l.IsVariation);
}
}, l.data.specialDelay);
e && e(n);
}), x = cc.tween().call(function() {
l.dangerBox.finish();
}), F = cc.tween().delay(.2 * c).call(function() {
l.dangerBox.finish();
l.changeBodyRes(l.data.resName, i.RES_IDLE000);
l.setLinearVelocity(cc.Vec2.ZERO);
}), B = cc.tween().to(.2 * c, {
position: cc.v3(0, 0)
}).delay(.2 * c).call(function() {
o && o(n);
}), k = cc.tween().then(w).then(O).then(I).parallel(H, R, M).parallel(x, P).then(F), j = cc.tween().then(w).then(O).parallel(H, R).parallel(x, P).then(F), U = cc.tween().then(w).then(O).then(I).then(d).parallel(H, R, M).parallel(x, P).then(F), G = cc.tween().then(w).parallel(d, O).parallel(H, R).parallel(x, P).then(F), W = cc.tween().then(h).then(r ? k : j).then(B);
if (n) {
this.showDangerTips();
_.default.play(this.data.specialAudio);
W = cc.tween().then(h).then(G).then(B);
r && N && (W = cc.tween().then(h).then(U).then(B));
}
cc.tween(this.bodySprite.node).then(W).start();
};
e.prototype.move = function(t, e) {
if (t.equals(cc.Vec3.ZERO)) this.hv = cc.v2(0, 0); else {
t = t.normalize();
this.hv = cc.v2(t);
this.pos = h.default.getIndexInMap(this.node.position);
var i = t.x, o = t.y, a = Math.abs(i), n = Math.abs(o), r = a > n ? a : n;
r = 0 == r ? 1 : r;
var s = cc.v2(i, o);
e < 0 && (e = 0);
s = s.mul(e);
if (this.data.water > 0 && this.isInWater()) {
s = s.mul(.5);
this.swimmingAudioStep.next(function() {
_.default.play(_.default.SWIMMING);
}, 2.5);
}
this.setLinearVelocity(s);
this.changeZIndex();
}
};
e.prototype.setLinearVelocity = function(t) {
this.currentlinearVelocitySpeed = t;
this.entity.Move.linearVelocity = this.currentlinearVelocitySpeed.clone();
};
e.prototype.fall = function() {
var t = this;
_.default.play(_.default.BLEEDING);
if (!(this.data.isStatic > 0 || this.data.isHeavy > 0 || this.IsVariation)) {
this.sc.isFalling = !0;
this.bodySprite.node.angle = b.default.isBehindTarget(this.dungeon.player, this) ? -75 : 105;
this.jumpAbility && this.jumpAbility.airPause(4, .3, w.default.CALLBACK_AIR_PAUSE, function(e, i) {
if (i == H.default.TYPE_JUMP_END) {
t.jumpAbility.removeCallback(w.default.CALLBACK_AIR_PAUSE);
t.fallFinish();
}
});
}
};
e.prototype.fallFinish = function() {
this.sc.isFalling = !1;
this.bodySprite.node.angle = 0;
this.sprite.x = 0;
};
e.prototype.takeDamage = function(t, e, o) {
if (!this.sc.isShow || this.sc.isDied) return !1;
if (this.data.invisible > 0 && p.default.getRandomNum(1, 10) > 4) {
this.showFloatFont(0, !0, !1, t.isCriticalStrike, !1, !1, !1);
return !1;
}
if (this.sc.isBlinking) {
this.showFloatFont(0, !0, !1, t.isCriticalStrike, !1, !1, !1);
return !1;
}
var a = this.data.getDamage(t), n = this.data.FinalCommon.dodge / 100, r = y.default.rand() <= n && a.getTotalDamage() > 0;
a = r ? new g.default() : a;
if (r) {
this.showFloatFont(0, !0, !1, t.isCriticalStrike, !1, !1, !1);
return !1;
}
var s = a.getTotalDamage() > 0;
this.sc.isHurting = s && !this.specialStep.IsExcuting && t.isMelee;
if (this.sc.isHurting) {
this.sc.isDisguising = !1;
this.sc.isAttacking = !1;
this.flyCancel();
this.meleeStep.refreshCoolDown(this.data.melee);
this.remoteStep.refreshCoolDown(this.data.remote);
t.isCriticalStrike && this.fall();
this.sprite.stopAllActions();
this.bodyStopAllActions();
this.changeBodyRes(this.data.resName, p.default.getHalfChance() ? i.RES_HIT001 : i.RES_HIT002);
this.anim.getAnimationState("MonsterIdle").isPlaying && this.anim.pause();
this.dangerBox.finish();
}
if (s) {
this.hitLight(!0);
this.hitLightS(t);
if (t.isBackAttack || t.isCriticalStrike) {
var l = this.node.position.clone();
o && (l = o.node.position.clone());
this.showBloodEffect(l);
}
this.unschedule(this.hurtReset);
this.scheduleOnce(this.hurtReset, .15);
}
this.sprite.opacity = 255;
this.data.currentHealth -= a.getTotalDamage();
this.data.currentHealth > this.data.getHealth().y && (this.data.currentHealth = this.data.getHealth().y);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.getHealth().y);
this.showFloatFont(a.getTotalDamage(), !1, !1, t.isCriticalStrike, !1, t.isBackAttack, !1);
this.data.isRecovery > 0 && s && this.addStatus(f.default.RECOVERY, new D.default());
return s;
};
e.prototype.resetBodyColor = function() {
this.data && (this.bodySprite.node.color = cc.color(255, 255, 255).fromHEX(this.data.bodyColor));
};
e.prototype.getMixColor = function(t, e) {
var i = cc.color().fromHEX(t), o = cc.color().fromHEX(e), a = cc.color(), n = i.getR() + o.getR(), r = i.getG() + o.getG(), s = i.getB() + o.getB();
a.setR(n > 255 ? 255 : n);
a.setG(r > 255 ? 255 : r);
a.setB(s > 255 ? 255 : s);
return "#" + a.toHEX("#rrggbb");
};
e.prototype.addStatus = function(t, e) {
this.node && !this.sc.isDied && this.statusManager.addStatus(t, e);
};
e.prototype.addCustomStatus = function(t, e) {
this.node && !this.sc.isDied && this.statusManager.addCustomStatus(t, e);
};
e.prototype.stopAllDebuffs = function() {
this.node && this.statusManager.stopAllDebuffs();
};
e.prototype.showAttackEffect = function(t) {
this.effectNode.setPosition(cc.v3(0, 32));
t || cc.tween(this.effectNode).to(.2, {
position: cc.v3(32, 32)
}).to(.2, {
position: cc.v3(0, 16)
}).start();
};
e.prototype.showBloodEffect = function(t) {
var e = this;
_.default.play(_.default.BLEEDING);
this.dungeon.addHitBlood(t, this.node.position, p.default.getRandomNum(3, 6));
this.particleBlood.resetSystem();
this.scheduleOnce(function() {
e.particleBlood.stopSystem();
}, .5);
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
this.sc.isDied = !0;
this.sc.isDisguising = !1;
this.dashStep.IsExcuting = !1;
this.sprite.stopAllActions();
this.bodyStopAllActions();
this.dangerBox.finish();
this.statusManager.stopAllBuffs();
this.anim.play("MonsterDie");
this.changeBodyRes(this.data.resName, i.RES_HIT003);
this.getComponent(I.default).sensor = !0;
this.data.isEnemy > 0 && this.data.noLoot < 1 && this.getLoot();
E.default.addMonsterKillAchievement(this.data.resName);
p.default.setKillPlayerCounts(D.default.getClone(this.actorName(), this.data.resName + "anim000", this.seed), !1);
this.scheduleOnce(function() {
if (t.node) {
t.setLinearVelocity(cc.Vec2.ZERO);
if (t.data.isBoom > 0) {
var e = cc.instantiate(t.boom).getComponent(O.default);
if (e) {
e.show(t.node.parent, t.node.position, cc.v2(1, 0), 0, new A.default().init(1, .2, 0, 0, S.default.OVERHEAD, t.data.isEnemy > 0, !0, !0, !1, !1, new g.default(2), D.default.getClone("爆炸", "boom000anim004"), []));
_.default.play(_.default.BOOM);
c.EventHelper.emit(c.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: !0
});
}
}
t.scheduleOnce(function() {
t.destroyEntityNode();
}, t.data.isPet ? 0 : 5);
}
}, 2);
}
};
e.prototype.getLoot = function() {
var t = p.default.mapManager.getRandom4Save(p.default.mapManager.getRebornSeed(this.seed)), e = t.rand(), i = .1, o = .75;
if (this.IsVariation) {
o = .6;
i = .3;
}
i += this.killPlayerCount / 10;
(o -= this.killPlayerCount / 10) < .3 && (o = .3);
var a = (1 - o) / 10, n = 1 + this.killPlayerCount / 2;
(n = Math.floor(n)) > 4 && (n = 4);
if (this.dungeon) {
var r = 1;
this.IsVariation && (r = 2);
this.killPlayerCount > 0 && (r = 5);
this.dungeon.player.data.StatusTotalData.exOilGold > 0 && (r += this.dungeon.player.data.StatusTotalData.exOilGold);
c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_OILGOLD, {
pos: this.node.position,
count: r
});
e < i && !this.isSummon && this.dungeon.addEquipment(p.default.getRandomEquipType(t), h.default.getPosInMap(this.pos), null, n);
e < o ? c.EventHelper.emit(c.EventHelper.DUNGEON_ADD_COIN, {
pos: this.node.position,
count: t.getRandomNum(1, 10)
}) : e >= o && e < o + a ? this.addLootSaveItem(v.default.HEART, !0) : e >= o + a && e < o + 2 * a ? this.addLootSaveItem(v.default.HEART, !0) : e >= o + 2 * a && e < o + 3 * a ? this.addLootSaveItem(v.default.BOTTLE_ATTACK) : e >= o + 3 * a && e < o + 4 * a ? this.addLootSaveItem(v.default.BOTTLE_MOVESPEED) : e >= o + 4 * a && e < o + 5 * a ? this.addLootSaveItem(v.default.BOTTLE_HEALING) : e >= o + 5 * a && e < o + 6 * a ? this.addLootSaveItem(v.default.BOTTLE_DREAM) : e >= o + 6 * a && e < o + 7 * a ? this.addLootSaveItem(v.default.BOTTLE_REMOTE) : e >= o + 7 * a && e < o + 8 * a && this.addLootSaveItem(v.default.BOTTLE_JUMP);
}
};
e.prototype.addLootSaveItem = function(t, e) {
!e && this.isSummon || this.dungeon.addItem(this.node.position.clone(), t);
};
e.prototype.getCenterPosition = function() {
return this.node.position.clone();
};
Object.defineProperty(e.prototype, "isPassive", {
get: function() {
return !this.dungeon || this.sc.isDied || this.sc.isHurting || this.sc.isFalling || this.sc.isAttacking || !this.sc.isShow || this.sc.isDizzing || this.sc.isDisguising || this.sc.isDodging || this.sc.isDashing;
},
enumerable: !1,
configurable: !0
});
e.prototype.getNearestEnemyActor = function(t) {
b.default.isTargetCanTrack(this.currentTarget) && !t || (this.currentTarget = b.default.getNearestEnemyActor(this.node.position, this.data.isEnemy > 0, this.dungeon));
return this.currentTarget;
};
e.prototype.updateAttack = function() {
var t = this;
if (!this.isPassive) {
var e = this.getNearestEnemyActor(), i = b.default.getTargetDistance(this, e);
if (b.default.isTargetAlive(e)) {
this.data.specialAttack > 0 && this.specialStep.next(function() {
t.specialStep.IsExcuting = !0;
}, this.data.specialAttack, !0);
var o = parseInt(this.attackRect[0]) + parseInt(this.attackRect[2]);
this.specialStep.IsExcuting && this.data.specialType.length > 0 && (o += 100);
if (this.data.meleeDash > 0) {
var a = 1 - this.data.FinalCommon.AttackSpeed / 10;
o = b.default.getDashDistance(this, this.specialStep.IsExcuting ? this.data.specialDash : this.data.meleeDash, .8 * a);
}
var n = this.data.melee > 0 && i < o * this.node.scaleY, r = this.data.remote > 0 && i < 600 * this.node.scaleY;
n && !this.meleeStep.IsInCooling ? this.meleeStep.next(function() {
t.changeFaceRight(e);
t.setLinearVelocity(cc.Vec2.ZERO);
t.sc.isAttacking = !0;
t.sprite.opacity = 255;
t.showAttackEffect(!1);
var i = p.default.getRandomNum(0, 100) < t.data.StatusTotalData.missRate;
i && t.showFloatFont(0, !1, !0, !1, !1, !1, !1);
t.showAttackAnim(function() {}, function() {}, function() {
t.sc.isAttacking = !1;
t.specialStep.IsExcuting = !1;
}, e, t.specialStep.IsExcuting, !0, i);
}, this.data.melee) : r && this.remoteStep.next(function() {
t.sc.isAttacking = !0;
t.sprite.opacity = 255;
t.changeFaceRight(e);
var i = p.default.bullets[t.data.bulletType] && p.default.bullets[t.data.bulletType].isLaser > 0;
t.showAttackAnim(function(o) {
i && o && t.remoteAttack(e, o);
}, function(o) {
i && o || t.remoteAttack(e, o);
}, function() {
t.specialStep.IsExcuting = !1;
i ? t.scheduleOnce(function() {
t.sc.isAttacking = !1;
}, 1) : t.sc.isAttacking = !1;
}, e, t.specialStep.IsExcuting, !1, !1);
}, this.data.remote, !0);
}
}
};
e.prototype.dodge = function(t) {
var e = this;
if (!this.isPassive) {
this.sc.isDodging = !0;
var i = this.data.FinalCommon.MoveSpeed;
this.move(t, 2.5 * i);
this.scheduleOnce(function() {
e.sc.isDodging = !1;
}, .1);
}
};
e.prototype.updateLogic = function(t) {
var e = this;
if (this.dungeon) {
this.stateMachine.update();
this.entity.Move.isStatic = !1;
this.entity.Transform.position = h.default.fixOuterMap(this.entity.Transform.position);
this.pos = h.default.getIndexInMap(this.entity.Transform.position);
this.isInWaterTile = this.dungeon.isActorPosInWater(this);
this.isInWaterTile && (this.lastWaterPos = h.default.getIndexInMap(this.entity.Transform.position));
this.changeZIndex();
this.trackStep.next(function() {
e.getNearestEnemyActor(!0);
}, 10);
var i = this.getNearestEnemyActor();
this.updateAttack();
var o = b.default.getTargetDistance(this, i);
this.data.disguise > 0 && o < this.data.disguise && this.sc.isDisguising && (this.sc.isDisguising = !1);
this.data.blink > 0 && !this.sc.isBlinking && !this.sc.isAttacking && this.blinkStep.next(function() {
e.sc.isBlinking = !0;
e.sc.isAttacking = !1;
}, this.data.blink, !0);
var a = this.data.FinalCommon.MoveSpeed;
this.data.dash > 0 && !this.isPassive && b.default.isTargetAlive(i) && o < 600 && o > 100 && this.dashStep.next(function() {
e.sc.isDashing = !0;
e.dangerBox.show(e.data.attackRect, !1, 500, e.hv, !0);
e.dangerBox.hide(!1);
e.enterWalk();
_.default.play(_.default.MELEE);
e.showAttackEffect(!0);
e.move(e.getMovePosFromTarget(i), a);
e.scheduleOnce(function() {
if (e.node) {
e.sc.isDashing = !1;
e.dangerBox.finish();
}
}, 2);
}, this.data.dash);
var n = o < 500 && this.data.melee > 0;
o < 500 && o > 300 && this.data.remote > 0 && (n = !0);
b.default.isTargetAlive(i) || (n = !1);
if (!n && this.data.isFollow > 0 && this.data.isEnemy < 1) {
i = this.dungeon.player;
o = b.default.getTargetDistance(this, this.dungeon.player);
n = !0;
}
if (!this.isPassive) if (this.data.melee > 0 && o < 64 || this.data.remote > 0 && this.data.melee <= 0 && o < 300 || this.shooter.isAiming || a <= 0) this.sc.isMoving = !1; else if (n) {
this.sc.isMoving = !0;
this.moveStep.next(function() {
var t = e.getMovePosFromTarget(i, !1);
if (e.data.flee > 0) {
t = e.getMovePosFromTarget(i, !0);
t = cc.v3(-t.x, -t.y);
e.move(t, 2 * a);
} else e.move(t, a);
}, .2, !0);
} else {
this.moveStep.next(function() {
e.move(e.getMovePosFromTarget(), a);
e.sc.isMoving = !0;
e.unschedule(e.stopMove);
e.scheduleOnce(e.stopMove, 2);
}, 8, !0);
if (this.entity.Move.linearVelocity.equals(cc.Vec2.ZERO)) {
this.sc.isMoving = !1;
this.unschedule(this.stopMove);
}
}
this.data.invisible > 0 && this.sprite.opacity > 20 && (this.sprite.opacity = this.lerp(this.sprite.opacity, 19, 3 * t));
this.entity.Move.damping = this.sc.isDashing ? 0 : 10;
this.dashlight.opacity = this.sc.isDashing ? 200 : 0;
this.healthBar.node.opacity = this.sc.isDisguising ? 0 : 255;
this.shadow && (this.shadow.opacity = this.sc.isDisguising || this.data.water > 0 || this.isInWater() ? 0 : 128);
this.sc.isDisguising && this.anim && this.anim.pause();
this.data.invisible > 0 && (this.healthBar.node.opacity = this.sprite.opacity > 20 ? 255 : 9);
this.healthBar.node.active = !this.sc.isDied;
this.node.scale = this.getScaleSize();
this.healthBar.node.x = -30 * this.node.scale;
this.healthBar.node.y = 3 == this.data.boxType || 5 == this.data.boxType ? 150 : 120;
this.tips.node.y = 3 == this.data.boxType || 5 == this.data.boxType ? 180 : 150;
this.healthBar.progressBar.barSprite.node.color = this.IsVariation ? cc.color(128, 0, 128) : cc.color(194, 0, 0);
this.healthBar.progressBar.barSprite.node.color = this.killPlayerCount > 0 ? cc.color(255, 215, 0) : this.healthBar.progressBar.barSprite.node.color;
this.dashlight.color = this.IsVariation ? cc.color(255, 0, 0) : cc.color(255, 255, 255);
this.attrNode && (this.attrNode.opacity = this.healthBar.node.opacity);
if (this.data.isTest > 0 && this.isTestResetTimeDelay(t) && !this.isPassive) {
this.pos = this.defautPos.clone();
this.updatePlayerPos();
}
if (this.data.water > 0 && !this.isInWaterTile) {
this.pos = this.lastWaterPos.clone();
this.updatePlayerPos();
}
if (this.parentNonPlayer && this.parentNonPlayer.data) {
this.graphics.clear();
this.graphics.strokeColor = cc.color(0, 255, 0, 60);
this.graphics.lineWidth = 5;
if (0 == this.parentNonPlayer.data.childMode && this.parentNonPlayer.sc.isDied) this.data.currentHealth = 0; else {
this.graphics.moveTo(0, 32);
var r = this.node.convertToNodeSpaceAR(this.parentNonPlayer.node.convertToWorldSpaceAR(cc.v3(0, 32)));
this.graphics.lineTo(r.x, r.y + 32);
this.graphics.stroke();
}
}
if (1 == this.data.childMode && this.childNonPlayerList.length > 0) {
for (var s = 0, l = 0, c = this.childNonPlayerList; l < c.length; l++) c[l].sc.isDied && s++;
s == this.childNonPlayerList.length && (this.data.currentHealth = 0);
}
var u = this.root.y - this.entity.Transform.base;
u < 0 && (u = 0);
var d = 1 - u / 64;
this.shadow.scale = d < .5 ? .5 : d;
this.shadow.y = this.bodySprite.node.y + this.entity.Transform.base;
this.shadow.x = this.isFaceRight ? this.bodySprite.node.x : -this.bodySprite.node.x;
this.bottomDir.node.y = this.entity.Transform.base;
this.bottomDir.node.opacity = this.isInWater() ? 128 : 255;
(this.sc.isDied || this.sc.isDisguising) && (this.bottomDir.node.opacity = 0);
this.setInWaterMat(this.bodySprite, this.data.water < 1 && this.isInWater());
this.waterY = this.isInWaterTile && this.data.water < 1 ? -32 : 0;
this.sprite.y = p.default.lerp(this.sprite.y, this.waterY, .2);
this.showWaterSpark();
this.jumpAbility && this.jumpAbility.updateLogic();
this.statusManager.node.position = this.statusPos.clone().add(cc.v3(0, this.root.y));
this.icon && this.icon.updateLogic(this.data);
}
};
e.prototype.setInWaterMat = function(t, e) {
if (t && t.spriteFrame) {
t.spriteFrame.getOffset();
var i = t.spriteFrame.getRect(), o = t.spriteFrame.getTexture();
t.getMaterial(0).setProperty("rect", [ i.x / o.width, i.y / o.height, i.width / o.width, i.height / o.height ]);
t.getMaterial(0).setProperty("hidebottom", e ? 1 : 0);
t.getMaterial(0).setProperty("isRotated", t.spriteFrame.isRotated() ? 1 : 0);
}
};
e.prototype.getMovePosFromTarget = function(t, e, i) {
var o = cc.v3(0, 0);
o.x += p.default.getRandomNum(0, 400) - 200;
o.y += p.default.getRandomNum(0, 400) - 200;
if (!b.default.isTargetAlive(t)) return o;
o = t.node.position.clone();
e ? o = (o = o.y > this.node.position.y ? o.addSelf(cc.v3(0, -128)) : o.addSelf(cc.v3(0, 128))).x > this.node.position.x ? o.addSelf(cc.v3(-64, 0)) : o.addSelf(cc.v3(64, 0)) : i && Math.abs(o.y - this.node.position.y) > this.bodyRect[3] * this.node.scaleY + this.attackRect[2] && (o = cc.v3(this.node.position.x, o.y));
var a = (o = o.x > this.node.position.x ? o.addSelf(cc.v3(32, 0)) : o.addSelf(cc.v3(-32, 0))).sub(this.node.position);
!this.sc.isAttacking && !this.sc.isDisguising && this.data.isStatic < 1 && this.changeFaceRight(t);
return a;
};
e.prototype.changeFaceRight = function(t) {
var e = t.node.position.clone(), i = (e = e.sub(this.node.position)).x;
this.isFaceRight = i >= 0;
this.sprite.scaleX = this.isFaceRight ? 1 : -1;
};
e.prototype.lerp = function(t, e, i) {
return t + (e - t) * i;
};
e.prototype.onColliderEnter = function(t, e) {
if (e.tag == I.default.TAG.NONPLAYER || e.tag == I.default.TAG.GOODNONPLAYER) {
if (this.dungeon && this.sc.isDashing && !t.sensor) {
this.sc.isDashing = !1;
this.dangerBox.finish();
}
!t.sensor && t.z < 9999 && e.z + I.default.MIN_HEIGHT < t.z + t.zHeight && this.jump();
} else e.tag == I.default.TAG.DEFAULT && this.areaDetector.onColliderEnter(t, e);
};
e.prototype.onColliderStay = function(t, e) {
e.tag != I.default.TAG.NONPLAYER_HIT && e.tag != I.default.TAG.GOODNONPLAYER_HIT || this.dangerBox.onColliderStay(t, e);
};
e.prototype.takeDizz = function(t) {
var e = this;
if (t > 0) {
this.sc.isDizzing = !0;
this.scheduleOnce(function() {
e.sc.isDizzing = !1;
}, t);
}
};
e.prototype.getScaleSize = function() {
var t = this.data.scale && this.data.scale > 0 ? this.data.scale : 1;
return this.IsVariation ? i.SCALE_NUM * t : t;
};
e.prototype.actorName = function() {
return this.data.nameCn;
};
e.prototype.enterShow = function() {
var t = this;
this.sprite.stopAllActions();
this.bodyStopAllActions();
this.bodySprite.node.color = cc.Color.BLACK;
cc.tween(this.bodySprite.node).to(1, {
color: cc.color(255, 255, 255).fromHEX(this.data.bodyColor)
}).call(function() {
t.sc.isShow = !0;
}).start();
};
e.prototype.enterDisguise = function() {
this.sc.isShow = !0;
this.sprite.stopAllActions();
this.bodyStopAllActions();
this.anim.getAnimationState("MonsterIdle").isPlaying && this.anim.pause();
this.changeBodyRes(this.data.resName, i.RES_DISGUISE);
};
e.prototype.enterIdle = function() {
var t = this;
this.sc.isMoving = !1;
this.sc.isAttacking = !1;
this.setLinearVelocity(cc.Vec2.ZERO);
this.entity.NodeRender.node = this.node;
this.entity.NodeRender.root = this.root;
if (0 != this.posZ) {
this.entity.Transform.z = this.posZ;
this.posZ = 0;
}
this.fly();
var e = cc.tween().delay(.2).call(function() {
t.changeBodyRes(t.data.resName, i.RES_IDLE000);
}).delay(.2).call(function() {
t.changeBodyRes(t.data.resName, i.RES_IDLE001);
});
this.sprite.stopAllActions();
cc.tween(this.sprite).repeatForever(e).start();
this.anim.getAnimationState("MonsterIdle").isPlaying || this.anim.play("MonsterIdle");
this.dangerBox.finish();
};
e.prototype.enterWalk = function() {
var t = this;
this.sc.isAttacking = !1;
var e = cc.tween().delay(.2).call(function() {
t.changeBodyRes(t.data.resName, i.RES_WALK00);
}).delay(.2).call(function() {
t.changeBodyRes(t.data.resName, i.RES_WALK01);
}).delay(.2).call(function() {
t.changeBodyRes(t.data.resName, i.RES_WALK02);
}).delay(.2).call(function() {
t.changeBodyRes(t.data.resName, i.RES_WALK03);
});
this.sprite.stopAllActions();
cc.tween(this.sprite).repeatForever(e).start();
this.anim.getAnimationState("MonsterIdle").isPlaying || this.anim.play("MonsterIdle");
};
e.prototype.enterDizz = function() {
this.sc.isAttacking = !1;
this.bodyStopAllActions();
this.sprite.stopAllActions();
};
e.prototype.enterBlink = function() {
var t = this;
this.setLinearVelocity(cc.Vec2.ZERO);
this.sc.isMoving = !1;
_.default.play(_.default.BLINK);
var e = this.bodySprite.node;
cc.tween(e).to(.2, {
opacity: 0
}).call(function() {
var e = b.default.getTargetPosition(t.node.position, t.getNearestEnemyActor(), !0);
e = (e = h.default.getIndexInMap(e)).x > t.pos.x ? e.addSelf(cc.v3(1, 0)) : e.addSelf(cc.v3(-1, 0));
var i = h.default.getPosInMap(e), o = cc.v3(p.default.getRandomNum(-h.default.TILE_SIZE / 2, h.default.TILE_SIZE / 2), p.default.getRandomNum(-h.default.TILE_SIZE / 2, h.default.TILE_SIZE / 2));
t.entity.Transform.position = i.add(o);
t.node.setPosition(i);
}).to(.2, {
opacity: 255
}).call(function() {
t.sc.isBlinking = !1;
}).start();
};
e.prototype.isTestResetTimeDelay = function(t) {
this.moveTimeDelay += t;
if (this.moveTimeDelay > 30) {
this.moveTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateStatus = function(t, e) {
this.data.StatusTotalData.valueCopy(e);
this.data.StatusList = t;
};
e.prototype.hideSelf = function() {};
e.prototype.updateDream = function() {
return 0;
};
e.prototype.updateLife = function() {};
e.prototype.onColliderExit = function() {};
var i;
e.RES_DISGUISE = "disguise";
e.RES_IDLE000 = "anim000";
e.RES_IDLE001 = "anim001";
e.RES_WALK00 = "anim002";
e.RES_WALK01 = "anim003";
e.RES_WALK02 = "anim004";
e.RES_WALK03 = "anim005";
e.RES_HIT001 = "anim006";
e.RES_HIT002 = "anim007";
e.RES_HIT003 = "anim008";
e.RES_ATTACK01 = "anim009";
e.SCALE_NUM = 1.5;
e.ANIM_NONE = -1;
e.ANIM_IDLE = 0;
e.ANIM_WALK = 1;
e.ANIM_ATTACK = 2;
e.ANIM_HIT = 3;
e.ANIM_DIED = 4;
n([ l(cc.Vec3) ], e.prototype, "pos", void 0);
n([ l(cc.Node) ], e.prototype, "root", void 0);
n([ l(cc.Node) ], e.prototype, "shadow", void 0);
n([ l(u.default) ], e.prototype, "healthBar", void 0);
n([ l(f.default) ], e.prototype, "statusManager", void 0);
n([ l(T.default) ], e.prototype, "specialManager", void 0);
n([ l(cc.Prefab) ], e.prototype, "boom", void 0);
n([ l(cc.Node) ], e.prototype, "dangerBoxNode", void 0);
n([ l(cc.Node) ], e.prototype, "dangerTips", void 0);
n([ l(cc.Prefab) ], e.prototype, "attrPrefab", void 0);
n([ l(N.default) ], e.prototype, "bottomDir", void 0);
n([ l(cc.Prefab) ], e.prototype, "waterSpark", void 0);
n([ l(cc.Prefab) ], e.prototype, "avatarPrefab", void 0);
n([ l(cc.Prefab) ], e.prototype, "frameAvatarPrefab", void 0);
n([ l(j.default) ], e.prototype, "tips", void 0);
return i = n([ s ], e);
}(x.default);
i.default = U;
cc._RF.pop();
}, {
"../actor/ActorAttackBox": "ActorAttackBox",
"../actor/ActorBottomDir": "ActorBottomDir",
"../actor/AreaDetector": "AreaDetector",
"../actor/AreaOfEffect": "AreaOfEffect",
"../actor/JumpingAbility": "JumpingAbility",
"../actor/NonPlayerActorState": "NonPlayerActorState",
"../base/BaseAvatar": "BaseAvatar",
"../base/PlayActor": "PlayActor",
"../base/fsm/DefaultStateMachine": "DefaultStateMachine",
"../collider/CCollider": "CCollider",
"../data/AreaOfEffectData": "AreaOfEffectData",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../data/NonPlayerData": "NonPlayerData",
"../data/TriggerData": "TriggerData",
"../item/Item": "Item",
"../manager/SpecialManager": "SpecialManager",
"../manager/StatusManager": "StatusManager",
"../ui/Tips": "Tips",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/NextStep": "NextStep",
"../utils/Random": "Random",
"./Achievement": "Achievement",
"./Dungeon": "Dungeon",
"./EventHelper": "EventHelper",
"./FrameAvatar": "FrameAvatar",
"./HealthBar": "HealthBar",
"./Logic": "Logic",
"./PlayerAvatar": "PlayerAvatar",
"./Shooter": "Shooter"
} ],
NormalBuilding: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "62a6bOVj+FJNLhaahuRhTRU", "NormalBuilding");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Building"), s = t("../logic/Logic"), l = t("../collider/CCollider"), c = t("../utils/AudioPlayer"), u = t("../logic/Dungeon"), p = t("../manager/InventoryManager"), h = t("../utils/IndexZ"), d = cc._decorator, f = d.ccclass, g = d.property, y = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.root = null;
e.sprite = null;
e.shadow = null;
e.resLength = 1;
e._breakable = !1;
return e;
}
Object.defineProperty(e.prototype, "breakable", {
get: function() {
return this._breakable && this.data.currentHealth > 0 && this.data.currentHealth < 9999;
},
enumerable: !1,
configurable: !0
});
e.prototype.init = function(t) {
this.dungeon = t;
this._breakable = this.data.id.indexOf("hitbuilding") > -1;
if (!this.data.custom) {
var e = this.getComponent(l.default);
if (this.data.collider.length > 0) {
var i = this.data.collider.split(",");
e.offset = cc.v2(parseInt(i[0]), parseInt(i[1]));
e.setSize(cc.size(parseInt(i[2]), parseInt(i[3])), parseInt(i[4]));
this.shadow.width = e.w;
this.shadow.height = e.h;
this.shadow.x = e.offsetX;
this.shadow.y = e.offsetY;
}
this.sprite.node.scale = this.data.scale;
if (this.data.spritePos.length > 0) {
i = this.data.spritePos.split(",");
this.sprite.node.x = parseInt(i[0]);
this.sprite.node.y = parseInt(i[1]);
}
this.root.y = this.data.z;
this.entity.Transform.z = this.data.z;
this.entity.Move.gravity = 0;
if (this._breakable) {
for (var o = 0; s.default.spriteFrameRes(this.data.id + "anim" + o++); ) ;
this.resLength = o - 1;
}
var a = this.getResIndex();
this.changeRes(a);
a > 0 && a >= this.resLength - 1 && (e.zHeight = this.data.breakZ);
this.data.indexZ && (this.node.zIndex = h.default.getActorZIndex(this.node.position.add(cc.v3(0, this.data.indexZ))));
}
};
e.prototype.getResIndex = function() {
var t = this.data.maxHealth / this.resLength, e = Math.abs(Math.floor((this.data.maxHealth - this.data.currentHealth) / t));
return e - 1 > 0 ? e - 1 : 0;
};
e.prototype.changeRes = function(t) {
if (!this.data.custom) {
var e = s.default.spriteFrameRes(this.data.id + "anim" + (t < 0 ? 0 : t));
e || (e = s.default.spriteFrameRes("" + this.data.id));
if (e) {
this.sprite.spriteFrame = e;
this.sprite.node.width = e.getOriginalSize().width;
this.sprite.node.height = e.getOriginalSize().height;
}
}
};
e.prototype.takeDamage = function(t) {
var e = this;
if (!this.breakable) return !1;
var i = [ c.default.MONSTER_HIT, c.default.MONSTER_HIT1, c.default.MONSTER_HIT2 ];
c.default.play(i[s.default.getRandomNum(0, 2)]);
this.data.currentHealth -= t.getTotalDamage();
this.changeRes(this.getResIndex());
this.hitLight(!0);
this.scheduleOnce(function() {
e.hitLight(!1);
}, .15);
if (this.data.currentHealth <= 0) {
for (var o = s.default.mapManager.getRandom4Save(s.default.mapManager.getRebornSeed(this.seed)), a = 0, n = this.data.breakEquipItems.split("#"); a < n.length; a++) {
var r = n[a].split(",");
r.length > 1 && o.rand() > 1 - parseInt(r[1]) && (p.default.isEquipTag(r[0]) ? this.dungeon.addEquipment(r[0], u.default.getPosInMap(this.data.defaultPos), null, 1) : this.dungeon.addItem(this.entity.Transform.position.clone(), r[0]));
}
this.getComponent(l.default).zHeight = 16;
}
s.default.mapManager.setCurrentBuildingData(this.data.clone());
return !0;
};
e.prototype.hitLight = function(t) {
this.mat || (this.mat = this.sprite.node.getComponent(cc.Sprite).getMaterial(0));
this.mat.setProperty("addColor", t ? cc.color(200, 200, 200, 100) : cc.Color.TRANSPARENT);
};
e.PREFIX_PLATFORM = "platform";
e.PREFIX_HITBUILDING = "hitbuilding";
e.PREFIX_STAIRS = "stairs";
n([ g(cc.Node) ], e.prototype, "root", void 0);
n([ g(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ g(cc.Node) ], e.prototype, "shadow", void 0);
return n([ f ], e);
}(r.default);
i.default = y;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../manager/InventoryManager": "InventoryManager",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
NoticeDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "967d5EFvotD245D4O3/qmU4", "NoticeDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../utils/AudioPlayer"), s = t("./BaseDialog"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.onLoad = function() {};
e.prototype.start = function() {};
e.prototype.show = function() {
t.prototype.show.call(this);
};
e.prototype.close = function() {
r.default.play(r.default.SELECT);
this.dismiss();
};
return n([ c ], e);
}(s.default));
i.default = u;
cc._RF.pop();
}, {
"../../utils/AudioPlayer": "AudioPlayer",
"./BaseDialog": "BaseDialog"
} ],
OilGoldCount: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "12dafP9eVJAZosCqqpFY/Vi", "OilGoldCount");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("./EventHelper"), l = t("../utils/AudioPlayer"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.fragmentLabel = null;
e.gemLabel = null;
e.gemCountLerp = 0;
e.fragmentCountLerp = 0;
e.progreesBar = null;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.anim = this.getComponent(cc.Animation);
s.EventHelper.on(s.EventHelper.HUD_ADD_OILGOLD, function(e) {
t.addCount(e.count);
});
s.EventHelper.on(s.EventHelper.HUD_LOSE_OILGOLD, function() {
if (t.node) {
var e = r.default.playerData.OilGoldData.fragments;
t.addCount("" + -e);
r.default.saveGroundOilGold(e);
}
});
};
e.prototype.start = function() {};
e.prototype.addCount = function(t) {
if (this.anim) {
r.default.oilGolds += parseInt(t);
var e = r.default.playerData.OilGoldData.index;
r.default.playerData.OilGoldData.valueCopy(r.default.getOilGoldData(r.default.oilGolds));
e < r.default.playerData.OilGoldData.index && l.default.play(l.default.LEVELUP);
s.EventHelper.emit(s.EventHelper.PLAYER_UPDATE_OILGOLD_DATA);
}
};
e.prototype.update = function(t) {
this.gemCountLerp = r.default.lerp(this.gemCountLerp, r.default.playerData.OilGoldData.level, 5 * t);
this.fragmentCountLerp = r.default.lerp(this.fragmentCountLerp, r.default.playerData.OilGoldData.fragments, 5 * t);
this.gemLabel && (this.gemLabel.string = "" + this.gemCountLerp.toFixed(0));
this.fragmentLabel && (this.fragmentLabel.string = this.fragmentCountLerp.toFixed(0) + "/" + r.default.OIL_GOLD_LIST[r.default.playerData.OilGoldData.index]);
this.progreesBar && (this.progreesBar.progress = r.default.lerp(this.progreesBar.progress, r.default.playerData.OilGoldData.fragments / r.default.OIL_GOLD_LIST[r.default.playerData.OilGoldData.index], 5 * t));
};
n([ p(cc.Label) ], e.prototype, "fragmentLabel", void 0);
n([ p(cc.Label) ], e.prototype, "gemLabel", void 0);
n([ p(cc.ProgressBar) ], e.prototype, "progreesBar", void 0);
return n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"../utils/AudioPlayer": "AudioPlayer",
"./EventHelper": "EventHelper",
"./Logic": "Logic"
} ],
OilGoldData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "700faV6hzxA44Hyyhr1kVep", "OilGoldData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../utils/DataUtils"), r = t("./BaseData"), s = t("./CommonData"), l = function(t) {
a(e, t);
function e() {
var e = t.call(this) || this;
e.value = 0;
e.fragments = 0;
e.level = 0;
e.index = 0;
e.common = new s.default();
return e;
}
Object.defineProperty(e.prototype, "Common", {
get: function() {
return this.common;
},
enumerable: !1,
configurable: !0
});
e.prototype.valueCopy = function(t) {
if (t) {
n.default.baseCopy(this, t);
this.common.valueCopy(t.common);
}
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
return e;
}(r.default);
i.default = l;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData",
"./CommonData": "CommonData"
} ],
OilGold: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "8833cW2JN9EQJVhihMruuSF", "OilGold");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../logic/EventHelper"), l = t("../utils/Random"), c = t("../utils/AudioPlayer"), u = t("../base/BaseNodeComponent"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.value = 0;
e.isReady = !1;
e.isReal = !1;
e.checkTimeDelay = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
};
e.prototype.onEnable = function() {
var t = this, e = l.default.rand() * (r.default.getHalfChance() ? 1 : -1) * 6, i = l.default.rand() * (r.default.getHalfChance() ? 1 : -1) * 6;
this.entity.Move.linearVelocity = cc.v2(e, i);
this.entity.Move.damping = r.default.getRandomNum(2, 6);
this.isReady = !1;
this.scheduleOnce(function() {
t.isReady = !0;
t.entity.Transform.position = t.node.position.clone();
t.entity.NodeRender.node = t.node;
}, 1);
};
e.prototype.changeValue = function(t) {
this.value = t;
this.value >= i.FACE_VALUE ? this.node.scale = 2 : this.node.scale = 1;
};
e.prototype.getFinalValue = function() {
var t = this.value;
switch (r.default.chapterIndex) {
case r.default.CHAPTER00:
break;

case r.default.CHAPTER01:
t *= 10;
break;

case r.default.CHAPTER02:
t *= 100;
break;

case r.default.CHAPTER03:
t *= 1e3;
break;

case r.default.CHAPTER04:
case r.default.CHAPTER05:
t *= 1e4;
}
return t;
};
e.prototype.start = function() {};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.getNearPlayerDistance = function(t) {
return r.default.getDistanceNoSqrt(this.node.position, t.position.clone().addSelf(cc.v3(0, 32)));
};
e.prototype.update = function(t) {
if (this.isCheckTimeDelay(t) && this.player && this.getNearPlayerDistance(this.player.node) < 1600 && this.node.active && this.isReady) {
var e = this.player.node.position.clone();
e.y += 10;
var i = e.sub(this.node.position);
if (!i.equals(cc.Vec3.ZERO)) {
i = i.normalizeSelf();
this.entity.Move.linearVelocity = cc.v2(i.x, i.y).normalize().mul(16);
this.entity.Move.damping = 1;
}
}
if (this.player && this.getNearPlayerDistance(this.player.node) < 64 && this.node.active && this.isReady) {
this.isReady = !1;
c.default.play(c.default.OILGOLD);
s.EventHelper.emit(s.EventHelper.HUD_ADD_OILGOLD, {
count: this.getFinalValue()
});
s.EventHelper.emit("destoryoilgold", {
oilGoldNode: this.node
});
}
};
var i;
e.FACE_VALUE = 100;
return i = n([ h ], e);
}(u.default));
i.default = d;
cc._RF.pop();
}, {
"../base/BaseNodeComponent": "BaseNodeComponent",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Random": "Random"
} ],
OilLake: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "8cd153I1qFEbb/uteHyUJpM", "OilLake");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = t("./PerlinNoise2D"), n = t("../utils/Random"), r = cc._decorator, s = r.ccclass, l = (r.property, 
function() {
function t() {
this.map = new Array();
var t, i, o, r, s = new a.default();
s.seed(n.default.rand());
o = 20 + this.getRandomNum(20);
r = 20 + this.getRandomNum(20);
t = this.getRandomNum(9999);
i = this.getRandomNum(9999);
var l = e.WIDTH, c = e.HEIGHT;
this.map = new Array();
for (var u = 0; u < l; u++) {
this.map[u] = new Array();
for (var p = 0; p < c; p++) {
this.map[u][p] = ".";
var h = o * u / l + t, d = r * p / c + i, f = s.simplex2(h, d);
f > .14 ? this.map[u][p] = "Y" : f < -.14 && (this.map[u][p] = "~");
var g = n.default.rand();
g >= 0 && g < .2 && "~" != this.map[u][p] && (this.map[u][p] = "o");
g >= .2 && g < .25 && "~" != this.map[u][p] && (this.map[u][p] = "w");
}
}
}
e = t;
t.prototype.getRandomNum = function(t) {
return Math.round(n.default.rand() * t);
};
t.prototype.getDisPlay = function() {
for (var t = "", i = e.HEIGHT - 1; i >= 0; i--) {
for (var o = 0; o < e.WIDTH; o++) t += this.map[o][i];
t += "\n";
}
return t;
};
var e;
t.WIDTH = 64;
t.HEIGHT = 64;
return e = o([ s ], t);
}());
i.default = l;
cc._RF.pop();
}, {
"../utils/Random": "Random",
"./PerlinNoise2D": "PerlinNoise2D"
} ],
OnContactListener: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b0fc5P4IfpMPqUea64e7JrA", "OnContactListener");
Object.defineProperty(i, "__esModule", {
value: !0
});
cc._RF.pop();
}, {} ],
OrganizationTalent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "05cb5HVifxPKYxNiXzzrtHe", "OrganizationTalent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/AvatarData"), s = t("../data/FromData"), l = t("../data/NonPlayerData"), c = t("../data/StatusData"), u = t("../data/TriggerData"), p = t("../logic/Logic"), h = t("../manager/StatusManager"), d = t("../ui/CoolDownView"), f = t("../utils/AudioPlayer"), g = t("../utils/Utils"), y = t("./Talent"), m = cc._decorator, v = m.ccclass, E = m.property, _ = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.energyShieldList = [];
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.changePerformance = function() {};
e.prototype.init = function(e) {
t.prototype.init.call(this, e);
this.coolDownId = d.default.ORGANIZATION;
var i = 1;
this.player.data.AvatarData.organizationIndex == r.default.GURAD ? i = 1 + Math.floor(p.default.playerData.OilGoldData.level / 5) : this.player.data.AvatarData.organizationIndex == r.default.FOLLOWER && this.player.initShadowList(!0, Math.floor(p.default.playerData.OilGoldData.level / 5 + 1), 30 + 2 * p.default.playerData.OilGoldData.level);
this.initCoolDown(e, i);
};
e.prototype.skillCanUse = function() {
return !0;
};
e.prototype.doSkill = function() {
var t, e, i = this;
this.player.exTrigger(u.default.GROUP_USE, u.default.TYPE_USE_TALENT, null, null);
if (this.player.data.AvatarData.organizationIndex == r.default.GURAD) {
if (this.energyShieldList.length > this.talentSkill.StorePointMax) {
var o = this.energyShieldList.pop();
o.isShow = !1;
if (o && o.isValid) {
null === (t = o.base) || void 0 === t || t.destroy();
o.destroyEntityNode();
}
}
this.player.dungeon.buildingManager.addEnergyShield(this.player, function(t) {
if (t) {
i.energyShieldList.unshift(t);
i.scheduleOnce(function() {
i.talentSkill.IsExcuting = !1;
}, 1);
}
});
} else if (this.player.data.AvatarData.organizationIndex == r.default.HUNTER) if (this.player.dungeon.nonPlayerManager.isPetAlive()) {
var a = new l.default();
a.valueCopy(p.default.nonplayers[this.player.data.AvatarData.petName]);
(d = new c.default()).valueCopy(p.default.status[h.default.PET_DOG]);
d.Common.realRate += 1 * p.default.playerData.OilGoldData.level;
d.Common.remoteCritRate = 100;
d.Common.realDamage += p.default.playerData.OilGoldData.level;
d.realDamageOvertime -= p.default.playerData.OilGoldData.level / 5;
var n = this.player.dungeon.nonPlayerManager.pet.data.Common.maxHealth;
this.player.dungeon.nonPlayerManager.pet.data.Common.maxHealth = a.Common.maxHealth + 5 * p.default.playerData.OilGoldData.level + 3 * this.data.useCount;
this.player.dungeon.nonPlayerManager.pet.addCustomStatus(d, new s.default());
f.default.play(a.specialAudio);
g.default.toast("宠物获得" + (this.player.dungeon.nonPlayerManager.pet.data.Common.maxHealth - n) + "点血量上限，当前为" + this.player.dungeon.nonPlayerManager.pet.data.Common.maxHealth + "，攻击力为" + a.getAttackPoint().getTotalDamage(), !1, !0);
} else {
if (this.data.useCount > 1) {
this.data.useCount = Math.floor(this.data.useCount / 2);
this.data.useCount < 1 && (this.data.useCount = 1);
}
(d = new l.default()).valueCopy(p.default.nonplayers[this.player.data.AvatarData.petName]);
d.Common.maxHealth += 5 * p.default.playerData.OilGoldData.level + 3 * this.data.useCount;
d.currentHealth = d.Common.maxHealth;
d.Common.damageMin += p.default.playerData.OilGoldData.level;
d.Common.remoteDamage += p.default.playerData.OilGoldData.level;
d.Common.defence += p.default.playerData.OilGoldData.level;
this.player.dungeon.nonPlayerManager.addPetFromData(d, this.player.node.position, null === (e = this.player.entity) || void 0 === e ? void 0 : e.Transform.z, this.player.dungeon);
f.default.play(d.specialAudio);
g.default.toast("你召唤了宠物" + d.nameCn + "：血量上限为" + d.Common.maxHealth + "，攻击力为" + d.getAttackPoint().getTotalDamage(), !1, !0);
} else if (this.player.data.AvatarData.organizationIndex == r.default.TECH) {
f.default.play(f.default.PICK_ITEM);
var d;
(d = new c.default()).valueCopy(p.default.status[h.default.REAGENT]);
d.duration += 3 * p.default.playerData.OilGoldData.level;
var y = this.player.data.FinalCommon;
d.Common.maxHealth = y.maxHealth * (.5 + .1 * p.default.playerData.OilGoldData.level);
d.Common.damageMin = y.damageMin * (.5 + .1 * p.default.playerData.OilGoldData.level);
d.Common.defence = y.defence * (.5 + .1 * p.default.playerData.OilGoldData.level);
d.Common.remoteDamage = y.remoteDamage * (.5 + .05 * p.default.playerData.OilGoldData.level);
d.realDamageDirect -= d.Common.maxHealth;
this.player.addCustomStatus(d, new s.default());
} else if (this.player.data.AvatarData.organizationIndex == r.default.FOLLOWER) {
f.default.play(f.default.BLINK);
this.player.initShadowList(!1, Math.floor(p.default.playerData.OilGoldData.level / 5 + 1), 30 + 2 * p.default.playerData.OilGoldData.level);
}
};
e.prototype.takeDamage = function(t) {
return this.energyShieldBlock(t);
};
e.prototype.energyShieldBlock = function(t) {
for (var e = this.energyShieldList.length - 1; e >= 0; e--) {
var i = this.energyShieldList[e];
if (i.node && i.node.isValid) {
if (i.isShow && i.checkTargetIn(this.player.node) && i.takeDamage(t)) return !0;
} else this.energyShieldList.splice(e, 1);
}
return !1;
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 1) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
n([ E(cc.Sprite) ], e.prototype, "sprite", void 0);
return n([ v ], e);
}(y.default);
i.default = _;
cc._RF.pop();
}, {
"../data/AvatarData": "AvatarData",
"../data/FromData": "FromData",
"../data/NonPlayerData": "NonPlayerData",
"../data/StatusData": "StatusData",
"../data/TriggerData": "TriggerData",
"../logic/Logic": "Logic",
"../manager/StatusManager": "StatusManager",
"../ui/CoolDownView": "CoolDownView",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils",
"./Talent": "Talent"
} ],
PaletteSelector: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "2484805pD1NW4q2UMrBMgzJ", "PaletteSelector");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.layout = null;
e.colors = [];
e.currentIndex = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {};
e.prototype.init = function(t, e) {
var o = this;
switch (t) {
case i.TYPE_EYES:
this.colors = i.EYESCOLORS;
break;

case i.TYPE_HAIR:
this.colors = i.HAIRCOLORS;
break;

case i.TYPE_FACE:
this.colors = i.FACECOLORS;
}
this.currentIndex = e || 0;
for (var a = function(t) {
var e = n.layout.children[t];
t > n.colors.length - 1 ? e.color = cc.Color.BLACK : e.color = cc.Color.WHITE.fromHEX(n.colors[t]);
e.on(cc.Node.EventType.TOUCH_START, function() {
o.updateAttribute(e.color);
});
}, n = this, r = 0; r < this.layout.childrenCount; r++) a(r);
this.updateAttribute(cc.Color.WHITE.fromHEX(this.colors[this.currentIndex]));
};
e.prototype.selectRandom = function() {
this.currentIndex = r.default.getRandomNum(0, this.colors.length - 1);
this.updateAttribute(cc.Color.WHITE.fromHEX(this.colors[this.currentIndex]));
};
e.prototype.setSelectorCallback = function(t) {
this.selectorCallback = t;
};
e.prototype.updateAttribute = function(t) {
this.selectorCallback && this.selectorCallback(t);
};
var i;
e.TYPE_HAIR = 0;
e.TYPE_EYES = 1;
e.TYPE_FACE = 2;
e.EYESCOLORS = [ "#000000", "#222034", "#45283c", "#663931", "#fbf236", "#6abe30", "#37946e", "#524b24", "#306082", "#5b6ee1", "#639bff", "#5fcde4", "#cbdbfc", "#ffc500", "#ffffff", "#9badb7", "#76428a", "#ac3232", "#d95763", "#8f974a", "#c20000" ];
e.HAIRCOLORS = [ "#000000", "#222034", "#45283c", "#663931", "#fbf236", "#6abe30", "#37946e", "#524b24", "#306082", "#5b6ee1", "#639bff", "#5fcde4", "#cbdbfc", "#ffc500", "#ffffff", "#9badb7", "#76428a", "#ac3232", "#d95763", "#8f974a", "#c20000" ];
e.FACECOLORS = [ "#FBA1DE", "#d95763", "#818185", "#d9a066", "#663931", "#fbf236", "#6abe30", "#37946e", "#524b24", "#306082", "#5b6ee1", "#639bff", "#5fcde4", "#cbdbfc", "#ffc500", "#ffffff", "#9badb7", "#76428a", "#ac3232", "#8f974a", "#c20000" ];
n([ c(cc.Node) ], e.prototype, "layout", void 0);
return i = n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../logic/Logic": "Logic"
} ],
ParallaxBackground: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "509a7aimNhEX5/e74VkypMj", "ParallaxBackground");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.background = null;
e.layer1 = null;
e.layer2 = null;
return e;
}
e.prototype.init = function() {
this.layer1.getComponent(cc.Sprite).spriteFrame = s.default.spriteFrameRes("chapter0" + s.default.chapterIndex + "layer1");
this.layer2.getComponent(cc.Sprite).spriteFrame = s.default.spriteFrameRes("chapter0" + s.default.chapterIndex + "layer2");
};
e.prototype.getPlayer = function() {
this.player || (this.player = this.node.parent.getComponent(r.default).player);
return this.player;
};
e.prototype.start = function() {};
e.prototype.lateUpdate = function() {
var t = this.getPlayer();
if (t) {
var e = t.node.convertToWorldSpaceAR(cc.Vec3.ZERO);
this.layer1.position = this.lerp(this.layer1.position, this.node.convertToNodeSpaceAR(e), .005);
this.layer2.position = this.lerp(this.layer2.position, this.node.convertToNodeSpaceAR(e), .015);
}
};
e.prototype.lerp = function(t, e, i) {
var o = cc.v3(0, 0), a = t.x, n = t.y;
o.x = a + (e.x - a) * i;
o.y = n + (e.y - n) * i;
return o;
};
n([ u(cc.Node) ], e.prototype, "background", void 0);
n([ u(cc.Node) ], e.prototype, "layer1", void 0);
n([ u(cc.Node) ], e.prototype, "layer2", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic"
} ],
PerlinNoise2D: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "59901zRRqlG9KvoKLDTbxq7", "PerlinNoise2D");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = cc._decorator, n = a.ccclass, r = (a.property, function() {
function t() {
this.grad3 = [ new s(1, 1, 0), new s(-1, 1, 0), new s(1, -1, 0), new s(-1, -1, 0), new s(1, 0, 1), new s(-1, 0, 1), new s(1, 0, -1), new s(-1, 0, -1), new s(0, 1, 1), new s(0, -1, 1), new s(0, 1, -1), new s(0, -1, -1) ];
this.p = [ 151, 160, 137, 91, 90, 15, 131, 13, 201, 95, 96, 53, 194, 233, 7, 225, 140, 36, 103, 30, 69, 142, 8, 99, 37, 240, 21, 10, 23, 190, 6, 148, 247, 120, 234, 75, 0, 26, 197, 62, 94, 252, 219, 203, 117, 35, 11, 32, 57, 177, 33, 88, 237, 149, 56, 87, 174, 20, 125, 136, 171, 168, 68, 175, 74, 165, 71, 134, 139, 48, 27, 166, 77, 146, 158, 231, 83, 111, 229, 122, 60, 211, 133, 230, 220, 105, 92, 41, 55, 46, 245, 40, 244, 102, 143, 54, 65, 25, 63, 161, 1, 216, 80, 73, 209, 76, 132, 187, 208, 89, 18, 169, 200, 196, 135, 130, 116, 188, 159, 86, 164, 100, 109, 198, 173, 186, 3, 64, 52, 217, 226, 250, 124, 123, 5, 202, 38, 147, 118, 126, 255, 82, 85, 212, 207, 206, 59, 227, 47, 16, 58, 17, 182, 189, 28, 42, 223, 183, 170, 213, 119, 248, 152, 2, 44, 154, 163, 70, 221, 153, 101, 155, 167, 43, 172, 9, 129, 22, 39, 253, 19, 98, 108, 110, 79, 113, 224, 232, 178, 185, 112, 104, 218, 246, 97, 228, 251, 34, 242, 193, 238, 210, 144, 12, 191, 179, 162, 241, 81, 51, 145, 235, 249, 14, 239, 107, 49, 192, 214, 31, 181, 199, 106, 157, 184, 84, 204, 176, 115, 121, 50, 45, 127, 4, 150, 254, 138, 236, 205, 93, 222, 114, 67, 29, 24, 72, 243, 141, 128, 195, 78, 66, 215, 61, 156, 180 ];
this.perm = new Array(512);
this.gradP = new Array(512);
this.F2 = .5 * (Math.sqrt(3) - 1);
this.G2 = (3 - Math.sqrt(3)) / 6;
this.F3 = 1 / 3;
this.G3 = 1 / 6;
}
t.prototype.simplex2 = function(t, e) {
var i, o, a = (t + e) * this.F2, n = Math.floor(t + a), r = Math.floor(e + a), s = (n + r) * this.G2, l = t - n + s, c = e - r + s;
if (l > c) {
i = 1;
o = 0;
} else {
i = 0;
o = 1;
}
var u = l - i + this.G2, p = c - o + this.G2, h = l - 1 + 2 * this.G2, d = c - 1 + 2 * this.G2;
n &= 255;
r &= 255;
var f = this.gradP[n + this.perm[r]], g = this.gradP[n + i + this.perm[r + o]], y = this.gradP[n + 1 + this.perm[r + 1]], m = .5 - l * l - c * c, v = .5 - u * u - p * p, E = .5 - h * h - d * d;
return 70 * ((m < 0 ? 0 : (m *= m) * m * f.dot2(l, c)) + (v < 0 ? 0 : (v *= v) * v * g.dot2(u, p)) + (E < 0 ? 0 : (E *= E) * E * y.dot2(h, d)));
};
t.prototype.simplex3 = function(t, e, i) {
var o, a, n, r, s, l, c = (t + e + i) * this.F3, u = Math.floor(t + c), p = Math.floor(e + c), h = Math.floor(i + c), d = (u + p + h) * this.G3, f = t - u + d, g = e - p + d, y = i - h + d;
if (f >= g) if (g >= y) {
o = 1;
a = 0;
n = 0;
r = 1;
s = 1;
l = 0;
} else if (f >= y) {
o = 1;
a = 0;
n = 0;
r = 1;
s = 0;
l = 1;
} else {
o = 0;
a = 0;
n = 1;
r = 1;
s = 0;
l = 1;
} else if (g < y) {
o = 0;
a = 0;
n = 1;
r = 0;
s = 1;
l = 1;
} else if (f < y) {
o = 0;
a = 1;
n = 0;
r = 0;
s = 1;
l = 1;
} else {
o = 0;
a = 1;
n = 0;
r = 1;
s = 1;
l = 0;
}
var m = f - o + this.G3, v = g - a + this.G3, E = y - n + this.G3, _ = f - r + 2 * this.G3, T = g - s + 2 * this.G3, D = y - l + 2 * this.G3, S = f - 1 + 3 * this.G3, O = g - 1 + 3 * this.G3, A = y - 1 + 3 * this.G3;
u &= 255;
p &= 255;
h &= 255;
var R = this.gradP[u + this.perm[p + this.perm[h]]], C = this.gradP[u + o + this.perm[p + a + this.perm[h + n]]], P = this.gradP[u + r + this.perm[p + s + this.perm[h + l]]], L = this.gradP[u + 1 + this.perm[p + 1 + this.perm[h + 1]]], b = .6 - f * f - g * g - y * y, I = .6 - m * m - v * v - E * E, M = .6 - _ * _ - T * T - D * D, N = .6 - S * S - O * O - A * A;
return 32 * ((b < 0 ? 0 : (b *= b) * b * R.dot3(f, g, y)) + (I < 0 ? 0 : (I *= I) * I * C.dot3(m, v, E)) + (M < 0 ? 0 : (M *= M) * M * P.dot3(_, T, D)) + (N < 0 ? 0 : (N *= N) * N * L.dot3(S, O, A)));
};
t.prototype.perlin2 = function(t, e) {
var i = Math.floor(t), o = Math.floor(e);
t -= i;
e -= o;
i &= 255;
o &= 255;
var a = this.gradP[i + this.perm[o]].dot2(t, e), n = this.gradP[i + this.perm[o + 1]].dot2(t, e - 1), r = this.gradP[i + 1 + this.perm[o]].dot2(t - 1, e), s = this.gradP[i + 1 + this.perm[o + 1]].dot2(t - 1, e - 1), l = this.fade(t);
return this.lerp(this.lerp(a, r, l), this.lerp(n, s, l), this.fade(e));
};
t.prototype.perlin3 = function(t, e, i) {
var o = Math.floor(t), a = Math.floor(e), n = Math.floor(i);
t -= o;
e -= a;
i -= n;
o &= 255;
a &= 255;
n &= 255;
var r = this.gradP[o + this.perm[a + this.perm[n]]].dot3(t, e, i), s = this.gradP[o + this.perm[a + this.perm[n + 1]]].dot3(t, e, i - 1), l = this.gradP[o + this.perm[a + 1 + this.perm[n]]].dot3(t, e - 1, i), c = this.gradP[o + this.perm[a + 1 + this.perm[n + 1]]].dot3(t, e - 1, i - 1), u = this.gradP[o + 1 + this.perm[a + this.perm[n]]].dot3(t - 1, e, i), p = this.gradP[o + 1 + this.perm[a + this.perm[n + 1]]].dot3(t - 1, e, i - 1), h = this.gradP[o + 1 + this.perm[a + 1 + this.perm[n]]].dot3(t - 1, e - 1, i), d = this.gradP[o + 1 + this.perm[a + 1 + this.perm[n + 1]]].dot3(t - 1, e - 1, i - 1), f = this.fade(t), g = this.fade(e), y = this.fade(i);
return this.lerp(this.lerp(this.lerp(r, u, f), this.lerp(s, p, f), y), this.lerp(this.lerp(l, h, f), this.lerp(c, d, f), y), g);
};
t.prototype.seed = function(t) {
t > 0 && t < 1 && (t *= 65536);
(t = Math.floor(t)) < 256 && (t |= t << 8);
for (var e = 0; e < 256; e++) {
var i;
i = 1 & e ? this.p[e] ^ 255 & t : this.p[e] ^ t >> 8 & 255;
this.perm[e] = this.perm[e + 256] = i;
this.gradP[e] = this.gradP[e + 256] = this.grad3[i % 12];
}
};
t.prototype.lerp = function(t, e, i) {
return (1 - i) * t + i * e;
};
t.prototype.fade = function(t) {
return t * t * t * (t * (6 * t - 15) + 10);
};
return o([ n ], t);
}());
i.default = r;
var s = function() {
function t(t, e, i) {
this.x = t;
this.y = e;
this.z = i;
}
t.prototype.dot2 = function(t, e) {
return this.x * t + this.y * e;
};
t.prototype.dot3 = function(t, e, i) {
return this.x * t + this.y * e + this.z * i;
};
return t;
}();
cc._RF.pop();
}, {} ],
PickAvatar: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "c7974nYPCdMvb6AS/8/NF4d", "PickAvatar");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../utils/AudioPlayer"), l = t("./AttributeSelector"), c = t("../data/AttributeData"), u = t("./BrightnessBar"), p = t("./PaletteSelector"), h = t("../data/AvatarData"), d = t("../manager/EquipmentManager"), f = t("../manager/InventoryManager"), g = t("../manager/LoadingManager"), y = t("./LoadingIcon"), m = t("../utils/Utils"), v = t("./CursorArea"), E = t("../manager/ProfileManager"), _ = t("../data/ExitData"), T = t("../data/SavePointData"), D = cc._decorator, S = D.ccclass, O = D.property, A = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.SELECTOR_ORGANIZATION = 0;
e.SELECTOR_GENGER = 1;
e.SELECTOR_HAIR = 2;
e.COLOR_PATTLE_HAIR = 3;
e.SELECTOR_EYES = 4;
e.COLOR_PATTLE_EYES = 5;
e.SELECTOR_FACE = 6;
e.COLOR_PATTLE_FACE = 7;
e.SELECTOR_BODY = 8;
e.PROGRESS_SKIN_COLOR = 9;
e.SELECTOR_PROFESSION = 10;
e.loadingBackground = null;
e.avatarTable = null;
e.attributeLayout = null;
e.randomLayout = null;
e.randomLabelTitle = null;
e.randomLabelName = null;
e.randomLabelDesc = null;
e.randomLabelSkillName = null;
e.randomLabelSkillDesc = null;
e.randomButton = null;
e.selectorPrefab = null;
e.brightnessBarPrefab = null;
e.palettePrefab = null;
e.loadingIconPrefab = null;
e.cursorAreaPrefab = null;
e.cloakSprite = null;
e.shoesSprite1 = null;
e.shoesSprite2 = null;
e.helmetSprite = null;
e.pantsSprite = null;
e.clothesSprite = null;
e.glovesSprite1 = null;
e.glovesSprite2 = null;
e.weaponSprite = null;
e.remoteSprite = null;
e.shieldSprite = null;
e.petSprite = null;
e.randomTouched = !1;
e.isShow = !1;
e.loadingManager = new g.default();
e.delayTime = 0;
return e;
}
e.prototype.onLoad = function() {
var t = this;
v.default.init(this.cursorAreaPrefab);
this.loadingManager.init();
this.data = new h.default();
this.bedSprite = this.getSpriteChildSprite(this.avatarTable, [ "bed" ]);
this.coverSprite = this.getSpriteChildSprite(this.avatarTable, [ "cover" ]);
this.petSprite = this.getSpriteChildSprite(this.avatarTable, [ "pet" ]);
this.bodySprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body" ]);
this.handSprite1 = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "hand1" ]);
this.handSprite2 = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "hand2" ]);
this.legSprite1 = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "leg1" ]);
this.legSprite2 = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "leg2" ]);
this.headSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "head" ]);
this.hairSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "head", "hair" ]);
this.faceSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "head", "face" ]);
this.eyesSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "head", "eyes" ]);
this.helmetSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "head", "helmet" ]);
this.pantsSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "pants" ]);
this.cloakSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "cloak" ]);
this.weaponSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "weapon" ]);
this.remoteSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "remote" ]);
this.shieldSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "shield" ]);
this.clothesSprite = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "clothes" ]);
this.glovesSprite1 = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "hand1", "gloves" ]);
this.glovesSprite2 = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "hand2", "gloves" ]);
this.shoesSprite1 = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "leg1", "shoes" ]);
this.shoesSprite2 = this.getSpriteChildSprite(this.avatarTable, [ "avatar", "body", "leg2", "shoes" ]);
this.loadingBackground.active = !0;
this.loadingIcon = cc.instantiate(this.loadingIconPrefab).getComponent(y.default);
this.loadingIcon.node.parent = this.loadingBackground;
this.loadingIcon.init([ y.default.TYPE_TEXTURE, y.default.TYPE_EQUIP ]);
this.loadingManager.loadSpriteAtlas(g.default.KEY_TEXTURES, "singleColor");
this.loadingManager.loadSpriteAtlas(g.default.KEY_EQUIPMENT, "emptyequipment");
this.loadingManager.loadProfession();
this.loadingManager.loadEquipment();
this.loadingManager.loadTalents();
this.loadingManager.loadItems();
this.loadingManager.loadSuits();
this.attributeLayout.active = !1;
this.randomButton.on(cc.Node.EventType.TOUCH_START, function() {
t.randomTouched = !0;
}, this);
this.randomButton.on(cc.Node.EventType.TOUCH_END, function() {
t.randomTouched = !1;
}, this);
this.randomButton.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.randomTouched = !1;
}, this);
};
e.prototype.getSpriteChildSprite = function(t, e) {
for (var i = 0, o = e; i < o.length; i++) {
var a = o[i];
t = t.getChildByName(a);
}
return t.getComponent(cc.Sprite);
};
e.prototype.show = function() {
var t = this;
this.isShow = !0;
this.loadingIcon && this.loadingIcon.isFirst ? cc.tween(this.loadingBackground).to(.5, {
opacity: 0
}).call(function() {
t.loadingBackground.active = !1;
}).start() : this.loadingBackground.active = !1;
for (var e = new Array(), i = 0; i < h.default.ORGANIZATION.length; i++) e.push(new c.default(i, h.default.ORGANIZATION[i], "", "", "", ""));
this.organizationSelector = this.addAttributeSelector("组织：", e);
this.organizationSelector.selectorCallback = function(e) {
t.data.organizationIndex = e.id;
t.bedSprite.spriteFrame = r.default.spriteFrameRes("avatarbed00" + e.id);
t.coverSprite.spriteFrame = r.default.spriteFrameRes("avatarcover00" + e.id);
t.randomLabelTitle.string = e.name;
t.petSelector && (t.petSelector.node.active = e.id == h.default.HUNTER);
t.petSprite.node.active = e.id == h.default.HUNTER;
};
var o = new Array();
for (i = 0; i < r.default.professionList.length; i++) {
var a = r.default.professionList[i], n = r.default.talents[a.talent];
o.push(new c.default(a.id, a.nameCn, "", a.desc, "技能：" + n.nameCn, "" + n.desc));
}
this.professionSelector = this.addAttributeSelector("职业：", o);
this.professionSelector.selectorCallback = function(e) {
t.data.professionData.valueCopy(r.default.professionList[e.id]);
t.randomLabelName.string = "" + e.name;
t.randomLabelDesc.string = "" + e.desc;
t.randomLabelSkillName.string = "" + e.name1;
t.randomLabelSkillDesc.string = "" + e.desc1;
t.changeEquipment(r.default.professionList[e.id]);
};
this.skinSelector = this.addBrightnessBar();
this.skinSelector.setSelectorCallback(function(e) {
t.bodySprite.node.color = e;
t.headSprite.node.color = e;
t.handSprite1.node.color = e;
t.handSprite2.node.color = e;
t.legSprite1.node.color = e;
t.legSprite2.node.color = e;
t.data.skinColor = e.toHEX("#rrggbb");
});
var s = [];
for (i = 0; i < 10; i++) s.push(new c.default(i, "样式" + i, "avatarhair" + m.default.getNumberStr3(i), "", "", ""));
this.hairSelector = this.addAttributeSelector("发型：", s);
this.hairSelector.selectorCallback = function(e) {
t.hairSprite.spriteFrame = r.default.spriteFrameRes(e.resName + "anim0");
t.data.hairResName = e.resName;
};
this.hairColorSelector = this.addPaletteSelector(p.default.TYPE_HAIR);
this.hairColorSelector.setSelectorCallback(function(e) {
t.hairSprite.node.color = e;
t.data.hairColor = e.toHEX("#rrggbb");
});
var l = [];
for (i = 0; i < 22; i++) l.push(new c.default(i, "样式" + i, "avatareyes" + m.default.getNumberStr3(i), "", "", ""));
this.eyesSelector = this.addAttributeSelector("眼睛：", l);
this.eyesSelector.selectorCallback = function(e) {
t.eyesSprite.spriteFrame = r.default.spriteFrameRes(e.resName + "anim0");
t.data.eyesResName = e.resName;
};
this.eyesColorSelector = this.addPaletteSelector(p.default.TYPE_EYES);
this.eyesColorSelector.setSelectorCallback(function(e) {
t.eyesSprite.getMaterial(0).setProperty("eyeColor", e);
t.data.eyesColor = e.toHEX("#rrggbb");
});
var u = [];
for (i = 0; i < 15; i++) u.push(new c.default(i, "样式" + i, "avatarface" + m.default.getNumberStr3(i), "", "", ""));
this.faceSelector = this.addAttributeSelector("面颊：", u);
this.faceSelector.selectorCallback = function(e) {
t.faceSprite.spriteFrame = r.default.spriteFrameRes(e.resName + "anim0");
t.data.faceResName = e.resName;
};
this.faceColorSelector = this.addPaletteSelector(p.default.TYPE_FACE);
this.faceColorSelector.setSelectorCallback(function(e) {
t.faceSprite.node.color = e;
t.faceSprite.node.opacity = 128;
t.data.faceColor = e.toHEX("#rrggbb");
});
var d = [ "柯基", "家猫", "橙子鱼" ], f = [];
for (i = 0; i < d.length; i++) f.push(new c.default(i, "" + d[i], "nonplayer1" + m.default.getNumberStr2(i), "", "", ""));
this.petSelector = this.addAttributeSelector("宠物：", f);
this.petSelector.selectorCallback = function(e) {
g.default.loadNpcSpriteAtlas(e.resName, function() {
t.petSprite.spriteFrame = r.default.spriteFrameRes(e.resName + "anim000");
});
t.data.petName = "nonplayer1" + m.default.getNumberStr2(e.id);
};
this.petSelector.node.active = this.organizationSelector.CurrentData.id == h.default.HUNTER;
this.petSprite.node.active = this.organizationSelector.CurrentData.id == h.default.HUNTER;
this.ButtonRandom();
};
e.prototype.changeEquipment = function(t) {
this.changeRes(this.helmetSprite, t.equips[f.default.HELMET], "anim0");
this.changeRes(this.pantsSprite, t.equips[f.default.TROUSERS]);
this.changeRes(this.cloakSprite, t.equips[f.default.CLOAK]);
this.changeRes(this.weaponSprite, t.equips[f.default.WEAPON]);
this.changeRes(this.remoteSprite, t.equips[f.default.REMOTE], "anim0");
this.changeRes(this.shieldSprite, t.equips[f.default.SHIELD]);
this.changeRes(this.clothesSprite, t.equips[f.default.CLOTHES], "anim0");
this.changeRes(this.glovesSprite1, t.equips[f.default.GLOVES]);
this.changeRes(this.glovesSprite2, t.equips[f.default.GLOVES]);
this.changeRes(this.shoesSprite1, t.equips[f.default.SHOES]);
this.changeRes(this.shoesSprite2, t.equips[f.default.SHOES]);
this.resetSpriteSize(this.weaponSprite);
this.resetSpriteSize(this.remoteSprite);
this.resetSpriteSize(this.shieldSprite);
};
e.prototype.resetSpriteSize = function(t) {
if (t.spriteFrame) {
t.node.width = t.spriteFrame.getOriginalSize().width;
t.node.height = t.spriteFrame.getOriginalSize().height;
}
};
e.prototype.changeRes = function(t, e, i) {
if (!t) return !1;
var o = r.default.spriteFrameRes(e);
i && r.default.spriteFrameRes(e + i) && (o = r.default.spriteFrameRes(e + i));
t.spriteFrame = o || null;
};
e.prototype.startGame = function() {
if (this.isShow) {
E.default.clearData(r.default.jumpSlotIndex);
r.default.resetData(r.default.jumpChapter);
s.default.play(s.default.SELECT);
r.default.playerData.AvatarData = this.data.clone();
var t = new T.default();
switch (r.default.jumpChapter) {
case r.default.CHAPTER01:
t = T.default.chapter01();
break;

case r.default.CHAPTER02:
t = T.default.chapter02();
break;

case r.default.CHAPTER03:
t = T.default.chapter03();
break;

case r.default.CHAPTER04:
t = T.default.chapter04();
}
r.default.loadingNextLevel(_.default.getDreamExitDataFromReal(t));
r.default.jumpChapter = 0;
this.addPorfessionEquipment();
}
};
e.prototype.backToHome = function() {
cc.director.loadScene("start");
s.default.play(s.default.SELECT);
};
e.prototype.addPorfessionEquipment = function() {
var t = {};
for (var e in r.default.inventoryManager.equips) {
r.default.inventoryManager.equips[e].valueCopy(d.default.getNewEquipData(this.data.professionData.equips[e] ? this.data.professionData.equips[e] : ""));
e == f.default.TROUSERS && (t[e] = r.default.inventoryManager.equips[e].clone());
}
r.default.profileManager.data.playerEquipsReality = t;
};
e.prototype.addBrightnessBar = function() {
var t = cc.instantiate(this.brightnessBarPrefab), e = t.getComponent(u.default);
this.attributeLayout.addChild(t);
return e;
};
e.prototype.addAttributeSelector = function(t, e, i) {
var o = cc.instantiate(this.selectorPrefab), a = o.getComponent(l.default);
this.attributeLayout.addChild(o);
a.init(t, e, i);
return a;
};
e.prototype.addPaletteSelector = function(t, e) {
var i = cc.instantiate(this.palettePrefab), o = i.getComponent(p.default);
this.attributeLayout.addChild(i);
o.init(t, e);
return o;
};
e.prototype.update = function(t) {
if (this.loadingManager.isSpriteFramesLoaded(g.default.KEY_TEXTURES) && this.loadingManager.isSpriteFramesLoaded(g.default.KEY_EQUIPMENT) && this.loadingManager.isProfessionLoaded && this.loadingManager.isEquipmentLoaded && this.loadingManager.isSkillsLoaded && this.loadingManager.isItemsLoaded && this.loadingManager.isSuitsLoaded) {
this.loadingManager.reset();
this.show();
}
if (this.isShow && this.isTimeDelay(t) && this.randomTouched) {
this.randomButton.angle = 0;
cc.tween(this.randomButton).to(.2, {
angle: 360
}).start();
this.ButtonRandom();
}
};
e.prototype.isTimeDelay = function(t) {
this.delayTime += t;
if (this.delayTime > .2) {
this.delayTime = 0;
return !0;
}
return !1;
};
e.prototype.ButtonSwitch = function() {
if (this.isShow) {
this.randomLayout.active = !this.randomLayout.active;
this.attributeLayout.active = !this.attributeLayout.active;
s.default.play(s.default.SELECT);
}
};
e.prototype.ButtonRandom = function() {
if (this.isShow) {
this.organizationSelector.selectRandom();
this.professionSelector.selectRandom();
this.skinSelector.selectRandom();
this.hairSelector.selectRandom();
this.hairColorSelector.selectRandom();
this.eyesSelector.selectRandom();
this.eyesColorSelector.selectRandom();
this.faceSelector.selectRandom();
this.faceColorSelector.selectRandom();
this.petSelector.selectRandom();
s.default.play(s.default.SELECT);
}
};
e.prototype.ButtonSelect = function(t, e) {
if (this.isShow) {
this.professionSelector.selectNext(0 == e);
s.default.play(s.default.SELECT);
}
};
n([ O(cc.Node) ], e.prototype, "loadingBackground", void 0);
n([ O(cc.Node) ], e.prototype, "avatarTable", void 0);
n([ O(cc.Node) ], e.prototype, "attributeLayout", void 0);
n([ O(cc.Node) ], e.prototype, "randomLayout", void 0);
n([ O(cc.Label) ], e.prototype, "randomLabelTitle", void 0);
n([ O(cc.Label) ], e.prototype, "randomLabelName", void 0);
n([ O(cc.Label) ], e.prototype, "randomLabelDesc", void 0);
n([ O(cc.Label) ], e.prototype, "randomLabelSkillName", void 0);
n([ O(cc.Label) ], e.prototype, "randomLabelSkillDesc", void 0);
n([ O(cc.Node) ], e.prototype, "randomButton", void 0);
n([ O(cc.Prefab) ], e.prototype, "selectorPrefab", void 0);
n([ O(cc.Prefab) ], e.prototype, "brightnessBarPrefab", void 0);
n([ O(cc.Prefab) ], e.prototype, "palettePrefab", void 0);
n([ O(cc.Prefab) ], e.prototype, "loadingIconPrefab", void 0);
n([ O(cc.Prefab) ], e.prototype, "cursorAreaPrefab", void 0);
return n([ S ], e);
}(cc.Component);
i.default = A;
cc._RF.pop();
}, {
"../data/AttributeData": "AttributeData",
"../data/AvatarData": "AvatarData",
"../data/ExitData": "ExitData",
"../data/SavePointData": "SavePointData",
"../logic/Logic": "Logic",
"../manager/EquipmentManager": "EquipmentManager",
"../manager/InventoryManager": "InventoryManager",
"../manager/LoadingManager": "LoadingManager",
"../manager/ProfileManager": "ProfileManager",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils",
"./AttributeSelector": "AttributeSelector",
"./BrightnessBar": "BrightnessBar",
"./CursorArea": "CursorArea",
"./LoadingIcon": "LoadingIcon",
"./PaletteSelector": "PaletteSelector"
} ],
PlayActor: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e69cb93DmFAnZrpJ7PhJ6C/", "PlayActor");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/FromData"), s = t("../data/TriggerData"), l = t("../utils/Random"), c = t("../manager/StatusManager"), u = t("./Actor"), p = t("../logic/EventHelper"), h = t("../data/FloatingLabelData"), d = cc._decorator, f = d.ccclass, g = (d.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.currentDir = 3;
e.isWeaponDashing = !1;
return e;
}
e.prototype.hideSelf = function(t) {
var e = this;
if (t > 0) {
this.invisible = !0;
this.scheduleOnce(function() {
e.stopHiding();
}, t);
}
};
e.prototype.stopHiding = function() {
this.invisible = !1;
this.statusMgr.stopStatus(c.default.TALENT_INVISIBLE);
};
e.prototype.showFloatFont = function(t, e, i, o, a, n, r) {
var s = 0;
this.Root && (s = this.Root.y);
var l = this.node.convertToWorldSpaceAR(cc.v3(0, s + 80));
p.EventHelper.emit(p.EventHelper.HUD_SHOW_FLOATING_LABEL, {
data: h.default.create(l, t, e, i, o, a, n, r)
});
};
Object.defineProperty(e.prototype, "Hv", {
get: function() {
return this.hv;
},
enumerable: !1,
configurable: !0
});
e.prototype.onLoad = function() {
this.init();
};
e.prototype.exTrigger = function(t, e, i, o, a) {
if (this.inventoryManager) {
if (!a) for (var n = 0, r = this.inventoryManager.TotalEquipData.exTriggers; n < r.length; n++) {
var s = r[n];
this.exTriggerDo(s, t, e, i, o);
}
for (var l = 0, c = this.inventoryManager.itemList; l < c.length; l++) for (var u = 0, p = c[l].exTriggers; u < p.length; u++) {
s = p[u];
this.exTriggerDo(s, t, e, i, o);
}
}
};
e.prototype.exTriggerDo = function(t, e, i, o, a) {
if (t.group == e && t.type == i) switch (t.id) {
case s.default.ID_STATUS:
this.exTriggerStatus(t, o, a);
break;

case s.default.ID_BULLET:
this.exTriggerBullet(t);
break;

case s.default.ID_TALENT:
this.exTriggerTalent(t, o, a);
}
};
e.prototype.exTriggerBullet = function(t) {
var e = t.count, i = !0;
if (e < 1) {
i = l.default.rand() < e;
e = 1;
} else e = Math.floor(e);
if (i) if (e > 1) for (var o = 0; o < e; o++) this.exTriggerBulletDo(t); else this.exTriggerBulletDo(t);
};
e.prototype.exTriggerBulletDo = function(t) {
var e = this, i = t.bulletInterval ? t.bulletInterval : 100, o = t.maxAmmo ? t.maxAmmo : 0;
o > 1 ? this.schedule(function() {
e.exTriggerBulletFire(t);
}, i, o - 1) : this.exTriggerBulletFire(t);
};
e.prototype.exTriggerBulletFire = function(t) {
var e = t.bulletAngle ? t.bulletAngle : 0;
this.triggerShooter.data.bulletType = t.res;
this.triggerShooter.data.bulletArcExNum = t.bulletArcExNum;
this.triggerShooter.data.bulletLineExNum = t.bulletLineExNum;
this.triggerShooter.data.bulletSize = t.bulletSize;
this.triggerShooter.data.bulletSize += this.IsVariation ? .5 : 0;
this.triggerShooter.data.bulletExSpeed = t.bulletSpeed;
var i = l.default.getRandomNum(-e, e);
this.triggerShooter.fireBullet(i, cc.v3(t.bulletOffsetX, 24));
for (var o = 0, a = this.shadowList; o < a.length; o++) {
var n = a[o];
if (n.node) {
n.shooterEx.setHv(this.triggerShooter.Hv);
n.shooterEx.data = this.triggerShooter.data.clone();
n.shooterEx.fireBullet(i, cc.v3(t.bulletOffsetX, 24));
}
}
};
e.prototype.exTriggerTalent = function(t) {
var e = t.count, i = !0;
if (e < 1) {
i = l.default.rand() < e;
e = 1;
} else e = Math.floor(e);
return i;
};
e.prototype.exTriggerStatus = function(t, e, i) {
var o = t.count, a = !0;
if (o < 1) {
a = l.default.rand() < o;
o = 1;
} else o = Math.floor(o);
if (a) for (var n = 0; n < o; n++) {
s.default.TARGET_OTHER == t.target && i && i.addStatus(t.res, new r.default());
if (s.default.TARGET_OTHER_NEAREST == t.target) c.default.addStatus2NearEnemy(this, t.res, e); else if (s.default.TARGET_SELF == t.target) this.addStatus(t.res, new r.default()); else if (s.default.TARGET_ALL_ALLY == t.target) c.default.addStatus2NearAllies(this, this.node, t.res, t.range, e); else if (s.default.TARGET_ALL_ENEMY == t.target) c.default.addStatus2NearEnemies(this, this.node, t.res, t.range, e); else if (s.default.TARGET_ALL == t.target) {
this.addStatus(t.res, new r.default());
c.default.addStatus2NearEnemies(this, this.node, t.res, t.range, e);
c.default.addStatus2NearAllies(this, this.node, t.res, t.range, e);
}
}
};
return n([ f ], e);
}(u.default));
i.default = g;
cc._RF.pop();
}, {
"../data/FloatingLabelData": "FloatingLabelData",
"../data/FromData": "FromData",
"../data/TriggerData": "TriggerData",
"../logic/EventHelper": "EventHelper",
"../manager/StatusManager": "StatusManager",
"../utils/Random": "Random",
"./Actor": "Actor"
} ],
PlayerActorState: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "ae164KhEJ1NH6oNNveJ3HB/", "PlayerActorState");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
i.GLOBAL = i.FALL = i.BLINK = i.DIZZ = i.DODGE = i.DASH = i.BLOCK = i.TALK = i.HURT = i.DIED = i.SHOW = i.PRPARE = i.ATTACK = i.WALK = i.IDLE = void 0;
var n = t("../base/BasePlayerActorState"), r = t("../utils/Utils"), s = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(IDLE):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDashing ? e.stateMachine.changeState(D.DASH) : e.sc.isBlinking ? e.stateMachine.changeState(D.BLINK) : e.sc.isDodging ? e.stateMachine.changeState(D.DODGE) : e.sc.isAttacking ? e.stateMachine.changeState(D.ATTACK) : e.sc.isTalking ? e.stateMachine.changeState(D.TALK) : e.sc.isMoving && e.stateMachine.changeState(D.WALK);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(IDLE):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(IDLE):event");
return !0;
};
return e;
}(n.default);
i.IDLE = s;
var l = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(WALK):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isMoving ? e.sc.isAttacking ? e.stateMachine.changeState(D.ATTACK) : e.sc.isDodging ? e.stateMachine.changeState(D.DODGE) : e.sc.isBlinking && e.stateMachine.changeState(D.BLINK) : e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(WALK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(WALK):event");
return !0;
};
return e;
}(n.default);
i.WALK = l;
var c = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(ATTACK):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isAttacking || e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(ATTACK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(ATTACK):event");
return !0;
};
return e;
}(n.default);
i.ATTACK = c;
var u = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(PRPARE):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.stateMachine.changeState(D.SHOW);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(PRPARE):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(PRPARE):event");
return !0;
};
return e;
}(n.default);
i.PRPARE = u;
var p = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(SHOW):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isShow && e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(SHOW):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(SHOW):event");
return !0;
};
return e;
}(n.default);
i.SHOW = p;
var h = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DIE):enter");
e.killed();
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DIE):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(DIE):event");
return !0;
};
return e;
}(n.default);
i.DIED = h;
var d = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(HURT):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isHurting ? e.sc.isFalling ? e.stateMachine.changeState(D.FALL) : e.sc.isBlinking && e.stateMachine.changeState(D.BLINK) : e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(HURT):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(TAKEDAMAGE):event");
return !0;
};
return e;
}(n.default);
i.HURT = d;
var f = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(TALK):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isTalking || e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(TALK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(TALK):event");
return !0;
};
return e;
}(n.default);
i.TALK = f;
var g = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(BLOCK):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(BLOCK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(BLOCK):event");
return !0;
};
return e;
}(n.default);
i.BLOCK = g;
var y = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DASH):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDashing || e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DASH):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(DASH):event");
return !0;
};
return e;
}(n.default);
i.DASH = y;
var m = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DODGE):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDodging || e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DODGE):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(DODGE):event");
return !0;
};
return e;
}(n.default);
i.DODGE = m;
var v = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DIZZ):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDizzing || e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(DIZZ):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(DIZZ):event");
return !0;
};
return e;
}(n.default);
i.DIZZ = v;
var E = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(BLINK):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isBlinking || e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(BLINK):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(BLINK):event");
return !0;
};
return e;
}(n.default);
i.BLINK = E;
var _ = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(FALL):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isFalling || e.stateMachine.changeState(D.IDLE);
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(FALL):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(FALL):event");
return !0;
};
return e;
}(n.default);
i.FALL = _;
var T = function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.enter = function(e) {
t.prototype.enter.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(GLOBAL):enter");
};
e.prototype.update = function(e) {
t.prototype.update.call(this, e);
e.sc.isDied || (e.data.currentHealth <= 0 ? e.stateMachine.changeState(D.DIED) : !D.HURT.isRunnig && e.sc.isHurting && e.stateMachine.changeState(D.HURT));
};
e.prototype.exit = function(e) {
t.prototype.exit.call(this, e);
r.default.log("" + e.actorName() + e.node.uuid + "(GLOBAL):exit");
};
e.prototype.event = function(e, i) {
t.prototype.event.call(this, e, i);
r.default.log("" + e.actorName() + e.node.uuid + "(GLOBAL):event");
return !0;
};
return e;
}(n.default);
i.GLOBAL = T;
var D = function() {
function t() {}
t.GLOBAL = new T();
t.WALK = new l();
t.ATTACK = new c();
t.IDLE = new s();
t.DIED = new h();
t.DODGE = new m();
t.HURT = new d();
t.PRPARE = new u();
t.SHOW = new p();
t.BLINK = new E();
t.FALL = new _();
t.TALK = new f();
t.DASH = new y();
return t;
}();
i.default = D;
cc._RF.pop();
}, {
"../base/BasePlayerActorState": "BasePlayerActorState",
"../utils/Utils": "Utils"
} ],
PlayerAvatar: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "7621b1Y+05Jj7j6YdAgY785", "PlayerAvatar");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("../manager/InventoryManager"), l = t("../data/AvatarData"), c = t("../utils/AudioPlayer"), u = t("../utils/Utils"), p = t("../base/BaseAvatar"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.cloakSprite = null;
e.legLeftSprite = null;
e.legRightSprite = null;
e.footLeftSprite = null;
e.footRightSprite = null;
e.shoesLeftSprite = null;
e.shoesRightSprite = null;
e.handLeftSprite = null;
e.glovesLeftSprite = null;
e.handRightSprite = null;
e.glovesRightSprite = null;
e.headSprite = null;
e.faceSprite = null;
e.eyesSprite = null;
e.hairSprite = null;
e.helmetSprite = null;
e.bodySprite = null;
e.pantsSprite = null;
e.clothesSprite = null;
e.avatarNode = null;
e.spriteNode = null;
e.waterY = 0;
e.idlehair = [ 0, 1 ];
e.checkTimeDelay = 0;
return e;
}
i = e;
e.create = function(t, e, o, a) {
var n = cc.instantiate(t).getComponent(i);
n.node.parent = e;
n.node.zIndex = 0;
n.init(o, a);
return n;
};
e.prototype.init = function(t, e) {
if (!this.isInit) {
u.default.changeNodeGroups(this.node, e);
this.isInit = !0;
this.data = new l.default();
this.data.valueCopy(t);
this.anim = this.getComponent(cc.Animation);
this.avatarNode = this.getSpriteChildNode([ "sprite", "avatar" ]);
this.spriteNode = this.getSpriteChildNode([ "sprite" ]);
this.cloakSprite = this.getSpriteChildSprite([ "sprite", "cloak" ]);
this.legLeftSprite = this.getSpriteChildSprite([ "sprite", "avatar", "legleft" ]);
this.legRightSprite = this.getSpriteChildSprite([ "sprite", "avatar", "legright" ]);
this.footLeftSprite = this.getSpriteChildSprite([ "sprite", "avatar", "legleft", "foot" ]);
this.footRightSprite = this.getSpriteChildSprite([ "sprite", "avatar", "legright", "foot" ]);
this.shoesLeftSprite = this.getSpriteChildSprite([ "sprite", "avatar", "legleft", "foot", "shoes" ]);
this.shoesRightSprite = this.getSpriteChildSprite([ "sprite", "avatar", "legright", "foot", "shoes" ]);
this.handLeftSprite = this.getSpriteChildSprite([ "sprite", "avatar", "handleft" ]);
this.handRightSprite = this.getSpriteChildSprite([ "sprite", "avatar", "handright" ]);
this.glovesLeftSprite = this.getSpriteChildSprite([ "sprite", "avatar", "handleft", "gloves" ]);
this.glovesRightSprite = this.getSpriteChildSprite([ "sprite", "avatar", "handright", "gloves" ]);
this.headSprite = this.getSpriteChildSprite([ "sprite", "avatar", "head" ]);
this.faceSprite = this.getSpriteChildSprite([ "sprite", "avatar", "head", "face" ]);
this.eyesSprite = this.getSpriteChildSprite([ "sprite", "avatar", "head", "eyes" ]);
this.hairSprite = this.getSpriteChildSprite([ "sprite", "avatar", "head", "hair" ]);
this.helmetSprite = this.getSpriteChildSprite([ "sprite", "avatar", "head", "helmet" ]);
this.bodySprite = this.getSpriteChildSprite([ "sprite", "avatar", "body" ]);
this.pantsSprite = this.getSpriteChildSprite([ "sprite", "avatar", "body", "pants" ]);
this.clothesSprite = this.getSpriteChildSprite([ "sprite", "avatar", "body", "clothes" ]);
this.headSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.faceSprite.node.color = cc.Color.WHITE.fromHEX(this.data.faceColor);
this.faceSprite.node.opacity = 128;
var i = cc.Color.WHITE.fromHEX(this.data.eyesColor);
this.eyesSprite.getMaterial(0).setProperty("eyeColor", i);
this.hairSprite.node.color = cc.Color.WHITE.fromHEX(this.data.hairColor);
this.bodySprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.legLeftSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.legRightSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.footLeftSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.footRightSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.handLeftSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.handRightSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.hairSprite.node.stopAllActions();
this.changeAvatarByDir(p.default.DIR_RIGHT);
this.updateSpriteFrameAnim(this.faceSprite, this.data.faceResName, 1);
this.updateSpriteFrameAnim(this.hairSprite, this.data.hairResName, 2);
this.updateSpriteFrameAnim(this.eyesSprite, this.data.eyesResName, 1);
}
};
e.prototype.showHandsWithInteract = function(t, e) {
this.handLeftSprite.node.scaleY = .2;
this.handRightSprite.node.scaleY = .2;
this.handLeftSprite.node.opacity = 0;
this.handRightSprite.node.opacity = 0;
this.handLeftSprite.node.y = 8;
this.handRightSprite.node.y = 8;
if (t) {
this.handLeftSprite.node.opacity = 255;
this.handRightSprite.node.opacity = 255;
if (e) {
this.handLeftSprite.node.scaleY = .3;
this.handRightSprite.node.scaleY = .3;
this.handLeftSprite.node.y = 16;
this.handRightSprite.node.y = 16;
}
}
};
e.prototype.playAnim = function(t, e, i) {
if (this.isInit && !this.isAniming && p.default.STATE_DIE != this.status) {
var o = null != i ? i : 1;
switch (t) {
case p.default.STATE_IDLE:
this.status != t && this.playIdle(o);
break;

case p.default.STATE_WALK:
this.status != t && p.default.STATE_ATTACK != this.status && p.default.STATE_AIRKICK != this.status && this.playWalk(o);
break;

case p.default.STATE_ATTACK:
this.playAttack(o);
break;

case p.default.STATE_AIRKICK:
this.playAirKick(o);
break;

case p.default.STATE_DIE:
this.playDie(o);
break;

case p.default.STATE_FALL:
this.playFall(o);
break;

case p.default.STATE_JUMP_UP:
this.status != t && this.playJumpUp(o);
break;

case p.default.STATE_JUMP_DOWN:
this.status != t && this.playJumpDown(o);
break;

case p.default.STATE_DISGUISE:
this.playDisguise(o);
break;

case p.default.STATE_HIT:
this.playHit(o);
break;

case p.default.STATE_SPECIAL:
this.playSpecial(o);
}
this.status = t;
4 != e && (this.dir = e);
}
};
e.prototype.changeLegColor = function(t, e) {
if (t) {
this.legLeftSprite.node.color = cc.Color.WHITE.fromHEX(e);
this.legRightSprite.node.color = cc.Color.WHITE.fromHEX(e);
this.footLeftSprite.node.color = cc.Color.WHITE.fromHEX(e);
this.footRightSprite.node.color = cc.Color.WHITE.fromHEX(e);
} else {
this.legLeftSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.legRightSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.footLeftSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
this.footRightSprite.node.color = cc.Color.WHITE.fromHEX(this.data.skinColor);
}
};
e.prototype.changeEquipDirSpriteFrame = function(t) {
var e = t.equips[s.default.HELMET], i = t.equips[s.default.CLOTHES];
this.updateSpriteFrameAnim(this.helmetSprite, e.img, e.anim);
this.updateSpriteFrameAnim(this.clothesSprite, i.img, i.anim);
};
e.prototype.changeAvatarByDir = function(t) {
if (!this.isAniming) {
var e = cc.Color.WHITE.fromHEX(this.data.eyesColor);
this.eyesSprite.getMaterial(0).setProperty("eyeColor", e);
if (4 != t) {
this.dir = t;
this.cloakSprite.node.zIndex = 0 == t ? this.avatarNode.zIndex + 1 : this.avatarNode.zIndex - 1;
this.handRightSprite.node.zIndex = 0 == t ? this.bodySprite.node.zIndex - 1 : this.bodySprite.node.zIndex + 1;
}
}
};
e.prototype.showLegsWithWater = function(t, e) {
this.legLeftSprite.node.opacity = t ? 0 : 255;
this.legRightSprite.node.opacity = t ? 0 : 255;
this.pantsSprite.node.opacity = t ? 0 : 255;
this.setInWaterMat(this.bodySprite, t);
this.setInWaterMat(this.clothesSprite, t);
this.setInWaterMat(this.cloakSprite, t);
this.waterY = e ? -32 : 0;
this.node.y = r.default.lerp(this.node.y, this.waterY, .2);
};
e.prototype.setInWaterMat = function(t, e) {
if (t && t.spriteFrame) {
t.spriteFrame.getOffset();
var i = t.spriteFrame.getRect(), o = t.spriteFrame.getTexture();
t.getMaterial(0).setProperty("rect", [ i.x / o.width, i.y / o.height, i.width / o.width, i.height / o.height ]);
t.getMaterial(0).setProperty("hidebottom", e ? 1 : 0);
t.getMaterial(0).setProperty("isRotated", t.spriteFrame.isRotated() ? 1 : 0);
}
};
e.prototype.updateSpriteFrameAnim = function(t, e, i) {
var o = this, a = i && 0 != i ? i : 1;
t.unscheduleAllCallbacks();
var n = 0;
t.schedule(function() {
var i = o.dir == p.default.DIR_UP ? a : 0;
t.spriteFrame = r.default.spriteFrameRes(e + "anim" + (i + n++));
n > a - 1 && (n = 0);
}, .2, cc.macro.REPEAT_FOREVER, .1);
};
e.prototype.playJumpDown = function() {
this.anim.play("AvatarJumpDown");
};
e.prototype.playJumpUp = function() {
this.anim.play("AvatarJumpUp");
};
e.prototype.playDisguise = function() {};
e.prototype.playHit = function() {};
e.prototype.playSpecial = function() {};
e.prototype.playFall = function() {
this.anim.play("AvatarFall");
};
e.prototype.playDie = function() {
this.anim.play("AvatarDie");
};
e.prototype.playIdle = function() {
this.anim.play("AvatarIdle");
};
e.prototype.playWalk = function() {
this.anim.play("AvatarWalkHorizontal");
};
e.prototype.playAttack = function() {
var t = this;
this.anim.play("AvatarAttackHorizontal");
cc.tween(this.spriteNode).stop();
cc.tween(this.spriteNode).to(.1, {
position: cc.v3(-16, 0)
}).to(.1, {
position: cc.v3(16, -0)
}).to(.1, {
position: cc.v3(0, 0)
}).delay(.1).call(function() {
t.playAnim(p.default.STATE_IDLE, t.dir);
}).start();
};
e.prototype.playAirKick = function() {
var t = this;
this.anim.play("AvatarAirKick");
cc.tween(this.spriteNode).stop();
cc.tween(this.spriteNode).to(.1, {
position: cc.v3(-16, 0)
}).to(.1, {
position: cc.v3(16, -0)
}).to(.1, {
position: cc.v3(0, 0)
}).delay(.2).call(function() {
t.playAnim(p.default.STATE_IDLE, t.dir);
}).start();
};
e.prototype.playCooking = function() {
var t = this;
this.isAniming = !0;
this.scheduleOnce(function() {
t.isAniming = !1;
}, 3);
};
e.prototype.playDrink = function() {
var t = this;
this.changeAvatarByDir(p.default.DIR_RIGHT);
this.anim.play("AvatarDrink");
c.default.play(c.default.DRINK);
this.isAniming = !0;
this.scheduleOnce(function() {
t.isAniming = !1;
}, 1.5);
};
e.prototype.playToilet = function() {
var t = this;
this.isAniming = !0;
this.scheduleOnce(function() {
t.isAniming = !1;
}, 5);
};
e.prototype.playSleep = function() {
this.changeAvatarByDir(p.default.DIR_RIGHT);
this.anim.play("AvatarSleep");
this.isAniming = !0;
};
e.prototype.playWakeUp = function() {
var t = this;
this.changeAvatarByDir(p.default.DIR_RIGHT);
this.anim.play("AvatarWakeUp");
this.isAniming = !0;
this.scheduleOnce(function() {
t.isAniming = !1;
}, 1);
};
e.prototype.playRead = function() {
var t = this;
this.isAniming = !0;
this.scheduleOnce(function() {
t.isAniming = !1;
}, 5);
};
e.prototype.start = function() {};
e.prototype.isAnimTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
var i;
return i = n([ d ], e);
}(p.default));
i.default = f;
cc._RF.pop();
}, {
"../base/BaseAvatar": "BaseAvatar",
"../data/AvatarData": "AvatarData",
"../manager/InventoryManager": "InventoryManager",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils",
"./Logic": "Logic"
} ],
PlayerData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "802a53ZqslNorozVvKYFivM", "PlayerData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("./EquipmentData"), a = t("./DamageData"), n = t("./StatusData"), r = t("./CommonData"), s = t("../utils/Random"), l = t("./AvatarData"), c = t("./OilGoldData"), u = t("./TalentData"), p = t("../logic/Shield"), h = t("./LifeData"), d = t("../utils/DataUtils"), f = function() {
function t() {
this.name = "";
this.pos = cc.v3(5, 5);
this.posZ = 0;
this.isWakeUp = !1;
this.currentHealth = t.DEFAULT_HEALTH;
this.currentDream = t.DEFAULT_DREAM;
this.currentAmmo = 0;
this.equipmentTotalData = new o.default();
this.statusTotalData = new n.default();
this.avatarData = new l.default();
this.oilGoldData = new c.default();
this.organizationTalentData = new u.default();
this.professionTalentData = new u.default();
this.lifeData = new h.default();
this.statusList = new Array();
this.common = new r.default();
this.common.maxHealth = t.DEFAULT_HEALTH;
this.common.moveSpeed = t.DEFAULT_SPEED;
this.common.jumpSpeed = t.DEFAULT_JUMP_SPEED;
this.common.jumpHeight = t.DEFAULT_JUMP_HEIGHT;
this.common.damageMin = t.DEFAULT_ATTACK;
this.common.damageBack = t.DEFAULT_BACK_ATTACK;
this.common.maxDream = t.DEFAULT_DREAM;
this.shadowList = [];
}
Object.defineProperty(t.prototype, "ShadowList", {
get: function() {
return this.shadowList;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "StatusList", {
get: function() {
return this.statusList;
},
set: function(t) {
if (t) {
this.statusList = new Array();
for (var e = 0, i = t; e < i.length; e++) {
var o = i[e], a = new n.default();
a.valueCopy(o);
this.statusList.push(a);
}
}
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "LifeData", {
get: function() {
return this.lifeData;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "EquipmentTotalData", {
get: function() {
return this.equipmentTotalData;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "StatusTotalData", {
get: function() {
return this.statusTotalData;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "AvatarData", {
get: function() {
return this.avatarData;
},
set: function(t) {
this.avatarData = t;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "OilGoldData", {
get: function() {
return this.oilGoldData;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "OrganizationTalentData", {
get: function() {
return this.organizationTalentData;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "ProfessionTalentData", {
get: function() {
return this.professionTalentData;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "Common", {
get: function() {
return this.common;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "FinalCommon", {
get: function() {
return new r.default().add(this.common).add(this.statusTotalData.Common).add(this.equipmentTotalData.Common).add(this.avatarData.professionData.Common).add(this.oilGoldData.Common);
},
enumerable: !1,
configurable: !0
});
t.prototype.valueCopy = function(t) {
if (t) {
d.default.baseCopy(this, t);
this.common.valueCopy(t.common);
this.pos = t.pos ? cc.v3(t.pos.x, t.pos.y) : cc.v3(4, 7);
this.equipmentTotalData.valueCopy(t.equipmentTotalData);
this.statusTotalData.valueCopy(t.statusTotalData);
this.avatarData.valueCopy(t.avatarData);
this.oilGoldData.valueCopy(t.oilGoldData);
this.lifeData.valueCopy(t.lifeData);
this.StatusList = t.statusList;
this.organizationTalentData.valueCopy(t.organizationTalentData);
this.professionTalentData.valueCopy(t.professionTalentData);
this.shadowList = t.shadowList;
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.prototype.getFinalAttackPoint = function() {
var t = this.FinalCommon, e = new a.default(), i = t.DamageMin, o = t.DamageMax, n = t.criticalStrikeRate / 100, r = s.default.rand() < n, c = r ? i + o : i;
c < 0 && (c = 0);
e.isCriticalStrike = r;
e.realDamage = t.RealDamage;
e.magicDamage = t.MagicDamage;
e.physicalDamage = c;
this.avatarData.organizationIndex == l.default.TECH && (e.physicalDamage += .5 * this.currentDream);
return e;
};
t.prototype.getFinalRemoteDamage = function() {
var t = this.FinalCommon, e = new a.default(), i = t.RemoteDamage;
this.avatarData.organizationIndex == l.default.HUNTER && (i += .5 * this.currentDream);
var o = t.remoteCritRate / 100, n = s.default.rand() < o, r = n ? i + i : i;
r < 0 && (r = 0);
e.physicalDamage = r;
e.isCriticalStrike = n;
return e;
};
t.prototype.getDamage = function(t, e) {
var i = this.FinalCommon, o = t.clone(), a = i.Defence, n = i.magicDefence / 100, r = i.blockPhysical / 100, s = i.blockMagic / 100;
o.physicalDamage = a >= 0 ? o.physicalDamage * (1 - .06 * a / (.06 * a + 1)) : o.physicalDamage * (2 - Math.pow(.94, -a));
o.magicDamage = o.magicDamage * (1 - n);
if (o.physicalDamage > 0 || o.magicDamage > 0) if (e == p.default.BLOCK_NORMAL) {
o.physicalDamage = o.physicalDamage * (1 - r);
o.magicDamage = o.magicDamage * (1 - s);
} else if (e == p.default.BLOCK_PARRY) {
o.physicalDamage = 0;
o.magicDamage = 0;
o.realDamage = 0;
}
return o;
};
t.prototype.getLifeDrain = function() {
var t = this.FinalCommon, e = t.criticalStrikeRate / 100, i = t.lifeDrain / 100, o = 0;
if (s.default.rand() < i) {
o = .2;
s.default.rand() < e && (o = 1);
}
return o;
};
t.prototype.getMoveSpeed = function() {
var e = this.FinalCommon.MoveSpeed;
e > 2 * t.DEFAULT_SPEED && (e = 2 * t.DEFAULT_SPEED);
e < 2 * -t.DEFAULT_SPEED && (e = 2 * -t.DEFAULT_SPEED);
return e;
};
t.prototype.getJumpSpeed = function() {
var t = this.FinalCommon.JumpSpeed;
t < 0 && (t = 0);
return t;
};
t.prototype.getJumpHeight = function() {
var t = this.FinalCommon.JumpHeight;
t < 0 && (t = 0);
return t;
};
t.prototype.getHealth = function(t) {
var e, i = t.MaxHealth;
this.lifeData.sanity <= 0 && (i = 1);
if (!(i > 0)) return cc.v3(1, 1);
e = this.currentHealth / i;
return cc.v3(i * e, i);
};
t.prototype.getDream = function(t) {
var e, i = t.MaxDream;
this.lifeData.sanity <= 0 && (i = 1);
if (!(i > 0)) return cc.v3(1, 1);
e = this.currentDream / i;
return cc.v3(i * e, i);
};
t.DEFAULT_HEALTH = 10;
t.DEFAULT_SPEED = 6;
t.DEFAULT_JUMP_SPEED = 6;
t.DEFAULT_JUMP_HEIGHT = 2;
t.DEFAULT_ATTACK = 1;
t.DEFAULT_BACK_ATTACK = 0;
t.DEFAULT_DREAM = 5;
return t;
}();
i.default = f;
cc._RF.pop();
}, {
"../logic/Shield": "Shield",
"../utils/DataUtils": "DataUtils",
"../utils/Random": "Random",
"./AvatarData": "AvatarData",
"./CommonData": "CommonData",
"./DamageData": "DamageData",
"./EquipmentData": "EquipmentData",
"./LifeData": "LifeData",
"./OilGoldData": "OilGoldData",
"./StatusData": "StatusData",
"./TalentData": "TalentData"
} ],
PlayerInfoDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "15316LuMnlLl6y6PlDqoReo", "PlayerInfoDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/AvatarData"), s = cc._decorator, l = s.ccclass, c = (s.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.attack = null;
e.organization = null;
e.criticalStrikeRate = null;
e.defence = null;
e.lifeDrain = null;
e.damageBack = null;
e.moveSpeed = null;
e.attackSpeed = null;
e.dodge = null;
e.health = null;
e.dream = null;
e.realDamage = null;
e.realRate = null;
e.magicDamage = null;
e.magicDefence = null;
e.iceRate = null;
e.fireRate = null;
e.lighteningRate = null;
e.toxicRate = null;
e.curseRate = null;
e.remoteDamage = null;
e.remoteCritRate = null;
e.remoteCooldown = null;
e.sanity = null;
e.solidSatiety = null;
e.liquidSatiety = null;
e.isShow = !1;
e.layout = null;
return e;
}
e.prototype.onLoad = function() {
this.attack = this.node.getChildByName("layout").getChildByName("attack").getChildByName("label").getComponent(cc.Label);
this.organization = this.node.getChildByName("layout").getChildByName("organization").getChildByName("label").getComponent(cc.Label);
this.criticalStrikeRate = this.node.getChildByName("layout").getChildByName("criticalStrikeRate").getChildByName("label").getComponent(cc.Label);
this.defence = this.node.getChildByName("layout").getChildByName("defence").getChildByName("label").getComponent(cc.Label);
this.lifeDrain = this.node.getChildByName("layout").getChildByName("lifeDrain").getChildByName("label").getComponent(cc.Label);
this.damageBack = this.node.getChildByName("layout").getChildByName("damageBack").getChildByName("label").getComponent(cc.Label);
this.moveSpeed = this.node.getChildByName("layout").getChildByName("moveSpeed").getChildByName("label").getComponent(cc.Label);
this.attackSpeed = this.node.getChildByName("layout").getChildByName("attackSpeed").getChildByName("label").getComponent(cc.Label);
this.dodge = this.node.getChildByName("layout").getChildByName("dodge").getChildByName("label").getComponent(cc.Label);
this.health = this.node.getChildByName("layout").getChildByName("health").getChildByName("label").getComponent(cc.Label);
this.dream = this.node.getChildByName("layout").getChildByName("dream").getChildByName("label").getComponent(cc.Label);
this.realDamage = this.node.getChildByName("layout").getChildByName("realDamage").getChildByName("label").getComponent(cc.Label);
this.realRate = this.node.getChildByName("layout").getChildByName("realRate").getChildByName("label").getComponent(cc.Label);
this.magicDamage = this.node.getChildByName("layout").getChildByName("magicDamage").getChildByName("label").getComponent(cc.Label);
this.magicDefence = this.node.getChildByName("layout").getChildByName("magicDefence").getChildByName("label").getComponent(cc.Label);
this.iceRate = this.node.getChildByName("layout").getChildByName("iceRate").getChildByName("label").getComponent(cc.Label);
this.fireRate = this.node.getChildByName("layout").getChildByName("fireRate").getChildByName("label").getComponent(cc.Label);
this.lighteningRate = this.node.getChildByName("layout").getChildByName("lighteningRate").getChildByName("label").getComponent(cc.Label);
this.toxicRate = this.node.getChildByName("layout").getChildByName("toxicRate").getChildByName("label").getComponent(cc.Label);
this.curseRate = this.node.getChildByName("layout").getChildByName("curseRate").getChildByName("label").getComponent(cc.Label);
this.remoteCooldown = this.node.getChildByName("layout").getChildByName("remoteCooldown").getChildByName("label").getComponent(cc.Label);
this.remoteCritRate = this.node.getChildByName("layout").getChildByName("remoteCritRate").getChildByName("label").getComponent(cc.Label);
this.remoteDamage = this.node.getChildByName("layout").getChildByName("remoteDamage").getChildByName("label").getComponent(cc.Label);
this.sanity = this.node.getChildByName("layout").getChildByName("sanity").getChildByName("label").getComponent(cc.Label);
this.solidSatiety = this.node.getChildByName("layout").getChildByName("solidSatiety").getChildByName("label").getComponent(cc.Label);
this.liquidSatiety = this.node.getChildByName("layout").getChildByName("liquidSatiety").getChildByName("label").getComponent(cc.Label);
this.layout = this.node.getChildByName("layout");
this.addSpriteTouchEvent();
};
e.prototype.start = function() {};
e.prototype.refreshDialog = function(t, e, i) {
if (this.attack) {
var o = t.Common.clone().add(t.AvatarData.professionData.Common);
this.organization.string = r.default.ORGANIZATION[t.AvatarData.organizationIndex];
this.attack.string = this.getInfo(o.DamageMin, e.Common.DamageMin, i.Common.DamageMin) + "    MAX:" + this.getInfo(o.DamageMax, e.Common.DamageMax, i.Common.DamageMax);
this.criticalStrikeRate.string = this.getInfo(o.criticalStrikeRate, e.Common.criticalStrikeRate, i.Common.criticalStrikeRate, !0);
this.defence.string = this.getInfo(o.Defence, e.Common.Defence, i.Common.Defence);
this.lifeDrain.string = this.getInfo(o.lifeDrain, e.Common.lifeDrain, i.Common.lifeDrain, !0);
this.damageBack.string = this.getInfo(o.DamageBack, e.Common.DamageBack, i.Common.DamageBack);
this.moveSpeed.string = this.getInfo(o.MoveSpeed, e.Common.MoveSpeed, i.Common.MoveSpeed);
this.attackSpeed.string = this.getInfo(o.AttackSpeed, e.Common.AttackSpeed, i.Common.AttackSpeed);
this.dodge.string = this.getInfo(o.dodge, e.Common.dodge, i.Common.dodge, !0);
this.health.string = t.currentHealth.toFixed(1).replace(".0", "") + "/" + this.getInfo(o.MaxHealth, e.Common.MaxHealth, i.Common.MaxHealth);
this.dream.string = t.currentDream.toFixed(1).replace(".0", "") + "/" + this.getInfo(o.MaxDream, e.Common.MaxDream, i.Common.MaxDream);
this.realDamage.string = this.getInfo(o.RealDamage, e.Common.RealDamage, i.Common.RealDamage);
this.realRate.string = this.getInfo(o.realRate, e.Common.realRate, i.Common.realRate, !0);
this.magicDamage.string = this.getInfo(o.MagicDamage, e.Common.MagicDamage, i.Common.MagicDamage);
this.magicDefence.string = this.getInfo(o.magicDefence, e.Common.magicDefence, i.Common.magicDefence, !0);
this.iceRate.string = this.getInfo(o.iceRate, e.Common.iceRate, i.Common.iceRate, !0);
this.fireRate.string = this.getInfo(o.fireRate, e.Common.fireRate, i.Common.fireRate, !0);
this.lighteningRate.string = this.getInfo(o.lighteningRate, e.Common.lighteningRate, i.Common.lighteningRate, !0);
this.toxicRate.string = this.getInfo(o.toxicRate, e.Common.toxicRate, i.Common.toxicRate, !0);
this.curseRate.string = this.getInfo(o.curseRate, e.Common.curseRate, i.Common.curseRate, !0);
this.remoteCritRate.string = this.getInfo(o.remoteCritRate, e.Common.remoteCritRate, i.Common.remoteCritRate, !0);
this.remoteDamage.string = this.getInfo(o.RemoteDamage, e.Common.RemoteDamage, i.Common.RemoteDamage);
this.remoteCooldown.string = this.getInfo(o.remoteCooldown, e.Common.remoteCooldown, i.Common.remoteCooldown);
this.sanity.string = this.getInfo(t.LifeData.sanity, 0, 0, !0);
this.solidSatiety.string = this.getInfo(t.LifeData.solidSatiety, 0, 0, !0);
this.liquidSatiety.string = this.getInfo(t.LifeData.liquidSatiety, 0, 0, !0);
}
};
e.prototype.getInfo = function(t, e, i, o) {
var a = "" + (t + e + i).toFixed(1).replace(".0", "");
o && (a += "%");
if (e > 0) {
a += " E:+" + e.toFixed(1).replace(".0", "");
o && (a += "%");
} else if (e < 0) {
a += " E:" + e.toFixed(1).replace(".0", "");
o && (a += "%");
}
if (i > 0) {
a += " S:+" + i.toFixed(1).replace(".0", "");
o && (a += "%");
} else if (i < 0) {
a += " S:" + i.toFixed(1).replace(".0", "");
o && (a += "%");
}
return a;
};
e.prototype.addSpriteTouchEvent = function() {
var t = this;
this.node.on(cc.Node.EventType.TOUCH_START, function() {
t.isShow = !0;
});
this.node.on(cc.Node.EventType.TOUCH_END, function() {
t.isShow = !1;
});
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.isShow = !1;
});
};
e.prototype.update = function() {
this.layout.active = this.isShow;
};
return n([ l ], e);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"../data/AvatarData": "AvatarData"
} ],
PlayerWeapon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e3affyq+pdEIqRjlXOazN5E", "PlayerWeapon");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./EventHelper"), s = t("./MeleeWeapon"), l = t("./Shooter"), c = t("../manager/InventoryManager"), u = t("./MeleeShadowWeapon"), p = t("./Logic"), h = t("../utils/Random"), d = t("./MeleeCollideHelper"), f = t("../base/BaseAvatar"), g = cc._decorator, y = g.ccclass, m = g.property, v = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.meleeCollideHelper = null;
e.player = null;
e.meleeWeapon = null;
e.shadowWeapon = null;
e.shooter = null;
e.isLeftHand = !1;
e.isHeavyRemotoAttacking = !1;
e.isShadow = !1;
e.selfDefaultPos = cc.v3(-15, 40);
e.otherDefaultPos = cc.v3(20, 40);
e.handsUpPosX = 32;
e.handsUpPosY = 32;
e.handsUpPos = cc.v3(0, 0);
e.remoteIntervalTime = 0;
e.isCooling = !1;
e.remoteAngleOffset = 0;
e.isHandsUp = !1;
e.interactBuildingAttacking = !1;
e.interactBuildingLift = !1;
e.ammoRecovery = 0;
e.maxAmmo = 0;
e.checkTimeDelay = 0;
return e;
}
e.prototype.init = function(t, e, i) {
this.isShadow = i;
this.isLeftHand = e;
this.player = t;
this.initMelee();
this.initShooter();
if (e) {
this.selfDefaultPos = cc.v3(20, 40);
this.otherDefaultPos = cc.v3(-15, 40);
} else {
this.selfDefaultPos = cc.v3(-15, 40);
this.otherDefaultPos = cc.v3(20, 40);
}
};
e.prototype.initMelee = function() {
if (this.isShadow) {
this.shadowWeapon = this.getComponentInChildren(u.default);
this.shadowWeapon.init(this.player, this.isLeftHand ? this.player.handLeft.meleeWeapon : this.player.handRight.meleeWeapon);
} else {
this.meleeWeapon = this.getComponentInChildren(s.default);
this.meleeWeapon.IsSecond = this.isLeftHand;
}
};
e.prototype.initShooter = function() {
this.shooter = this.getComponentInChildren(l.default);
this.shooter.player = this.player;
this.shooter.actor = this.player;
var t = this.player.playerData.FinalCommon;
this.ammoRecovery = t.AmmoRecovery;
this.maxAmmo = t.MaxAmmo;
};
e.prototype.handsUp = function(t, e, i) {
var o = this;
if (this.isHandsUp && t) {
this.interactBuildingAttacking = i;
this.interactBuildingLift = e;
} else this.interactBuildingAttacking = !1;
this.meleeWeapon.setWeaponInVisible(t);
if (t && !this.isHandsUp) {
this.isHandsUp = !0;
this.handsUpPos = cc.v3(this.handsUpPosX, 0);
e && this.scheduleOnce(function() {
o.handsUpPos = cc.v3(0, o.handsUpPosY);
}, .1);
}
if (!t && this.isHandsUp) {
this.isHandsUp = !1;
this.handsUpPos = cc.v3(this.handsUpPosX, 0);
this.scheduleOnce(function() {
o.handsUpPos = cc.v3(0, 0);
}, .1);
}
};
e.prototype.changeZIndexByDir = function(t, e) {
switch (e) {
case f.default.DIR_UP:
this.node.zIndex = t - 1;
break;

case f.default.DIR_DOWN:
this.node.zIndex = t + 1;
break;

case f.default.DIR_LEFT:
this.node.zIndex = this.isLeftHand ? t + 1 : t - 1;
break;

case f.default.DIR_RIGHT:
this.node.zIndex = this.isLeftHand ? t - 1 : t + 1;
}
};
e.prototype.changeWeapon = function(t, e) {
switch (t.equipmetType) {
case c.default.WEAPON:
this.meleeWeapon.changeEquipment(t, e);
break;

case c.default.REMOTE:
this.shooter.data = t.clone();
this.shooter.changeRes(this.shooter.data.img);
var i = cc.color(255, 255, 255).fromHEX(this.shooter.data.color);
this.shooter.changeResColor(i);
}
};
e.prototype.meleeAttack = function(t, e) {
this.meleeWeapon && !this.meleeWeapon.IsAttacking && this.meleeWeapon.attack(t, e);
};
e.prototype.remoteAttack = function(t, e, i, o) {
var a = this;
if (this.player.inventoryManager.equips[c.default.REMOTE].equipmetType != c.default.REMOTE) return !1;
if (this.isCooling) return !1;
var n = !1, s = t.FinalCommon;
this.ammoRecovery = s.AmmoRecovery;
this.maxAmmo = s.MaxAmmo;
var l = s.remoteCooldown, u = s.remoteInterval;
l < 500 && (l = 500);
u < 0 && (u = 0);
var p = Date.now(), d = p - this.remoteIntervalTime;
if (d > u) {
if (d < 2 * u) {
this.remoteAngleOffset += s.remoteAngle / 5;
this.remoteAngleOffset > s.remoteAngle && (this.remoteAngleOffset = s.remoteAngle);
} else this.remoteAngleOffset = 0;
this.remoteIntervalTime = p;
n = !0;
}
if (!n) return !1;
t.currentAmmo--;
this.isHeavyRemotoAttacking = 1 == this.shooter.data.isHeavy;
this.scheduleOnce(function() {
a.isHeavyRemotoAttacking = !1;
}, .2);
if (this.shooter) {
this.shooter.remoteDamagePlayer = t.getFinalRemoteDamage();
this.shooter.fireBullet(h.default.getRandomNum(-this.remoteAngleOffset, this.remoteAngleOffset), cc.v3(0, 0), i, o);
}
if (t.currentAmmo <= 0 && e) {
this.isCooling = !0;
e.width = 80;
e.stopAllActions();
cc.tween(e).to(l / 1e3, {
width: 0
}).call(function() {
t.currentAmmo = s.MaxAmmo;
a.isCooling = !1;
r.EventHelper.emit(r.EventHelper.HUD_UPDATE_PLAYER_AMMO, {
x: a.player.playerData.currentAmmo,
y: a.maxAmmo
});
}).start();
}
r.EventHelper.emit(r.EventHelper.HUD_UPDATE_PLAYER_AMMO, {
x: t.currentAmmo,
y: s.MaxAmmo
});
return !0;
};
e.prototype.updateLogic = function(t) {
var e = this.player.isFaceRight ? this.handsUpPos.x : -this.handsUpPos.x;
this.interactBuildingAttacking && (e = 0);
var i = this.interactBuildingAttacking || !this.interactBuildingLift ? 0 : this.handsUpPos.y, o = this.player.isInWater() ? -24 : 0;
this.node.position = p.default.lerpPos(this.node.position, this.player.isFaceRight ? this.selfDefaultPos.add(cc.v3(e, i + o)) : this.otherDefaultPos.add(cc.v3(e, i + o)), 5 * t);
this.meleeWeapon && this.meleeWeapon.updateLogic(t);
this.meleeCollideHelper && this.meleeCollideHelper.updateLogic(cc.v3(this.node.position.x, 0));
this.shooter && this.shooter.updateLogic(t);
if (!this.isCooling && this.shooter.data.equipmetType == c.default.REMOTE && this.ammoRecovery > 0 && this.player.playerData.currentAmmo < this.maxAmmo && this.isCheckTimeDelay(t)) {
this.player.playerData.currentAmmo += this.ammoRecovery;
this.player.playerData.currentAmmo > this.maxAmmo && (this.player.playerData.currentAmmo = this.maxAmmo);
r.EventHelper.emit(r.EventHelper.HUD_UPDATE_PLAYER_AMMO, {
x: this.player.playerData.currentAmmo,
y: this.maxAmmo
});
}
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .5) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
n([ m(d.default) ], e.prototype, "meleeCollideHelper", void 0);
return n([ y ], e);
}(cc.Component);
i.default = v;
cc._RF.pop();
}, {
"../base/BaseAvatar": "BaseAvatar",
"../manager/InventoryManager": "InventoryManager",
"../utils/Random": "Random",
"./EventHelper": "EventHelper",
"./Logic": "Logic",
"./MeleeCollideHelper": "MeleeCollideHelper",
"./MeleeShadowWeapon": "MeleeShadowWeapon",
"./MeleeWeapon": "MeleeWeapon",
"./Shooter": "Shooter"
} ],
Player: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "03570PUzDdNyIu4Asd1jFZT", "Player");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../ecs/component/MoveComponent"), s = cc._decorator, l = s.ccclass, c = s.property, u = t("./Shooter"), p = t("./Logic"), h = t("./Dungeon"), d = t("./Achievement"), f = t("./PlayerAvatar"), g = t("./PlayerWeapon"), y = t("./EventHelper"), m = t("../actor/ShadowPlayer"), v = t("../data/AvatarData"), E = t("../data/DamageData"), _ = t("../data/EquipmentData"), T = t("../data/FromData"), D = t("../data/PlayerData"), S = t("../data/StatusData"), O = t("../data/TalentData"), A = t("../effect/ShadowOfSight"), R = t("../equipment/Equipment"), C = t("../item/Item"), P = t("../manager/InventoryManager"), L = t("../manager/LightManager"), b = t("../manager/StatusManager"), I = t("../talent/OrganizationTalent"), M = t("../talent/ProfessionTalent"), N = t("../talent/Talent"), w = t("../ui/Tips"), H = t("../utils/AudioPlayer"), x = t("../utils/IndexZ"), F = t("../utils/Random"), B = t("./MeleeWeapon"), k = t("./Shield"), j = t("../collider/CCollider"), U = t("../utils/Utils"), G = t("../utils/NextStep"), W = t("../data/LifeData"), Y = t("../data/TriggerData"), q = t("../actor/ActorBottomDir"), V = t("../actor/JumpingAbility"), Z = t("./Controller"), K = t("../utils/ActorUtils"), z = t("../data/AreaOfEffectData"), X = t("../base/PlayActor"), Q = t("../base/BaseAvatar"), J = t("../ui/Dialogue"), $ = t("../talent/EquipItemTalent"), tt = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.pos = null;
e.root = null;
e.shadow = null;
e.walksmoke = null;
e.smokePool = null;
e.weaponLeft = null;
e.weaponRight = null;
e.shooterEx = null;
e.statusManager = null;
e.avatarPrefab = null;
e.remoteCooldown = null;
e.shieldNode = null;
e.shield = null;
e.shadowCamera = null;
e.shadowPrefab = null;
e.bottomDir = null;
e.waterSpark = null;
e.aoe = null;
e.professionTalent = null;
e.equipmentTalent = null;
e.organizationTalent = null;
e.baseAttackPoint = 1;
e.touchDelay = !1;
e.defaultPos = cc.v3(0, 0);
e.fistCombo = 0;
e.isAvoidDeathed = !1;
e.shadowList = [];
e.isInWaterTile = !1;
e.lastConsumeTime = 0;
e.solidStep = new G.default();
e.liquidStep = new G.default();
e.pooStep = new G.default();
e.peeStep = new G.default();
e.lastTimeInWater = !1;
e.swimmingAudioStep = new G.default();
e.lastLinearVelocityZ = 0;
e.statusPos = cc.v3(0, 0);
e.dashCooling = !1;
e.smokeTimeDelay = 0;
e.dreamTimeDelay = 0;
e.dreamLongTimeDelay = 0;
e.dreamShortTimeDelay = 0;
return e;
}
Object.defineProperty(e.prototype, "Root", {
get: function() {
return this.root;
},
enumerable: !1,
configurable: !0
});
e.prototype.init = function() {
var t = this;
this.triggerShooter = this.shooterEx;
this.handLeft = this.weaponLeft;
this.handRight = this.weaponRight;
this.statusMgr = this.statusManager;
this.playerData = this.data;
this.jumpAbility = this.addComponent(V.default);
this.jumpAbility.init(this, 2, 0, function(e, i) {
Y.default.TYPE_JUMP_END == i && (t.sc.isMoving ? t.playerAnim(Q.default.STATE_WALK, t.currentDir) : t.playerAnim(Q.default.STATE_IDLE, t.currentDir));
t.exTrigger(e, i, null, null);
});
this.avatar = f.default.create(this.avatarPrefab, this.root, p.default.playerData.AvatarData.clone(), this.node.group);
};
e.prototype.onLoad = function() {
var t = this;
this.data = p.default.playerData.clone();
this.init();
this.shield = this.shieldNode.getComponent(k.default);
this.lastConsumeTime = p.default.realTime;
this.entity.Move.damping = 3;
this.entity.Move.linearVelocity = cc.v2(0, 0);
this.statusManager.statusIconList = this.statusIconList;
this.statusPos = this.statusManager.node.position.clone();
this.inventoryManager = p.default.inventoryManager;
this.pos = cc.v3(0, 0);
this.sc.isDied = !1;
this.sc.isShow = !1;
this.scheduleOnce(function() {
t.sc.isShow = !0;
p.default.isCheatMode && t.scheduleOnce(function() {
t.addStatus(b.default.PERFECTDEFENCE, new T.default());
}, .2);
}, .5);
this.initTalent();
this.initCollider();
this.weaponLeft.init(this, !0, !1);
this.weaponRight.init(this, !1, !1);
this.remoteCooldown.width = 0;
this.remoteCooldown.opacity = 200;
y.EventHelper.on(y.EventHelper.PLAYER_TRIGGER, function(e) {
t.node && t.triggerThings(e && e.isLongPress);
});
y.EventHelper.on(y.EventHelper.PLAYER_EXIT_FROM_SETTINGS, function() {
cc.director.loadScene("start");
});
y.EventHelper.on(y.EventHelper.PLAYER_USEITEM, function(e) {
t.node && t.useItem(e.itemData);
});
y.EventHelper.on(y.EventHelper.PLAYER_SKILL, function() {
t.node && t.useSkill();
});
y.EventHelper.on(y.EventHelper.PLAYER_SKILL1, function() {
t.node && t.useSkill1();
});
y.EventHelper.on(y.EventHelper.PLAYER_UPDATE_OILGOLD_DATA, function() {
t.node && t.data.OilGoldData.valueCopy(p.default.playerData.OilGoldData);
});
y.EventHelper.on(y.EventHelper.PLAYER_ATTACK, function() {
var e;
!t.node || t.useInteractBuilding(!0) || null !== (e = t.avatar) && void 0 !== e && e.isAniming || t.meleeAttack();
});
y.EventHelper.on(y.EventHelper.PLAYER_REMOTEATTACK_CANCEL, function() {
t.shield && t.shield.data.equipmetType == P.default.SHIELD && t.shield.cancel();
});
y.EventHelper.on(y.EventHelper.PLAYER_REMOTEATTACK, function() {
var e;
t.useInteractBuilding(!1) || (null === (e = t.avatar) || void 0 === e ? void 0 : e.isAniming) || (t.shield && t.shield.data.equipmetType == P.default.SHIELD ? t.shield.use(t) : t.node && t.remoteAttack());
});
y.EventHelper.on(y.EventHelper.PLAYER_JUMP, function() {
t.node && t.jump();
});
y.EventHelper.on(y.EventHelper.PLAYER_DASH, function() {
t.node && t.dash();
});
y.EventHelper.on(y.EventHelper.PLAYER_JUMP_CANCEL, function() {
t.node && t.jumpCancel();
});
y.EventHelper.on(y.EventHelper.PLAYER_USEDREAM, function(e) {
t.node && t.data.AvatarData.organizationIndex == v.default.HUNTER && t.updateDream(e.value);
});
y.EventHelper.on(y.EventHelper.HUD_TIME_TICK, function() {
t.node && p.default.chapterIndex == p.default.CHAPTER099 && t.timeConsumeLife();
});
p.default.playerData.pos.y == h.default.HEIGHT_SIZE - 1 && (p.default.playerData.pos.y = h.default.HEIGHT_SIZE - 2);
this.pos = p.default.playerData.pos.clone();
this.defaultPos = p.default.playerData.pos.clone();
this.baseAttackPoint = p.default.playerData.FinalCommon.DamageMin;
this.updatePlayerPos();
this.entity.NodeRender.node = this.node;
this.entity.NodeRender.root = this.root;
y.EventHelper.emit(y.EventHelper.CAMERA_LOOK, {
pos: this.getCenterPosition(),
isDirect: !0
});
this.shooterEx.player = this;
this.shooterEx.isEx = !0;
this.smokePool = new cc.NodePool();
y.EventHelper.on(y.EventHelper.POOL_DESTORY_WALKSMOKE, function(e) {
t.destroySmoke(e.coinNode);
});
this.playerAnim(Q.default.STATE_IDLE, this.currentDir);
this.lights = this.getComponentsInChildren(A.default);
L.default.registerLight(this.lights, this.node);
this.bottomDir && this.bottomDir.init(this);
if (!this.playerSpriteTexture) {
this.playerSpriteTexture = new cc.RenderTexture();
this.playerSpriteTexture.initWithSize(800, 800);
this.playerSpriteTexture.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
this.shadowCamera.targetTexture = this.playerSpriteTexture;
this.shadowCamera.zoomRatio = cc.winSize.height / 800;
this.playerSpriteframe = new cc.SpriteFrame(this.playerSpriteTexture);
this.sprite.spriteFrame = this.playerSpriteframe;
}
};
e.prototype.initShadowList = function(t, e, i) {
e > 5 && (e = 5);
for (var o = 0, a = this.shadowList; o < a.length; o++) {
var n = a[o];
(n.isValid || n.enabled) && n.stop();
}
this.shadowList = [];
if (t) {
for (var r = Date.now(), s = 0; s < e; s++) if (this.data.ShadowList[s] && r - this.data.ShadowList[s] < 1e3 * i) {
(l = cc.instantiate(this.shadowPrefab).getComponent(m.default)).init(this, this.playerSpriteframe, s, i);
this.shadowList.push(l);
}
} else for (s = 0; s < e; s++) {
var l;
(l = cc.instantiate(this.shadowPrefab).getComponent(m.default)).init(this, this.playerSpriteframe, s, i);
this.shadowList.push(l);
}
};
e.prototype.addSaveStatusList = function() {
this.statusManager && this.statusManager.addStatusListFromSave(this.data.StatusList);
};
e.prototype.initTalent = function() {
var t = this, e = new O.default(), i = new O.default();
e.valueCopy(p.default.talents["talent10" + this.data.AvatarData.organizationIndex]);
i.valueCopy(p.default.talents[this.data.AvatarData.professionData.talent]);
e.resName == this.data.OrganizationTalentData.resName && e.valueCopy(this.data.OrganizationTalentData);
i.resName == this.data.ProfessionTalentData.resName && i.valueCopy(this.data.ProfessionTalentData);
this.data.OrganizationTalentData.valueCopy(e);
this.data.ProfessionTalentData.valueCopy(i);
this.professionTalent = this.getComponent(M.default);
this.organizationTalent = this.getComponent(I.default);
this.scheduleOnce(function() {
t.professionTalent.init(t.data.ProfessionTalentData);
t.organizationTalent.init(t.data.OrganizationTalentData);
}, .1);
this.equipmentTalent = this.getComponent($.default);
this.equipmentTalent.init(new O.default());
};
e.prototype.updateFlashLight = function() {
if (this.lights) for (var t = 0, e = this.lights; t < e.length; t++) e[t].updateRender(p.default.settings.isFlashLightOpen);
};
e.prototype.actorName = function() {
return "Player";
};
e.prototype.changeLight = function(t) {
this.sprite.node.color = t;
};
e.prototype.highLight = function(t) {
this.sprite.getMaterial(0).setProperty("openOutline", t ? 1 : 0);
this.sprite.getMaterial(0).setProperty("outlineSize", .5);
this.sprite.getMaterial(0).setProperty("outlineColor", cc.color(255, 215, 0));
};
e.prototype.updateFistCombo = function() {
if (this.weaponRight.meleeWeapon.IsFist) {
this.fistCombo == B.default.COMBO1 ? this.fistCombo = B.default.COMBO2 : this.fistCombo == B.default.COMBO2 ? this.fistCombo = B.default.COMBO3 : (this.fistCombo, 
B.default.COMBO3, this.fistCombo = B.default.COMBO1);
this.weaponLeft.meleeWeapon.IsComboing || this.weaponRight.meleeWeapon.IsComboing || (this.fistCombo = B.default.COMBO1);
} else this.fistCombo = B.default.COMBO1;
};
e.prototype.takeDizz = function(t) {
var e = this;
if (t > 0 && !this.sc.isJumping) {
this.sc.isDizzing = !0;
this.entity.Move.linearVelocity = cc.Vec2.ZERO;
this.playerAnim(Q.default.STATE_IDLE, this.currentDir);
this.scheduleOnce(function() {
e.sc.isDizzing = !1;
}, t);
}
};
e.prototype.updateStatus = function(t, e) {
if (this.inventoryManager) {
this.data.StatusTotalData.valueCopy(e);
this.data.StatusList = t;
this.updateInfoUi();
}
};
e.prototype.getWalkSmoke = function(t, e) {
var i = null;
this.smokePool.size() > 0 && (i = this.smokePool.get());
i && !i.active || (i = cc.instantiate(this.walksmoke));
this.isInWater() && (e = e.add(cc.v3(0, 32)));
i.parent = t;
i.position = e;
i.zIndex = x.default.ACTOR;
i.opacity = 255;
i.active = !0;
};
e.prototype.destroySmoke = function(t) {
if (t) {
t.active = !1;
this.smokePool && this.smokePool.put(t);
}
};
e.prototype.changeEquipment = function(t, e, i) {
switch (t) {
case P.default.WEAPON:
this.weaponRight.meleeWeapon.changeEquipment(e, i);
break;

case P.default.REMOTE:
this.weaponLeft.shooter.data = e.clone();
var o = this.data.FinalCommon;
if (this.data.currentAmmo > o.MaxAmmo || this.data.currentAmmo <= 0) {
this.data.currentAmmo = o.MaxAmmo;
y.EventHelper.emit(y.EventHelper.HUD_UPDATE_PLAYER_AMMO, {
x: this.data.currentAmmo,
y: o.MaxAmmo
});
}
this.weaponLeft.shooter.changeRes(this.weaponLeft.shooter.data.img);
var a = cc.color(255, 255, 255).fromHEX(this.weaponLeft.shooter.data.color);
this.weaponLeft.shooter.changeResColor(a);
if (e.equipmetType != P.default.EMPTY) {
this.shield.data = new _.default();
this.updateEquipment(this.shield.sprite, this.inventoryManager.equips[P.default.SHIELD].color, p.default.spriteFrameRes(P.default.EMPTY), 1 == this.shield.data.isHeavy ? 80 : 64);
y.EventHelper.emit(y.EventHelper.HUD_CHANGE_CONTROLLER_SHIELD, {
isShield: !1
});
} else y.EventHelper.emit(y.EventHelper.HUD_CHANGE_CONTROLLER_SHIELD, {
isShield: !0
});
break;

case P.default.SHIELD:
this.shield.data = e.clone();
this.shield.node.color = cc.Color.WHITE.fromHEX(e.color);
this.updateEquipment(this.shield.sprite, e.color, i, 1 == this.shield.data.isHeavy ? 80 : 64);
if (e.equipmetType != P.default.EMPTY) {
this.weaponLeft.shooter.data = new _.default();
this.weaponLeft.shooter.changeRes(this.weaponLeft.shooter.data.img);
y.EventHelper.emit(y.EventHelper.HUD_CHANGE_CONTROLLER_SHIELD, {
isShield: !0
});
} else y.EventHelper.emit(y.EventHelper.HUD_CHANGE_CONTROLLER_SHIELD, {
isShield: !1
});
break;

case P.default.HELMET:
this.avatar.hairSprite.node.opacity = 1 == e.hideHair ? 0 : 255;
this.updateEquipment(this.avatar.helmetSprite, e.color, i);
break;

case P.default.CLOTHES:
this.updateEquipment(this.avatar.clothesSprite, e.color, i);
break;

case P.default.TROUSERS:
var n = 1 == e.trouserslong;
this.avatar.changeLegColor(n, e.color);
this.updateEquipment(this.avatar.pantsSprite, e.color, i);
break;

case P.default.GLOVES:
this.updateEquipment(this.weaponRight.meleeWeapon.GlovesSprite, e.color, i);
this.updateEquipment(this.weaponLeft.meleeWeapon.GlovesSprite, e.color, i);
this.updateEquipment(this.avatar.glovesLeftSprite, e.color, i);
this.updateEquipment(this.avatar.glovesRightSprite, e.color, i);
break;

case P.default.SHOES:
this.updateEquipment(this.avatar.shoesLeftSprite, e.color, i);
this.updateEquipment(this.avatar.shoesRightSprite, e.color, i);
break;

case P.default.CLOAK:
this.updateEquipment(this.avatar.cloakSprite, e.color, i);
}
this.avatar.changeEquipDirSpriteFrame(this.inventoryManager, this.currentDir);
this.shield.changeZIndexByDir(this.avatar.node.zIndex, this.currentDir);
this.updateInfoUi();
};
e.prototype.updateEquipment = function(t, e, i, o) {
t.spriteFrame = i;
if (o && o > 0) {
t.node.width = o;
t.node.height = o;
}
var a = cc.color(255, 255, 255).fromHEX(e);
t.node.color = a;
};
e.prototype.updateInfoUi = function() {
var t = this.data.FinalCommon, e = this.data.getHealth(t), i = this.data.getDream(t), o = this.data.LifeData;
y.EventHelper.emit(y.EventHelper.HUD_UPDATE_PLAYER_HEALTHBAR, {
x: e.x,
y: e.y
});
y.EventHelper.emit(y.EventHelper.HUD_UPDATE_PLAYER_DREAMBAR, {
x: i.x,
y: i.y
});
y.EventHelper.emit(y.EventHelper.HUD_UPDATE_PLAYER_LIFE_BAR, {
sanity: o.sanity,
solid: o.solidSatiety,
poo: o.poo,
liquid: o.liquidSatiety,
pee: o.pee
});
this.inventoryManager.updateTotalEquipData();
this.data.EquipmentTotalData.valueCopy(this.inventoryManager.TotalEquipData);
y.EventHelper.emit(y.EventHelper.HUD_UPDATE_PLAYER_INFODIALOG, {
data: this.data
});
};
e.prototype.getCenterPosition = function() {
return this.entity.Transform.position.clone();
};
e.prototype.updatePlayerPos = function() {
this.entity.Transform.position = h.default.getPosInMap(this.pos);
this.entity.Transform.z = this.data.posZ;
this.node.position = this.entity.Transform.position.clone();
};
e.prototype.transportPlayer = function(t) {
if (this.avatar.spriteNode) {
this.avatar.spriteNode.angle = 0;
this.avatar.spriteNode.scale = 5;
this.avatar.spriteNode.opacity = 255;
this.avatar.spriteNode.x = 0;
this.avatar.spriteNode.y = 0;
this.pos = t;
this.changeZIndex();
this.updatePlayerPos();
}
};
e.prototype.changeZIndex = function() {
var t = this.entity.Transform.base;
t > 0 && (t += 500);
this.node.zIndex = x.default.getActorZIndex(cc.v3(this.node.position.x, this.node.position.y - t));
};
e.prototype.addStatus = function(t, e) {
this.node && !this.sc.isDied && this.statusManager.addStatus(t, e);
};
e.prototype.addCustomStatus = function(t, e) {
this.node && !this.sc.isDied && this.statusManager.addCustomStatus(t, e);
};
Object.defineProperty(e.prototype, "IsVariation", {
get: function() {
return this.data.StatusTotalData.variation > 0;
},
enumerable: !1,
configurable: !0
});
e.prototype.stopAllDebuffs = function() {
this.node && this.statusManager.stopAllDebuffs();
};
Object.defineProperty(e.prototype, "isInteractBuildingAniming", {
get: function() {
return this.interactBuilding && this.interactBuilding.isTaken && this.interactBuilding.isAniming;
},
enumerable: !1,
configurable: !0
});
e.prototype.meleeAttack = function() {
var t, e = this;
if (!(!this.weaponRight || this.sc.isDizzing || this.sc.isDied || this.sc.isFalling || this.sc.isVanishing || (null === (t = this.avatar) || void 0 === t ? void 0 : t.isAniming) || this.isInteractBuildingAniming || this.weaponLeft.meleeWeapon.IsAttacking && this.weaponLeft.meleeWeapon.IsFist || this.weaponRight.meleeWeapon.IsAttacking && this.weaponRight.meleeWeapon.IsFist || this.shield.isDefendOrParrying)) {
this.updateFistCombo();
var i = !1;
if (this.fistCombo == B.default.COMBO1) {
i = this.weaponRight.meleeWeapon.attack(this.data, this.fistCombo);
this.weaponLeft.meleeWeapon.attackIdle(!1);
if (i) for (var o = 0, a = this.shadowList; o < a.length; o++) a[o].attack(this.data, this.fistCombo, this.weaponRight.meleeWeapon.Hv, !1);
} else if (this.fistCombo == B.default.COMBO2) {
this.weaponRight.meleeWeapon.attackIdle(!0);
if (i = this.weaponLeft.meleeWeapon.attack(this.data, this.fistCombo)) for (var n = 0, r = this.shadowList; n < r.length; n++) r[n].attack(this.data, this.fistCombo, this.weaponLeft.meleeWeapon.Hv, !0);
} else if (this.fistCombo == B.default.COMBO3) {
i = this.weaponRight.meleeWeapon.attack(this.data, this.fistCombo);
this.weaponRight.meleeWeapon.DashTime(4);
if (i) for (var s = 0, l = this.shadowList; s < l.length; s++) l[s].attack(this.data, this.fistCombo, this.weaponRight.meleeWeapon.Hv, !1);
this.scheduleOnce(function() {
if (e.weaponLeft.meleeWeapon.attack(e.data, e.fistCombo)) for (var t = 0, i = e.shadowList; t < i.length; t++) i[t].attack(e.data, e.fistCombo, e.weaponLeft.meleeWeapon.Hv, !0);
}, .15);
}
if (i) {
this.playerAnim(this.sc.isJumping ? Q.default.STATE_AIRKICK : Q.default.STATE_ATTACK, this.currentDir);
this.stopHiding();
}
}
};
e.prototype.useShield = function() {
var t;
!this.weaponRight || this.sc.isDizzing || this.sc.isDied || this.sc.isFalling || (null === (t = this.avatar) || void 0 === t ? void 0 : t.isAniming) || this.sc.isVanishing || this.weaponRight.meleeWeapon.IsAttacking || this.weaponLeft.meleeWeapon.IsAttacking || this.isInteractBuildingAniming || this.shield.Status != k.default.STATUS_PARRY && (this.shield.Status, 
k.default.STATUS_PUTDOWN);
};
e.prototype.useInteractBuilding = function(t) {
if (!this.interactBuilding) return !1;
if (!this.interactBuilding.isTaken) return !1;
if (this.sc.isJumping && t) return !1;
if (!this.interactBuilding.isAniming) {
this.stopHiding();
this.playerAnim(Q.default.STATE_ATTACK, this.currentDir);
return this.interactBuilding.interact(this, !1, t, !t);
}
return !0;
};
e.prototype.remoteAttack = function() {
if (!(!this.data || this.sc.isDizzing || this.sc.isDied || this.sc.isFalling || this.sc.isVanishing || !this.weaponLeft.shooter || this.avatar.isAniming)) {
var t = 0, e = 0;
if (this.professionTalent && this.professionTalent.hashTalent(N.default.TALENT_005) && this.professionTalent.IsExcuting) {
t = 2;
e = 1;
}
this.weaponLeft.shooter.data.bulletSize = this.IsVariation ? .5 : 0;
if (this.weaponLeft.remoteAttack(this.data, this.remoteCooldown, t, e)) {
for (var i = 0, o = this.shadowList; i < o.length; i++) o[i].remoteAttack(!0, this.weaponLeft.shooter.data, this.weaponLeft.shooter.Hv, this.data.getFinalRemoteDamage(), t, e);
this.stopHiding();
this.exTrigger(Y.default.GROUP_ATTACK, Y.default.TYPE_ATTTACK_REMOTE, null, null);
}
}
};
e.prototype.move = function(t, e) {
if (!(this.sc.isDied || this.sc.isFalling || this.sc.isDizzing || !this.sc.isShow || this.sc.isVanishing)) {
if (!e.equals(cc.Vec3.ZERO)) {
e = (e = e.mul(this.weaponRight.meleeWeapon.getMeleeSlowRatio())).mul(this.weaponLeft.meleeWeapon.getMeleeSlowRatio());
this.weaponLeft.isHeavyRemotoAttacking && (e = e.mul(.01));
1 == this.shield.data.isHeavy && this.shield.Status > k.default.STATUS_IDLE && (e = e.mul(.5));
this.interactBuilding && this.interactBuilding.isTaken && (e = e.mul(.5));
this.professionTalent.IsExcuting && this.professionTalent.hashTalent(N.default.TALENT_007) && (e = e.mul(.01));
if (this.isInWater()) {
e = e.mul(.5);
this.swimmingAudioStep.next(function() {
H.default.play(H.default.SWIMMING);
}, 2.5);
}
this.pos = h.default.getIndexInMap(this.entity.Transform.position);
this.data.pos = this.pos.clone();
this.data.posZ = this.entity.Transform.z;
this.updateHv(cc.v2(e).normalize());
this.shooterEx.setHv(this.Hv.clone());
this.weaponLeft.shooter.setHv(this.Hv.clone());
this.weaponRight.shooter.setHv(this.Hv.clone());
}
var i = e.x, o = e.y, a = cc.v2(i, o), n = this.data.getMoveSpeed();
n < 0 && (n = 0);
a = a.mul(n);
this.entity.Move.linearVelocity = a;
this.sc.isMoving = 0 != i || 0 != o;
this.sc.isMoving ? this.playerAnim(Q.default.STATE_WALK, t) : this.playerAnim(Q.default.STATE_IDLE, t);
this.updateAvatarFace(t);
}
};
e.prototype.updateAvatarFace = function(t) {
var e;
if (4 != t && !this.shield.isAniming && !this.shield.isDefendOrParrying && !(null === (e = this.avatar) || void 0 === e ? void 0 : e.isAniming) && this.weaponLeft.meleeWeapon.CanMove && this.weaponRight.meleeWeapon.CanMove) {
this.isFaceRight = this.hv.x > 0;
this.isFaceUp = this.hv.y > 0;
this.currentDir = t;
t == Q.default.DIR_DOWN && this.isFaceUp ? t = Q.default.DIR_UP : t != Q.default.DIR_UP || this.isFaceUp || (t = Q.default.DIR_DOWN);
this.weaponLeft.changeZIndexByDir(this.avatar.node.zIndex, t);
this.weaponRight.changeZIndexByDir(this.avatar.node.zIndex, t);
this.shield.changeZIndexByDir(this.avatar.node.zIndex, t);
this.avatar.changeAvatarByDir(t);
}
};
e.prototype.updateHv = function(t) {
if (Z.default.isMouseMode() && Z.default.mousePos && this.dungeon) {
var e = cc.v2(this.dungeon.node.convertToWorldSpaceAR(this.node.position));
this.hv = Z.default.mousePos.add(cc.v2(this.dungeon.mainCamera.node.position)).sub(e).normalize();
var i = U.default.getDirByHv(this.hv);
this.updateAvatarFace(i);
} else {
var o = K.default.getDirectionFromNearestEnemy(this.node.position, !1, this.dungeon, !1, 200);
o.equals(cc.Vec3.ZERO) ? t && !t.equals(cc.Vec2.ZERO) && (this.hv = t.normalize()) : this.hv = cc.v2(o).normalize();
var a = U.default.getDirByHv(this.hv);
this.updateAvatarFace(a);
}
};
e.prototype.playerAnim = function(t, e) {
if (t == Q.default.STATE_IDLE && this.avatar.status != Q.default.STATE_IDLE) {
this.weaponLeft.shooter.playWalk(!1);
this.weaponRight.shooter.playWalk(!1);
}
switch (t) {
case Q.default.STATE_IDLE:
if (this.avatar.status != Q.default.STATE_IDLE) {
this.weaponLeft.shooter.playWalk(!1);
this.weaponRight.shooter.playWalk(!1);
}
break;

case Q.default.STATE_WALK:
if (this.avatar.status != Q.default.STATE_ATTACK && this.avatar.status != Q.default.STATE_AIRKICK) {
this.weaponLeft.shooter.playWalk(!0);
this.weaponRight.shooter.playWalk(!0);
}
break;

case Q.default.STATE_ATTACK:
case Q.default.STATE_AIRKICK:
this.weaponLeft.shooter.playWalk(!0);
this.weaponRight.shooter.playWalk(!0);
break;

case Q.default.STATE_FALL:
case Q.default.STATE_DIE:
}
this.avatar.playAnim(t, e);
};
e.prototype.start = function() {
if (this.node) {
this.updateStatus(this.data.StatusList, this.data.StatusTotalData);
this.addSaveStatusList();
this.changeZIndex();
this.updateInfoUi();
this.playWakeUpInit();
}
};
e.prototype.fall = function() {
var t = this;
if (!(this.sc.isFalling || this.sc.isJumping || this.sc.isVanishing)) {
this.sc.isFalling = !0;
this.avatar.playAnim(Q.default.STATE_FALL, this.currentDir);
this.scheduleOnce(function() {
t.transportPlayer(t.defaultPos);
t.playerAnim(Q.default.STATE_IDLE, 1);
var e = new E.default();
e.realDamage = 1;
t.takeDamage(e, T.default.getClone("跌落", ""));
t.sc.isFalling = !1;
}, 2);
}
};
Object.defineProperty(e.prototype, "CanJump", {
get: function() {
var t;
return !(this.sc.isDied || this.sc.isFalling || this.sc.isDizzing || !this.sc.isShow || this.sc.isVanishing || (null === (t = this.avatar) || void 0 === t ? void 0 : t.isAniming) || this.weaponRight.meleeWeapon.IsAttacking || this.weaponLeft.meleeWeapon.IsAttacking || this.isInteractBuildingAniming);
},
enumerable: !1,
configurable: !0
});
e.prototype.vanish = function(t) {
var e = this;
this.sc.isVanishing = !0;
this.scheduleOnce(function() {
e.sc.isVanishing = !1;
}, t);
};
e.prototype.dash = function() {
var t, e = this;
if (!(this.dashCooling || (null === (t = this.avatar) || void 0 === t ? void 0 : t.isAniming))) {
this.sc.isDashing = !0;
this.dashCooling = !0;
var i = 20;
this.IsVariation && (i = 40);
this.professionTalent && this.professionTalent.hashTalent(N.default.TALENT_015) && (i += 10);
H.default.play(H.default.DASH);
this.schedule(function() {
e.addDashGhost(e.shooterEx);
}, .05, 6);
var o = this.entity.Move.linearVelocity.clone();
this.sc.isMoving = !1;
o = o.equals(cc.Vec2.ZERO) ? cc.v2(this.Hv.clone()) : o.normalizeSelf();
var a = cc.v2(o.x, o.y);
this.hv = a.clone();
o = o.mul(i);
this.entity.Move.linearVelocity = o;
this.entity.Move.damping = 50;
this.playerAnim(Q.default.STATE_WALK, this.currentDir);
this.highLight(!0);
this.scheduleOnce(function() {
e.entity.Move.damping = 3;
e.entity.Move.linearVelocity = cc.Vec2.ZERO;
e.playerAnim(Q.default.STATE_IDLE, e.currentDir);
e.sc.isDashing = !1;
e.highLight(!1);
e.scheduleOnce(function() {
e.dashCooling = !1;
}, .5);
}, .5);
}
};
e.prototype.addDashGhost = function(t) {
var e = t.fireAoe(this.aoe, new z.default().init(.4, 2, 0, 1, x.default.ACTOR, !1, !1, !1, !1, !1, new E.default(1), new T.default(), []), t.node.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(cc.v3(0, this.entity.Transform.z))), 0, null, !0);
t.updateCustomAoe(e, [ this.sprite.spriteFrame ], !1, !0, 1, cc.color(189, 183, 107), 200, !0, !0, 48, 32);
};
e.prototype.jump = function() {
this.CanJump && this.jumpAbility && this.jumpAbility.jump(this.data.getJumpSpeed(), this.data.getJumpHeight());
};
e.prototype.jumpCancel = function() {
this.jumpAbility && this.jumpAbility.cancel();
};
e.prototype.airPause = function(t, e, i, o) {
this.jumpAbility && this.jumpAbility.airPause(t, e, i, o);
};
e.prototype.talentJump = function(t) {
var e = this;
this.CanJump && this.jumpAbility && this.jumpAbility.jump(3 * this.data.getJumpSpeed(), 3 * D.default.DEFAULT_JUMP_HEIGHT, V.default.CALLBACK_JUMP, function(i, o) {
if (o == Y.default.TYPE_JUMP_END) {
e.jumpAbility.removeCallback(V.default.CALLBACK_JUMP);
t();
} else o == Y.default.TYPE_JUMP_HIGHEST && e.jumpAbility.acceleratedFall(2);
});
};
e.prototype.takeDamage = function(t, e, i) {
var o = this;
if (!this.data || this.sc.isDied || this.sc.isVanishing) return !1;
var a = this.data.FinalCommon, n = this.shield.blockDamage(this, t, e, i), r = this.data.getDamage(t, n), s = a.dodge / 100, l = F.default.rand() <= s && r.getTotalDamage() > 0;
this.sc.isDashing && r.getTotalDamage() > 0 && (l = !0);
var c = !1;
if (r.getTotalDamage() > 0 && this.organizationTalent.takeDamage(r, i)) {
r = new E.default();
c = !0;
}
r = l ? new E.default() : r;
var u = this.data.getHealth(a), p = r.getTotalDamage();
if (p > 0 && this.data.AvatarData.organizationIndex == v.default.GURAD) {
var h = this.updateDream(p);
h < p && this.exTrigger(Y.default.GROUP_HURT, Y.default.TYPE_HURT_DREAM, e, i);
p = h;
}
u.x -= p;
u.x > u.y && (u.x = u.y);
this.data.currentHealth = u.x;
var d = !1;
if (this.data.currentHealth <= 0) if (!this.isAvoidDeathed && this.data.StatusTotalData.avoidDeath > 0) {
this.isAvoidDeathed = !0;
d = !0;
this.data.currentHealth = 0;
} else this.killed(e);
y.EventHelper.emit(y.EventHelper.HUD_UPDATE_PLAYER_HEALTHBAR, {
x: u.x,
y: u.y
});
this.showFloatFont(r.getTotalDamage(), l, !1, !1, c, t.isBackAttack, d);
l && this.exTrigger(Y.default.GROUP_HURT, Y.default.TYPE_HURT_DODGE, e, i);
var f = !l && r.getTotalDamage() > 0;
if (f) {
this.exTrigger(Y.default.GROUP_HURT, Y.default.TYPE_HURT, e, i);
this.changeLight(cc.color(255, 0, 0));
this.scheduleOnce(function() {
o.changeLight(cc.Color.WHITE);
}, .2);
}
(f || n == k.default.BLOCK_PARRY) && this.showDamageEffect(n, e, i);
return f;
};
e.prototype.updateDream = function(t) {
var e = this.data.getDream(this.data.FinalCommon);
e.x -= t;
var i = -e.x;
e.x > e.y && (e.x = e.y);
e.x < 0 && (e.x = 0);
this.data.currentDream = e.x;
y.EventHelper.emit(y.EventHelper.HUD_UPDATE_PLAYER_DREAMBAR, {
x: e.x,
y: e.y
});
return i < 0 ? 0 : i;
};
e.prototype.showDamageEffect = function(t) {
y.EventHelper.emit(y.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: !1
});
if (t == k.default.BLOCK_NORMAL) {
H.default.play(H.default.BOSS_ICEDEMON_HIT);
y.EventHelper.emit(y.EventHelper.HUD_DAMAGE_CORNER_SHOW);
} else if (t == k.default.BLOCK_PARRY) H.default.play(H.default.MELEE_PARRY); else {
H.default.play(H.default.PLAYER_HIT);
y.EventHelper.emit(y.EventHelper.HUD_DAMAGE_CORNER_SHOW);
}
};
e.prototype.killed = function(t) {
if (!this.sc.isDied) {
this.sc.isDied = !0;
this.avatar.playAnim(Q.default.STATE_DIE, this.currentDir);
y.EventHelper.emit(y.EventHelper.HUD_STOP_COUNTTIME);
this.scheduleOnce(function() {
y.EventHelper.emit(y.EventHelper.HUD_FADE_OUT);
}, 1.5);
H.default.play(H.default.DIE);
y.EventHelper.emit(y.EventHelper.HUD_LOSE_OILGOLD);
y.EventHelper.emit(y.EventHelper.DUNGEON_DISAPPEAR);
y.EventHelper.emit(y.EventHelper.HUD_OILGOLD_LOSE_SHOW);
d.default.addPlayerDiedLifesAchievement();
this.weaponLeft.node.opacity = 0;
this.weaponRight.node.opacity = 0;
p.default.dieFrom.valueCopy(t);
this.scheduleOnce(function() {
cc.audioEngine.stopMusic();
cc.director.loadScene("gameover");
}, 3);
this.dungeon.darkAfterKill();
}
};
e.prototype.playerAction = function(t, e, i, o) {
var a;
this.dungeon = o;
if (this.weaponLeft.meleeWeapon && !this.weaponLeft.meleeWeapon.dungeon) {
this.weaponLeft.meleeWeapon.dungeon = o;
this.weaponLeft.shooter.dungeon = o;
this.weaponLeft.shooter.actor = this;
this.weaponRight.meleeWeapon.dungeon = o;
this.weaponRight.shooter.dungeon = o;
this.weaponRight.shooter.actor = this;
this.shooterEx.dungeon = o;
this.shooterEx.actor = this;
}
for (var n = 0, r = this.shadowList; n < r.length; n++) {
var s = r[n];
if (s.node && !s.weaponLeft.shadowWeapon.dungeon) {
s.weaponLeft.shadowWeapon.dungeon = o;
s.weaponLeft.shooter.dungeon = o;
s.weaponLeft.shooter.actor = this;
s.weaponRight.shadowWeapon.dungeon = o;
s.weaponRight.shooter.dungeon = o;
s.weaponRight.shooter.actor = this;
s.shooterEx.dungeon = o;
s.shooterEx.actor = this;
}
}
this.sc.isShow && (!this.professionTalent || this.isWeaponDashing || (null === (a = this.avatar) || void 0 === a ? void 0 : a.isAniming) || this.sc.isDashing || this.move(t, e, i));
};
e.prototype.isSmokeTimeDelay = function(t) {
this.smokeTimeDelay += t;
if (this.smokeTimeDelay > .3) {
this.smokeTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.isDreamTimeDelay = function(t) {
this.dreamTimeDelay += t;
if (this.dreamTimeDelay > 5) {
this.dreamTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.isDreamShortTimeDelay = function(t) {
this.dreamShortTimeDelay += t;
if (this.dreamShortTimeDelay > 1) {
this.dreamShortTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.isDreamLongTimeDelay = function(t) {
this.dreamLongTimeDelay += t;
if (this.dreamLongTimeDelay > 10) {
this.dreamLongTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
if (!p.default.isGamePause) {
this.isSmokeTimeDelay(t) && this.sc.isMoving && !this.sc.isJumping && this.getWalkSmoke(this.node.parent, this.entity.Transform.position);
this.dungeon && this.dungeon.isClear && this.isDreamShortTimeDelay(t) && this.updateDream(-1);
this.dungeon && !this.dungeon.isClear && this.isDreamLongTimeDelay(t) && this.updateDream(-1);
this.dungeon && !this.dungeon.isClear && this.isDreamTimeDelay(t) && this.data.AvatarData.organizationIndex == v.default.TECH && this.updateDream(1);
this.node.scaleX = this.getScaleSize();
this.avatar.node.scaleX = this.isFaceRight ? 1 : -1;
this.node.scaleY = this.getScaleSize();
this.sprite.node.scaleX = 1 / this.getScaleSize();
this.sprite.node.scaleY = -1 / this.getScaleSize();
this.sprite.node.opacity = this.invisible ? 80 : 255;
this.sc.isVanishing && (this.sprite.node.opacity = 0);
this.updateHv();
var e = this.interactBuilding && this.interactBuilding.isTaken && !this.interactBuilding.isThrowing, i = this.interactBuilding && this.interactBuilding.isTaken && this.interactBuilding.isLift;
if (this.weaponLeft) {
this.weaponLeft.updateLogic(t);
this.weaponLeft.handsUp(e, i, this.interactBuilding && this.interactBuilding.isAttacking);
}
if (this.weaponRight) {
this.weaponRight.updateLogic(t);
this.weaponRight.handsUp(e, i, this.interactBuilding && this.interactBuilding.isAttacking);
}
this.shooterEx && this.shooterEx.updateLogic(t);
if (this.avatar) {
this.avatar.showLegsWithWater(this.isInWater(), this.isInWaterTile);
this.shadow.opacity = this.isInWater() ? 0 : 128;
}
this.showUiButton();
for (var o = 0, a = this.shadowList; o < a.length; o++) {
var n = a[o];
n.node && n.updateLogic(t);
}
var s = this.root.y - this.entity.Transform.base;
s < 0 && (s = 0);
var l = 1 - s / (D.default.DEFAULT_JUMP_HEIGHT * r.MoveComponent.PIXELS_PER_UNIT) / 2;
this.shadow.scale = l < .5 ? .5 : l;
this.shadow.y = this.entity.Transform.base;
this.bottomDir.node.y = this.entity.Transform.base;
this.bottomDir.node.opacity = this.isInWater() ? 128 : 255;
this.changeZIndex();
this.showWaterSpark();
this.jumpAbility && this.jumpAbility.updateLogic();
this.statusManager.node.position = this.statusPos.clone().add(cc.v3(0, this.root.y));
this.sc.isJumping && this.CanJump && this.playerAnim(this.entity.Move.linearVelocityZ > 0 ? Q.default.STATE_JUMP_UP : Q.default.STATE_JUMP_DOWN, this.currentDir);
this.updateFlashLight();
}
};
e.prototype.showWaterSpark = function() {
if (!this.lastTimeInWater && this.isInWater()) {
var t = cc.instantiate(this.waterSpark);
t.parent = this.node;
t.position = cc.v3(0, 0);
H.default.play(H.default.JUMP_WATER);
}
this.lastTimeInWater = this.isInWater();
};
e.prototype.isInWater = function() {
return this.isInWaterTile && this.entity.Transform.z < 32;
};
e.prototype.getScaleSize = function() {
return this.IsVariation ? 1.5 : 1;
};
e.prototype.useSkill = function() {
var t;
!this.professionTalent || this.sc.isAttacking || this.sc.isVanishing || (null === (t = this.avatar) || void 0 === t ? void 0 : t.isAniming) || this.professionTalent.useSKill();
};
e.prototype.useSkill1 = function() {
var t;
!this.organizationTalent || this.sc.isAttacking || this.sc.isVanishing || (null === (t = this.avatar) || void 0 === t ? void 0 : t.isAniming) || this.organizationTalent.useSKill();
};
e.prototype.exTriggerTalent = function(e, i, o) {
if (t.prototype.exTriggerTalent.call(this, e, i, o) && this.equipmentTalent) {
this.equipmentTalent.data = p.default.talents[e.res];
this.equipmentTalent.useSKill();
}
return !0;
};
e.prototype.triggerThings = function(t) {
if (!this.sc.isJumping && this.dungeon && !this.avatar.isAniming) {
this.dungeon.equipmentManager.lastGroundEquip && this.dungeon.equipmentManager.lastGroundEquip.taken(t) && (this.dungeon.equipmentManager.lastGroundEquip = null);
this.dungeon.itemManager.lastGroundItem && this.dungeon.itemManager.lastGroundItem.taken(this, t) && (this.dungeon.itemManager.lastGroundItem = null);
if (this.interactBuilding && this.interactBuilding.isTaken) this.interactBuilding.interact(this, t, !1, !1); else if (this.dungeon.buildingManager.lastInteractBuilding && this.dungeon.buildingManager.lastInteractBuilding.taken(this, t)) {
this.interactBuilding = this.dungeon.buildingManager.lastInteractBuilding;
this.dungeon.buildingManager.lastInteractBuilding = null;
}
this.touchedTips && this.touchedTips.next(t, this);
}
};
e.prototype.showUiButton = function() {
if (this.dungeon) {
this.dungeon.equipmentManager.lastGroundEquip || this.dungeon.itemManager.lastGroundItem || this.dungeon.buildingManager.lastInteractBuilding || this.interactBuilding && this.interactBuilding.isTaken || this.touchedTips ? y.EventHelper.emit(y.EventHelper.HUD_CONTROLLER_INTERACT_SHOW, {
isShow: !0
}) : y.EventHelper.emit(y.EventHelper.HUD_CONTROLLER_INTERACT_SHOW, {
isShow: !1
});
this.shield && this.shield.data.equipmetType == P.default.SHIELD || this.interactBuilding && this.interactBuilding.isTaken || this.weaponLeft.shooter.data.equipmetType == P.default.REMOTE ? y.EventHelper.emit(y.EventHelper.HUD_CONTROLLER_REMOTE_SHOW, {
isShow: !0
}) : y.EventHelper.emit(y.EventHelper.HUD_CONTROLLER_REMOTE_SHOW, {
isShow: !1
});
}
};
e.prototype.onColliderEnter = function(t, e) {
e.tag == j.default.TAG.PLAYER_INTERACT && (this.touchedTips = null);
};
e.prototype.onColliderStay = function(t, e) {
var i = this;
if (e.tag == j.default.TAG.PLAYER_INTERACT) {
if (this.touchDelay) return;
var o = !1;
t.node.getComponent(R.default) && (o = !0);
t.node.getComponent(C.default) && (o = !0);
var a = t.node.getComponent(w.default);
if (a) {
o = !0;
this.touchedTips = a;
}
if (o) {
this.touchDelay = !0;
this.scheduleOnce(function() {
i.touchDelay = !1;
}, .1);
}
}
};
e.prototype.onColliderExit = function(t, e) {
e.tag == j.default.TAG.PLAYER_INTERACT && (this.touchedTips = null);
};
e.prototype.onColliderPreSolve = function(t, e) {
t.tag != j.default.TAG.NONPLAYER && t.tag != j.default.TAG.GOODNONPLAYER || (e.disabledOnce = !0);
};
e.prototype.useItem = function(t) {
var e;
if (null === (e = this.avatar) || void 0 === e || !e.isAniming) {
C.default.userIt(t, this);
this.exTrigger(Y.default.GROUP_USE, Y.default.TYPE_USE_ITEM, null, null, !0);
}
};
e.prototype.setLinearVelocity = function() {};
e.prototype.timeConsumeLife = function() {
var t = this;
if (p.default.chapterIndex == p.default.CHAPTER099) {
var e = p.default.realTime - this.lastConsumeTime;
this.lastConsumeTime = p.default.realTime;
var i = this.data.LifeData, o = W.default.SOLID_LOSS * i.timeScale * e / 1e3, a = W.default.LIQUID_LOSS * i.timeScale * e / 1e3, n = i.solidSatiety > 0, r = i.liquidSatiety > 0;
if (n) {
i.poo += o * W.default.POO_RATE;
if (i.poo > 100) {
i.poo = 100;
this.pooStep.next(function() {
t.sanityChange(-1);
U.default.toast("你的肚子一阵翻腾。", !1, !0);
}, 120);
}
}
if (r) {
i.pee += a * W.default.PEERATE;
if (i.pee > 100) {
i.pee = 100;
this.peeStep.next(function() {
t.sanityChange(-1);
U.default.toast("你的膀胱快要炸了。", !1, !0);
}, 120);
}
}
this.data.LifeData.solidSatiety <= 0 && this.solidStep.next(function() {
t.sanityChange(-1);
U.default.toast("你快要饿死了。", !1, !0);
}, 120);
this.data.LifeData.liquidSatiety <= 0 && this.liquidStep.next(function() {
t.sanityChange(-1);
U.default.toast("你快要渴死了。", !1, !0);
}, 120);
this.updateLife(0, -o, -a);
}
};
e.prototype.updateLife = function(t, e, i) {
this.data.LifeData.sanity += t;
this.data.LifeData.solidSatiety += e;
this.data.LifeData.liquidSatiety += i;
if (this.data.LifeData.sanity > 100) this.data.LifeData.sanity = 100; else if (this.data.LifeData.sanity <= 0) {
this.data.LifeData.sanity = 0;
if (0 != t) {
U.default.toast("精神崩溃了。。。", !1, !0);
var o = new S.default();
o.valueCopy(p.default.status[b.default.INSANE]);
o.Common.damageMin += this.data.getFinalAttackPoint().physicalDamage;
this.addCustomStatus(o, new T.default());
}
} else this.statusManager.stopStatus(b.default.INSANE);
this.data.LifeData.solidSatiety > 100 ? this.data.LifeData.solidSatiety = 100 : this.data.LifeData.solidSatiety < 0 && (this.data.LifeData.solidSatiety = 0);
this.data.LifeData.liquidSatiety > 100 ? this.data.LifeData.liquidSatiety = 100 : this.data.LifeData.liquidSatiety < 0 && (this.data.LifeData.liquidSatiety = 0);
this.updateInfoUi();
};
e.prototype.sanityChange = function(t) {
if (0 != t) {
var e = new S.default();
t > 0 ? e.valueCopy(p.default.status[b.default.SANITY_UP]) : t < 0 && e.valueCopy(p.default.status[b.default.SANITY_DOWN]);
e.sanityDirect = t;
this.addCustomStatus(e, new T.default());
}
};
e.prototype.sleep = function() {
this.avatar.playSleep();
};
e.prototype.toilet = function() {
this.avatar.playToilet();
cc.tween(this.data.LifeData).to(3, {
poo: 0,
pee: 0
}).call(function() {
U.default.toast("你感觉一身轻松。", !1, !0);
}).start();
this.data.LifeData.pee + this.data.LifeData.poo > 100 ? this.sanityChange(2) : this.sanityChange(1);
};
e.prototype.read = function() {
this.avatar.playRead();
if (F.default.getRandomNum(0, 100) > 90) {
U.default.toast("你用量子波动速读看完了一本书,书里的内容让你不寒而栗。", !1, !0);
this.sanityChange(-10);
} else {
U.default.toast("你用量子波动速读看完了一本书,奇怪的知识又增加了。", !1, !0);
this.sanityChange(5);
}
};
e.prototype.cooking = function() {
this.avatar.playCooking();
U.default.toast("你炒了两个鸡蛋又用昨晚剩下的米饭拌了拌。", !1, !0);
};
e.prototype.playWakeUpInit = function() {
var t = this;
if (this.data.isWakeUp) {
this.data.isWakeUp = !1;
this.avatar.playSleep();
J.default.play("daily000", function() {
t.avatar.playWakeUp();
});
}
};
e.prototype.drink = function() {
this.avatar.playDrink();
this.addStatus(b.default.HEALING, new T.default());
this.addStatus(b.default.DRINK, new T.default());
this.avatar.changeAvatarByDir(Q.default.DIR_RIGHT);
};
e.prototype.canEatOrDrink = function(t) {
var e = this.data.LifeData, i = "你觉得", o = !0;
if (t.solidSatiety > 0) {
if (e.solidSatiety > 99) {
o = !1;
i += "太饱了";
e.poo > 90 && (i += "，而且要憋不住");
i += "，完全吃不下了。";
} else if (e.poo > 99) {
o = !1;
i += "要憋不住了,完全吃不下了。";
}
} else if (t.liquidSatiety > 0) if (e.liquidSatiety > 99) {
o = !1;
i += "太胀了";
e.pee > 99 && (i += "，而且要憋不住");
i += "，完全喝不下了。";
} else if (e.poo > 99) {
o = !1;
i += "要憋不住了,完全喝不下了。";
}
if (!o) {
U.default.toast(i, !1, !0);
H.default.play(H.default.SELECT_FAIL);
}
return o;
};
n([ c(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ c(cc.Vec3) ], e.prototype, "pos", void 0);
n([ c(cc.Node) ], e.prototype, "root", void 0);
n([ c(cc.Node) ], e.prototype, "shadow", void 0);
n([ c(cc.Prefab) ], e.prototype, "walksmoke", void 0);
n([ c(g.default) ], e.prototype, "weaponLeft", void 0);
n([ c(g.default) ], e.prototype, "weaponRight", void 0);
n([ c(u.default) ], e.prototype, "shooterEx", void 0);
n([ c(b.default) ], e.prototype, "statusManager", void 0);
n([ c(cc.Prefab) ], e.prototype, "avatarPrefab", void 0);
n([ c(cc.Node) ], e.prototype, "remoteCooldown", void 0);
n([ c(cc.Node) ], e.prototype, "shieldNode", void 0);
n([ c(cc.Camera) ], e.prototype, "shadowCamera", void 0);
n([ c(cc.Prefab) ], e.prototype, "shadowPrefab", void 0);
n([ c(q.default) ], e.prototype, "bottomDir", void 0);
n([ c(cc.Prefab) ], e.prototype, "waterSpark", void 0);
n([ c(cc.Prefab) ], e.prototype, "aoe", void 0);
return n([ l ], e);
}(X.default);
i.default = tt;
cc._RF.pop();
}, {
"../actor/ActorBottomDir": "ActorBottomDir",
"../actor/JumpingAbility": "JumpingAbility",
"../actor/ShadowPlayer": "ShadowPlayer",
"../base/BaseAvatar": "BaseAvatar",
"../base/PlayActor": "PlayActor",
"../collider/CCollider": "CCollider",
"../data/AreaOfEffectData": "AreaOfEffectData",
"../data/AvatarData": "AvatarData",
"../data/DamageData": "DamageData",
"../data/EquipmentData": "EquipmentData",
"../data/FromData": "FromData",
"../data/LifeData": "LifeData",
"../data/PlayerData": "PlayerData",
"../data/StatusData": "StatusData",
"../data/TalentData": "TalentData",
"../data/TriggerData": "TriggerData",
"../effect/ShadowOfSight": "ShadowOfSight",
"../equipment/Equipment": "Equipment",
"../item/Item": "Item",
"../manager/InventoryManager": "InventoryManager",
"../manager/LightManager": "LightManager",
"../manager/StatusManager": "StatusManager",
"../talent/EquipItemTalent": "EquipItemTalent",
"../talent/OrganizationTalent": "OrganizationTalent",
"../talent/ProfessionTalent": "ProfessionTalent",
"../talent/Talent": "Talent",
"../ui/Dialogue": "Dialogue",
"../ui/Tips": "Tips",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/NextStep": "NextStep",
"../utils/Random": "Random",
"../utils/Utils": "Utils",
"./../ecs/component/MoveComponent": "MoveComponent",
"./Achievement": "Achievement",
"./Controller": "Controller",
"./Dungeon": "Dungeon",
"./EventHelper": "EventHelper",
"./Logic": "Logic",
"./MeleeWeapon": "MeleeWeapon",
"./PlayerAvatar": "PlayerAvatar",
"./PlayerWeapon": "PlayerWeapon",
"./Shield": "Shield",
"./Shooter": "Shooter"
} ],
Portal: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "deb90P3hX5AB5svKZmVAO6Q", "Portal");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Player"), l = t("./Building"), c = t("../utils/IndexZ"), u = t("../logic/Logic"), p = t("../data/ExitData"), h = t("../utils/AudioPlayer"), d = cc._decorator, f = d.ccclass, g = (d.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isOpen = !1;
e.exitData = new p.default();
return e;
}
e.prototype.onLoad = function() {
this.anim = this.getComponent(cc.Animation);
};
e.prototype.start = function() {
this.anim = this.getComponent(cc.Animation);
this.anim.play("PortalCloseIdle");
};
e.prototype.setPos = function(t) {
this.entity.Transform.position = r.default.getPosInMap(t);
this.node.position = this.entity.Transform.position.clone();
this.node.zIndex = c.default.BASE + 10 * (r.default.HEIGHT_SIZE - t.y) + 1;
};
e.prototype.AnimGateClose = function() {
this.anim.play("PortalCloseIdle");
};
e.prototype.AnimGateOpen = function() {
this.anim.play("PortalOpenIdle");
};
e.prototype.openGate = function() {
var t = this;
if (!this.isOpen) {
this.isOpen = !0;
this.scheduleOnce(function() {
t.anim || (t.anim = t.getComponent(cc.Animation));
t.anim.play("PortalOpen");
}, .1);
}
};
e.prototype.closeGate = function() {
if (this.isOpen) {
this.isOpen = !1;
this.anim.play("PortalClose");
}
};
e.prototype.onColliderEnter = function(t) {
var e = t.node.getComponent(s.default);
if (e && this.isOpen) {
this.closeGate();
u.default.playerData = e.data.clone();
h.default.play(h.default.EXIT);
u.default.loadingNextLevel(this.exitData);
}
};
return n([ f ], e);
}(l.default));
i.default = g;
cc._RF.pop();
}, {
"../data/ExitData": "ExitData",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Player": "Player",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
ProfessionData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a352fkUprhBDLnAwraLUc3I", "ProfessionData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("./CommonData"), n = function() {
function t() {
this.id = 0;
this.desc = "";
this.nameCn = "";
this.nameEn = "";
this.equips = {};
this.talent = "";
this.items = [];
this.common = new a.default();
}
Object.defineProperty(t.prototype, "Common", {
get: function() {
return this.common;
},
enumerable: !1,
configurable: !0
});
t.prototype.valueCopy = function(t) {
if (t) {
var e = this.nameCn;
o.default.baseCopy(this, t, !0);
this.common.valueCopy(t.common);
this.nameCn = t.nameCn ? t.nameCn : e;
this.equips = t.equips ? t.equips : {};
this.id = t.id ? t.id : 0;
this.talent = t.talent ? t.talent : "";
this.items = t.items ? t.items : [];
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = n;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./CommonData": "CommonData"
} ],
ProfessionTalent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a250fm206dD/bouLDpaklSh", "ProfessionTalent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../data/FromData"), l = t("../logic/EventHelper"), c = t("../logic/Logic"), u = t("../logic/Shooter"), p = t("./FireGhost"), h = t("./Talent"), d = t("../utils/AudioPlayer"), f = t("../utils/IndexZ"), g = t("../manager/StatusManager"), y = t("../logic/NonPlayer"), m = t("../boss/Boss"), v = t("../data/AreaOfEffectData"), E = t("../manager/NonPlayerManager"), _ = t("../utils/ActorUtils"), T = t("../ui/CoolDownView"), D = t("../manager/InventoryManager"), S = t("../utils/Utils"), O = t("../data/NonPlayerData"), A = cc._decorator, R = A.ccclass, C = A.property, P = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.aoe = null;
e.fireball = null;
e.icethron = null;
e.fireGhost = null;
e.healingLight = null;
e.rageLight = null;
e.broomPrefab = null;
e.cookingPrefab = null;
e.swordLightPrefab = null;
e.smokePrefab = null;
e.skyhandPrefab = null;
e.daggerLightPrefab = null;
e.fireGhostNum = 0;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.ghostPool = new cc.NodePool(p.default);
l.EventHelper.on(l.EventHelper.POOL_DESTORY_FIREGHLOST, function(e) {
t.destroyGhost(e.targetNode);
});
};
e.prototype.destroyGhost = function(t) {
if (t) {
t.active = !1;
if (this.ghostPool) {
this.ghostPool.put(t);
this.fireGhostNum--;
cc.log("destroyGhost");
}
}
};
e.prototype.init = function(e) {
t.prototype.init.call(this, e);
this.coolDownId = T.default.PROFESSION;
var i = 1;
this.data.resName == h.default.TALENT_014 && (i = 3);
this.initCoolDown(e, i);
};
e.prototype.skillCanUse = function() {
switch (this.data.resName) {
case h.default.TALENT_000:
case h.default.TALENT_010:
case h.default.TALENT_015:
return !1;

case h.default.TALENT_009:
return this.canSteal();

case h.default.TALENT_019:
return this.player.CanJump && !this.player.sc.isJumping;
}
return !0;
};
e.prototype.doSkill = function() {
this.excuteSkill(null);
for (var t = 0, e = this.player.shadowList; t < e.length; t++) {
var i = e[t];
i.node && this.excuteSkill(i);
}
};
e.prototype.excuteSkill = function(t) {
var e = this, i = t ? t.shooterEx : this.player.shooterEx;
switch (this.data.resName) {
case h.default.TALENT_000:
S.default.toast("梦境开发中,无法使用。");
break;

case h.default.TALENT_001:
d.default.play(d.default.MELEE_PARRY);
this.shoot(i, 0, 0, "bullet040", null, null);
break;

case h.default.TALENT_002:
this.healing();
break;

case h.default.TALENT_003:
this.cooking(i);
break;

case h.default.TALENT_004:
this.showIceThron(i);
break;

case h.default.TALENT_005:
t || this.rageShoot();
break;

case h.default.TALENT_006:
this.flash(t);
break;

case h.default.TALENT_007:
this.addSwordLight(i);
break;

case h.default.TALENT_008:
this.addDaggerLight(i, t);
break;

case h.default.TALENT_009:
this.steal(t);
break;

case h.default.TALENT_010:
break;

case h.default.TALENT_011:
t || this.aimedShoot();
break;

case h.default.TALENT_012:
this.addBroom(i);
break;

case h.default.TALENT_013:
this.showFireBall(i);
break;

case h.default.TALENT_014:
d.default.play(d.default.SKILL_MAGICBALL1);
this.shoot(i, u.default.ARC_EX_NUM_8, 0, "bullet035", null, null);
this.scheduleOnce(function() {
e.IsExcuting = !1;
}, .1);
break;

case h.default.TALENT_015:
break;

case h.default.TALENT_016:
t ? this.addClearCircle(t.shooterEx) : this.addClearCircle(i);
break;

case h.default.TALENT_017:
this.showSmoke(i);
break;

case h.default.TALENT_018:
this.addShadowFighter(t);
break;

case h.default.TALENT_019:
this.jump(i);
}
};
e.prototype.addClearCircle = function(t) {
this.player.stopAllDebuffs();
this.player.dungeon.nonPlayerManager.isPetAlive() && this.player.dungeon.nonPlayerManager.pet.stopAllDebuffs();
var e = t.fireAoe(this.aoe, new v.default().init(2, .2, 0, this.player.IsVariation ? 3 : 2, f.default.getActorZIndex(this.player.getCenterPosition()), !1, !1, !0, !1, !1, new r.default(0), new s.default(), []), cc.v3(0, 32), 0, null, !0);
t.updateCustomAoe(e, [ c.default.spriteFrameRes("clearcircle1"), c.default.spriteFrameRes("clearcircle2"), c.default.spriteFrameRes("clearcircle3"), c.default.spriteFrameRes("clearcircle4") ], !1, !0, 4);
};
e.prototype.addShadowFighter = function(t) {
for (var e, i = 0; i < 3; i++) {
var o = new O.default();
o.valueCopy(c.default.nonplayers[E.default.NON_SHADOW]);
var a = this.player.data.FinalCommon;
o.Common.damageMin = this.player.data.getFinalAttackPoint().getTotalDamage();
o.Common.maxHealth = a.MaxHealth;
this.player.weaponRight.meleeWeapon.dungeon.nonPlayerManager.addNonPlayerFromData(o, t ? t.node.position : this.player.node.position, null === (e = this.player.entity) || void 0 === e ? void 0 : e.Transform.z, this.player.weaponRight.meleeWeapon.dungeon);
}
};
e.prototype.healing = function() {
d.default.play(d.default.PICK_ITEM);
var t = cc.instantiate(this.healingLight);
t.parent = this.player.node;
t.position = cc.v3(0, 64);
t.zIndex = f.default.OVERHEAD;
this.player.addStatus(g.default.HEALING, new s.default());
this.player.dungeon.nonPlayerManager.isPetAlive() && this.player.dungeon.nonPlayerManager.pet.addStatus(g.default.HEALING, new s.default());
};
e.prototype.rageShoot = function() {
var t = this;
d.default.play(d.default.PICK_ITEM);
var e = cc.instantiate(this.rageLight);
e.parent = this.player.node;
e.position = cc.v3(0, 64);
e.zIndex = f.default.OVERHEAD;
this.scheduleOnce(function() {
t.talentSkill.IsExcuting = !1;
e && cc.isValid(e) && e.destroy();
}, 3);
};
e.prototype.flash = function(t) {
var e = this;
d.default.play(d.default.TAKEPHOTO);
cc.tween(this.sprite.node).call(function() {
e.player.addStatus(g.default.TALENT_FLASH_SPEED, new s.default());
e.player.dungeon.nonPlayerManager.isPetAlive() && e.player.dungeon.nonPlayerManager.pet.addStatus(g.default.TALENT_FLASH_SPEED, new s.default());
e.sprite.spriteFrame = c.default.spriteFrameRes("flash");
e.sprite.node.width = 128;
e.sprite.node.height = 128;
e.sprite.node.opacity = 255;
e.sprite.node.position = cc.v3(0, 32);
}).to(.1, {
opacity: 0
}).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("singleColor");
e.sprite.node.width = 2e3;
e.sprite.node.height = 2e3;
e.sprite.node.opacity = 255;
}).to(.1, {
opacity: 0
}).call(function() {
g.default.addStatus2NearEnemies(e.player, t ? t.node : e.player.node, g.default.TALENT_FLASH_DIZZ, e.player.IsVariation ? 500 : 400, new s.default());
e.sprite.spriteFrame = null;
}).start();
};
e.prototype.aimedShoot = function() {
var t = this;
d.default.play(d.default.RELOAD);
cc.tween(this.sprite.node).call(function() {
t.player.addStatus(g.default.TALENT_AIMED, new s.default());
t.player.dungeon.nonPlayerManager.isPetAlive() && t.player.dungeon.nonPlayerManager.pet.addStatus(g.default.TALENT_AIMED, new s.default());
t.sprite.spriteFrame = c.default.spriteFrameRes("talentshoot");
t.sprite.node.width = 64;
t.sprite.node.height = 64;
t.sprite.node.opacity = 255;
t.sprite.node.scale = 1;
t.sprite.node.position = cc.v3(0, 128);
}).repeat(5, cc.tween().to(1, {
scale: 1.5
}).to(1, {
scale: 1
})).call(function() {
t.sprite.spriteFrame = null;
}).start();
};
e.prototype.jump = function(t) {
var e = this;
d.default.play(d.default.JUMP);
this.player.talentJump(function() {
d.default.play(d.default.BOOM);
var i = e.player.data.getFinalAttackPoint();
i.isMelee = !0;
i.isCriticalStrike = !0;
var o = 2;
e.player.IsVariation && (o += 1);
t.fireAoe(e.skyhandPrefab, new v.default().init(0, .15, 0, o, f.default.OVERHEAD, !1, !0, !0, !1, !1, i, new s.default(), [ g.default.DIZZ ]));
e.talentSkill.IsExcuting = !1;
});
};
e.prototype.canSteal = function() {
var t = _.default.getNearestEnemyActor(this.player.node.position, !1, this.player.weaponRight.meleeWeapon.dungeon);
if (!t) return !1;
var e = t.getComponent(y.default), i = t.getComponent(m.default);
return !!(e && e.data.noLoot < 1) || !!i;
};
e.prototype.steal = function(t) {
var e = this;
d.default.play(d.default.FIREBALL);
var i = _.default.getNearestEnemyActor(this.player.node.position, !1, this.player.weaponRight.meleeWeapon.dungeon);
if (i) {
var o = i.getComponent(y.default), a = i.getComponent(m.default);
o && o.data.noLoot < 1 && o.getLoot();
a && a.getLoot();
if (!t) {
this.sprite.node.width = 128;
this.sprite.node.height = 128;
this.sprite.node.opacity = 255;
this.sprite.node.scale = 1;
this.sprite.node.position = cc.v3(0, 128);
cc.tween(this.sprite.node).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("talenthand01");
}).delay(.2).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("talenthand02");
}).delay(.2).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("talenthand03");
}).delay(.2).call(function() {
e.sprite.spriteFrame = c.default.spriteFrameRes("talenthand04");
}).delay(.2).call(function() {
e.sprite.spriteFrame = null;
}).start();
}
}
};
e.prototype.showSmoke = function(t) {
d.default.play(d.default.MELEE_PARRY);
new r.default().magicDamage = 3 + c.default.playerData.OilGoldData.level;
var e = 1;
this.player.IsVariation && (e += 1);
this.shoot(t, 0, 0, "bullet041", this.smokePrefab, new v.default().init(7, .1, 0, e, f.default.OVERHEAD, !1, !1, !1, !1, !1, new r.default(), new s.default(), [ g.default.WINE_CLOUD ]));
};
e.prototype.showFireBall = function(t) {
d.default.play(d.default.SKILL_FIREBALL);
var e = new r.default();
e.magicDamage = 3 + c.default.playerData.OilGoldData.level;
e.isMelee = !0;
var i = 4;
this.player.IsVariation && (i += 1);
t.fireAoe(this.fireball, new v.default().init(0, .1, 0, i, f.default.OVERHEAD, !1, !0, !0, !1, !0, e, new s.default(), [ g.default.BURNING ]));
};
e.prototype.showIceThron = function(t) {
this.scheduleOnce(function() {
d.default.play(d.default.SKILL_ICETHRON);
}, 1);
var e = new r.default();
e.magicDamage = 3 + c.default.playerData.OilGoldData.level;
e.isMelee = !0;
var i = 100, o = 60, a = 3;
if (this.player.IsVariation) {
a += 1;
i = 150;
o = 90;
}
for (var n = [ 0, 45, 90, 135, 180, 225, 270, 315 ], l = [ cc.v3(0, i), cc.v3(-o, o), cc.v3(-i, 0), cc.v3(-o, -o), cc.v3(0, -i), cc.v3(o, -o), cc.v3(i, 0), cc.v3(o, o) ], u = (cc.v3(0, -i), 
cc.v3(-o, -o), cc.v3(-i, 0), cc.v3(-o, o), cc.v3(0, i), cc.v3(o, o), cc.v3(i, 0), 
cc.v3(o, -o), [ n ]), p = 0; p < u[0].length; p++) t.fireAoe(this.icethron, new v.default().init(0, 2, 0, a, f.default.OVERHEAD, !1, !0, !0, !1, !0, e, new s.default(), [ g.default.FROZEN ]), cc.v3(l[p]), n[p], null, !0);
};
e.prototype.changePerformance = function() {};
e.prototype.takeDamage = function() {
return !1;
};
e.prototype.addLighteningFall = function(t, e) {
l.EventHelper.emit(l.EventHelper.DUNGEON_ADD_LIGHTENINGFALL, {
pos: _.default.getNearestEnemyPosition(this.player.node.position, !1, this.player.weaponRight.meleeWeapon.dungeon, !0),
showArea: t,
damage: e
});
};
e.prototype.addBroom = function(t) {
var e = this;
d.default.play(d.default.MELEE_PARRY);
var i = this.player.data.getFinalAttackPoint();
i.isMelee = !0;
var o = 1.5;
this.player.IsVariation && (o += 1);
var a = t.fireAoe(this.broomPrefab, new v.default().init(0, .5, .2, o, f.default.OVERHEAD, !1, !0, !0, !0, !0, i, new s.default(), [ g.default.FROZEN ]), cc.v3(0, 32 * this.player.node.scaleY));
this.schedule(function() {
a && a.entity && a.isValid && (a.entity.Transform.position = e.player.node.position.clone());
}, .02, 100);
};
e.prototype.cooking = function(t) {
d.default.play(d.default.MELEE_PARRY);
var e = this.player.data.getFinalAttackPoint();
e.isMelee = !0;
var i = 1;
this.player.IsVariation && (i += 1);
t.fireAoe(this.cookingPrefab, new v.default().init(0, 2, 0, i, f.default.OVERHEAD, !1, !1, !1, !1, !1, e, new s.default(), []), cc.v3(0, 32), 0, function(t) {
var e = t.node.getComponent(y.default);
e && e.dungeon.addItem(e.node.position.clone(), "foodmonster" + e.data.resName.replace("monster", ""));
var i = t.node.getComponent(m.default);
i && i.dungeon.addItem(i.node.position.clone(), "foodboss" + i.data.resName.replace("iconboss", ""));
});
};
e.prototype.addSwordLight = function(t) {
var e = this;
d.default.play(d.default.SKILL_MAGICBALL);
d.default.play(d.default.SWORD_SHOW);
var i = new r.default();
i.isMelee = !0;
var o = 5;
i.physicalDamage = 2 + c.default.playerData.OilGoldData.level;
if (this.player.weaponRight.meleeWeapon.IsSword) {
i = this.player.data.getFinalAttackPoint();
o = 6;
}
this.player.IsVariation && (o += 1);
var a = t.fireAoe(this.swordLightPrefab, new v.default().init(0, .35, 0, o, f.default.OVERHEAD, !1, !0, !0, !1, !0, i, new s.default(), [ g.default.FROZEN ])), n = cc.color(255, 255, 255).fromHEX(this.player.inventoryManager.equips[D.default.WEAPON].lightcolor);
a.node.getChildByName("sprite").color = n;
this.scheduleOnce(function() {
e.talentSkill.IsExcuting = !1;
}, 1);
};
e.prototype.addDaggerLight = function(t, e) {
var i = this;
if (this.player.weaponRight.meleeWeapon.IsDagger) {
e || this.scheduleOnce(function() {
i.player.addStatus(g.default.TALENT_INVISIBLE, new s.default());
}, 2.4);
d.default.play(d.default.SKILL_MAGICBALL);
d.default.play(d.default.SWORD_SHOW);
var o = 2, a = this.player.data.getFinalAttackPoint();
a.isMelee = !0;
a.physicalDamage = a.physicalDamage / 2;
this.player.IsVariation && (o += 1);
for (var n = t.fireAoe(this.daggerLightPrefab, new v.default().init(0, .24, 0, o, f.default.OVERHEAD, !1, !0, !0, !1, !1, a, new s.default(), [ g.default.FROZEN ]), cc.Vec3.ZERO), r = cc.color(255, 255, 255).fromHEX(this.player.inventoryManager.equips[D.default.WEAPON].lightcolor), l = 0, c = n.node.getComponentsInChildren(cc.Sprite); l < c.length; l++) {
var u = c[l];
u.node.color = e ? cc.Color.BLACK : r;
u.node.opacity = 200;
}
this.player.vanish(2.4);
e && e.vanish(2.4);
this.scheduleOnce(function() {
i.talentSkill.IsExcuting = !1;
}, 3);
} else e || this.player.addStatus(g.default.TALENT_INVISIBLE, new s.default());
};
e.prototype.initFireGhosts = function() {
for (var t = this.fireGhostNum, e = 0; e < 5 - t; e++) {
var i = null;
this.ghostPool.size() > 0 && (i = this.ghostPool.get());
i && !i.active || (i = cc.instantiate(this.fireGhost));
this.fireGhostNum++;
i.active = !0;
var o = i.getComponent(p.default);
o.initCollider();
this.player.node.parent.addChild(o.node);
o.init(this.player, 72 * e);
}
};
e.prototype.addDashGhost = function(t) {
var e = t.fireAoe(this.aoe, new v.default().init(.4, 2, 0, 1, f.default.ACTOR, !1, !1, !1, !1, !1, new r.default(.2), new s.default(), []), t.node.convertToNodeSpaceAR(this.player.node.convertToWorldSpaceAR(cc.v3(0, this.player.entity.Transform.z))), 0, null, !0);
t.updateCustomAoe(e, [ this.player.sprite.spriteFrame ], !1, !0, 1, cc.color(189, 183, 107), 200, !0, !0, 48, 32);
};
n([ C(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ C(cc.Prefab) ], e.prototype, "aoe", void 0);
n([ C(cc.Prefab) ], e.prototype, "fireball", void 0);
n([ C(cc.Prefab) ], e.prototype, "icethron", void 0);
n([ C(cc.Prefab) ], e.prototype, "fireGhost", void 0);
n([ C(cc.Prefab) ], e.prototype, "healingLight", void 0);
n([ C(cc.Prefab) ], e.prototype, "rageLight", void 0);
n([ C(cc.Prefab) ], e.prototype, "broomPrefab", void 0);
n([ C(cc.Prefab) ], e.prototype, "cookingPrefab", void 0);
n([ C(cc.Prefab) ], e.prototype, "swordLightPrefab", void 0);
n([ C(cc.Prefab) ], e.prototype, "smokePrefab", void 0);
n([ C(cc.Prefab) ], e.prototype, "skyhandPrefab", void 0);
n([ C(cc.Prefab) ], e.prototype, "daggerLightPrefab", void 0);
return n([ R ], e);
}(h.default);
i.default = P;
cc._RF.pop();
}, {
"../boss/Boss": "Boss",
"../data/AreaOfEffectData": "AreaOfEffectData",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../data/NonPlayerData": "NonPlayerData",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../logic/NonPlayer": "NonPlayer",
"../logic/Shooter": "Shooter",
"../manager/InventoryManager": "InventoryManager",
"../manager/NonPlayerManager": "NonPlayerManager",
"../manager/StatusManager": "StatusManager",
"../ui/CoolDownView": "CoolDownView",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/Utils": "Utils",
"./FireGhost": "FireGhost",
"./Talent": "Talent"
} ],
ProfileData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6ba48LTPitPa5dUl/wXJcJ0", "ProfileData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("./PlayerData"), a = t("./SavePointData"), n = t("./GroundOilGoldData");
i.default = function() {
this.rectDungeons = {};
this.chapterIndex = 0;
this.chapterMaxIndex = 0;
this.playerData = new o.default();
this.playerEquips = {};
this.playerEquipsReality = {};
this.playerItemList = new Array();
this.playerItemListReality = new Array();
this.playerInventoryList = new Array();
this.playerInventoryListReality = new Array();
this.nonPlayerList = new Array();
this.level = 0;
this.totalTime = 0;
this.realTime = 1526273746e3;
this.savePointData = new a.default();
this.groundOilGoldData = new n.default();
this.oilGolds = 0;
this.killPlayerCounts = {};
this.dialogueCounts = {};
this.coins = 0;
this.coinCounts = 0;
this.lastSaveTime = 0;
};
cc._RF.pop();
}, {
"./GroundOilGoldData": "GroundOilGoldData",
"./PlayerData": "PlayerData",
"./SavePointData": "SavePointData"
} ],
ProfileGlobalData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f5818CVXhlGDbQodUkovQ/f", "ProfileGlobalData");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function() {
this.gameTime = 0;
this.realCoin = 0;
};
cc._RF.pop();
}, {} ],
ProfileManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "5915dTUdVpDi5LG7x2qxIEk", "ProfileManager");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = t("../data/ProfileData"), n = t("../rect/RectDungeon"), r = t("../utils/DataUtils"), s = t("../utils/LocalStorage"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function() {
function t() {
this.data = new a.default();
this.hasSaveData = !1;
}
e = t;
t.prototype.loadData = function(t) {
this.loadProfile(t);
};
t.getSaveData = function(t) {
var e = "" + t, i = s.default.getValue(s.default.SAVE_DUNGEON + e);
return i && i.length > 0 ? JSON.parse(i) : null;
};
t.prototype.saveData = function(t) {
s.default.putValue(s.default.SAVE_DUNGEON + t, this.data);
this.hasSaveData = !0;
console.log("save data");
};
t.clearData = function(t) {
s.default.putValue(s.default.SAVE_DUNGEON + t, null);
console.log("clear data" + s.default.SAVE_DUNGEON + t);
};
t.prototype.loadProfile = function(t) {
var i = e.getSaveData(t);
if (!i) {
this.hasSaveData = !1;
return !1;
}
if (!(i.savePointData && i.playerData && i.playerEquips && i.playerItemList && i.rectDungeons)) {
this.hasSaveData = !1;
return !1;
}
this.data = new a.default();
r.default.baseCopy(this.data, i);
this.hasSaveData = !0;
this.data.playerData.valueCopy(i.playerData);
this.data.savePointData.valueCopy(i.savePointData);
this.data.groundOilGoldData.valueCopy(i.groundOilGoldData);
for (var o in i.playerEquips) this.data.playerEquips[o] = i.playerEquips[o];
for (var o in i.playerEquipsReality) this.data.playerEquipsReality[o] = i.playerEquipsReality[o];
if (i.playerItemList) for (var s = 0; s < i.playerItemList.length; s++) this.data.playerItemList[s] = i.playerItemList[s];
if (i.playerItemListReality) for (s = 0; s < i.playerItemListReality.length; s++) this.data.playerItemListReality[s] = i.playerItemListReality[s];
if (i.playerInventoryList) for (s = 0; s < i.playerInventoryList.length; s++) this.data.playerInventoryList[s] = i.playerInventoryList[s];
if (i.playerInventoryListReality) for (s = 0; s < i.playerInventoryListReality.length; s++) this.data.playerInventoryListReality[s] = i.playerInventoryListReality[s];
if (i.nonPlayerList) for (s = 0; s < i.nonPlayerList.length; s++) this.data.nonPlayerList[s] = i.nonPlayerList[s];
for (var o in i.rectDungeons) {
var l = new n.default();
l.buildMapFromSave(i.rectDungeons[o]);
this.data.rectDungeons[o] = l;
}
i.killPlayerCounts && (this.data.killPlayerCounts = i.killPlayerCounts);
console.log("data", this);
return !0;
};
var e;
return e = o([ c ], t);
}());
i.default = u;
cc._RF.pop();
}, {
"../data/ProfileData": "ProfileData",
"../rect/RectDungeon": "RectDungeon",
"../utils/DataUtils": "DataUtils",
"../utils/LocalStorage": "LocalStorage"
} ],
Quadtree: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "fde53Hh/HdFoYBBgbxP4uef", "Quadtree");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function t(t, e, i, o) {
this.max_objects = e || 10;
this.max_levels = i || 4;
this.level = o || 0;
this.bounds = t;
this.objects = [];
this.nodes = [];
}
t.prototype.split = function() {
var e = this.level + 1, i = this.bounds.width / 2, o = this.bounds.height / 2, a = this.bounds.x, n = this.bounds.y;
this.nodes[0] = new t({
x: a + i,
y: n,
width: i,
height: o
}, this.max_objects, this.max_levels, e);
this.nodes[1] = new t({
x: a,
y: n,
width: i,
height: o
}, this.max_objects, this.max_levels, e);
this.nodes[2] = new t({
x: a,
y: n + o,
width: i,
height: o
}, this.max_objects, this.max_levels, e);
this.nodes[3] = new t({
x: a + i,
y: n + o,
width: i,
height: o
}, this.max_objects, this.max_levels, e);
};
t.prototype.getIndex = function(t) {
var e = t.Aabb, i = [], o = this.bounds.x + this.bounds.width / 2, a = this.bounds.y + this.bounds.height / 2, n = e.y < a, r = e.x < o, s = e.x + e.width > o, l = e.y + e.height > a;
n && s && i.push(0);
r && n && i.push(1);
r && l && i.push(2);
s && l && i.push(3);
return i;
};
t.prototype.insert = function(t) {
var e, i = 0;
if (this.nodes.length) {
e = this.getIndex(t);
for (i = 0; i < e.length; i++) this.nodes[e[i]].insert(t);
} else {
this.objects.push(t);
if (this.objects.length > this.max_objects && this.level < this.max_levels) {
this.nodes.length || this.split();
for (i = 0; i < this.objects.length; i++) {
e = this.getIndex(this.objects[i]);
for (var o = 0; o < e.length; o++) this.nodes[e[o]].insert(this.objects[i]);
}
this.objects = [];
}
}
};
t.prototype.retrieve = function(t) {
var e = this.getIndex(t), i = this.objects;
if (this.nodes.length) for (var o = 0; o < e.length; o++) i = i.concat(this.nodes[e[o]].retrieve(t));
return i = i.filter(function(t, e) {
return i.indexOf(t) >= e;
});
};
t.prototype.clear = function() {
this.objects = [];
for (var t = 0; t < this.nodes.length; t++) this.nodes.length && this.nodes[t].clear();
this.nodes = [];
};
return t;
}();
i.default = o;
cc._RF.pop();
}, {} ],
QuestAlertDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "5497fCeiwlIPLn+o7+Z//aU", "QuestAlertDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.msg = null;
e.ok = null;
e.cancel = null;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.showAnim = function() {
this.node.active = !0;
};
e.prototype.hideAnim = function() {
this.node.active = !1;
};
e.prototype.show = function(t, e, i, o) {
this.msg.string = t;
this.ok.getComponentInChildren(cc.Label).string = e;
this.cancel.node.active = i.length > 0;
this.cancel.getComponentInChildren(cc.Label).string = i;
this.callback = o;
this.showAnim();
};
e.prototype.hide = function() {
this.hideAnim();
};
e.prototype.clickOk = function() {
this.callback && this.callback(!0);
this.hide();
};
e.prototype.clickCancel = function() {
this.callback && this.callback(!1);
this.hide();
};
n([ l(cc.Label) ], e.prototype, "msg", void 0);
n([ l(cc.Button) ], e.prototype, "ok", void 0);
n([ l(cc.Button) ], e.prototype, "cancel", void 0);
return n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
QuestCard: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "62d27oyh/dJ5axdCcH/GSG1", "QuestCard");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./data/QuestData"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.layout = null;
e.title = null;
e.content = null;
e.graphics = null;
e.select = null;
e.data = new r.default();
e.startPos = cc.v3(0, 0);
e.touchPos = cc.v2(0, 0);
e.cardList = [];
e.isSelected = !1;
e.timeDelay = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
t.touchPos = e.getLocation();
t.startPos = t.node.position.clone();
});
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var i = e.getLocation().sub(t.touchPos);
t.node.setPosition(t.startPos.x + i.x / t.node.parent.scale, t.startPos.y + i.y / t.node.parent.scale);
});
this.node.on(cc.Node.EventType.TOUCH_END, function() {
t.startPos.sub(t.node.position).mag() < 5 ? t.editManager.selectCard(t) : t.editManager.updateTreeNodePos(t.data.indexId, t.data.parentId, t.node.position.clone());
});
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {});
this.select.active = this.isSelected;
};
e.prototype.addSuccessChildCard = function() {
var t = this;
this.editManager.selectNone(function() {
t.addChildCard(!0);
});
};
e.prototype.addFailChildCard = function() {
var t = this;
this.editManager.selectNone(function() {
t.addChildCard(!1);
});
};
e.prototype.addChildCard = function(t) {
var e = new r.default();
this.editManager.addTreeNode(this.data.indexId, this.data.parentId, t, e);
};
e.prototype.removeSelfCard = function() {
var t = this;
this.editManager.selectNone(function() {
t.data.successList.length > 0 && t.editManager.showLog("has successList!");
t.data.failList.length > 0 && t.editManager.showLog("has failList!");
t.editManager.removeTreeNode(t.data.indexId, t.data.parentId);
});
};
e.prototype.updateData = function(t) {
this.data.valueCopy(t);
this.title.string = this.data.name;
this.content.string = this.data.content;
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > .1) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLine = function() {
this.graphics.clear();
this.graphics.moveTo(i.SIZE / 2, 0);
this.graphics.lineWidth = 5;
for (var t = 0, e = this.cardList; t < e.length; t++) {
var o = e[t];
this.graphics.strokeColor = o.data.isSuccessType ? cc.Color.GREEN : cc.Color.RED;
var a = o.node.convertToWorldSpaceAR(cc.v3(0, 0));
a = this.node.convertToNodeSpaceAR(a);
this.graphics.moveTo(i.SIZE / 2, 0);
this.graphics.lineTo(a.x, a.y);
this.graphics.stroke();
}
};
e.prototype.update = function(t) {
if (this.isTimeDelay(t)) {
this.updateLine();
this.select.active = this.isSelected;
}
};
var i;
e.SIZE = 256;
n([ c(cc.Node) ], e.prototype, "layout", void 0);
n([ c(cc.Label) ], e.prototype, "title", void 0);
n([ c(cc.Label) ], e.prototype, "content", void 0);
n([ c(cc.Graphics) ], e.prototype, "graphics", void 0);
n([ c(cc.Node) ], e.prototype, "select", void 0);
return i = n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"./data/QuestData": "QuestData"
} ],
QuestConditionData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e8b36GhF3xKNq3TT1OmrnEA", "QuestConditionData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../../utils/DataUtils"), a = function() {
function t() {
this.conditionList = "";
this.roomList = "";
this.startTime = 0;
this.endTime = 0;
this.isExpand = !1;
}
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t);
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.ITEM_PICK = "item_pick";
t.ITEM_USE = "item_use";
t.ITEM_DROP = "item_drop";
t.EQUIP_PICK = "equip_pick";
t.EQUIP_ON = "equip_wear";
t.EQUIP_OFF = "equip_wear";
t.EQUIP_DROP = "equip_drop";
t.NPC_KILL = "npc_kill";
t.NPC_ALIVE = "npc_alive";
t.MONSTER_KILL = "monster_kill";
t.MONSTER_ALIVE = "monster_alive";
t.BOSS_KILL = "boss_kill";
t.BOSS_ALIVE = "boss_alive";
t.BUILDING_TRIGGER = "building_trigger";
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../../utils/DataUtils": "DataUtils"
} ],
QuestConditionItem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9206763ZDlLVqmbeqRXMivr", "QuestConditionItem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./data/QuestConditionData"), s = t("./QuestFileEditor"), l = t("./QuestSpriteItem"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.button = null;
e.layout = null;
e.editbutton = null;
e.textLabel = null;
e.spriteLayout = null;
e.spriteItem = null;
e.inputItem = null;
e.inputDateItem = null;
e.spriteList = [];
e.isTextMode = !1;
e.isExpand = !0;
e.data = new r.default();
return e;
}
e.prototype.buttonClick = function() {
this.isExpand = !this.isExpand;
this.collapseExpand();
};
e.prototype.init = function(t) {
this.label.string = t;
this.spriteLayout.removeAllChildren();
this.spriteList = [];
};
e.prototype.updateInputData = function() {
this.inputRoom.node.active && (this.data.roomList = this.inputRoom.Value);
this.inputStartTime.node.active && (this.data.startTime = this.inputStartTime.Value);
this.inputEndTime.node.active && (this.data.endTime = this.inputEndTime.Value);
};
e.prototype.updateData = function(t, e, i, o) {
this.data.valueCopy(t);
this.spriteLayout || (this.spriteLayout = this.node.getChildByName("spriteLayout"));
this.spriteLayout.removeAllChildren();
this.spriteList = [];
var a = t.conditionList.split(";");
if (a) for (var n = 0, r = a; n < r.length; n++) {
var s = r[n];
s && s.length > 0 && this.getSprite(s);
}
this.data.startTime ? new Date(this.data.startTime) : new Date(), this.data.startTime ? new Date(this.data.endTime) : new Date();
this.inputRoom.Value = this.data.roomList;
this.inputStartTime.Value = this.data.startTime;
this.inputEndTime.Value = this.data.endTime;
this.inputRoom.node.active = e;
this.inputStartTime.node.active = i;
this.inputEndTime.node.active = o;
};
e.prototype.onLoad = function() {
this.collapseExpand();
this.inputRoom = s.default.addInputItem(this.layout, this.inputItem, "坐标：", "章节，层数，房间坐标，进出，次数", 200, 80);
this.inputStartTime = s.default.addDateInputItem(this.layout, this.inputDateItem, "开始：");
this.inputEndTime = s.default.addDateInputItem(this.layout, this.inputDateItem, "结束：");
};
e.prototype.collapseExpand = function() {
this.layout.active = this.isExpand;
this.button.node.angle = this.isExpand ? 0 : -180;
};
e.prototype.start = function() {};
e.prototype.getSprite = function(t) {
var e = this, i = cc.instantiate(this.spriteItem).getComponent(l.default);
i.init(0, this.spriteList.length, t, !0);
this.spriteLayout.addChild(i.node);
i.clickCallback = function(t) {
if (e.currentSprite == t) e.pick(e.currentSprite.text); else {
e.currentSprite && e.currentSprite.select && (e.currentSprite.select.active = !1);
e.currentSprite = t;
e.currentSprite.select.active = !0;
}
};
this.spriteList.push(i);
return i;
};
e.prototype.addSprite = function() {
var t = this;
this.editor.editManager.showSpritePickDialog("", function(e, i) {
if (e) {
t.currentSprite && t.currentSprite.select && (t.currentSprite.select.active = !1);
t.currentSprite = t.getSprite(i);
t.currentSprite.select.active = !0;
t.isExpand = !0;
t.collapseExpand();
t.data.conditionList = t.getFinalText();
}
});
};
e.prototype.removeSprite = function() {
if (this.currentSprite) {
this.currentSprite.node.destroy();
var t = this.currentSprite.index;
this.spriteList.splice(t, 1);
this.isExpand = !0;
this.collapseExpand();
this.data.conditionList = this.getFinalText();
}
};
e.prototype.switchInfoMode = function() {
this.isTextMode = !this.isTextMode;
this.textLabel.node.active = this.isTextMode;
this.layout.active = !this.isTextMode;
this.textLabel.string = this.getFinalText();
this.isExpand = !0;
this.collapseExpand();
};
e.prototype.getFinalText = function() {
for (var t = "", e = 0; e < this.spriteList.length; e++) {
var i = this.spriteList[e];
if (i.text.length > 0) {
e > 0 && (t += ";");
t += i.text;
}
}
return t;
};
e.prototype.pick = function(t) {
var e = this;
this.editor.editManager.showSpritePickDialog(t, function(t, i) {
if (t) {
e.currentSprite.text = i;
e.currentSprite.updateSpriteFrame();
}
});
};
n([ p(cc.Label) ], e.prototype, "label", void 0);
n([ p(cc.Button) ], e.prototype, "button", void 0);
n([ p(cc.Node) ], e.prototype, "layout", void 0);
n([ p(cc.Button) ], e.prototype, "editbutton", void 0);
n([ p(cc.Label) ], e.prototype, "textLabel", void 0);
n([ p(cc.Node) ], e.prototype, "spriteLayout", void 0);
n([ p(cc.Prefab) ], e.prototype, "spriteItem", void 0);
n([ p(cc.Prefab) ], e.prototype, "inputItem", void 0);
n([ p(cc.Prefab) ], e.prototype, "inputDateItem", void 0);
return n([ u ], e);
}(cc.Component);
i.default = h;
cc._RF.pop();
}, {
"./QuestFileEditor": "QuestFileEditor",
"./QuestSpriteItem": "QuestSpriteItem",
"./data/QuestConditionData": "QuestConditionData"
} ],
QuestData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6ef83qpJt9CLor/n4TdMOlm", "QuestData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../../utils/DataUtils"), a = t("./QuestConditionData"), n = t("./QuestRewardData"), r = function() {
function t() {
this.triggerCondition = new a.default();
this.successCondition = new a.default();
this.failCondition = new a.default();
this.status = t.STATUS_INIT;
this.id = "";
this.name = "";
this.content = "";
this.mapThingsList = "";
this.startTime = 0;
this.mapThingsCreated = !1;
this.reward = new n.default();
this.indexId = "r0";
this.parentId = "e0";
this.successList = [];
this.failList = [];
this.editPos = cc.v3(0, 0);
}
Object.defineProperty(t.prototype, "isSuccessType", {
get: function() {
return -1 != this.indexId.indexOf("s");
},
enumerable: !1,
configurable: !0
});
t.prototype.valueCopy = function(e) {
if (!e) return this;
o.default.baseCopy(this, e);
this.triggerCondition.valueCopy(e.triggerCondition);
this.successCondition.valueCopy(e.successCondition);
this.failCondition.valueCopy(e.failCondition);
this.reward.valueCopy(e.reward);
if (e.successList) {
this.successList = [];
for (var i = 0, a = e.successList; i < a.length; i++) {
var n = a[i];
this.successList.push(new t().valueCopy(n));
}
}
if (e.failList) {
this.failList = [];
for (var r = 0, s = e.failList; r < s.length; r++) {
n = s[r];
this.failList.push(new t().valueCopy(n));
}
}
this.editPos = e.editPos ? cc.v3(e.editPos.x, e.editPos.y) : cc.v3(0, 0);
return this;
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.STATUS_INIT = 0;
t.STATUS_RUNNING = 1;
t.STATUS_SUCCESS = 2;
t.STATUS_FAILED = 3;
t.STATUS_DISCARD = 4;
t.TYPE_ROOT = 0;
t.TYPE_SUCCESS = 1;
t.TYPE_FAIL = 2;
return t;
}();
i.default = r;
cc._RF.pop();
}, {
"../../utils/DataUtils": "DataUtils",
"./QuestConditionData": "QuestConditionData",
"./QuestRewardData": "QuestRewardData"
} ],
QuestDateInputItem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "18992VGeLNGQ69ER8nVaCeu", "QuestDateInputItem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.editYear = null;
e.editMonth = null;
e.editDay = null;
e.editHour = null;
e.editMinute = null;
e.editSecond = null;
return e;
}
e.prototype.onLoad = function() {};
Object.defineProperty(e.prototype, "Value", {
get: function() {
var t = this.getYear(), e = this.getMonth(), i = this.getDay(), o = this.getNumFromEdit(this.editHour, 0, 23), a = this.getNumFromEdit(this.editMinute, 0, 59), n = this.getNumFromEdit(this.editSecond, 0, 59);
return new Date(t + "-" + e + "-" + i + " " + o + ":" + a + ":" + n).getTime();
},
set: function(t) {
var e = new Date(t);
this.editYear.string = "" + e.getFullYear();
this.editMonth.string = "" + (e.getMonth() + 1);
this.editDay.string = "" + e.getDate();
this.editHour.string = "" + e.getHours();
this.editMinute.string = "" + e.getMinutes();
this.editSecond.string = "" + e.getSeconds();
},
enumerable: !1,
configurable: !0
});
e.prototype.getNumFromEdit = function(t, e, i) {
var o = parseInt(t.string);
(o = isNaN(o) ? 0 : o) > i && (o = i);
o < e && (o = e);
return o;
};
e.prototype.getYear = function() {
return this.getNumFromEdit(this.editYear, 1970, 9999);
};
e.prototype.getMonth = function() {
return this.getNumFromEdit(this.editMonth, 1, 12);
};
e.prototype.getDay = function() {
var t = new Date(this.getYear(), this.getMonth(), 0);
return this.getNumFromEdit(this.editDay, 1, t.getDate());
};
e.prototype.start = function() {};
e.prototype.onTextChanged = function(t, e) {
if (e == this.editYear) {
e.string = "" + this.getYear();
this.editDay.string = "" + this.getDay();
} else if (e == this.editMonth) {
e.string = "" + this.getMonth();
this.editDay.string = "" + this.getDay();
} else e == this.editDay ? e.string = "" + this.getDay() : e == this.editHour ? e.string = "" + this.getNumFromEdit(this.editHour, 0, 23) : e == this.editMinute ? e.string = "" + this.getNumFromEdit(this.editMinute, 0, 59) : e == this.editSecond && (e.string = "" + this.getNumFromEdit(this.editSecond, 0, 59));
};
n([ l(cc.Label) ], e.prototype, "label", void 0);
n([ l(cc.EditBox) ], e.prototype, "editYear", void 0);
n([ l(cc.EditBox) ], e.prototype, "editMonth", void 0);
n([ l(cc.EditBox) ], e.prototype, "editDay", void 0);
n([ l(cc.EditBox) ], e.prototype, "editHour", void 0);
n([ l(cc.EditBox) ], e.prototype, "editMinute", void 0);
n([ l(cc.EditBox) ], e.prototype, "editSecond", void 0);
return n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
QuestFileEditManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f94ebtnVVRAuJM/+7s9a6V3", "QuestFileEditManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("../manager/LoadingManager"), l = t("./data/QuestTreeData"), c = t("./QuestAlertDialog"), u = t("./QuestCard"), p = t("./QuestFileEditor"), h = t("./QuestSpriteInfoDialog"), d = t("./QuestSpritePickDialog"), f = cc._decorator, g = f.ccclass, y = f.property, m = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.editBox = null;
e.layout = null;
e.zoomUp = null;
e.zoomDown = null;
e.questCard = null;
e.revokeButton = null;
e.revokeCancelButton = null;
e.editor = null;
e.alertDialog = null;
e.spritePickDialog = null;
e.questSpriteInfoDialog = null;
e.bossSpriteFrames = null;
e.isBossLoaded = !1;
e.loadingManager = new s.default();
e.questTree = new l.default();
e.revokeTreeList = [];
e.revokeCancelTreeList = [];
e.startPos = cc.v3(0, 0);
e.touchPos = cc.v2(0, 0);
e.cardList = [];
e.zoomOffset = 0;
e.isCtrlPressing = !1;
e.isShiftPressing = !1;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.loadingManager.init();
this.layout.on(cc.Node.EventType.TOUCH_START, function(e) {
t.touchPos = e.getLocation();
t.startPos = t.layout.position.clone();
});
this.layout.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var i = e.getLocation().sub(t.touchPos).mul(.5);
t.layout.setPosition(t.startPos.x + i.x, t.startPos.y + i.y);
});
this.layout.on(cc.Node.EventType.TOUCH_END, function() {
t.startPos.sub(t.layout.position).mag() < 5 && t.selectNone();
});
this.layout.on(cc.Node.EventType.TOUCH_CANCEL, function() {});
this.zoomUp.on(cc.Node.EventType.TOUCH_START, function() {
t.zoomOffset = .025;
});
this.zoomUp.on(cc.Node.EventType.TOUCH_END, function() {
t.zoomOffset = 0;
});
this.zoomUp.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.zoomOffset = 0;
});
this.zoomDown.on(cc.Node.EventType.TOUCH_START, function() {
t.zoomOffset = -.025;
});
this.zoomDown.on(cc.Node.EventType.TOUCH_END, function() {
t.zoomOffset = 0;
});
this.zoomDown.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.zoomOffset = 0;
});
this.layout.on(cc.Node.EventType.MOUSE_WHEEL, function(e) {
t.zoom(e.getScrollY() > 0 ? .05 : -.05);
});
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);
cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);
r.EventHelper.on(r.EventHelper.EDITOR_SHOW_SPRITE_INFO, function(e) {
e.isShow ? t.questSpriteInfoDialog.show(e.text, e.wpos) : t.questSpriteInfoDialog.hide();
});
this.editor.editManager = this;
this.editor.node.scaleX = 0;
this.alertDialog.node.active = !1;
this.spritePickDialog.node.active = !1;
this.questSpriteInfoDialog.node.opacity = 0;
};
e.prototype.start = function() {
this.loadingManager.loadEquipment();
this.loadingManager.loadAutoSpriteFrames();
this.loadingManager.loadSpriteAtlas(s.default.KEY_TEXTURES, "singleColor");
this.loadingManager.loadSpriteAtlas(s.default.KEY_ITEM, "ammo");
this.loadingManager.loadSpriteAtlas(s.default.KEY_EQUIPMENT, "emptyequipment");
this.loadingManager.loadSpriteAtlas(s.default.KEY_BOSS, "iconboss000");
this.loadingManager.loadBosses();
this.loadingManager.loadMonsters();
this.loadingManager.loadItems();
this.loadingManager.loadNonplayer();
this.loadingManager.loadSuits();
this.loadingManager.loadFurnitures();
};
e.prototype.onKeyDown = function(t) {
switch (t.keyCode) {
case cc.macro.KEY.ctrl:
this.isCtrlPressing = !0;
break;

case cc.macro.KEY.shift:
this.isShiftPressing = !0;
break;

case cc.macro.KEY.z:
}
};
e.prototype.onKeyUp = function(t) {
switch (t.keyCode) {
case cc.macro.KEY.ctrl:
this.isCtrlPressing = !1;
break;

case cc.macro.KEY.shift:
this.isShiftPressing = !1;
break;

case cc.macro.KEY.z:
this.isCtrlPressing && (this.isShiftPressing ? this.revokeCancel() : this.revoke());
break;

case cc.macro.KEY.escape:
this.selectNone();
}
};
e.prototype.update = function() {
if (this.loadingManager.isBossLoaded && this.loadingManager.isEquipmentLoaded && this.loadingManager.isAllSpriteFramesLoaded() && this.loadingManager.isMonsterLoaded && this.loadingManager.isNonplayerLoaded && this.loadingManager.isItemsLoaded && this.loadingManager.isFurnituresLoaded && this.loadingManager.isSuitsLoaded) {
this.isBossLoaded = !0;
this.loadingManager.reset();
}
0 != this.zoomOffset && this.zoom(this.zoomOffset);
this.revokeButton.active = this.revokeTreeList.length > 0;
this.revokeCancelButton.active = this.revokeCancelTreeList.length > 0;
};
e.prototype.zoom = function(t) {
this.layout.scale += t;
this.layout.scale < 0 && (this.layout.scale = .1);
};
e.prototype.addQuestNode = function(t, e) {
var i = cc.instantiate(this.questCard), o = i.getComponent(u.default);
o.editManager = this;
o.updateData(e);
i.parent = this.layout;
this.cardList.push(o);
var a = cc.v3(-300, -200);
if (this.currentSelectData && this.currentSelectData.parentId + "," + this.currentSelectData.indexId == e.parentId + "," + e.indexId) {
o.isSelected = !0;
o.select.active = !0;
}
if (t) {
t.cardList.push(o);
var n = 0;
n = e.isSuccessType ? .75 * u.default.SIZE : .75 * -u.default.SIZE;
n += this.getRandomNum(-50, 50);
a = t.node.position.add(cc.v3(1.5 * u.default.SIZE, n));
}
cc.Vec3.ZERO.equals(e.editPos) || (a = e.editPos.clone());
o.node.setPosition(a.clone());
this.questTree.updateTreeNodePos(e.indexId, e.parentId, a);
for (var r = 0; r < e.successList.length; r++) {
var s = e.successList[r];
l.default.updateIndexId(s, e, !0, r);
this.addQuestNode(o, s);
}
for (r = 0; r < e.failList.length; r++) {
s = e.failList[r];
l.default.updateIndexId(s, e, !1, r);
this.addQuestNode(o, s);
}
};
e.prototype.getRandomNum = function(t, e) {
return t + Math.round(Math.random() * (e - t));
};
e.prototype.selectNone = function(t) {
var e = this;
if (this.editor.canHide()) {
for (var i = 0, o = this.cardList; i < o.length; i++) o[i].isSelected = !1;
this.currentSelectData = null;
this.editor.hide();
t && t();
} else this.alertDialog.show("数据发生变化，是否放弃更改", "是", "否", function(i) {
if (i) {
e.editor.hide();
for (var o = 0, a = e.cardList; o < a.length; o++) a[o].isSelected = !1;
e.currentSelectData = null;
t && t();
}
});
};
e.prototype.selectCard = function(t) {
var e = this;
t.isSelected || this.selectNone(function() {
for (var i = 0, o = e.cardList; i < o.length; i++) o[i].isSelected = !1;
e.currentSelectData = t.data;
t.isSelected = !0;
e.editor.show(e.getTreeNode(t.data.indexId, t.data.parentId));
});
};
e.prototype.updateRevokTreeList = function(t) {
this.revokeTreeList.push(this.questTree);
this.questTree = t;
this.updateTree();
};
e.prototype.updateTreeNodePos = function(t, e, i) {
var o = new l.default();
o.valueCopy(this.questTree);
o.updateTreeNodePos(t, e, i);
this.updateRevokTreeList(o);
};
e.prototype.updateTreeNodeData = function(t, e, i) {
var o = new l.default();
o.valueCopy(this.questTree);
o.updateTreeNodeData(t, e, i);
this.updateRevokTreeList(o);
};
e.prototype.addTreeNode = function(t, e, i, o) {
var a = new l.default();
a.valueCopy(this.questTree);
a.addTreeNode(t, e, i, o);
this.updateRevokTreeList(a);
};
e.prototype.removeTreeNode = function(t, e) {
var i = new l.default();
i.valueCopy(this.questTree);
i.removeTreeNode(t, e);
this.updateRevokTreeList(i);
};
e.prototype.getTreeNode = function(t, e) {
var i = e + "," + t;
return this.questTree.getTreeNode(i);
};
e.prototype.revoke = function() {
var t = this;
this.selectNone(function() {
if (t.revokeTreeList.length > 0) {
t.revokeCancelTreeList.push(t.questTree);
t.questTree = t.revokeTreeList.pop();
t.updateTree();
}
});
};
e.prototype.revokeCancel = function() {
var t = this;
this.selectNone(function() {
if (t.revokeCancelTreeList.length > 0) {
t.revokeTreeList.push(t.questTree);
t.questTree = t.revokeCancelTreeList.pop();
t.updateTree();
}
});
};
e.prototype.updateTree = function() {
this.layout.removeAllChildren();
this.cardList = [];
this.addQuestNode(null, this.questTree.root);
};
e.prototype.buttonUpload = function() {
var t = this;
this.selectNone(function() {
t.uploadForBrowser();
});
};
e.prototype.buttonSave = function() {
var t = this;
this.selectNone(function() {
t.questTree.name = t.questTree.name;
t.editBox.string.length < 1 ? t.showLog("need a name!") : t.saveForBrowser(JSON.stringify(t.questTree), t.editBox.string);
});
};
e.prototype.showLog = function(t) {
var e = this;
this.label.string = t;
this.unscheduleAllCallbacks();
this.scheduleOnce(function() {
e.label.string = "";
}, 10);
};
e.prototype.newQuestTree = function() {
var t = this;
this.selectNone(function() {
t.questTree = new l.default();
t.questTree.id = "quest000";
t.questTree.name = "测试树";
t.questTree.root.name = "序章";
t.questTree.root.content = "开始卷";
t.editBox.string = t.questTree.id;
t.label.string = t.questTree.name;
t.revokeTreeList = [];
t.revokeCancelTreeList = [];
t.updateTree();
});
};
e.prototype.showSpritePickDialog = function(t, e) {
this.spritePickDialog.show(t, e);
};
e.prototype.uploadForBrowser = function() {
var t = this;
if (cc.sys.isBrowser) {
var e = document.createElement("input");
e.type = "file";
e.onchange = function(e) {
var i = e.target.files;
if (0 != i.length) {
var o = new FileReader();
o.onload = function(e) {
var i = e.target.result;
cc.assetManager.loadRemote(i, function(e, i) {
if (e) cc.error(e); else {
t.questTree.valueCopy(JSON.parse(i._nativeAsset));
t.editBox.string = t.questTree.id;
t.label.string = t.questTree.name;
cc.log("加载任务列表完成");
t.revokeTreeList = [];
t.revokeCancelTreeList = [];
t.updateTree();
}
});
};
o.readAsDataURL(i[0]);
}
};
e.click();
}
};
e.prototype.saveForBrowser = function(t, e) {
if (cc.sys.isBrowser) {
var i = new Blob([ t ], {
type: "text"
}), o = document.createElement("a");
o.download = e;
o.innerHTML = "Download File";
if (null != window.webkitURL) o.href = window.webkitURL.createObjectURL(i); else {
o.href = window.URL.createObjectURL(i);
o.onclick = function() {
o && document.body.removeChild(o);
};
o.style.display = "none";
document.body.appendChild(o);
}
o.click();
}
};
n([ y(cc.Label) ], e.prototype, "label", void 0);
n([ y(cc.EditBox) ], e.prototype, "editBox", void 0);
n([ y(cc.Node) ], e.prototype, "layout", void 0);
n([ y(cc.Node) ], e.prototype, "zoomUp", void 0);
n([ y(cc.Node) ], e.prototype, "zoomDown", void 0);
n([ y(cc.Prefab) ], e.prototype, "questCard", void 0);
n([ y(cc.Node) ], e.prototype, "revokeButton", void 0);
n([ y(cc.Node) ], e.prototype, "revokeCancelButton", void 0);
n([ y(p.default) ], e.prototype, "editor", void 0);
n([ y(c.default) ], e.prototype, "alertDialog", void 0);
n([ y(d.default) ], e.prototype, "spritePickDialog", void 0);
n([ y(h.default) ], e.prototype, "questSpriteInfoDialog", void 0);
return n([ g ], e);
}(cc.Component);
i.default = m;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper",
"../manager/LoadingManager": "LoadingManager",
"./QuestAlertDialog": "QuestAlertDialog",
"./QuestCard": "QuestCard",
"./QuestFileEditor": "QuestFileEditor",
"./QuestSpriteInfoDialog": "QuestSpriteInfoDialog",
"./QuestSpritePickDialog": "QuestSpritePickDialog",
"./data/QuestTreeData": "QuestTreeData"
} ],
QuestFileEditor: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "32b83gpxrpIbJFbO1eqIW/a", "QuestFileEditor");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./QuestConditionItem"), s = t("./data/QuestData"), l = t("./QuestInputItem"), c = t("./data/QuestConditionData"), u = t("./QuestDateInputItem"), p = cc._decorator, h = p.ccclass, d = p.property, f = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.inputPrefab = null;
e.conditonPrefab = null;
e.content = null;
e.data = new s.default();
return e;
}
i = e;
e.prototype.onLoad = function() {
this.inputName = i.addInputItem(this.content, this.inputPrefab, "名称：", "请输入任务名称");
this.inputContent = i.addInputItem(this.content, this.inputPrefab, "描述：", "请输入任务描述", 500, 200);
this.inputMapThings = i.addInputItem(this.content, this.inputPrefab, "生成：", "chapter,index,x,y,z,count", 500, 100);
this.conditionTriggerItem = this.addQuestConditionItem("触发条件");
this.conditionSuccessItem = this.addQuestConditionItem("完成条件");
this.conditionFailItem = this.addQuestConditionItem("失败条件");
this.rewardItem = this.addQuestConditionItem("奖励");
this.inputCoin = i.addInputItem(this.content, this.inputPrefab, "金币：", "请输入数字");
this.inputRealCoin = i.addInputItem(this.content, this.inputPrefab, "货币：", "请输入数字");
this.inputOilGold = i.addInputItem(this.content, this.inputPrefab, "经验：", "请输入数字");
};
e.addInputItem = function(t, e, i, o, a, n) {
var r = cc.instantiate(e).getComponent(l.default);
r.label.string = i;
r.editBox.placeholder = o;
r.node.parent = t;
n && (r.editBox.node.height = n);
a && (r.editBox.maxLength = a);
return r;
};
e.addDateInputItem = function(t, e, i) {
var o = cc.instantiate(e).getComponent(u.default);
o.label.string = i;
o.node.parent = t;
return o;
};
e.prototype.addQuestConditionItem = function(t) {
var e = cc.instantiate(this.conditonPrefab).getComponent(r.default);
e.node.parent = this.content;
e.editor = this;
e.init(t);
return e;
};
e.prototype.showAnim = function() {
this.node.stopAllActions();
1 != this.node.scaleX && (this.node.scaleX = 0);
cc.tween(this.node).to(.1, {
scaleX: 1
}).start();
};
e.prototype.hideAnim = function() {
this.node.stopAllActions();
0 != this.node.scaleX && (this.node.scaleX = 1);
cc.tween(this.node).to(.1, {
scaleX: 0
}).start();
};
e.prototype.show = function(t) {
this.data.valueCopy(t);
this.showAnim();
this.initAllData();
};
e.prototype.updateData = function() {
this.data.name = this.inputName.Value;
this.data.content = this.inputContent.Value;
this.data.mapThingsList = this.inputMapThings.Value;
this.conditionTriggerItem.updateInputData();
this.conditionSuccessItem.updateInputData();
this.conditionFailItem.updateInputData();
this.data.triggerCondition.valueCopy(this.conditionTriggerItem.data);
this.data.successCondition.valueCopy(this.conditionSuccessItem.data);
this.data.failCondition.valueCopy(this.conditionFailItem.data);
this.data.reward.itemList = this.rewardItem.data.conditionList;
var t = parseInt(this.inputCoin.Value), e = parseInt(this.inputRealCoin.Value), i = parseInt(this.inputOilGold.Value);
t = this.data.reward.coins = isNaN(t) ? 0 : t;
this.data.reward.realCoins = isNaN(e) ? 0 : e;
this.data.reward.oilGolds = isNaN(i) ? 0 : i;
};
e.prototype.initAllData = function() {
if (this.conditionTriggerItem) {
this.inputName.Value = this.data.name;
this.inputContent.Value = this.data.content;
this.inputMapThings.Value = this.data.mapThingsList;
this.conditionTriggerItem.updateData(this.data.triggerCondition, !0, !0, !0);
this.conditionSuccessItem.updateData(this.data.successCondition, !0, !1, !0);
this.conditionFailItem.updateData(this.data.failCondition, !0, !1, !0);
var t = new c.default();
t.conditionList = this.data.reward.itemList;
this.rewardItem.updateData(t, !1, !1, !1);
this.inputCoin.Value = "" + this.data.reward.coins;
this.inputRealCoin.Value = "" + this.data.reward.realCoins;
this.inputOilGold.Value = "" + this.data.reward.oilGolds;
}
};
e.prototype.canHide = function() {
return 0 == this.node.scaleX || !this.isDataChanged();
};
e.prototype.hide = function() {
this.hideAnim();
return !0;
};
e.prototype.isDataChanged = function() {
this.updateData();
return JSON.stringify(this.editManager.getTreeNode(this.data.indexId, this.data.parentId)) != JSON.stringify(this.data);
};
e.prototype.start = function() {
this.initAllData();
};
e.prototype.save = function() {
this.updateData();
this.editManager.updateTreeNodeData(this.data.indexId, this.data.parentId, this.data);
};
var i;
n([ d(cc.Prefab) ], e.prototype, "inputPrefab", void 0);
n([ d(cc.Prefab) ], e.prototype, "conditonPrefab", void 0);
n([ d(cc.Node) ], e.prototype, "content", void 0);
return i = n([ h ], e);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"./QuestConditionItem": "QuestConditionItem",
"./QuestDateInputItem": "QuestDateInputItem",
"./QuestInputItem": "QuestInputItem",
"./data/QuestConditionData": "QuestConditionData",
"./data/QuestData": "QuestData"
} ],
QuestInputItem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "62d39xlOFZHXK7egRa/rmU5", "QuestInputItem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.editBox = null;
return e;
}
e.prototype.onLoad = function() {};
Object.defineProperty(e.prototype, "Value", {
get: function() {
return this.editBox.string;
},
set: function(t) {
this.editBox.string = t;
},
enumerable: !1,
configurable: !0
});
e.prototype.start = function() {};
n([ l(cc.Label) ], e.prototype, "label", void 0);
n([ l(cc.EditBox) ], e.prototype, "editBox", void 0);
return n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
QuestRewardData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "529efD+mhBNAZmXMDNON8D7", "QuestRewardData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../../utils/DataUtils"), a = function() {
function t() {
this.itemList = "";
this.coins = 0;
this.realCoins = 0;
this.oilGolds = 0;
this.statusList = "";
}
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t);
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../../utils/DataUtils": "DataUtils"
} ],
QuestSpriteInfoDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "5caf9/2ymtA4o8X+ZZt2jf9", "QuestSpriteInfoDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.msg = null;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.show = function(t, e) {
var i = this;
this.msg.string = t;
this.node.opacity = 255;
this.node.position = this.node.parent.convertToNodeSpaceAR(e);
this.scheduleOnce(function() {
var t = i.node.getChildByName("bg");
t.width = i.msg.node.width + 10;
t.height = i.msg.node.height + 10;
}, 0);
};
e.prototype.hide = function() {
this.node.opacity = 0;
};
n([ l(cc.Label) ], e.prototype, "msg", void 0);
return n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
QuestSpriteItem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "24e72aXMjxAkLmU7s6OzHBq", "QuestSpriteItem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/EquipmentData"), s = t("../data/FurnitureData"), l = t("../data/ItemData"), c = t("../item/Item"), u = t("../logic/EventHelper"), p = t("../logic/Logic"), h = t("../manager/InventoryManager"), d = t("./data/QuestConditionData"), f = cc._decorator, g = f.ccclass, y = f.property, m = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.select = null;
e.index = 0;
e.parentIndex = 0;
e.text = "";
e.isLongPress = !1;
e.longPressCallback = function() {
e.isLongPress = !0;
};
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
t.showInfo(!0, e.getLocation());
t.isLongPress = !1;
t.unschedule(t.longPressCallback);
t.scheduleOnce(t.longPressCallback, .2);
});
this.node.on(cc.Node.EventType.TOUCH_END, function(e) {
t.showInfo(!1, e.getLocation());
!t.isLongPress && t.clickCallback && t.clickCallback(t);
});
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function(e) {
t.showInfo(!1, e.getLocation());
});
};
e.prototype.init = function(t, e, i, o) {
this.parentIndex = t;
this.index = e;
this.text = i;
this.isSmall = o;
this.updateSpriteFrame();
};
e.prototype.updateSpriteFrame = function() {
var t = this, e = this.getSpriteFrameByType();
if (e) {
this.sprite.spriteFrame = e;
var i = e.getOriginalSize().width, o = e.getOriginalSize().height;
this.sprite.node.width = 4 * i;
this.sprite.node.height = 4 * o;
var a = this.isSmall ? 32 : 96;
if (this.sprite.node.height > a) {
this.sprite.node.height = a;
this.sprite.node.width = a / e.getOriginalSize().height * e.getOriginalSize().width;
}
} else this.scheduleOnce(function() {
t.updateSpriteFrame();
}, 2);
};
e.prototype.getSpriteFrameByType = function() {
var t = this.text.split(",")[0], e = p.default.spriteFrameRes(t), i = new r.default();
i.valueCopy(p.default.equipments[t]);
if (i.equipmetType == h.default.CLOTHES) e = p.default.spriteFrameRes(i.img + "anim0"); else if (i.equipmetType == h.default.HELMET) e = p.default.spriteFrameRes(i.img + "anim0"); else if (i.equipmetType == h.default.REMOTE) e = p.default.spriteFrameRes(i.img + "anim0"); else if (i.equipmetType != h.default.EMPTY) e = p.default.spriteFrameRes(i.img); else if (-1 != t.indexOf("furniture")) {
var o = new s.default();
o.valueCopy(p.default.furnitures[t]);
e = p.default.spriteFrameRes(o.resName);
} else if (-1 != t.indexOf("boss") && -1 == t.indexOf("food")) e = p.default.spriteFrameRes("icon" + t); else if (-1 == t.indexOf("monster") && -1 == t.indexOf("nonplayer") || -1 != t.indexOf("food")) {
var a = new l.default();
a.valueCopy(p.default.items[t]);
a.resName != c.default.EMPTY && (e = p.default.spriteFrameRes(a.resName));
} else e = p.default.spriteFrameRes(t + "anim000");
return e;
};
e.prototype.showInfo = function(t, e) {
var i = "";
if (t) {
var o = this.text.split(","), a = "", n = "", r = parseInt(o[2]);
switch (o[1]) {
case d.default.BUILDING_TRIGGER:
n = "建筑";
a = "交互" + r + "次";
break;

case d.default.ITEM_DROP:
n = "物品";
a = "丢弃";
break;

case d.default.ITEM_PICK:
n = "物品";
a = "拾取" + r + "个";
break;

case d.default.ITEM_USE:
n = "物品";
a = "使用" + r + "次";
break;

case d.default.EQUIP_PICK:
n = "装备";
a = "拾取" + r + "个";
break;

case d.default.EQUIP_ON:
n = "装备";
a = "装备" + r + "个";
break;

case d.default.EQUIP_OFF:
n = "装备";
a = "脱下";
break;

case d.default.EQUIP_DROP:
n = "装备";
a = "丢弃";
break;

case d.default.NPC_ALIVE:
n = "NPC";
a = "存活" + r + "个";
break;

case d.default.NPC_KILL:
n = "BOSS";
a = "击杀" + r + "个";
break;

case d.default.BOSS_ALIVE:
n = "BOSS";
a = "存活" + r + "个";
break;

case d.default.BOSS_KILL:
n = "NPC";
a = "击杀" + r + "个";
break;

case d.default.MONSTER_ALIVE:
n = "生物";
a = "存活" + r + "个";
break;

case d.default.MONSTER_KILL:
n = "生物";
a = "击杀" + r + "个";
}
i = "类型：" + n + "\n触发条件：" + a + "\n资源名：" + o[0] + "\n";
}
u.EventHelper.emit(u.EventHelper.EDITOR_SHOW_SPRITE_INFO, {
isShow: t,
text: i,
wpos: e
});
};
n([ y(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ y(cc.Node) ], e.prototype, "select", void 0);
return n([ g ], e);
}(cc.Component);
i.default = m;
cc._RF.pop();
}, {
"../data/EquipmentData": "EquipmentData",
"../data/FurnitureData": "FurnitureData",
"../data/ItemData": "ItemData",
"../item/Item": "Item",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/InventoryManager": "InventoryManager",
"./data/QuestConditionData": "QuestConditionData"
} ],
QuestSpritePickDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "bf1655WRtNEdbZW3LPexTmx", "QuestSpritePickDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Achievement"), s = t("../logic/Logic"), l = t("../manager/LoadingManager"), c = t("./data/QuestConditionData"), u = t("./QuestSpriteItem"), p = cc._decorator, h = p.ccclass, d = p.property, f = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.title = null;
e.content = null;
e.countLabel = null;
e.typeContainer = null;
e.titleList = null;
e.prefab = null;
e.spriteList = [];
e.currentListIndex = 0;
e.currentItemIndex = -1;
e.showText = "";
e.currentTypeArr = i.TYPES_ITEM;
return e;
}
i = e;
e.prototype.onLoad = function() {};
e.prototype.showAnim = function() {
this.node.active = !0;
};
e.prototype.hideAnim = function() {
this.node.active = !1;
};
e.prototype.show = function(t, e) {
this.showText = t;
this.callback = e;
this.showAnim();
this.changeList(null, this.getChangeIndex(t));
this.typeUpdate("");
};
e.prototype.getSprite = function(t, e) {
var i = this, o = cc.instantiate(this.prefab).getComponent(u.default);
o.init(this.currentListIndex, e++, t, !1);
this.addItem(o);
if (this.showText.length > 0 && t.length > 0 && this.showText.split(",")[0] == t.split(",")[0]) {
this.currentSprite && (this.currentSprite.select.active = !1);
this.currentSprite = o;
this.currentSprite.select.active = !0;
this.typeUpdate(this.currentSprite.text.split(",")[1]);
}
o.clickCallback = function(t) {
if (i.currentSprite == t) ; else {
i.currentSprite && (i.currentSprite.select.active = !1);
i.currentSprite = t;
i.currentSprite.select.active = !0;
i.typeUpdate(i.currentSprite.text.split(",")[1]);
}
};
return o;
};
e.prototype.hide = function() {
this.hideAnim();
};
e.prototype.clickOk = function() {
if (this.currentSprite) {
if (this.callback) {
for (var t = "", e = 0; e < this.typeContainer.toggleItems.length; e++) this.typeContainer.toggleItems[e].isChecked && (t = this.currentTypeArr[e].split(",")[1]);
this.currentSprite.text = this.currentSprite.text.split(",")[0] + "," + t + "," + this.countLabel.string;
this.callback(!0, this.currentSprite.text);
}
this.hide();
} else this.callback && this.callback(!1, "");
};
e.prototype.clickCancel = function() {
this.callback && this.callback(!1, "");
this.hide();
};
e.prototype.countUp = function() {
var t = parseInt(this.countLabel.string);
isNaN(t) && (t = 1);
++t < 1 && (t = 1);
this.countLabel.string = "" + this.countLabel.string;
};
e.prototype.countDown = function() {
var t = parseInt(this.countLabel.string);
isNaN(t) && (t = 1);
--t < 1 && (t = 1);
this.countLabel.string = "" + this.countLabel.string;
};
e.prototype.getChangeIndex = function(t) {
return -1 != t.indexOf("challenge") ? "0" : -1 != t.indexOf("map") ? "1" : -1 != t.indexOf("building") ? "2" : -1 != t.indexOf("npc") ? "3" : -1 != t.indexOf("boss") ? "4" : -1 != t.indexOf("monster") ? "5" : -1 != t.indexOf("equip") ? "6" : -1 != t.indexOf("item") ? "7" : "0";
};
e.prototype.changeList = function(t, e) {
this.currentListIndex = parseInt(e);
t || (this.titleList.toggleItems[this.currentListIndex].isChecked = !0);
this.unscheduleAllCallbacks();
switch (this.currentListIndex) {
case r.default.TYPE_CHALLENGE:
case r.default.TYPE_MAP:
this.removeContent();
break;

case r.default.TYPE_FURNITURE:
this.showFurnitureList();
break;

case r.default.TYPE_NPC:
this.showNpcList();
break;

case r.default.TYPE_BOSS:
this.showBossList();
break;

case r.default.TYPE_MONSTER:
this.showMonsterList();
break;

case r.default.TYPE_EQUIP:
this.showEquipList();
break;

case r.default.TYPE_ITEM:
this.showItemList();
}
};
e.prototype.typeUpdate = function(t) {
for (var e = 0, o = this.typeContainer.toggleItems; e < o.length; e++) o[e].node.active = !1;
switch (t) {
case c.default.ITEM_PICK:
case c.default.ITEM_DROP:
case c.default.ITEM_USE:
this.activeToggles(i.TYPES_ITEM, t);
break;

case c.default.EQUIP_PICK:
case c.default.EQUIP_ON:
case c.default.EQUIP_OFF:
case c.default.EQUIP_DROP:
this.activeToggles(i.TYPES_EQUIP, t);
break;

case c.default.BUILDING_TRIGGER:
this.activeToggles(i.TYPES_BUILDING, t);
break;

case c.default.NPC_ALIVE:
case c.default.NPC_KILL:
case c.default.MONSTER_ALIVE:
case c.default.MONSTER_KILL:
case c.default.BOSS_ALIVE:
case c.default.BOSS_KILL:
this.activeToggles(i.TYPES_NPC, t);
}
};
e.prototype.activeToggles = function(t, e) {
for (var i = 0; i < t.length; i++) {
var o = t[i].split(",");
this.typeContainer.toggleItems[i].node.active = !0;
this.typeContainer.toggleItems[i].getComponentInChildren(cc.Label).string = o[0];
e == o[1] && (this.typeContainer.toggleItems[i].isChecked = !0);
}
this.currentTypeArr = t;
};
e.prototype.removeContent = function() {
this.content.removeAllChildren();
};
e.prototype.addItem = function(t) {
this.content.addChild(t.node);
};
e.prototype.showMonsterList = function() {
var t = this;
this.removeContent();
var e = 0, i = function(i) {
l.default.loadNpcSpriteAtlas(i, function() {
t.currentListIndex == r.default.TYPE_MONSTER && t.getSprite(i + "," + c.default.MONSTER_KILL + ",1", e++);
});
};
for (var o in s.default.monsters) i(o);
};
e.prototype.showBossList = function() {
this.removeContent();
var t = 0;
for (var e in s.default.bosses) this.getSprite(e + "," + c.default.BOSS_KILL + ",1", t++);
};
e.prototype.showNpcList = function() {
var t = this;
this.removeContent();
var e = 0, i = function(i) {
l.default.loadNpcSpriteAtlas(i, function() {
t.currentListIndex == r.default.TYPE_NPC && t.getSprite(i + "," + c.default.NPC_KILL + ",1", e++);
});
};
for (var o in s.default.nonplayers) i(o);
};
e.prototype.showItemList = function() {
this.removeContent();
var t = 0;
for (var e in s.default.items) ++t > 5 && this.getSprite(e + "," + c.default.ITEM_PICK + ",1", t);
};
e.prototype.showEquipList = function() {
this.removeContent();
var t = 0;
for (var e in s.default.equipments) ++t > 1 && this.getSprite(e + "," + c.default.EQUIP_PICK + ",1", t);
};
e.prototype.showFurnitureList = function() {
this.removeContent();
var t = 0;
for (var e in s.default.furnitures) this.getSprite(e + "," + c.default.BUILDING_TRIGGER + ",1", t++);
};
var i;
e.TYPES_ITEM = [ "拾取," + c.default.ITEM_PICK, "使用," + c.default.ITEM_PICK, "丢弃," + c.default.ITEM_PICK ];
e.TYPES_NPC = [ "击杀," + c.default.NPC_KILL, "存活," + c.default.NPC_ALIVE ];
e.TYPES_BUILDING = [ "使用," + c.default.BUILDING_TRIGGER ];
e.TYPES_EQUIP = [ "拾取," + c.default.EQUIP_PICK, "装备," + c.default.EQUIP_ON, "脱下," + c.default.EQUIP_OFF, "丢弃," + c.default.EQUIP_DROP ];
n([ d(cc.Label) ], e.prototype, "title", void 0);
n([ d(cc.Node) ], e.prototype, "content", void 0);
n([ d(cc.Label) ], e.prototype, "countLabel", void 0);
n([ d(cc.ToggleContainer) ], e.prototype, "typeContainer", void 0);
n([ d(cc.ToggleContainer) ], e.prototype, "titleList", void 0);
n([ d(cc.Prefab) ], e.prototype, "prefab", void 0);
return i = n([ h ], e);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"../logic/Achievement": "Achievement",
"../logic/Logic": "Logic",
"../manager/LoadingManager": "LoadingManager",
"./QuestSpriteItem": "QuestSpriteItem",
"./data/QuestConditionData": "QuestConditionData"
} ],
QuestTreeData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b3ff6Wfw3BBsLtLBcJ+xtiF", "QuestTreeData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../../utils/DataUtils"), a = t("./QuestData"), n = function() {
function t() {
this.status = a.default.STATUS_INIT;
this.id = "";
this.name = "";
this.content = "";
this.root = new a.default();
}
t.prototype.valueCopy = function(t) {
if (!t) return this;
o.default.baseCopy(this, t);
t.root && this.root.valueCopy(t.root);
return this;
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.prototype.getTreeNode = function(t) {
var e = this.root;
if (t.length < 2) return e;
for (var i = 0, o = t.split(","); i < o.length; i++) {
var a = o[i];
-1 != a.indexOf("s") ? e = e.successList[parseInt(a[1])] : -1 != a.indexOf("f") && (e = e.failList[parseInt(a[1])]);
}
return e;
};
t.prototype.addTreeNode = function(t, e, i, o) {
var a = e + "," + t, n = this.getTreeNode(a), r = i ? n.successList : n.failList, s = r.length;
o.indexId = (i ? "s" : "f") + s;
o.parentId = n.parentId + "," + n.indexId;
o.name = i ? "任务成功支线" + o.indexId[1] : "任务失败支线" + o.indexId[1];
o.content = "开始卷";
r.push(o);
};
t.updateIndexId = function(t, e, i, o) {
t.indexId = (i ? "s" : "f") + o;
t.parentId = e.parentId + "," + e.indexId;
};
t.prototype.removeTreeNode = function(t, e) {
if (-1 == t.indexOf("r")) {
var i = -1 != t.indexOf("s"), o = parseInt(t[1]), a = this.getTreeNode(e);
(i ? a.successList : a.failList).splice(o, 1);
}
};
t.prototype.updateTreeNodePos = function(t, e, i) {
var o = e + "," + t;
this.getTreeNode(o).editPos = i.clone();
};
t.prototype.updateTreeNodeData = function(t, e, i) {
var o = e + "," + t;
this.getTreeNode(o).valueCopy(i);
};
return t;
}();
i.default = n;
cc._RF.pop();
}, {
"../../utils/DataUtils": "DataUtils",
"./QuestData": "QuestData"
} ],
Rah: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d367aUD8qtMnYoMv/zpvvi2", "Rah");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Boss"), s = t("../data/DamageData"), l = t("../logic/Shooter"), c = t("../logic/Dungeon"), u = t("../logic/Logic"), p = t("../manager/StatusManager"), h = t("../utils/NextStep"), d = t("../utils/AudioPlayer"), f = t("../data/FromData"), g = t("../logic/Achievement"), y = t("../utils/ActorUtils"), m = t("../collider/CCollider"), v = cc._decorator, E = v.ccclass, _ = (v.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.timeDelay = 0;
e.isFaceRight = !0;
e.isMoving = !1;
e.darkSkill = new h.default();
e.blinkSkill = new h.default();
e.snakeSkill = new h.default();
e.bugsSkill = new h.default();
e.meleeSkill = new h.default();
e.actionTimeDelay = 0;
return e;
}
e.prototype.init = function() {
throw new Error("Method not implemented.");
};
e.prototype.onLoad = function() {
this.sc.isDied = !1;
this.sc.isShow = !1;
this.anim = this.getComponent(cc.Animation);
this.shooter = this.node.getChildByName("Shooter").getComponent(l.default);
this.statusManager = this.node.getChildByName("StatusManager").getComponent(p.default);
this.shooter.from.valueCopy(f.default.getClone(this.actorName(), "bossrahhead"));
};
e.prototype.start = function() {
t.prototype.start.call(this);
};
e.prototype.takeDamage = function(t) {
if (this.sc.isDied || !this.sc.isShow || this.blinkSkill.IsExcuting) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
var e = [ d.default.MONSTER_HIT, d.default.MONSTER_HIT1, d.default.MONSTER_HIT2 ];
d.default.play(e[u.default.getRandomNum(0, 2)]);
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
g.default.addMonsterKillAchievement(this.data.resName);
cc.tween(this.node).to(3, {
opacity: 0
}).start();
this.sc.isDied = !0;
cc.tween(this.dungeon.fog).to(3, {
scale: 5
}).start();
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
this.getLoot();
}
};
e.prototype.bossAction = function() {
if (!this.sc.isDied && this.sc.isShow && this.dungeon) {
this.entity.Transform.position = c.default.fixOuterMap(this.entity.Transform.position);
this.pos = c.default.getIndexInMap(this.entity.Transform.position);
this.changeZIndex();
var t = this.dungeon.player.pos.clone(), e = c.default.getPosInMap(t).sub(this.entity.Transform.position), i = this.getNearPlayerDistance(this.dungeon.player.node), o = e.x, a = e.y;
Math.abs(o), Math.abs(a);
this.isFaceRight = o > 0;
var n = this.data.currentHealth < this.data.Common.MaxHealth / 2;
i < 100 && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
u.default.getChance(20) && n && this.dark();
u.default.getChance(80) && this.blink();
i < 600 && !this.blinkSkill.IsExcuting && this.fireSnake();
u.default.getChance(90) && !this.blinkSkill.IsExcuting && this.fireBugs(n);
i < 100 && !this.blinkSkill.IsExcuting && this.attack();
if (!e.equals(cc.Vec3.ZERO) && !this.meleeSkill.IsExcuting && !this.blinkSkill.IsExcuting && i > 100) {
e = e.normalizeSelf();
this.move(e, 2);
}
}
};
e.prototype.blink = function() {
var t = this;
this.blinkSkill.next(function() {
d.default.play(d.default.BLINK);
t.blinkSkill.IsExcuting = !0;
t.entity.Move.linearVelocity = cc.Vec2.ZERO;
cc.tween(t.node).to(1, {
opacity: 0
}).call(function() {
var e = t.dungeon.player.pos.clone();
e.y > c.default.HEIGHT_SIZE - 1 ? e.y -= 1 : e.y += 1;
t.transportBoss(e.x, e.y);
}).to(1, {
opacity: 255
}).call(function() {
t.attack();
}).start();
t.scheduleOnce(function() {
t.blinkSkill.IsExcuting = !1;
}, 5);
}, 10);
};
e.prototype.attack = function() {
var t = this;
this.meleeSkill.next(function() {
d.default.play(d.default.MELEE);
t.meleeSkill.IsExcuting = !0;
t.anim || (t.anim = t.getComponent(cc.Animation));
t.anim.playAdditive("RahAttack001");
}, 2, !0);
};
e.prototype.dark = function() {
var t = this;
this.darkSkill.next(function() {
cc.tween(t.dungeon.fog).to(2, {
scale: 1.75
}).to(6, {
angle: 0
}).to(2, {
scale: .6
}).start();
t.anim || (t.anim = t.getComponent(cc.Animation));
t.anim.playAdditive("RahSpellDark");
}, 20);
};
e.prototype.fireSnake = function() {
var t = this;
this.snakeSkill.next(function() {
t.shooter.setHv(cc.v2(0, -1));
var e = t.entity.Transform.position.clone().add(t.shooter.node.position), i = t.dungeon.player.getCenterPosition().sub(e);
if (!i.equals(cc.Vec3.ZERO)) {
t.shooter.setHv(cc.v2(i).normalize());
t.fireShooter(t.shooter, "bullet014", 1, 0);
}
t.anim || (t.anim = t.getComponent(cc.Animation));
t.anim.playAdditive("RahSpellSnake");
}, 6);
};
e.prototype.fireBugs = function() {
var t = this;
this.bugsSkill.next(function() {
t.shooter.data.bulletLineInterval = .5;
var e = t.entity.Transform.position.clone().add(t.shooter.node.position), i = t.dungeon.player.getCenterPosition().sub(e);
i.equals(cc.Vec3.ZERO) || t.shooter.setHv(cc.v2(i).normalize());
t.fireShooter(t.shooter, "bullet017", 99, 0);
t.anim || (t.anim = t.getComponent(cc.Animation));
t.anim.playAdditive("RahSpellBugs");
}, 4);
};
e.prototype.fireShooter = function(t, e, i, o, a) {
t.dungeon = this.dungeon;
t.actor = this;
t.data.bulletType = e;
t.data.bulletArcExNum = i;
t.data.bulletLineExNum = o;
t.fireBullet(a);
};
e.prototype.showBoss = function() {
this.sc.isShow = !0;
this.entity.NodeRender.node = this.node;
this.entity.Move.damping = 6;
if (this.healthBar) {
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.healthBar.node.active = !this.sc.isDied;
}
};
e.prototype.isActionTimeDelay = function(t) {
this.actionTimeDelay += t;
if (this.actionTimeDelay > .2) {
this.actionTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t) {
this.timeDelay += t;
this.timeDelay > 1 && (this.timeDelay = 0);
this.isActionTimeDelay(t) && this.bossAction();
this.data.currentHealth < 1 && this.killed();
this.healthBar.node.active = !this.sc.isDied;
this.sc.isDied && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
this.node.scaleX = this.isFaceRight ? 1 : -1;
};
e.prototype.move = function(t, e) {
if (!this.sc.isDied) {
t.equals(cc.Vec3.ZERO) || (this.pos = c.default.getIndexInMap(this.entity.Transform.position));
var i = t.x, o = t.y, a = (Math.abs(i), Math.abs(o), cc.v2(i, o));
a = a.normalize().mul(e);
this.entity.Move.linearVelocity = a;
this.isMoving = 0 != i || 0 != o;
this.changeZIndex();
}
};
e.prototype.onColliderEnter = function(t, e) {
if (e.tag == m.default.TAG.BOSS_HIT) {
var i = y.default.getEnemyCollisionTarget(t);
if (i && this.meleeSkill.IsExcuting && !this.sc.isDied) {
var o = new s.default();
o.physicalDamage = 15;
i.takeDamage(o, f.default.getClone(this.actorName(), "bossrahhead"), this);
}
}
};
e.prototype.actorName = function() {
return "机械拉神";
};
return n([ E ], e);
}(r.default));
i.default = _;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/NextStep": "NextStep",
"./Boss": "Boss"
} ],
Random4Save: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "74f98/L5YNOk7ZP1QlogXyD", "Random4Save");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function t(t) {
this.seed = 0;
this.seed = t;
t <= 0 && (t = new Date().getTime());
}
Object.defineProperty(t.prototype, "Seed", {
get: function() {
return this.seed;
},
set: function(t) {
this.seed = t;
},
enumerable: !1,
configurable: !0
});
t.prototype.rand = function() {
this.seed = (9301 * this.seed + 49297) % 233280;
return this.seed / 233280;
};
t.prototype.getRandomNum = function(t, e) {
return t + Math.round(this.rand() * (e - t));
};
t.prototype.getHalfChance = function() {
return this.rand() > .5;
};
return t;
}();
i.default = o;
cc._RF.pop();
}, {} ],
Random: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b33a81ZfJ9HoIP2sjcUTtfA", "Random");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function t() {}
t.prototype.setSeed = function(e) {
t.seed = e;
};
t.rand = function() {
t.seed = (9301 * t.seed + 49297) % 233280;
return t.seed / 233280;
};
t.getRandomNum = function(e, i) {
return e + Math.round(t.rand() * (i - e));
};
t.getHalfChance = function() {
return t.rand() > .5;
};
t.seed = new Date().getTime();
return t;
}();
i.default = o;
cc._RF.pop();
}, {} ],
RayCastResult: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d7154QJ7udPJZTxGf5BSkDh", "RayCastResult");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function(t, e) {
this.collider = t;
this.point = e;
};
cc._RF.pop();
}, {} ],
RealCoinCount: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "248b0yHiLxBSY7HUJRsW5Pe", "RealCoinCount");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("./EventHelper"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.anim = this.getComponent(cc.Animation);
s.EventHelper.on(s.EventHelper.HUD_ADD_REAL_COIN, function(e) {
t.addCount(e.count);
});
};
e.prototype.start = function() {};
e.prototype.addCount = function(t) {
if (this.anim) {
var e = parseInt(t);
r.default.realCoins += e;
}
};
e.prototype.update = function() {
this.label && (this.label.string = "" + r.default.realCoins);
};
n([ u(cc.Label) ], e.prototype, "label", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"./EventHelper": "EventHelper",
"./Logic": "Logic"
} ],
RectDoor: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d41e5HipSBBVLDWw2G1WR/C", "RectDoor");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function(t, e, i) {
this.isDoor = !1;
this.isHidden = !1;
this.dir = t;
this.isDoor = e;
this.isHidden = i;
};
cc._RF.pop();
}, {} ],
RectDungeon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "3b710jO571KQpPd9DCAmaJb", "RectDungeon");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("./RectRoom"), a = t("./RoomType"), n = t("../data/BuildingData"), r = t("../data/EquipmentData"), s = t("../data/ItemData"), l = function() {
function t() {
this.id = "00";
this.width = 0;
this.height = 0;
this.currentPos = cc.v3(-1, -1);
this.buildings = {};
this.equipments = {};
this.items = {};
}
t.prototype.buildMapFromSave = function(t, e) {
this.id = t.id;
this.width = t.width;
this.height = t.height;
this.map = new Array();
this.currentPos = t.currentPos ? cc.v3(t.currentPos.x, t.currentPos.y) : cc.v3(-1, -1);
for (var i in t.buildings) {
var l = t.buildings[i];
this.buildings[i] = {};
for (var c in l) {
var u = new n.default();
u.valueCopy(l[c]);
this.buildings[i][c] = u;
}
}
for (var p in t.equipments) {
var h = t.equipments[p];
this.equipments[p] = new Array();
for (var d = 0; d < h.length; d++) {
var f = new r.default();
f.valueCopy(h[d]);
this.equipments[p][d] = f;
}
}
for (var p in t.items) {
h = t.items[p];
this.items[p] = new Array();
for (d = 0; d < h.length; d++) {
var g = new s.default();
g.valueCopy(h[d]);
this.items[p][d] = g;
}
}
for (d = 0; d < this.width; d++) {
this.map[d] = new Array();
for (var y = 0; y < this.height; y++) {
this.map[d][y] = new o.default(d, y, a.default.EMPTY_ROOM).initFromSave(t.map[d][y]);
if (e) {
this.map[d][y].roomType = a.default.getTypeByName(e.roomTypes[d][y]);
this.map[d][y].isOutside = e.outSideMap[d][y];
this.map[d][y].shadowLevel || (this.map[d][y].shadowLevel = e.shadowMap[d][y]);
}
}
}
return this;
};
t.prototype.buildMap = function(t) {
this.map = new Array();
this.id = "" + t.chapter + t.index;
this.width = t.width;
this.height = t.height;
this.buildings = {};
this.equipments = {};
this.items = {};
for (var e = 0; e < t.width; e++) {
this.map[e] = new Array();
for (var i = 0; i < t.height; i++) {
this.map[e][i] = new o.default(e, i, a.default.getTypeByName(t.roomTypes[e][i]));
this.map[e][i].isOutside = t.outSideMap[e][i];
this.map[e][i].shadowLevel = t.shadowMap[e][i];
}
}
};
t.prototype.getDisPlay = function() {
for (var t = "", e = this.height - 1; e >= 0; e--) {
for (var i = 0; i < this.width; i++) t += this.map[i][e].roomType.NAME;
t += "\n";
}
return t;
};
t.prototype.getNeighborRoom = function(t, e, i) {
var o = t, a = e;
if (-1 == i) return this.map[o][a];
0 == i && (a += 1);
1 == i && (a -= 1);
2 == i && (o -= 1);
3 == i && (o += 1);
return o >= this.width || o < 0 || a >= this.height || a < 0 || i < 0 || i > 4 ? null : this.map[o][a];
};
t.prototype.changeRoomsIsFound = function(t, e) {
this.changeRoomIsFound(t, e);
this.changeRoomIsFound(t + 1, e);
this.changeRoomIsFound(t - 1, e);
this.changeRoomIsFound(t, e + 1);
this.changeRoomIsFound(t, e - 1);
this.changeRoomIsFound(t + 1, e - 1);
this.changeRoomIsFound(t - 1, e - 1);
this.changeRoomIsFound(t + 1, e - 1);
this.changeRoomIsFound(t - 1, e - 1);
};
t.prototype.changeRoomIsFound = function(t, e) {
t >= this.width || t < 0 || e >= this.height || e < 0 || this.map[t][e].state != o.default.STATE_CLEAR && (this.map[t][e].state = o.default.STATE_FOUND);
};
t.isRoomEqual = function(t, e) {
return t.x == e.x && t.y == e.y;
};
t.prototype.changeAllClearRoomsReborn = function() {
for (var t = 0; t < this.width; t++) for (var e = 0; e < this.height; e++) if (this.map[t][e].isClear()) {
this.map[t][e].reborn++;
this.map[t][e].isReborn = !0;
}
};
return t;
}();
i.default = l;
cc._RF.pop();
}, {
"../data/BuildingData": "BuildingData",
"../data/EquipmentData": "EquipmentData",
"../data/ItemData": "ItemData",
"./RectRoom": "RectRoom",
"./RoomType": "RoomType"
} ],
RectRoom: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d55edjfV4pLuKPki2DqAONx", "RectRoom");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("./RoomType"), a = t("../utils/Random"), n = function() {
function t(e, i, o) {
this.state = t.STATE_SLEEP;
this.seed = 0;
this.isReborn = !1;
this.reborn = 0;
this.shadowLevel = "";
this.isOutside = !1;
this.x = e;
this.y = i;
this.roomType = o;
this.seed = t.getRandomNum(0, 1e8);
this.init();
}
t.prototype.initFromSave = function(e) {
if (e) {
this.x = e.x;
this.y = e.y;
this.roomType = new o.default(0, "");
this.roomType.valueCopy(e.roomType);
this.state = e.state;
this.reborn = e.reborn;
this.isReborn = e.isReborn;
this.shadowLevel = e.shadowLevel;
this.isOutside = e.isOutside;
this.seed = e.seed ? e.seed : t.getRandomNum(0, 1e8);
return this;
}
};
t.prototype.init = function() {
this.state = t.STATE_SLEEP;
};
t.prototype.isFound = function() {
return this.state == t.STATE_FOUND || this.state == t.STATE_CLEAR;
};
t.prototype.isClear = function() {
return this.state == t.STATE_CLEAR;
};
t.getRandomNum = function(t, e) {
return t + Math.round(a.default.rand() * (e - t));
};
t.STATE_SLEEP = 0;
t.STATE_FOUND = 1;
t.STATE_CLEAR = 2;
return t;
}();
i.default = n;
cc._RF.pop();
}, {
"../utils/Random": "Random",
"./RoomType": "RoomType"
} ],
ReflectLight: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f5485tveAtBWZxfj6/Ko4Gh", "ReflectLight");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../utils/AudioPlayer"), l = t("../utils/IndexZ"), c = t("../utils/Utils"), u = cc._decorator, p = u.ccclass, h = u.property, d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.root = null;
return e;
}
i = e;
e.prototype.show = function(t, e, o, a, n, u, p, h) {
var d = this;
this.node.parent = t.node;
this.node.position = e.clone();
this.node.zIndex = l.default.OVERHEAD;
var f = i.AUDIOS_MELEE;
switch (h) {
case i.AUDIO_TYPE_METAL:
f = i.AUDIOS_METAL;
break;

case i.AUDIO_TYPE_WOOD:
f = i.AUDIOS_WOOD;
}
var g = r.default.getRandomNum(0, f.length - 1), y = "";
if (n) {
y = "wall";
s.default.play(f[g]);
} else o ? y = "far" : a && (y = "stab");
var m = u.clone();
n ? m = cc.v2(-u.x, -u.y) : s.default.play(f[g]);
this.sprite.node.color = p;
this.root.angle = c.default.getRotateAngle(m);
this.sprite.spriteFrame = null;
var v = "weaponreflectlight" + y + "anim00";
cc.tween(this.sprite.node).call(function() {
d.sprite.spriteFrame = r.default.spriteFrameRes(v + "0");
}).delay(.1).call(function() {
d.sprite.spriteFrame = r.default.spriteFrameRes(v + "1");
}).delay(.1).call(function() {
d.sprite.spriteFrame = r.default.spriteFrameRes(v + "2");
}).delay(.1).call(function() {
d.sprite.spriteFrame = r.default.spriteFrameRes(v + "3");
}).delay(.1).call(function() {
d.node.destroy();
}).start();
};
var i;
e.AUDIO_TYPE_MELEE = 0;
e.AUDIO_TYPE_METAL = 1;
e.AUDIO_TYPE_WOOD = 2;
e.AUDIOS_MELEE = [ s.default.MELEE_REFLECT, s.default.MELEE_REFLECT1 ];
e.AUDIOS_WOOD = [ s.default.MELEE_REFLECT_WOOD1, s.default.MELEE_REFLECT_WOOD2, s.default.MELEE_REFLECT_WOOD3 ];
e.AUDIOS_METAL = [ s.default.MELEE_REFLECT_WALL, s.default.MELEE_REFLECT_WALL1 ];
n([ h(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ h(cc.Node) ], e.prototype, "root", void 0);
return i = n([ p ], e);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/Utils": "Utils"
} ],
RoomBed: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "3cd15zS7p1FoqGJnOp3C8cF", "RoomBed");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/ExitData"), s = t("../logic/Dungeon"), l = t("../effect/ShadowOfSight"), c = t("../logic/Logic"), u = t("../logic/Player"), p = t("../ui/Tips"), h = t("../utils/AudioPlayer"), d = t("./Building"), f = t("../collider/CCollider"), g = cc._decorator, y = g.ccclass, m = (g.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isWakeUp = !1;
e.isFirst = !0;
e.isDecorate = !1;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.lights = this.getComponentsInChildren(l.default);
this.tips = this.getComponentInChildren(p.default);
this.tips.onInteract(function(e, i) {
t.node && t.enterDream(i);
});
};
e.prototype.init = function(t, e) {
this.dungeon = t;
this.isDecorate = e;
this.tips.node.active = !e;
};
e.prototype.start = function() {
this.node.getChildByName("sprite").getChildByName("bed").getComponent(cc.Sprite).spriteFrame = c.default.spriteFrameRes("avatarbed00" + c.default.playerData.AvatarData.organizationIndex);
this.node.getChildByName("sprite").getChildByName("cover").getComponent(cc.Sprite).spriteFrame = c.default.spriteFrameRes("avatarcover00" + c.default.playerData.AvatarData.organizationIndex);
for (var t = 0, e = this.lights; t < e.length; t++) e[t].updateRender(!this.isDecorate);
};
e.prototype.onColliderEnter = function(t, e) {
if (!this.isDecorate && e.tag != f.default.TAG.TIPS) {
var i = t.node.getComponent(u.default);
this.enterDream(i);
}
};
e.prototype.enterDream = function(t) {
var e = this;
if (t && !this.isWakeUp && this.isFirst) {
this.isFirst = !1;
this.dungeon && (this.dungeon.CameraZoom = s.default.DEFAULT_ZOOM_MAX);
t.sleep();
this.scheduleOnce(function() {
c.default.playerData = t.data.clone();
c.default.playerData.pos.equals(e.data.defaultPos) && (c.default.playerData.pos.y = e.data.defaultPos.y);
h.default.play(h.default.EXIT);
c.default.loadingNextLevel(r.default.getDreamExitDataFromReal());
}, 1);
}
};
e.prototype.onColliderExit = function(t) {
this.isDecorate || t.node.getComponent(u.default) && !this.isWakeUp && (this.isWakeUp = !0);
};
return n([ y ], e);
}(d.default));
i.default = m;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/ExitData": "ExitData",
"../effect/ShadowOfSight": "ShadowOfSight",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Player": "Player",
"../ui/Tips": "Tips",
"../utils/AudioPlayer": "AudioPlayer",
"./Building": "Building"
} ],
RoomClock: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "95f17FO9E9CGrNQqz9tayr4", "RoomClock");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../utils/Utils"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.timeLabel = null;
e.checkTimeDelay = 0;
return e;
}
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 1) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.isCheckTimeDelay(t) && (this.timeLabel.string = "" + s.default.getHour(r.default.realTime));
};
n([ u(cc.Label) ], e.prototype, "timeLabel", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"../utils/Utils": "Utils"
} ],
RoomFishtank: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "30f0d2Yp1xAsZ+my9YFNTdG", "RoomFishtank");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("../logic/Logic"), l = t("../manager/LoadingManager"), c = t("../manager/NonPlayerManager"), u = t("../utils/AudioPlayer"), p = t("../utils/Utils"), h = t("./Furniture"), d = cc._decorator, f = d.ccclass, g = d.property, y = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.fish = null;
e.food = null;
e.layout = null;
e.isFeeding = !1;
e.foodList = [];
e.isFirst = !0;
e.showAudio = !1;
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.fishSprite = this.fish.getChildByName("sprite").getComponent(cc.Sprite);
this.fishIdle();
this.fishMove();
l.default.loadNpcSpriteAtlas(c.default.FISH);
};
e.prototype.init = function(t) {
this.dungeon = t;
};
e.prototype.zoomCamera = function(t) {
if (!this.isFirst) {
if (t) {
this.showAudio = !0;
this.dungeon && (this.dungeon.cameraTargetActor = this.node.getComponent(h.default));
} else {
this.showAudio = !1;
this.dungeon && (this.dungeon.cameraTargetActor = this.dungeon.player);
}
r.EventHelper.emit(t ? r.EventHelper.HUD_CAMERA_ZOOM_IN : r.EventHelper.HUD_CAMERA_ZOOM_OUT);
}
};
e.prototype.feed = function(t) {
var e = this;
if (!this.isFeeding) if (this.foodList.length > 50) p.default.toast("喂得太多了啊！"); else {
t && t.sanityChange(1);
this.isFirst = !1;
this.zoomCamera(!0);
for (var i = 0; i < 5; i++) this.initFood();
this.isFeeding = !0;
this.unscheduleAllCallbacks();
u.default.play(u.default.FEED_FISH);
this.scheduleOnce(function() {
e.isFeeding = !1;
}, 2);
}
};
e.prototype.initFood = function() {
var t = this, e = cc.instantiate(this.food);
e.parent = this.layout;
var i = this.layout.width, o = this.layout.height, a = cc.v3(s.default.getRandomNum(e.width / 2, i - e.width / 2 - this.fish.width * this.fish.anchorX), s.default.getRandomNum(o, 1.5 * o)), n = cc.v3(a.x, s.default.getRandomNum(e.height / 2 + this.fish.height * this.fish.anchorY, o / 2));
e.position = a;
var r = s.default.getRandomNum(700, 1e3) / 1e3;
cc.tween(e).call(function() {
t.scheduleOnce(function() {
t.foodList.push(e);
}, r / 2);
}).to(r, {
position: n
}).start();
};
e.prototype.changeFishRes = function(t, e) {
var i = s.default.spriteFrameRes(t + e);
i || (i = s.default.spriteFrameRes(t));
this.fishSprite.spriteFrame = i;
};
e.prototype.fishIdle = function() {
var t = this, e = cc.tween().delay(.2).call(function() {
t.changeFishRes("nonplayer102anim002");
}).delay(.2).call(function() {
t.changeFishRes("nonplayer102anim003");
}).delay(.2).call(function() {
t.changeFishRes("nonplayer102anim004");
}).delay(.2).call(function() {
t.changeFishRes("nonplayer102anim005");
});
this.fishSprite.node.stopAllActions();
cc.tween(this.fishSprite.node).repeatForever(e).start();
};
e.prototype.fishEat = function(t) {
var e = this;
this.fishSprite.node.stopAllActions();
cc.tween(this.fishSprite.node).delay(.2).call(function() {
e.changeFishRes("nonplayer102anim010");
if (t >= 0 && t < e.foodList.length && e.foodList[t].isValid) {
e.foodList[t].active = !1;
e.foodList[t].destroy();
e.foodList.splice(t, 1);
}
}).delay(.2).call(function() {
e.changeFishRes("nonplayer102anim009");
}).delay(.2).call(function() {
e.fishIdle();
e.foodList.length > 0 ? e.fishSearch() : e.fishMove();
}).start();
};
e.prototype.fishSearch = function() {
var t = this;
this.bubbleSort();
var e = this.foodList[0].position.clone(), i = e.x > this.fish.position.x ? 1 : -1, o = s.default.getDistanceNoSqrt(this.fish.position, e);
cc.tween(this.fish).to(.2, {
scaleX: i
}).to(o / 10, {
position: e
}).call(function() {
t.fishEat(0);
}).start();
};
e.prototype.fishMove = function() {
var t = this, e = this.layout.width, i = this.layout.height, o = cc.v3(s.default.getRandomNum(this.fish.width / 2, e - this.fish.width / 2), s.default.getRandomNum(this.fish.height / 2, i - this.fish.height / 2)), a = o.x > this.fish.position.x ? 1 : -1, n = s.default.getDistanceNoSqrt(this.fish.position, o);
cc.tween(this.fish).to(.2, {
scaleX: a
}).to(n / 5, {
position: o
}).delay(.5).call(function() {
t.foodList.length > 0 ? t.fishSearch() : t.fishMove();
}).start();
};
e.prototype.bubbleSort = function() {
for (var t = this.foodList.length, e = 0; e < t - 1; e++) for (var i = 0; i < t - 1 - e; i++) if (Math.abs(this.foodList[i].x - this.fish.x) > Math.abs(this.foodList[i + 1].x - this.fish.x)) {
var o = this.foodList[i + 1];
this.foodList[i + 1] = this.foodList[i];
this.foodList[i] = o;
}
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 5) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.showAudio && this.isCheckTimeDelay(t) && u.default.play(u.default.FISHTANK);
};
n([ g(cc.Node) ], e.prototype, "fish", void 0);
n([ g(cc.Prefab) ], e.prototype, "food", void 0);
n([ g(cc.Node) ], e.prototype, "layout", void 0);
return n([ f ], e);
}(cc.Component);
i.default = y;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/LoadingManager": "LoadingManager",
"../manager/NonPlayerManager": "NonPlayerManager",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils",
"./Furniture": "Furniture"
} ],
RoomKitchen: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "c8d0fgTekxAGY7UXDwjf5LN", "RoomKitchen");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../item/Item"), s = t("../logic/Dungeon"), l = t("../utils/Utils"), c = cc._decorator, u = c.ccclass, p = (c.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.hasFood = !1;
e.isAniming = !1;
e.defaultPos = cc.v3(0, 0);
return e;
}
e.prototype.onLoad = function() {
this.anim = this.getComponent(cc.Animation);
};
e.prototype.init = function(t) {
this.defaultPos = t;
};
e.prototype.getFood = function(t) {
var e = this;
if (!this.isAniming) {
t.cooking();
this.isAniming = !0;
this.scheduleOnce(function() {
e.hasFood = !0;
e.isAniming = !1;
l.default.toast("一份香喷喷的蛋炒饭完成了。", !1, !0);
t.dungeon && t.dungeon.addItem(s.default.getPosInMap(e.defaultPos).add(cc.v3(0, -24)), r.default.FRIEDRICE);
}, 3);
}
};
e.prototype.AnimFinish = function() {};
e.prototype.update = function() {};
return n([ u ], e);
}(cc.Component));
i.default = p;
cc._RF.pop();
}, {
"../item/Item": "Item",
"../logic/Dungeon": "Dungeon",
"../utils/Utils": "Utils"
} ],
RoomStool: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b3a88wYknRFJqEjNBOhztfv", "RoomStool");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/AudioPlayer"), s = t("../utils/IndexZ"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.mosaic = null;
e.isOpen = !1;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.init = function(t) {
this.dungeon = t;
var e = this.mosaic.convertToWorldSpaceAR(cc.v3(0, 0));
this.mosaic.parent = this.node.parent;
this.mosaic.position = this.mosaic.parent.convertToNodeSpaceAR(e);
this.mosaic.zIndex = s.default.OVERHEAD;
this.mosaic.opacity = 0;
};
e.prototype.open = function() {
var t = this;
if (!this.isOpen) {
this.isOpen = !0;
this.mosaic.opacity = 255;
this.unscheduleAllCallbacks();
this.dungeon && this.dungeon.player.toilet();
this.scheduleOnce(function() {
t.mosaic.opacity = 0;
r.default.play(r.default.CLOSESTOOL);
}, 5);
this.scheduleOnce(function() {
t.isOpen = !1;
}, 10);
}
};
n([ u(cc.Node) ], e.prototype, "mosaic", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ"
} ],
RoomTrashCan: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "68b3es2qrxMmaO3Lx7yWbz3", "RoomTrashCan");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("../logic/Logic"), l = t("../manager/EquipmentManager"), c = t("../utils/AudioPlayer"), u = t("../utils/NextStep"), p = t("../utils/Random4Save"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.trash = null;
e.next = new u.default();
e.rand = new p.default(0);
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.anim = this.getComponent(cc.Animation);
this.trash.active = !1;
};
e.prototype.getTrash = function() {
var t = this;
this.next.next(function() {
t.trash.active = !0;
t.anim.play("RoomTrashOut");
c.default.play(c.default.TRASH);
t.scheduleOnce(function() {
t.rand.rand() > .5 ? r.EventHelper.emit(r.EventHelper.DUNGEON_ADD_ITEM, {
res: s.default.getRandomTrashType(t.rand)
}) : t.rand.rand() > .9 ? r.EventHelper.emit(r.EventHelper.DUNGEON_SETEQUIPMENT, {
res: l.default.WEAPON_BROKEN_GLASS
}) : t.rand.rand() > .95 && r.EventHelper.emit(r.EventHelper.DUNGEON_SETEQUIPMENT, {
res: l.default.WEAPON_WINE_BOTTLE
});
t.trash.active = !1;
}, 1);
}, 2);
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 1) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function() {};
n([ f(cc.Node) ], e.prototype, "trash", void 0);
return n([ d ], e);
}(cc.Component);
i.default = g;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/EquipmentManager": "EquipmentManager",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/NextStep": "NextStep",
"../utils/Random4Save": "Random4Save"
} ],
RoomTv: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "8c83fKZL65BO7yZt9toJ0M8", "RoomTv");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../effect/ShadowOfSight"), s = t("../logic/Logic"), l = t("../utils/AudioPlayer"), c = t("../utils/Random"), u = t("../utils/Utils"), p = cc._decorator, h = p.ccclass, d = p.property, f = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.screen = null;
e.isOpen = !1;
e.channel = 0;
return e;
}
e.prototype.onLoad = function() {
this.anim = this.getComponent(cc.Animation);
this.lights = this.getComponentsInChildren(r.default);
};
e.prototype.start = function() {
for (var t = 0, e = this.lights; t < e.length; t++) e[t].updateRender(!1);
};
e.prototype.open = function(t) {
var e = this;
this.isOpen = !0;
if (this.lights) for (var i = 0, o = this.lights; i < o.length; i++) o[i].updateRender(!0);
this.unscheduleAllCallbacks();
this.anim.stop();
this.anim.play("RoomTvOpen");
this.scheduleOnce(function() {
e.channel = s.default.getRandomNum(0, 5);
e.switchChannel(t);
}, .5);
};
e.prototype.switchChannel = function(t) {
var e = this;
this.unscheduleAllCallbacks();
this.anim.stop();
l.default.stopAllEffect();
l.default.play(l.default.SELECT);
this.channel++;
this.channel > 5 && (this.channel = 0);
switch (this.channel) {
case 0:
this.anim.play("RoomTvOpenIdle");
l.default.play(l.default.TVCOLOR, !1, !0);
break;

case 1:
this.anim.play("RoomTvNoSignalIdle");
l.default.play(l.default.TVWHITE, !1, !0);
break;

case 2:
this.screen.spriteFrame = s.default.spriteFrameRes("roomtvscreen4");
break;

case 3:
this.screen.spriteFrame = s.default.spriteFrameRes("roomtvscreen5");
break;

case 4:
this.screen.spriteFrame = s.default.spriteFrameRes("roomtvscreen6");
break;

case 5:
this.screen.spriteFrame = s.default.spriteFrameRes("roomtvscreen7");
}
this.channel > 1 && this.schedule(function() {
c.default.rand() < .3 && l.default.play(l.default.VOICE);
}, .05, cc.macro.REPEAT_FOREVER);
this.schedule(function() {
if (e.isOpen && e.channel > 1) {
u.default.toast("看了一会儿电视,感觉心情变好了");
t && t.sanityChange(3);
}
}, 10, cc.macro.REPEAT_FOREVER, 5);
};
e.prototype.close = function() {
var t = this;
if (this.isOpen) {
this.isOpen = !1;
if (this.lights) for (var e = 0, i = this.lights; e < i.length; e++) i[e].updateRender(!1);
this.unscheduleAllCallbacks();
this.anim.stop();
this.anim.play("RoomTvClose");
l.default.stopAllEffect();
this.scheduleOnce(function() {
t.anim.play("RoomTvClosedIdle");
}, .5);
}
};
e.prototype.interact = function(t) {
this.isOpen ? this.switchChannel(t) : this.open(t);
};
n([ d(cc.Sprite) ], e.prototype, "screen", void 0);
return n([ h ], e);
}(cc.Component);
i.default = f;
cc._RF.pop();
}, {
"../effect/ShadowOfSight": "ShadowOfSight",
"../logic/Logic": "Logic",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Random": "Random",
"../utils/Utils": "Utils"
} ],
RoomType: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "877a0zZc/9EjpFiULm+otfY", "RoomType");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function t(t, e) {
this.id = 0;
this.name = "";
this.id = t;
this.name = e;
}
Object.defineProperty(t.prototype, "ID", {
get: function() {
return this.id;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "NAME", {
get: function() {
return this.name;
},
enumerable: !1,
configurable: !0
});
t.prototype.valueCopy = function(t) {
this.id = t.id;
this.name = t.name;
};
t.getIdByName = function(t) {
t || (t = "Z");
return t.charCodeAt(0) - "A".charCodeAt(0);
};
t.getNameById = function(t) {
return String.fromCharCode("A".charCodeAt(0) + t);
};
t.getTypeByName = function(e) {
return new t(t.getIdByName(e), e);
};
t.getTypeById = function(e) {
return new t(e, t.getNameById(e));
};
t.isDecorateRoomType = function(e) {
return t.START_ROOM.isNotEqual(e) && t.TEST_ROOM.isNotEqual(e) && t.PREPARE_ROOM.isNotEqual(e);
};
t.isMonsterGenerateRoom = function(e) {
return t.BOSS_ROOM.isEqual(e) || t.DANGER_ROOM.isEqual(e) || t.INSANE_ROOM.isEqual(e) || t.KEY_ROOM.isEqual(e) || t.LOOT_ROOM.isEqual(e) || t.NORMAL_ROOM.isEqual(e) || t.END_ROOM.isEqual(e) || t.VERTICAL_ROOM.isEqual(e) || t.HORIZONTAL_ROOM.isEqual(e);
};
t.prototype.isEqual = function(t) {
return t.ID == this.ID;
};
t.prototype.isNotEqual = function(t) {
return t.ID != this.ID;
};
t.ELITE_ROOM = new t(0, "A");
t.BOSS_ROOM = new t(1, "B");
t.CROSS_ROOM = new t(2, "C");
t.DANGER_ROOM = new t(3, "D");
t.END_ROOM = new t(4, "E");
t.FINAL_ROOM = new t(5, "F");
t.G_ROOM = new t(6, "G");
t.HORIZONTAL_ROOM = new t(7, "H");
t.INSANE_ROOM = new t(8, "I");
t.TUTORIAL_ROOM = new t(9, "J");
t.KEY_ROOM = new t(10, "K");
t.LOOT_ROOM = new t(11, "L");
t.MERCHANT_ROOM = new t(12, "M");
t.NORMAL_ROOM = new t(13, "N");
t.EMPTY_ROOM = new t(14, "O");
t.PREPARE_ROOM = new t(15, "P");
t.Q_ROOM = new t(16, "Q");
t.REST_ROOM = new t(17, "R");
t.START_ROOM = new t(18, "S");
t.TEST_ROOM = new t(19, "T");
t.U_ROOM = new t(20, "U");
t.VERTICAL_ROOM = new t(21, "V");
t.WATER_ROOM = new t(22, "W");
t.X_ROOM = new t(23, "X");
t.HIDDEN_ROOM = new t(24, "Y");
t.Z_ROOM = new t(25, "Z");
return t;
}();
i.default = o;
cc._RF.pop();
}, {} ],
RoomWaterDispenser: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "636caPAwH1EkaM8RamKmvm5", "RoomWaterDispenser");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/ItemData"), s = t("../utils/AudioPlayer"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.cup = null;
e.hasWater = !1;
e.isAniming = !1;
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.anim = this.getComponent(cc.Animation);
};
e.prototype.getWater = function(t) {
if (!this.isAniming) if (this.hasWater) {
this.cup.opacity = 0;
this.hasWater = !1;
var e = new r.default();
e.liquidSatiety = 15;
t.canEatOrDrink(e) && t.drink();
} else {
this.isAniming = !0;
this.anim.play("RoomWaterDispenser");
s.default.play(s.default.WATERDISPENSER);
}
};
e.prototype.AnimFinish = function() {
this.hasWater = !0;
this.isAniming = !1;
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 5) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function() {};
n([ u(cc.Node) ], e.prototype, "cup", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../data/ItemData": "ItemData",
"../utils/AudioPlayer": "AudioPlayer"
} ],
SatietyView: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "0209bBn/xJKQ4t4J010Y1Yq", "SatietyView");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sanityLabel = null;
e.solid = null;
e.solid1 = null;
e.liquid = null;
e.liquid1 = null;
e.tips = null;
e.solidlabel = null;
e.liquidlabel = null;
e.solidlabel1 = null;
e.liquidlabel1 = null;
e.sanitybar = null;
e.sanityPercentLabel = null;
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.tips.active = !1;
this.node.on(cc.Node.EventType.TOUCH_START, function() {
t.tips.active = !0;
});
this.node.on(cc.Node.EventType.TOUCH_END, function() {
t.tips.active = !1;
});
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.tips.active = !1;
});
};
e.prototype.start = function() {};
e.prototype.refreshPercent = function(t, e, o, a, n) {
if (this.node) {
this.node.stopAllActions();
cc.tween(this.solid).to(.5, {
height: e
}).start();
cc.tween(this.solid1).to(.5, {
height: o
}).start();
cc.tween(this.liquid).to(.5, {
height: a
}).start();
cc.tween(this.liquid1).to(.5, {
height: n
}).start();
this.sanityLabel.string = this.getStr(t, i.SANITYTIPS, !1);
this.solidlabel.string = this.getStr(e, i.SOLIDTIPS, !1);
this.liquidlabel.string = this.getStr(a, i.LIQUIDTIPS, !1);
this.solidlabel1.string = this.getStr(100 - o, i.POOTIPS, !0);
this.liquidlabel1.string = this.getStr(100 - n, i.PEETIPS, !0);
this.sanityLabel.node.color = this.getColor(t, !1);
this.solidlabel.node.color = this.getColor(e, !1);
this.liquidlabel.node.color = this.getColor(a, !1);
this.solidlabel1.node.color = this.getColor(o, !0);
this.liquidlabel1.node.color = this.getColor(n, !0);
this.sanitybar.progress = t / 100;
this.sanityPercentLabel.string = t.toFixed(2) + "%";
}
};
e.prototype.getStr = function(t, e, i) {
var o = t;
i && (o = 100 - t);
return (0 == t ? e[0] : t < 20 ? e[1] : t < 40 ? e[2] : t < 60 ? e[3] : t < 80 ? e[4] : e[5]) + "(" + o.toFixed() + "/100)";
};
e.prototype.getColor = function(t, e) {
var i = [ "#DC143C", "#FFC0CB", "#FFFF00", "#ADFF2F", "#90EE90" ];
e && (i = [ "#90EE90", "#ADFF2F", "#FFFF00", "#FFC0CB", "#DC143C" ]);
return t < 20 ? cc.color().fromHEX(i[0]) : t < 40 ? cc.color().fromHEX(i[1]) : t < 60 ? cc.color().fromHEX(i[2]) : t < 80 ? cc.color().fromHEX(i[3]) : cc.color().fromHEX(i[4]);
};
var i;
e.SANITYTIPS = [ "精神崩溃", "精神失常", "精神萎靡", "精神平稳", "精神亢奋", "精神焕发" ];
e.SOLIDTIPS = [ "几乎饿死", "饥肠辘辘", "略微小食", "菜过五味", "酒足饭饱", "快撑爆了" ];
e.LIQUIDTIPS = [ "快要渴死", "喉咙冒烟", "口干舌燥", "酒过三巡", "非常满足", "快撑爆了" ];
e.POOTIPS = [ "绷不住了", "寸步难行", "不堪重负", "人有三急", "如释重负", "身轻如燕" ];
e.PEETIPS = [ "绷不住了", "狂涛怒吼", "波涛汹涌", "涓涓细流", "泛起微波", "风平浪静" ];
n([ l(cc.Label) ], e.prototype, "sanityLabel", void 0);
n([ l(cc.Node) ], e.prototype, "solid", void 0);
n([ l(cc.Node) ], e.prototype, "solid1", void 0);
n([ l(cc.Node) ], e.prototype, "liquid", void 0);
n([ l(cc.Node) ], e.prototype, "liquid1", void 0);
n([ l(cc.Node) ], e.prototype, "tips", void 0);
n([ l(cc.Label) ], e.prototype, "solidlabel", void 0);
n([ l(cc.Label) ], e.prototype, "liquidlabel", void 0);
n([ l(cc.Label) ], e.prototype, "solidlabel1", void 0);
n([ l(cc.Label) ], e.prototype, "liquidlabel1", void 0);
n([ l(cc.ProgressBar) ], e.prototype, "sanitybar", void 0);
n([ l(cc.Label) ], e.prototype, "sanityPercentLabel", void 0);
return i = n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
SavePointData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "2940aORMiBLQ5k/LNcPv2bl", "SavePointData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.x = 16;
this.y = 16;
this.chapter = 0;
this.level = 0;
}
t.prototype.valueCopy = function(t) {
if (t) {
o.default.baseCopy(this, t);
this.x = t.x || 0 == t.x ? t.x : 16;
this.y = t.y || 0 == t.y ? t.y : 16;
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.chapter01 = function() {
var e = new t();
e.chapter = 1;
e.level = 0;
e.x = 17;
e.y = 15;
return e;
};
t.chapter02 = function() {
var e = new t();
e.chapter = 2;
e.level = 0;
e.x = 27;
e.y = 51;
return e;
};
t.chapter03 = function() {
var e = new t();
e.chapter = 3;
e.level = 0;
e.x = 16;
e.y = 28;
return e;
};
t.chapter04 = function() {
var e = new t();
e.chapter = 4;
e.level = 0;
e.x = 38;
e.y = 71;
return e;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
SavePoint: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b080bpXecxCVaM8ctiNSXZl", "SavePoint");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/ExitData"), s = t("../effect/ShadowOfSight"), l = t("../logic/EventHelper"), c = t("../logic/Logic"), u = t("../ui/Tips"), p = t("../utils/AudioPlayer"), h = t("./Building"), d = cc._decorator, f = d.ccclass, g = (d.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isOpen = !1;
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.anim = this.getComponent(cc.Animation);
this.lights = this.getComponentsInChildren(s.default);
this.tips = this.getComponentInChildren(u.default);
this.tips.onInteract(function(e, i) {
if (t.node) {
i && (c.default.playerData = i.data.clone());
c.default.savePonit(t.data.defaultPos);
c.default.resetData();
l.EventHelper.emit(l.EventHelper.DUNGEON_DISAPPEAR);
p.default.play(p.default.EXIT);
t.scheduleOnce(function() {
l.EventHelper.emit(l.EventHelper.HUD_CAMERA_ZOOM_IN, {});
c.default.loadingNextLevel(r.default.getRealWorldExitDataFromDream(c.default.chapterIndex, c.default.level));
}, 1);
}
});
};
e.prototype.start = function() {
for (var t = 0, e = this.lights; t < e.length; t++) e[t].updateRender(!1);
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .05) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
if (this.lights.length > 0 && this.lights[0].showShadow && this.isCheckTimeDelay(t)) {
var e = this.lights[0].radius;
e = c.default.lerp(e, 300, 5 * t);
this.lights[0].radius = e;
}
};
e.prototype.open = function() {
var t = this;
if (!this.isOpen) {
c.default.savePonit(this.data.defaultPos);
this.isOpen = !0;
this.scheduleOnce(function() {
t.anim.play("SavePointActive");
t.scheduleOnce(function() {
for (var e = 0, i = t.lights; e < i.length; e++) {
var o = i[e];
o.radius = 0;
o.updateRender(!0);
}
t.anim.play("SavePointIdleActive");
t.tips.node.active = !0;
}, 1);
}, 1);
}
};
return n([ f ], e);
}(h.default));
i.default = g;
cc._RF.pop();
}, {
"../data/ExitData": "ExitData",
"../effect/ShadowOfSight": "ShadowOfSight",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../ui/Tips": "Tips",
"../utils/AudioPlayer": "AudioPlayer",
"./Building": "Building"
} ],
SaveSlotDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "ce28eDEuRJIaIaCMOwMCI+b", "SaveSlotDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../utils/LocalStorage"), s = t("./BaseDialog"), l = t("../SaveSlotItem"), c = cc._decorator, u = c.ccclass, p = c.property, h = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.item = null;
e.content = null;
e.editToggle = null;
e.baseBg = null;
e.itemList = [];
e.indexs = [];
e.isEdit = !1;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.baseBg.on(cc.Node.EventType.TOUCH_END, function() {
t.dismiss();
});
};
e.prototype.onItemSelectListener = function(t) {
this.callback = t;
};
e.prototype.onItemClick = function(t) {
this.callback && this.callback(t.index);
};
e.prototype.init = function() {
this.content.removeAllChildren();
var t = [ 0, 1, 2 ];
this.indexs = [];
this.itemList = [];
for (var e = t.length - 1; e >= 0; e--) if (e == r.default.getLastSaveSlotKey()) {
this.indexs.push(t[e]);
t.splice(e, 1);
break;
}
this.indexs = this.indexs.concat(t);
for (e = 0; e < this.indexs.length; e++) this.itemList.push(this.getItem(this.indexs[e]));
this.editToggle.isChecked = !1;
};
e.prototype.getItem = function(t) {
var e = cc.instantiate(this.item);
this.content.addChild(e);
var i = e.getComponent(l.default);
i.init(t, this);
return i;
};
e.prototype.changeEditMode = function() {
for (var t = 0; t < this.itemList.length; t++) this.itemList[t].updateUi(this.indexs[t], this.editToggle.isChecked);
};
e.prototype.start = function() {};
e.prototype.show = function() {
t.prototype.show.call(this);
this.init();
};
n([ p(cc.Prefab) ], e.prototype, "item", void 0);
n([ p(cc.Node) ], e.prototype, "content", void 0);
n([ p(cc.Toggle) ], e.prototype, "editToggle", void 0);
n([ p(cc.Node) ], e.prototype, "baseBg", void 0);
return n([ u ], e);
}(s.default);
i.default = h;
cc._RF.pop();
}, {
"../../utils/LocalStorage": "LocalStorage",
"../SaveSlotItem": "SaveSlotItem",
"./BaseDialog": "BaseDialog"
} ],
SaveSlotItem: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "75efa6dn79Jx5rA9GyrsXIb", "SaveSlotItem");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/AvatarData"), s = t("../data/PlayerData"), l = t("../logic/Logic"), c = t("../manager/ProfileManager"), u = t("../utils/AudioPlayer"), p = t("../utils/Utils"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.sprite = null;
e.closeButton = null;
e.deleteCover = null;
e.index = 0;
e.dialog = null;
e.hasSaveData = !1;
e.isPressing = !1;
e.chapter00 = null;
e.chapter01 = null;
e.chapter02 = null;
e.chapter03 = null;
e.chapter04 = null;
e.chapter05 = null;
e.chapter099 = null;
e.empty = null;
return e;
}
i = e;
e.prototype.onLoad = function() {};
e.prototype.init = function(t, e) {
var i = this;
this.index = t;
this.dialog = e;
this.scheduleOnce(function() {
i.updateUi(i.index, !1);
}, .1);
};
e.prototype.updateUi = function(t, e) {
var i = this, o = c.default.getSaveData(t);
o && o.playerData ? this.hasSaveData = !0 : this.hasSaveData = !1;
if (this.hasSaveData) {
var a = new s.default();
a.valueCopy(o.playerData);
this.label.string = t + " " + a.AvatarData.professionData.nameCn + " " + r.default.ORGANIZATION[a.AvatarData.organizationIndex] + " Lv." + l.default.getOilGoldData(o.oilGolds).level + "\n" + p.default.getFullFormatTime(o.lastSaveTime);
this.sprite.spriteFrame = this.getIcon(o.chapterIndex);
} else {
this.label.string = "空";
this.sprite.spriteFrame = this.empty;
}
this.node.opacity = this.hasSaveData ? 255 : 128;
this.closeButton.active = e && this.hasSaveData;
this.isPressing = !1;
this.closeButton.on(cc.Node.EventType.TOUCH_START, function() {
i.isPressing = !0;
});
this.closeButton.on(cc.Node.EventType.TOUCH_END, function() {
i.isPressing = !1;
});
this.closeButton.on(cc.Node.EventType.TOUCH_CANCEL, function() {
i.isPressing = !1;
});
};
e.prototype.getIcon = function(t) {
switch (t) {
case l.default.CHAPTER00:
return this.chapter00;

case l.default.CHAPTER01:
return this.chapter01;

case l.default.CHAPTER02:
return this.chapter02;

case l.default.CHAPTER03:
return this.chapter03;

case l.default.CHAPTER04:
return this.chapter04;

case l.default.CHAPTER05:
return this.chapter05;

case l.default.CHAPTER099:
return this.chapter099;
}
return this.empty;
};
e.prototype.picked = function() {
if (this.dialog) {
this.dialog.onItemClick(this);
this.dialog.dismiss();
u.default.play(u.default.SELECT);
}
};
e.prototype.start = function() {};
e.prototype.update = function(t) {
if (this.hasSaveData) {
this.deleteCover.width = l.default.lerp(this.deleteCover.width, this.isPressing ? i.PRESSINGWIDTH : 0, 3 * t);
if (this.isPressing && this.deleteCover.width > i.PRESSINGWIDTH - 5) {
c.default.clearData(this.index);
this.updateUi(this.index, !1);
}
} else this.deleteCover.width = 0;
};
var i;
e.PRESSINGWIDTH = 300;
n([ f(cc.Label) ], e.prototype, "label", void 0);
n([ f(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ f(cc.Node) ], e.prototype, "closeButton", void 0);
n([ f(cc.Node) ], e.prototype, "deleteCover", void 0);
n([ f(cc.SpriteFrame) ], e.prototype, "chapter00", void 0);
n([ f(cc.SpriteFrame) ], e.prototype, "chapter01", void 0);
n([ f(cc.SpriteFrame) ], e.prototype, "chapter02", void 0);
n([ f(cc.SpriteFrame) ], e.prototype, "chapter03", void 0);
n([ f(cc.SpriteFrame) ], e.prototype, "chapter04", void 0);
n([ f(cc.SpriteFrame) ], e.prototype, "chapter05", void 0);
n([ f(cc.SpriteFrame) ], e.prototype, "chapter099", void 0);
n([ f(cc.SpriteFrame) ], e.prototype, "empty", void 0);
return i = n([ d ], e);
}(cc.Component);
i.default = g;
cc._RF.pop();
}, {
"../data/AvatarData": "AvatarData",
"../data/PlayerData": "PlayerData",
"../logic/Logic": "Logic",
"../manager/ProfileManager": "ProfileManager",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/Utils": "Utils"
} ],
Saw: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e4758hHN8ZNFpX/Yga2qrRo", "Saw");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../data/DamageData"), l = t("./Building"), c = t("../manager/StatusManager"), u = t("../utils/Random"), p = t("../data/FromData"), h = t("../utils/IndexZ"), d = t("../utils/ActorUtils"), f = cc._decorator, g = f.ccclass, y = f.property, m = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.normalSpriteFrame = null;
e.bloodSpriteFrame = null;
e.pos = cc.v3(0, 0);
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
this.sprite.spriteFrame = this.normalSpriteFrame;
};
e.prototype.start = function() {};
e.prototype.setPos = function(t) {
this.pos = t;
var e = r.default.getPosInMap(t);
this.entity.Transform.position = cc.v3(e.x, e.y);
this.node.position = this.entity.Transform.position.clone();
this.node.zIndex = h.default.FLOOR;
};
e.prototype.onColliderEnter = function(t) {
var e = d.default.getEnemyCollisionTarget(t);
if (e) {
var i = p.default.getClone(this.actorName(), "saw002");
e.takeDamage(new s.default(1), i);
u.default.rand() < .1 && e.addStatus(c.default.BLEEDING, i);
this.sprite.spriteFrame = this.bloodSpriteFrame;
}
};
e.prototype.update = function() {
for (var t = 0, e = this.ccolliders; t < e.length; t++) e[t].updateChildOffset();
};
e.prototype.actorName = function() {
return "锯齿轮";
};
n([ y(cc.SpriteFrame) ], e.prototype, "normalSpriteFrame", void 0);
n([ y(cc.SpriteFrame) ], e.prototype, "bloodSpriteFrame", void 0);
return n([ g ], e);
}(l.default);
i.default = m;
cc._RF.pop();
}, {
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/Dungeon": "Dungeon",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/IndexZ": "IndexZ",
"../utils/Random": "Random",
"./Building": "Building"
} ],
Seeker: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9d901Qk1AZCcpW5rnbx33wB", "Seeker");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = cc._decorator, l = s.ccclass, c = (s.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isMoving = !1;
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.rigidbody = this.getComponent(cc.RigidBody);
this.node.zIndex = 1e3;
r.EventHelper.on(r.EventHelper.PLAYER_MOVE, function(e) {
t.move(e.dir, e.pos, e.dt);
});
};
e.prototype.move = function(t, e) {
var i = e.x, o = e.y, a = Math.abs(i), n = Math.abs(o), r = a > n ? a : n;
r = 0 == r ? 1 : r;
var s = cc.v2(i, o), l = 5;
l < 0 && (l = 0);
s = s.mul(l);
this.rigidbody.linearVelocity = s;
this.isMoving = 0 != i || 0 != o;
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
this.isCheckTimeDelay(t) && this.isMoving && r.EventHelper.emit(r.EventHelper.CHUNK_LOAD, {
pos: this.node.position.clone()
});
};
return n([ l ], e);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper"
} ],
SettingsData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4394cfk4yxEG7e7PB4NWtRp", "SettingsData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.showSoftShadow = !1;
this.showGamepad = !1;
this.showEquipDialog = !1;
this.lowPower = !1;
this.isFlashLightOpen = !1;
this.buttonPosAttack = t.BPA.clone();
this.buttonPosRemote = t.BPR.clone();
this.buttonPosJump = t.BPJ.clone();
this.buttonPosDash = t.BPD.clone();
this.buttonPosInteract = t.BPI.clone();
this.buttonPosSkill1 = t.BPS1.clone();
this.buttonPosSkill2 = t.BPS2.clone();
}
t.prototype.valueCopy = function(e) {
if (e) {
o.default.baseCopy(this, e, !0);
this.copyPos(this.buttonPosAttack, e.buttonPosAttack, t.BPA);
this.copyPos(this.buttonPosRemote, e.buttonPosRemote, t.BPR);
this.copyPos(this.buttonPosDash, e.buttonPosDash, t.BPD);
this.copyPos(this.buttonPosJump, e.buttonPosJump, t.BPJ);
this.copyPos(this.buttonPosInteract, e.buttonPosInteract, t.BPI);
this.copyPos(this.buttonPosSkill1, e.buttonPosSkill1, t.BPS1);
this.copyPos(this.buttonPosSkill2, e.buttonPosSkill2, t.BPS2);
}
};
t.prototype.copyPos = function(t, e, i) {
e ? cc.v2(e.x, e.y) : i.clone();
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
t.BPA = cc.v2(-24, -8);
t.BPR = cc.v2(-96, -96);
t.BPJ = cc.v2(98, -8);
t.BPD = cc.v2(40, -96);
t.BPI = cc.v2(30, 80);
t.BPS1 = cc.v2(-120, 16);
t.BPS2 = cc.v2(-200, -60);
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
SettingsDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "201faQ17bhLsoyeY0sNn6x5", "SettingsDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../../logic/EventHelper"), s = t("../../logic/Logic"), l = t("../../utils/AudioPlayer"), c = t("../../utils/LocalStorage"), u = t("./BaseDialog"), p = cc._decorator, h = p.ccclass, d = p.property, f = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.tgShadow = null;
e.tgGamepad = null;
e.tgFps = null;
e.pcInfo = null;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.start = function() {};
e.prototype.show = function() {
t.prototype.show.call(this);
this.pcInfo.active = !s.default.settings.showGamepad;
this.initToggle(this.tgShadow, s.default.settings.showSoftShadow);
this.initToggle(this.tgGamepad, s.default.settings.showGamepad);
this.initToggle(this.tgFps, s.default.settings.lowPower);
};
e.prototype.initToggle = function(t, e) {
e ? t.check() : t.uncheck();
};
e.prototype.toggleShadow = function(t) {
l.default.play(l.default.SELECT);
s.default.settings.showSoftShadow = t.isChecked;
c.default.saveSystemSettings(s.default.settings);
};
e.prototype.toggleGamepad = function(t) {
l.default.play(l.default.SELECT);
s.default.settings.showGamepad = t.isChecked;
c.default.saveSystemSettings(s.default.settings);
this.pcInfo.active = !s.default.settings.showGamepad;
r.EventHelper.emit(r.EventHelper.HUD_CONTROLLER_UPDATE_GAMEPAD);
};
e.prototype.toggleFps = function(t) {
l.default.play(l.default.SELECT);
s.default.settings.lowPower = t.isChecked;
c.default.saveSystemSettings(s.default.settings);
r.EventHelper.emit(r.EventHelper.SETTINGS_LOW_POWER);
};
e.prototype.showActionSettingDialog = function() {
this.close();
r.EventHelper.emit(r.EventHelper.HUD_ACTION_SETTING_DIALOG);
};
e.prototype.close = function() {
cc.director.getScheduler().setTimeScale(1);
l.default.play(l.default.SELECT);
this.dismiss();
};
e.prototype.home = function() {
l.default.play(l.default.SELECT);
cc.director.getScheduler().setTimeScale(1);
cc.director.loadScene("start");
};
n([ d(cc.Toggle) ], e.prototype, "tgShadow", void 0);
n([ d(cc.Toggle) ], e.prototype, "tgGamepad", void 0);
n([ d(cc.Toggle) ], e.prototype, "tgFps", void 0);
n([ d(cc.Node) ], e.prototype, "pcInfo", void 0);
return n([ h ], e);
}(u.default);
i.default = f;
cc._RF.pop();
}, {
"../../logic/EventHelper": "EventHelper",
"../../logic/Logic": "Logic",
"../../utils/AudioPlayer": "AudioPlayer",
"../../utils/LocalStorage": "LocalStorage",
"./BaseDialog": "BaseDialog"
} ],
ShadowOfSight: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f6922FctbtKnrAA7zoIN/Yg", "ShadowOfSight");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../collider/CCollider"), s = t("../ecs/system/GameWorldSystem"), l = t("../base/Actor"), c = t("../logic/Logic"), u = cc._decorator, p = u.ccclass, h = u.property, d = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.ray = null;
e.rayNum = 180;
e.renderColor = cc.color(255, 255, 255, 1);
e.showLight = !0;
e.showRayCast = !1;
e.fromSky = !1;
e.z = 0;
e.zHeight = 0;
e.fromOutside = !1;
e.sprite = null;
e.showShadow = !0;
e.lightVertsArray = new Array();
e.lightRects = {};
e.circle = cc.v3(0, 0, 0);
e.offset = 0;
e.offsetPlus = !1;
e.lightTargetMap = new Map();
e.sensorTargetMap = new Map();
e.ignoreMap = new Map();
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
this.mat = this.ray.getMaterial(0);
this.polygonCollider = this.getComponent(cc.PolygonCollider);
this.customCollider = this.getComponent(r.default);
for (var t = 0, e = [ r.default.TAG.BOSS, r.default.TAG.BUILDING, r.default.TAG.GOODNONPLAYER, r.default.TAG.NONPLAYER, r.default.TAG.PLAYER, r.default.TAG.WALL, r.default.TAG.WALL_TOP ]; t < e.length; t++) {
var i = e[t];
this.lightTargetMap.set(i, !0);
}
if (this.customCollider && this.customCollider.ignoreTagList) for (var o = 0, a = this.customCollider.ignoreTagList; o < a.length; o++) {
i = a[o];
this.lightTargetMap.has(i) && this.lightTargetMap.delete(i);
}
var n = this.initIgnoreMap(this.node.parent.getComponent(l.default));
!n && this.node.parent.parent && !(n = this.initIgnoreMap(this.node.parent.parent.getComponent(l.default))) && this.node.parent.parent.parent && (n = this.initIgnoreMap(this.node.parent.parent.parent.getComponent(l.default)));
};
e.prototype.initIgnoreMap = function(t) {
if (!t) return !1;
var e = t.node.getComponentsInChildren(r.default);
if (e && e.length > 0) for (var i = 0, o = e; i < o.length; i++) {
var a = o[i];
this.ignoreMap.set(a.id, !0);
}
return !0;
};
e.prototype.renderSightArea = function(t) {
var e = this.node.convertToWorldSpaceAR(cc.v2(0, 0)), i = this.radius / 10;
this.offset > i ? this.offsetPlus = !1 : this.offset < -i && (this.offsetPlus = !0);
this.offset = this.offsetPlus ? this.offset + .1 : this.offset - .1;
this.ray.clear();
this.sprite && (this.sprite.enabled = !1);
if (this.showShadow) {
this.lightRects = {};
this.lightVertsArray = [];
this.circle = cc.v3(0, 0, 0);
this.showRayCast ? this.drawRayByNum(e, t, this.showLight) : this.drawCustom(e, t, this.showLight);
}
};
e.prototype.updateRender = function(t) {
this.showShadow = t;
};
e.prototype.setCustomColliderStyle = function(t, e, i, o, a, n) {
if (this.customCollider) {
this.customCollider.w = e;
this.customCollider.h = i;
this.customCollider.radius = o;
this.customCollider.offsetX = a;
this.customCollider.offsetY = n;
this.customCollider.type = t ? r.default.TYPE.RECT : r.default.TYPE.CIRCLE;
this.customCollider.fixCenterAndScale();
}
};
e.prototype.drawCustom = function(t, e, i) {
this.ray.lineWidth = 10;
this.ray.fillColor = this.renderColor;
if (this.polygonCollider && this.polygonCollider.points.length > 2) {
for (var o = 0; o < this.polygonCollider.points.length; o++) {
var a = this.node.convertToWorldSpaceAR(this.polygonCollider.points[o]);
this.lightVertsArray.push(a);
i && (0 == o ? this.ray.moveTo(this.polygonCollider.points[o].x, this.polygonCollider.points[o].y) : this.ray.lineTo(this.polygonCollider.points[o].x, this.polygonCollider.points[o].y));
}
if (i) {
this.ray.close();
this.ray.fill();
var n = e.getWorldToScreenPoint(t);
this.updateMat(this.mat, cc.v2(n.x, n.y), e.zoomRatio);
}
}
if (this.customCollider && this.customCollider.type == r.default.TYPE.RECT && this.customCollider.w > 0 && this.customCollider.h > 0) {
this.customCollider.points.length < 1 && this.customCollider.fixCenterAndScale();
for (o = 0; o < this.customCollider.points.length; o++) {
a = this.node.convertToNodeSpaceAR(this.customCollider.points[o]);
this.lightVertsArray.push(this.customCollider.points[o]);
i && (0 == o ? this.ray.moveTo(a.x, a.y) : this.ray.lineTo(a.x, a.y));
}
if (i) if (this.sprite) {
this.sprite.enabled = !0;
this.sprite.node.width = this.customCollider.w;
this.sprite.node.height = this.customCollider.h;
this.sprite.spriteFrame = c.default.spriteFrameRes("lightrect");
this.sprite.node.color = cc.color(this.renderColor.r, this.renderColor.g, this.renderColor.b);
this.sprite.node.opacity = this.renderColor.a;
this.ray.enabled = !1;
} else {
this.sprite && (this.sprite.enabled = !1);
this.ray.enabled = !0;
this.ray.close();
this.ray.fill();
n = e.getWorldToScreenPoint(t);
this.updateMat(this.mat, cc.v2(n.x, n.y), e.zoomRatio);
}
}
if (this.customCollider && this.customCollider.type == r.default.TYPE.CIRCLE && this.customCollider.radius > 0) {
a = this.node.convertToWorldSpaceAR(cc.v2(this.customCollider.offsetX, this.customCollider.offsetY));
this.circle = cc.v3(a.x, a.y, this.getRadius());
if (i) if (this.sprite) {
this.sprite.enabled = !0;
var s = this.getRadius();
this.sprite.node.width = 2 * s;
this.sprite.node.height = 2 * s;
this.sprite.spriteFrame = c.default.spriteFrameRes("lightpoint");
this.sprite.node.color = cc.color(this.renderColor.r, this.renderColor.g, this.renderColor.b);
this.sprite.node.opacity = this.renderColor.a;
this.ray.enabled = !1;
} else {
this.ray.enabled = !0;
this.sprite && (this.sprite.enabled = !1);
this.ray.lineWidth = 10;
this.ray.fillColor = this.renderColor;
var l = this.customCollider.offset;
this.ray.circle(l.x, l.y, this.getRadius());
this.ray.fill();
n = e.getWorldToScreenPoint(t);
this.updateMat(this.mat, cc.v2(n.x, n.y), e.zoomRatio);
}
}
};
e.prototype.drawRayByNum = function(t, e, i) {
if (this.customCollider && !(this.customCollider.radius <= 0)) {
this.sprite && (this.sprite.enabled = !1);
this.ray.enabled = !0;
this.ray.lineWidth = 10;
this.ray.fillColor = this.renderColor;
var o = 2 * Math.PI / this.rayNum;
this.lightVertsArray = new Array();
this.lightRects = {};
for (var a = 0; a < this.rayNum; a++) {
var n = cc.v2(Math.cos(a * o) * this.getRadius() + t.x, Math.sin(a * o) * this.getRadius() + t.y), r = s.default.colliderSystem.nearestRayCast(cc.v2(t), cc.v2(n), this.z, this.zHeight, this.lightTargetMap, this.sensorTargetMap, this.ignoreMap);
if (r) {
n = r.point;
var l = r.collider.node;
if (l.convertToNodeSpaceAR(n).y <= 0 && n.y > t.y) {
var c = l.convertToWorldSpaceAR(cc.v3(0, 0)), u = cc.rect(c.x - l.width * l.anchorX, c.y - l.height * l.anchorY - 10, l.width, l.height + 10);
this.lightRects[l.uuid] = u;
}
}
this.lightVertsArray.push(n);
this.ray.lineWidth = 3;
this.ray.strokeColor = cc.color(0, 0, 0, 80);
if (i) if (0 == a) {
var p = this.node.convertToNodeSpaceAR(n);
this.ray.moveTo(p.x, p.y);
} else {
var h = this.node.convertToNodeSpaceAR(n);
this.ray.lineTo(h.x, h.y);
}
}
if (i) {
this.ray.close();
this.ray.fill();
this.ray.fillColor.a = this.ray.fillColor.a / 2;
for (var d in this.lightRects) {
u = this.lightRects[d], h = this.node.convertToNodeSpaceAR(cc.v3(u.x, u.y));
this.ray.rect(h.x, h.y, u.width, u.height);
this.ray.fill();
}
var f = e.getWorldToScreenPoint(t);
this.updateMat(this.mat, cc.v2(f.x, f.y), e.zoomRatio);
}
}
};
e.prototype.getRadius = function() {
return this.radius + this.offset;
};
Object.defineProperty(e.prototype, "radius", {
get: function() {
return this.customCollider && !this.polygonCollider ? this.customCollider.radius * this.customCollider.node.scale : this.node.width / 2;
},
set: function(t) {
this.customCollider && (this.customCollider.radius = t);
},
enumerable: !1,
configurable: !0
});
e.prototype.updateMat = function(t, e, i) {
var o = cc.view.getCanvasSize(), a = cc.view.getVisibleSize(), n = a.width / a.height, r = this.getRadius() / a.height, s = o.width / a.width;
t.setProperty("screen", cc.v2(o.width, o.height));
t.setProperty("maxRadius", r * i);
t.setProperty("whRatio", n);
var l = cc.v2(e.x / a.width, e.y / a.height), c = Math.abs(l.y - .5) * a.height * s / o.height;
this.mat.setProperty("lightPos", cc.v2(l.x, l.y > .5 ? .5 + c : .5 - c));
};
n([ h(cc.Graphics) ], e.prototype, "ray", void 0);
n([ h(cc.Color) ], e.prototype, "renderColor", void 0);
n([ h ], e.prototype, "showLight", void 0);
n([ h ], e.prototype, "showRayCast", void 0);
n([ h ], e.prototype, "fromSky", void 0);
n([ h ], e.prototype, "z", void 0);
n([ h ], e.prototype, "zHeight", void 0);
n([ h ], e.prototype, "fromOutside", void 0);
return n([ p ], e);
}(cc.Component);
i.default = d;
cc._RF.pop();
}, {
"../base/Actor": "Actor",
"../collider/CCollider": "CCollider",
"../ecs/system/GameWorldSystem": "GameWorldSystem",
"../logic/Logic": "Logic"
} ],
ShadowPlayer: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "37457/YUj5OXbrBhQ2rg17W", "ShadowPlayer");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = t("../logic/PlayerWeapon"), c = t("../logic/Shooter"), u = t("../utils/IndexZ"), p = t("../utils/NextStep"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.weaponLeft = null;
e.weaponRight = null;
e.shooterEx = null;
e.sprite = null;
e.index = 0;
e.lifeNext = new p.default();
e.isStop = !1;
e.targetPos = cc.v3(0, 0);
e.movePos = cc.v3(0, 0);
e.playerLastPos = cc.v3(0, 0);
e.moveList = [];
e.isVanishing = !1;
return e;
}
e.prototype.init = function(t, e, i, o) {
var a = this, n = o || 30;
this.player = t;
this.index = i;
this.player.data.ShadowList[this.index] = Date.now();
this.node.parent = this.player.node.parent;
this.weaponLeft.init(this.player, !0, !0);
this.weaponRight.init(this.player, !1, !0);
this.weaponLeft.node.opacity = 0;
this.weaponRight.node.opacity = 0;
this.shooterEx.player = this.player;
this.shooterEx.isEx = !0;
this.shooterEx.actor = this.player;
this.weaponLeft.shooter.actor = this.player;
this.weaponRight.shooter.actor = this.player;
this.mat = this.sprite.getMaterial(0);
this.sprite.node.scaleX = 1;
this.sprite.node.scaleY = -1;
this.sprite.spriteFrame = e;
this.node.zIndex = u.default.getActorZIndex(r.default.getIndexInMap(this.node.position));
this.sprite.node.width = this.sprite.spriteFrame.getOriginalSize().width;
this.sprite.node.height = this.sprite.spriteFrame.getOriginalSize().height;
this.node.position = this.player.node.position.clone();
this.targetPos = this.player.node.position.clone();
this.playerLastPos = this.player.node.position.clone();
this.isStop = !1;
this.isVanishing = !1;
this.lifeNext.next(function() {}, n, !0, function(t) {
var e = Date.now();
e - t < 1e3 * n && a.node && a.isValid && !a.isStop && (a.player.data.ShadowList[a.index] = t);
e - t > 1e3 * n && a.stop();
});
};
e.prototype.attack = function(t, e, i, o) {
return !!this.node && (o ? this.weaponLeft.shadowWeapon.attack(t, e, i) : this.weaponRight.shadowWeapon.attack(t, e, i));
};
e.prototype.remoteAttack = function(t, e, i, o, a, n) {
if (!this.node) return !1;
var r = t ? this.weaponLeft.shooter : this.weaponRight.shooter;
r.data = e.clone();
r.setHv(i);
r.remoteDamagePlayer = o;
r.fireBullet(0, cc.v3(30, 0), a, n);
};
e.prototype.stop = function() {
if (this.isValid) {
this.isStop = !0;
this.player.data.ShadowList[this.index] = 0;
this.node.active = !1;
this.enabled = !1;
this.destroy();
}
};
e.prototype.getCenterPosition = function() {
return this.node.position.clone().addSelf(cc.v3(0, 32 * this.node.scaleY));
};
e.prototype.vanish = function(t) {
var e = this;
this.isVanishing = !0;
this.scheduleOnce(function() {
e.isVanishing = !1;
}, t);
};
e.prototype.updateLogic = function(t) {
if (this.player) {
this.weaponLeft && this.weaponLeft.updateLogic(t);
this.weaponRight && this.weaponRight.updateLogic(t);
this.shooterEx && this.shooterEx.updateLogic(t);
this.movePos.x += Math.abs(this.player.node.position.x - this.playerLastPos.x);
this.movePos.y += Math.abs(this.player.node.position.y - this.playerLastPos.y);
this.playerLastPos = this.player.node.position.clone();
if (this.movePos.x > 5 || this.movePos.y > 5) {
this.movePos = cc.v3(0, 0);
var e = this.player.node.position.clone();
e.z = this.player.isFaceRight ? 1 : -1;
this.moveList.push(e);
}
if (this.moveList.length > 0) {
var i = this.moveList[0].x - this.targetPos.x, o = this.moveList[0].y - this.targetPos.y;
i * i + o * o < 25 && this.moveList.splice(0, 1);
this.moveList.length > 10 * (this.index + 1) && (this.targetPos = this.moveList[0].clone());
}
this.node.zIndex = u.default.getActorZIndex(r.default.getIndexInMap(this.node.position));
this.sprite.node.opacity = 200 - 20 * this.index;
this.isVanishing && (this.sprite.node.opacity = 0);
this.sprite.node.y = this.player.root.y;
this.shooterEx.node.y = this.player.root.y;
this.weaponLeft.shooter.node.y = this.player.root.y;
this.weaponRight.shooter.node.y = this.player.root.y;
this.mat.setProperty("textureSizeWidth", this.sprite.spriteFrame.getTexture().width);
this.mat.setProperty("textureSizeHeight", this.sprite.spriteFrame.getTexture().height);
this.mat.setProperty("outlineColor", cc.color(200, 200, 200));
this.mat.setProperty("outlineSize", 4);
this.weaponLeft.shadowWeapon.IsAttacking || this.weaponRight.shadowWeapon.IsAttacking || (this.node.position = s.default.lerpPos(this.node.position, this.targetPos, 3 * t));
}
};
n([ f(l.default) ], e.prototype, "weaponLeft", void 0);
n([ f(l.default) ], e.prototype, "weaponRight", void 0);
n([ f(c.default) ], e.prototype, "shooterEx", void 0);
n([ f(cc.Sprite) ], e.prototype, "sprite", void 0);
return n([ d ], e);
}(cc.Component);
i.default = g;
cc._RF.pop();
}, {
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/PlayerWeapon": "PlayerWeapon",
"../logic/Shooter": "Shooter",
"../utils/IndexZ": "IndexZ",
"../utils/NextStep": "NextStep"
} ],
Shield: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a9e32odPWRNMpWClq+mn20V", "Shield");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../base/BaseAvatar"), s = t("../data/DamageData"), l = t("../data/EquipmentData"), c = t("../data/FromData"), u = t("../data/TriggerData"), p = t("../effect/BlockLight"), h = t("../manager/InventoryManager"), d = t("../manager/StatusManager"), f = t("../utils/IndexZ"), g = t("./EventHelper"), y = t("./Logic"), m = cc._decorator, v = m.ccclass, E = m.property, _ = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.sprite = null;
e.blockLightPrefab = null;
e.status = -1;
e.data = new l.default();
e.isBehind = !1;
e.avatarZindex = 0;
e.isBehindChange = !1;
e.dir = 3;
e.isButtonPressing = !1;
return e;
}
i = e;
Object.defineProperty(e.prototype, "isAniming", {
get: function() {
return this.status == i.STATUS_PUTDOWN || this.status == i.STATUS_PARRY;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "isDefendOrParrying", {
get: function() {
return this.status == i.STATUS_DEFEND || this.status == i.STATUS_PARRY;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "Status", {
get: function() {
return this.status;
},
enumerable: !1,
configurable: !0
});
e.prototype.onLoad = function() {
var t = this;
g.EventHelper.on(g.EventHelper.POOL_DESTORY_BLOCKLIGHT, function(e) {
t.destroySmoke(e.targetNode);
});
this.blocklightPool = new cc.NodePool();
};
e.prototype.getBlockLight = function(t, e) {
var o = null;
this.blocklightPool.size() > 0 && (o = this.blocklightPool.get());
o && !o.active || (o = cc.instantiate(this.blockLightPrefab));
o.parent = t;
o.position = e;
o.zIndex = f.default.OVERHEAD;
o.scale = this.status == i.STATUS_PARRY ? 2 : 1;
o.opacity = 255;
o.active = !0;
o.getComponent(p.default).show();
};
e.prototype.blockDamage = function(t, e, o, a) {
if (this.status < 0 || this.status == i.STATUS_IDLE || this.status == i.STATUS_PUTDOWN) return 0;
if (e.getTotalDamage() <= 0) return 0;
var n = t.node.parent.convertToNodeSpaceAR(this.node.convertToWorldSpaceAR(cc.Vec2.ZERO));
this.getBlockLight(t.node.parent, cc.v3(n.x, n.y));
if (a) {
if (this.status == i.STATUS_PARRY) {
a.addStatus(d.default.SHIELD_PARRY, new c.default());
a.takeDamage(new s.default(this.data.Common.blockDamage));
t.exTrigger(u.default.GROUP_HURT, u.default.TYPE_HURT_PARRAY, o, a);
}
this.status == i.STATUS_DEFEND && t.exTrigger(u.default.GROUP_HURT, u.default.TYPE_HURT_BLOCK, o, a);
}
return this.status == i.STATUS_PARRY ? i.BLOCK_PARRY : i.BLOCK_NORMAL;
};
e.prototype.destroySmoke = function(t) {
if (t) {
t.active = !1;
this.blocklightPool && this.blocklightPool.put(t);
}
};
e.prototype.playIdle = function() {
if (this.status != i.STATUS_DEFEND && this.status != i.STATUS_PARRY && this.status != i.STATUS_IDLE) {
this.status = i.STATUS_IDLE;
cc.log("等待 isBehind:" + this.isBehind + " zIndex:" + this.node.zIndex);
this.sprite.node.stopAllActions();
var t = 1 == this.data.isHeavy ? .4 : .2, e = cc.tween().to(t, {
y: 2
}).to(t, {
y: -2
});
cc.tween(this.sprite.node).repeatForever(e).start();
}
};
e.prototype.playParry = function(t) {
var e = this;
if (this.status != i.STATUS_PUTDOWN && this.status != i.STATUS_DEFEND && this.status != i.STATUS_PARRY) {
this.status = i.STATUS_PARRY;
var o = 1 == this.data.isHeavy ? .15 : .1, a = 1 == this.data.isHeavy ? .1 : .15, n = i.DEFEND_POS[this.dir].clone(), r = i.TRANSFORM_POS[this.dir].clone();
cc.log("举起 isBehind:" + this.isBehind + " zIndex:" + this.node.zIndex);
t && t.highLight(!0);
cc.tween(this.node).to(o, {
position: r
}).call(function() {
e.node.zIndex = e.isBehind ? e.avatarZindex + i.ZOFFSET : e.avatarZindex - i.ZOFFSET;
e.sprite.node.color = e.isBehind ? cc.Color.WHITE : cc.color(32, 32, 32);
}).to(o, {
position: n
}).delay(a).call(function() {
t && t.highLight(!1);
e.isButtonPressing ? e.playDefend() : e.playPutDown();
}).start();
}
};
e.prototype.playDefend = function() {
if (this.status != i.STATUS_PUTDOWN && this.status != i.STATUS_DEFEND) {
this.status = i.STATUS_DEFEND;
cc.log("防御 isBehind:" + this.isBehind + " zIndex:" + this.node.zIndex);
}
};
e.prototype.playPutDown = function() {
var t = this;
if (this.status != i.STATUS_PUTDOWN && this.status != i.STATUS_IDLE) {
var e = this.isBehindChange ? !this.isBehind : this.isBehind;
this.status = i.STATUS_PUTDOWN;
var o = 1 == this.data.isHeavy ? .2 : .1, a = i.DEFAULT_POS[this.dir].clone(), n = i.TRANSFORM_POS[this.dir].clone();
cc.log("放下 isBehind:" + this.isBehind + " isBehindTemp:" + e + " zIndex:" + this.node.zIndex);
cc.tween(this.node).to(o, {
position: n
}).call(function() {
t.node.zIndex = e ? t.avatarZindex - i.ZOFFSET : t.avatarZindex + i.ZOFFSET;
t.sprite.node.color = e ? cc.color(32, 32, 32) : cc.Color.WHITE;
}).to(o, {
position: a
}).call(function() {
t.playIdle();
}).start();
}
};
e.prototype.changeZIndexByDir = function(t, e) {
if (!this.isAniming) {
this.avatarZindex = t;
this.dir = e;
var o = this.status == i.STATUS_DEFEND, a = t - i.ZOFFSET;
switch (e) {
case r.default.DIR_UP:
a = t + (o ? -i.ZOFFSET : i.ZOFFSET);
this.sprite.node.color = o ? cc.color(32, 32, 32) : cc.Color.WHITE;
break;

case r.default.DIR_DOWN:
a = t + (o ? i.ZOFFSET : -i.ZOFFSET);
this.sprite.node.color = o ? cc.Color.WHITE : cc.color(32, 32, 32);
break;

case r.default.DIR_LEFT:
case r.default.DIR_RIGHT:
a = t + (o ? i.ZOFFSET : -i.ZOFFSET);
this.sprite.node.color = o ? cc.Color.WHITE : cc.color(32, 32, 32);
}
var n = this.isBehind;
this.isBehind = e != r.default.DIR_UP;
this.isBehindChange = this.isBehind != n;
this.node.zIndex = a;
var s = o ? i.DEFEND_POS[e] : i.DEFAULT_POS[e].clone();
this.node.position = s;
}
};
e.prototype.use = function(t) {
this.isButtonPressing = !0;
this.data.equipmetType == h.default.SHIELD && this.status != i.STATUS_PUTDOWN && (this.isDefendOrParrying || this.playParry(t));
};
e.prototype.cancel = function() {
this.isButtonPressing = !1;
this.status == i.STATUS_DEFEND && this.playPutDown();
};
e.prototype.changeRes = function(t) {
if (t && !(t.length < 1)) {
this.sprite.spriteFrame = y.default.spriteFrameRes(t);
this.sprite.node.width = 1 == this.data.isHeavy ? 80 : 64;
this.sprite.node.height = 1 == this.data.isHeavy ? 80 : 64;
this.data.equipmetType == h.default.SHIELD && this.playIdle();
}
};
var i;
e.BLOCK_FAILED = 0;
e.BLOCK_NORMAL = 1;
e.BLOCK_PARRY = 2;
e.STATUS_IDLE = 0;
e.STATUS_PARRY = 1;
e.STATUS_DEFEND = 2;
e.STATUS_PUTDOWN = 3;
e.ZOFFSET = 2;
e.DEFAULT_POS = [ cc.v3(0, 32), cc.v3(0, 48), cc.v3(8, 48), cc.v3(-8, 48) ];
e.TRANSFORM_POS = [ cc.v3(10, 40), cc.v3(10, 40), cc.v3(-32, 44), cc.v3(32, 44) ];
e.DEFEND_POS = [ cc.v3(0, 48), cc.v3(0, 32), cc.v3(-24, 40), cc.v3(24, 40) ];
n([ E(cc.Sprite) ], e.prototype, "sprite", void 0);
n([ E(cc.Prefab) ], e.prototype, "blockLightPrefab", void 0);
return i = n([ v ], e);
}(cc.Component);
i.default = _;
cc._RF.pop();
}, {
"../base/BaseAvatar": "BaseAvatar",
"../data/DamageData": "DamageData",
"../data/EquipmentData": "EquipmentData",
"../data/FromData": "FromData",
"../data/TriggerData": "TriggerData",
"../effect/BlockLight": "BlockLight",
"../manager/InventoryManager": "InventoryManager",
"../manager/StatusManager": "StatusManager",
"../utils/IndexZ": "IndexZ",
"./EventHelper": "EventHelper",
"./Logic": "Logic"
} ],
Shooter: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f9805u1Wn9OeouYmQSWcHcq", "Shooter");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../actor/AreaOfEffect"), s = t("../base/Actor"), l = t("../collider/CCollider"), c = t("../data/BulletData"), u = t("../data/DamageData"), p = t("../data/EquipmentData"), h = t("../data/FromData"), d = t("../ecs/system/GameWorldSystem"), f = t("../item/Bullet"), g = t("../item/Laser"), y = t("../manager/InventoryManager"), m = t("../utils/ActorUtils"), v = t("../utils/AudioPlayer"), E = t("../utils/IndexZ"), _ = t("../utils/NextStep"), T = t("../utils/NodeKey"), D = t("../utils/Utils"), S = t("./Controller"), O = t("./Logic"), A = cc._decorator, R = A.ccclass, C = A.property, P = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.bullet = null;
e.laser = null;
e.isAI = !1;
e.actor = null;
e.isFromPlayer = !1;
e.dungeon = null;
e.player = null;
e.isEx = !1;
e.isAutoAim = !0;
e.bulletName = "";
e.data = new p.default();
e.hv = cc.v2(1, 0);
e.isAiming = !1;
e.remoteDamagePlayer = new u.default();
e.from = new h.default();
e.isBuilding = !1;
e.aoePools = {};
e.aimTargetMap = new Map();
e.sensorTargetMap = new Map();
e.ignoreMap = new Map();
e.defaultPos = cc.v3(0, 0);
e.ignoreEmptyWall = !1;
e.shootBaseHeight = 0;
e.trackStep = new _.default();
return e;
}
i = e;
e.prototype.onLoad = function() {
this.graphics = this.getComponent(cc.Graphics);
this.bulletPool = new cc.NodePool(f.default);
this.laserPool = new cc.NodePool(g.default);
this.sprite = this.node.getChildByName("sprite");
this.anim = this.getComponent(cc.Animation);
for (var t = 0, e = [ l.default.TAG.BOSS, l.default.TAG.BUILDING, l.default.TAG.ENERGY_SHIELD, l.default.TAG.WALL, l.default.TAG.WALL_TOP ]; t < e.length; t++) {
var i = e[t];
this.aimTargetMap.set(i, !0);
}
this.initIgnoreMap(this.getParentNode().getComponent(s.default));
};
e.prototype.init = function() {};
e.prototype.initIgnoreMap = function(t) {
if (!t) return !1;
var e = t.node.getComponentsInChildren(l.default);
if (e && e.length > 0) for (var i = 0, o = e; i < o.length; i++) {
var a = o[i];
this.ignoreMap.set(a.id, !0);
}
return !0;
};
e.prototype.playWalk = function(t) {
if (this.anim) if (t) this.anim.play("ShooterWalk"); else {
this.anim.pause();
this.sprite.y = 0;
}
};
e.prototype.changeRes = function(t, e) {
this.sprite || (this.sprite = this.node.getChildByName("sprite"));
if (this.sprite) {
var i = this.getSpriteFrameByName(t, e);
this.sprite.getComponent(cc.Sprite).spriteFrame = i;
if (!this.isBuilding) {
this.sprite.width = 1.5 * i.getOriginalSize().width;
this.sprite.height = 1.5 * i.getOriginalSize().height;
this.sprite.anchorX = .2;
if (1 == this.data.far) {
this.sprite.width = 2 * this.sprite.width;
this.sprite.height = 2 * this.sprite.height;
this.sprite.anchorX = .5;
}
}
}
};
e.prototype.changeResColor = function(t) {
this.sprite.color = t;
};
e.prototype.getSpriteFrameByName = function(t, e) {
var i = O.default.spriteFrameRes(t + e);
i || (i = O.default.spriteFrameRes(t + "anim0"));
i || (i = O.default.spriteFrameRes(t));
return i;
};
Object.defineProperty(e.prototype, "Hv", {
get: function() {
return this.hv;
},
enumerable: !1,
configurable: !0
});
e.prototype.setHv = function(t) {
var e = this;
if (this.isAI || !S.default.isMouseMode()) {
this.hv = t;
this.trackStep.next(function() {
var t = e.hasNearEnemy();
t.equals(cc.Vec3.ZERO) || (e.hv = cc.v2(t));
e.rotateCollider(cc.v2(e.hv.x, e.hv.y));
}, 1);
this.rotateCollider(cc.v2(this.hv.x, this.hv.y));
}
};
e.prototype.getAoeNode = function(t, e) {
var i = null;
this.aoePools[t.name] || (this.aoePools[t.name] = new cc.NodePool(r.default));
this.aoePools[t.name] && this.aoePools[t.name].size() > 0 && e && (i = this.aoePools[t.name].get());
i && !i.active || (i = cc.instantiate(t));
i.opacity = 255;
i.active = !0;
return i;
};
e.prototype.destroyAoePrefab = function(t) {
if (t) {
this.aoePools[t.key] || (this.aoePools[t.key] = new cc.NodePool(r.default));
t.node.active = !1;
this.aoePools[t.key] && this.aoePools[t.key].put(t.node);
}
};
e.prototype.fireAoe = function(t, e, i, o, a, n) {
var s = this;
if (!this.dungeon) return null;
o || (o = 0);
var l = this.getAoeNode(t, n).getComponent(r.default);
if (l) {
var c = this.node.convertToWorldSpaceAR(i || cc.v3(0, 0));
c = this.dungeon.node.convertToNodeSpaceAR(c);
l.show(this.dungeon.node, c, this.hv, o, e, a, n, function(e) {
if (n) {
e.active = !1;
s.destroyAoePrefab(new T.default(t.name, e));
}
});
}
return l;
};
e.prototype.updateCustomAoe = function(t, e, i, o, a, n, r, s, c, u, p) {
if (t.node.getChildByName("sprite") && t.node.getChildByName("sprite").getComponent(cc.Sprite)) {
var h = t.node.getChildByName("sprite").getComponent(cc.Sprite), d = t.getComponent(l.default);
if (e.length > 0) {
var f = e[0];
h.node.width = f.getOriginalSize().width;
h.node.height = f.getOriginalSize().height;
h.node.opacity = null != r ? r : 255;
h.node.stopAllActions();
h.node.color = cc.Color.WHITE;
n && (h.node.color = n);
h.node.scaleX = o ? a : -a;
h.node.scaleY = c ? -a : a;
d.w = h.node.width * a * .75;
d.h = h.node.height * a * .75;
if (0 != u && 0 != p) {
d.w = u;
d.h = p;
}
}
for (var g = cc.tween(), y = function(t) {
g.then(cc.tween().call(function() {
h.spriteFrame = t;
}).delay(.2));
}, m = 0, v = e; m < v.length; m++) y(v[m]);
if (i) cc.tween(h.node).repeatForever(g).start(); else {
var E = cc.tween().to(.2, {
opacity: s ? 0 : 255
});
cc.tween(h.node).then(g).then(E).call(function() {
h.spriteFrame = null;
}).start();
}
}
};
e.prototype.fireBullet = function(t, e, i, o, a, n) {
e && (this.defaultPos = e.clone());
1 == this.data.isLineAim && this.graphics ? this.aimTargetLine(t, e, i, o, a, n) : this.fireBulletDo(t, e, i, o, a, n, "");
};
e.prototype.fireSplitBullet = function(t, e, i, o, a, n, r) {
this.fireBulletDo(e, i, o, a, n, r, t);
};
e.prototype.fireBulletDo = function(t, e, o, a, n, r, s) {
var l = this;
if (this.sprite && s.length < 1) {
this.sprite.stopAllActions();
this.sprite.position = cc.Vec3.ZERO;
cc.tween(this.sprite).call(function() {
l.changeRes(l.data.img, "anim1");
}).by(.1, {
position: cc.v3(10, 0)
}).call(function() {
l.changeRes(l.data.img, "anim2");
}).by(.05, {
position: cc.v3(-5, 0)
}).by(.05, {
position: cc.v3(0, 0)
}).call(function() {
l.changeRes(l.data.img, "anim0");
}).start();
}
t || (t = 0);
if (this.dungeon && (!(s.length < 1) || this.isAI || this.isEx || this.player.inventoryManager.equips[y.default.REMOTE].equipmetType == y.default.REMOTE)) {
s.length < 1 && (this.data.remoteAudio && this.data.remoteAudio.length > 0 ? v.default.play(this.data.remoteAudio) : v.default.play(v.default.SHOOT));
var c = !1, u = s.length > 0 ? s : this.data.bulletType, p = (o || 0) + (s.length > 0 ? 0 : this.data.bulletArcExNum), h = [ 10, -10, 20, -20, 30, -30, 40, -40, 50, -50, 60, -60, -70, -70, 80, -80, 90, -90, 100, -100, 110, -110, 120, -120, 130, -130, 140, -140, 150, -150, 160, -160, 170, -170, 180, -180 ];
if (p > h.length) {
h = [ 0, 20, 45, 65, 90, 110, 135, 155, 180, 200, 225, 245, 270, 290, 315, 335 ];
p == i.ARC_EX_NUM_8 && (h = [ 0, 45, 90, 135, 180, 225, 270, 315, 335 ]);
c = !0;
} else this.fire(u, t, this.hv.clone(), e, this.data.bulletArcOffsetX, n, r);
this.fireArcBullet(u, e, p, n, r, h, this.data.bulletArcOffsetX);
this.fireLineBullet(u, t, e, p, a, n, r, h, c, this.data.bulletArcOffsetX);
}
};
e.prototype.fireArcBullet = function(t, e, i, o, a, n, r) {
if (!(i <= 0)) for (var s = 0; s < i; s++) s < n.length && this.fire(t, n[s], this.hv.clone(), e, r, o, a);
};
e.prototype.fireLineBullet = function(t, e, i, o, a, n, r, s, l, c) {
var u = this, p = a ? this.data.bulletLineExNum + a : this.data.bulletLineExNum;
0 != p && this.schedule(function() {
l || u.fire(t, e, u.hv.clone(), i, c, n, r);
u.fireArcBullet(t, i, o, n, r, s, c);
}, this.data.bulletLineInterval > 0 ? this.data.bulletLineInterval : .2, p, 0);
};
e.prototype.fire = function(t, e, i, o, a, n, r) {
var s = O.default.bullets[t], l = this.bullet, c = this.bulletPool, u = s.isLaser > 0;
if (u) {
l = this.laser;
c = this.laserPool;
}
var p = null;
c.size() > 0 && (p = c.get());
p && !p.active || (p = cc.instantiate(l));
var h = this.getFireBasePos(o, a, e, this.shootBaseHeight);
p.parent = this.dungeon.node;
p.scaleX = 1;
p.scaleY = 1;
p.active = !0;
if (u) {
p.position = cc.v3(h.x, h.y + this.shootBaseHeight);
this.showLaser(e, i, p, s, cc.v3(h.x, h.y + this.shootBaseHeight), h.z + this.shootBaseHeight);
} else {
p.position = cc.v3(h.x, h.y + this.shootBaseHeight);
this.showBullet(e, i, p, s, cc.v3(h.x, h.y + this.shootBaseHeight), h.z + this.shootBaseHeight, n, r);
}
};
e.prototype.getFireBasePos = function(t, e, i, o) {
var a = cc.v3(0, 0);
if (t) {
a = t.clone();
e && 0 != e && a.addSelf(cc.v3(cc.v2(e, 0).rotateSelf((null != i ? i : 0 * Math.PI) / 180)));
}
var n = this.node.convertToWorldSpaceAR(a), r = this.getParentNode().convertToNodeSpaceAR(n).y;
r < 0 && (r = 0);
n = this.dungeon.node.convertToNodeSpaceAR(n);
if (o && o <= r) {
r = o;
n.y -= r;
} else n.y = this.getParentNode().y;
n.z = r;
return n;
};
e.prototype.showBullet = function(t, e, i, o, a, n, r, s) {
var l = i.getComponent(f.default);
l.entity.Transform.position = a;
l.shooter = this;
l.node.scaleY = this.node.scaleX > 0 ? 1 : -1;
l.node.zIndex = E.default.OVERHEAD;
l.isFromPlayer = !this.isAI || this.isFromPlayer;
l.dungeon = this.dungeon;
l.ignoreEmptyWall = this.ignoreEmptyWall;
var u = new c.default();
u.valueCopy(o);
if (l.isFromPlayer && this.player && !this.isEx) {
u.damage.physicalDamage = this.remoteDamagePlayer.physicalDamage;
u.damage.isCriticalStrike = this.remoteDamagePlayer.isCriticalStrike;
}
u.size += this.data.bulletSize;
u.speed += this.data.bulletExSpeed;
u.speed + this.data.bulletExSpeed > .5 && (u.speed += this.data.bulletExSpeed);
u.from.valueCopy(this.from);
l.changeBullet(u, n);
this.bulletName = l.name + u.resName;
l.enabled = !0;
l.aoeData.valueCopy(s);
l.aoePrefab = r;
l.showBullet(cc.v2(cc.v2(e).rotateSelf(t * Math.PI / 180)).normalize());
};
e.prototype.showLaser = function(t, e, i, o, a, n) {
var r = i.getComponent(g.default);
r.entity.Transform.position = a;
r.shooter = this;
r.node.scaleY = this.node.scaleX > 0 ? 1 : -1;
r.node.zIndex = E.default.OVERHEAD;
r.isFromPlayer = !this.isAI || this.isFromPlayer;
r.dungeon = this.dungeon;
var s = new c.default();
s.valueCopy(o);
if (r.isFromPlayer && this.player && !this.isEx) {
s.damage.physicalDamage = this.remoteDamagePlayer.physicalDamage;
s.damage.isCriticalStrike = this.remoteDamagePlayer.isCriticalStrike;
}
s.size += this.data.bulletSize;
s.speed += this.data.bulletExSpeed;
s.speed + this.data.bulletExSpeed > .5 && (s.speed += this.data.bulletExSpeed);
s.from.valueCopy(this.from);
r.changeBullet(s, n);
this.bulletName = r.name + s.resName;
r.enabled = !0;
r.fire(cc.v2(e).rotateSelf(t * Math.PI / 180), t);
};
e.prototype.addDestroyBullet = function(t, e) {
t.active = !1;
this.destroyBullet(t, e);
};
e.prototype.destroyBullet = function(t, e) {
e ? this.laserPool && t && this.laserPool.put(t) : this.bulletPool && t && this.bulletPool.put(t);
};
e.prototype.start = function() {};
e.prototype.drawLine = function(t, e, i) {
if (this.graphics) {
this.graphics.clear();
this.graphics.fillColor = t;
this.graphics.circle(0, 0, i / 2 + 1);
this.graphics.circle(e, 0, i / 2 + 1);
this.graphics.rect(0, -i / 2, e, i);
this.graphics.fill();
}
};
e.prototype.getRayCastPoint = function(t, e) {
var i = e || cc.v3(0, 0), o = t || 3e3, a = cc.v3(o, 0), n = this.node.convertToWorldSpaceAR(i), r = this.node.convertToWorldSpaceAR(a);
this.isFromPlayer && this.sensorTargetMap.has(l.default.TAG.ENERGY_SHIELD) ? this.sensorTargetMap.delete(l.default.TAG.ENERGY_SHIELD) : this.sensorTargetMap.set(l.default.TAG.ENERGY_SHIELD, !0);
var s = d.default.colliderSystem.nearestRayCast(cc.v2(n), cc.v2(r), this.actor.entity.Transform.z, 32, this.aimTargetMap, this.sensorTargetMap, this.ignoreMap);
s && (a = this.node.convertToNodeSpaceAR(cc.v3(s.point)));
return a;
};
e.prototype.aimTargetLine = function(t, e, i, o, a, n) {
var r = this;
if (!this.isAiming) {
this.isAiming = !0;
if (this.graphics) {
var s = 0, l = this.getRayCastPoint(3e3, e), c = !1, u = function() {
if (s < 1 && c) {
r.fireBulletDo(t, e, i, o, a, n, "");
r.unschedule(u);
r.graphics.clear();
r.isAiming = !1;
} else r.drawLine(cc.color(255, 0, 0, 200), l.x, s);
s > 10 && !c ? c = !0 : c ? s -= 1 : s += 1;
};
this.schedule(u, .02, 30);
}
}
};
e.prototype.drawArc = function(t) {
if (this.graphics) {
this.graphics.clear();
if (!(t < 0)) {
var e = 1e3, i = 2 * -t * Math.PI / 360, o = 2 * t * Math.PI / 360, a = cc.v3(e * Math.cos(i), e * Math.sin(i)), n = cc.v3(e * Math.cos(o), e * Math.sin(o));
this.graphics.arc(0, 0, e, 2 * Math.PI - i, 2 * Math.PI - o);
this.graphics.fill();
this.graphics.moveTo(0, 0);
this.graphics.lineTo(a.x, a.y);
this.graphics.lineTo(n.x, n.y);
this.graphics.close();
this.graphics.fill();
}
}
};
e.prototype.updateLogic = function() {
if (!this.isAI && S.default.isMouseMode() && S.default.mousePos && this.dungeon) {
var t = cc.v2(this.dungeon.node.convertToWorldSpaceAR(this.player.node.position)), e = S.default.mousePos.add(cc.v2(this.dungeon.mainCamera.node.position)).sub(t).normalize();
if (!e.equals(cc.Vec2.ZERO)) {
this.hv = e;
this.rotateCollider(cc.v2(this.hv.x, this.hv.y));
}
}
};
e.prototype.getParentNode = function() {
return this.actor ? this.actor.node : this.node.parent;
};
e.prototype.hasNearEnemy = function() {
return this.isAutoAim && !this.isAI && this.dungeon ? m.default.getDirectionFromNearestEnemy(this.player.node.position, this.isAI, this.dungeon, !1, 600) : cc.Vec3.ZERO;
};
e.prototype.rotateCollider = function(t) {
if (!t.equals(cc.Vec2.ZERO)) {
var e = Math.abs(this.node.scaleX);
this.node.scaleX = this.getParentNode().scaleX > 0 ? e : -e;
var i = Math.abs(this.node.scaleY);
this.node.scaleY = this.node.scaleX < 0 ? -i : i;
this.node.angle = D.default.getRotateAngle(t, this.node.scaleX < 0);
}
};
var i;
e.DefAULT_SPEED = 300;
e.ARC_EX_NUM_8 = 80;
e.ARC_EX_NUM_16 = 99;
n([ C(cc.Prefab) ], e.prototype, "bullet", void 0);
n([ C(cc.Prefab) ], e.prototype, "laser", void 0);
n([ C ], e.prototype, "isAI", void 0);
return i = n([ R ], e);
}(cc.Component);
i.default = P;
cc._RF.pop();
}, {
"../actor/AreaOfEffect": "AreaOfEffect",
"../base/Actor": "Actor",
"../collider/CCollider": "CCollider",
"../data/BulletData": "BulletData",
"../data/DamageData": "DamageData",
"../data/EquipmentData": "EquipmentData",
"../data/FromData": "FromData",
"../ecs/system/GameWorldSystem": "GameWorldSystem",
"../item/Bullet": "Bullet",
"../item/Laser": "Laser",
"../manager/InventoryManager": "InventoryManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/NextStep": "NextStep",
"../utils/NodeKey": "NodeKey",
"../utils/Utils": "Utils",
"./Controller": "Controller",
"./Logic": "Logic"
} ],
ShopMart: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1b8085+xzBE16cPL5KYFJeE", "ShopMart");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Player"), s = t("./Building"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isOpen = !1;
return e;
}
e.prototype.onLoad = function() {
this.anim = this.getComponent(cc.Animation);
};
e.prototype.open = function() {};
e.prototype.close = function() {};
e.prototype.onColliderEnter = function(t) {
t.node.getComponent(r.default) && this.open();
};
e.prototype.onColliderExit = function(t) {
t.node.getComponent(r.default) && this.close();
};
return n([ c ], e);
}(s.default));
i.default = u;
cc._RF.pop();
}, {
"../logic/Player": "Player",
"./Building": "Building"
} ],
ShopTable: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "feb404aValPAJxRKh4uvHLm", "ShopTable");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Logic"), l = t("./Building"), c = t("../utils/IndexZ"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
i = e;
e.prototype.onLoad = function() {
this.info = this.node.getChildByName("info");
this.label = this.info.getComponentInChildren(cc.Label);
};
e.prototype.start = function() {};
e.prototype.showItem = function() {
if (this.node.parent) if (this.data.isSaled) this.sale(!0); else {
var t = this.node.parent.getComponent(r.default);
if (t) {
var e = s.default.mapManager.getRandom4Save(s.default.mapManager.getRebornSeed(this.seed));
this.data.shopType == i.EQUIPMENT ? t.addEquipment(s.default.getRandomEquipType(e), r.default.getPosInMap(this.data.defaultPos), this.data.equipdata, 3, this) : this.data.shopType == i.ITEM && t.addItem(r.default.getPosInMap(this.data.defaultPos), s.default.getRandomItemType(e), 0, this);
}
this.sale(!1);
}
};
e.prototype.setDefaultPos = function(t) {
this.data.defaultPos = t;
this.entity.Transform.position = r.default.getPosInMap(t);
this.node.position = this.entity.Transform.position.clone();
this.node.zIndex = c.default.getActorZIndex(this.entity.Transform.position);
};
e.prototype.sale = function(t) {
this.info || (this.info = this.node.getChildByName("info"));
this.label || (this.label = this.info.getComponentInChildren(cc.Label));
this.data.isSaled = t;
this.label.string = "" + this.data.price;
this.info.opacity = this.data.isSaled ? 0 : 255;
var e = s.default.mapManager.getCurrentMapBuilding(this.data.defaultPos);
e && e.valueCopy(this.data);
};
var i;
e.EQUIPMENT = 0;
e.ITEM = 1;
return i = n([ p ], e);
}(l.default));
i.default = h;
cc._RF.pop();
}, {
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
SlimeVenom: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "a7fa4vRR+xDO6TrjB6jQViO", "SlimeVenom");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = t("../data/DamageData"), l = t("../base/Actor"), c = t("../data/FromData"), u = t("../logic/EventHelper"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.isHide = !1;
e.isForever = !1;
e.from = c.default.getClone("史莱姆毒液", "venom");
e.checkTimeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.venom1 = this.node.getChildByName("sprite").getChildByName("venom1");
this.venom2 = this.node.getChildByName("sprite").getChildByName("venom2");
this.venom3 = this.node.getChildByName("sprite").getChildByName("venom2");
this.anim = this.getComponent(cc.Animation);
this.sprite = this.node.getChildByName("sprite");
};
e.prototype.onEnable = function() {
var t = this;
this.isHide = !1;
this.sprite.opacity = 255;
this.venom1.angle = r.default.getRandomNum(0, 180);
this.venom2.angle = r.default.getRandomNum(0, 180);
this.venom2.angle = r.default.getRandomNum(0, 180);
this.anim.play();
this.isForever || this.scheduleOnce(function() {
if (t.anim) {
t.isHide = !0;
t.anim.play("VenomHide");
t.scheduleOnce(function() {
u.EventHelper.emit("destoryvenom", {
coinNode: t.node
});
}, 1.5);
}
}, 3);
this.damagePlayer(this.from);
};
e.prototype.addStatus = function() {};
e.prototype.getNearPlayerDistance = function(t) {
return r.default.getDistanceNoSqrt(this.node.position, t.position);
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 1) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.update = function(t) {
r.default.isGamePause || this.isCheckTimeDelay(t) && this.damagePlayer(this.from);
};
e.prototype.damagePlayer = function(t) {
if (this.target && this.getNearPlayerDistance(this.target.node) < 60 * this.node.scale && this.node.active && !this.isHide) {
var e = new s.default();
e.magicDamage = 3;
this.target.takeDamage(e, t);
}
};
e.prototype.getCenterPosition = function() {
return this.node.position.clone();
};
e.prototype.takeDamage = function() {
return !1;
};
e.prototype.actorName = function() {
return "史莱姆毒液";
};
e.prototype.takeDizz = function() {};
e.prototype.updateStatus = function() {};
e.prototype.hideSelf = function() {};
e.prototype.updateLife = function() {};
e.prototype.updateDream = function() {
return 0;
};
e.prototype.setLinearVelocity = function() {};
return n([ h ], e);
}(l.default));
i.default = d;
cc._RF.pop();
}, {
"../base/Actor": "Actor",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic"
} ],
Slime: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "68790KdPQVN37qkvHYOgA/X", "Slime");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Boss"), s = t("../logic/EventHelper"), l = t("../logic/Logic"), c = t("../logic/Dungeon"), u = t("./SlimeVenom"), p = t("../manager/MonsterManager"), h = t("../utils/NextStep"), d = t("../utils/AudioPlayer"), f = t("../data/FromData"), g = t("../logic/Achievement"), y = t("../item/Item"), m = t("../utils/IndexZ"), v = t("../utils/ActorUtils"), E = t("../collider/CCollider"), _ = cc._decorator, T = _.ccclass, D = _.property, S = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.venom = null;
e.healthBar = null;
e.isFaceRight = !0;
e.isMoving = !1;
e.timeDelay = 0;
e.isHurt = !1;
e.isCrownFall = !1;
e.isDashing = !1;
e.currentlinearVelocitySpeed = cc.Vec2.ZERO;
e.scaleSize = 1;
e.slimeType = 0;
e.meleeSkill = new h.default();
e.venomTimeDelay = 0;
e.childSlimeTimeDelay = 0;
return e;
}
i = e;
e.prototype.init = function(t) {
switch (t) {
case 0:
this.scaleSize = 2;
break;

case 1:
this.scaleSize = 1.5;
break;

case 2:
this.scaleSize = 1;
break;

case 3:
this.scaleSize = .5;
break;

case 4:
this.scaleSize = .3;
break;

case 5:
default:
this.scaleSize = .2;
}
this.slimeType = t;
this.node.scaleY = this.scaleSize;
this.node.scaleX = this.scaleSize;
};
e.prototype.onLoad = function() {
var t = this;
this.meleeSkill.IsExcuting = !1;
this.sc.isDied = !1;
this.anim = this.getComponent(cc.Animation);
this.updatePlayerPos();
this.venomPool = new cc.NodePool();
this.sprite = this.node.getChildByName("sprite");
this.crown = this.sprite.getChildByName("crown");
this.decorate = this.node.getChildByName("sprite").getChildByName("body").getChildByName("decorate");
this.dashlight = this.sprite.getChildByName("dashlight");
this.dashlight.opacity = 0;
s.EventHelper.on("destoryvenom", function(e) {
t.destroyVenom(e.coinNode);
});
this.scheduleOnce(function() {
t.sc.isShow = !0;
t.entity.NodeRender.node = t.node;
t.entity.Move.damping = 6;
}, 1);
};
e.prototype.start = function() {
t.prototype.start.call(this);
this.crown && 0 != this.slimeType && (this.crown.opacity = 0);
this.decorate && this.slimeType > 2 && (this.decorate.opacity = 0);
};
e.prototype.getVenom = function(t, e) {
if (!(this.scaleSize < 1 || this.sc.isDied)) {
var i = null;
this.venomPool.size() > 0 && (i = this.venomPool.get());
i && !i.active || (i = cc.instantiate(this.venom));
i.parent = t;
i.position = e;
i.scale = 0 == this.slimeType ? 1.5 : 1;
i.getComponent(u.default).target = this.dungeon.player;
i.zIndex = m.default.getActorZIndex(this.entity.Transform.position);
i.opacity = 255;
i.active = !0;
}
};
e.prototype.destroyVenom = function(t) {
if (t) {
t.active = !1;
this.venomPool && this.venomPool.put(t);
}
};
e.prototype.AnimAttacking = function() {
this.meleeSkill.IsExcuting = !1;
var t = 64 + 50 * this.scaleSize, e = v.default.getNearestEnemyActor(this.entity.Transform.position, !0, this.dungeon);
v.default.getTargetDistance(this, e) < t && e && e.takeDamage(this.data.getAttackPoint(), f.default.getClone(this.actorName(), "bossslimehelmet"), this);
};
e.prototype.onColliderEnter = function(t, e) {
if (e.tag == E.default.TAG.BOSS_HIT) {
var i = v.default.getEnemyCollisionTarget(t);
if (i && this.isDashing && this.dungeon && !this.isHurt && !this.sc.isDied) {
this.isDashing = !1;
this.entity.Move.linearVelocity = cc.Vec2.ZERO;
i.takeDamage(this.data.getAttackPoint(), f.default.getClone(this.actorName(), "bossslimehelmet"), this);
}
}
};
e.prototype.isVenomTimeDelay = function(t) {
this.venomTimeDelay += t;
if (this.venomTimeDelay > .2) {
this.venomTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.isChildSlimeTimeDelay = function(t) {
this.childSlimeTimeDelay += t;
if (this.childSlimeTimeDelay > 5) {
this.childSlimeTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t) {
this.healthBar.node.active = !this.sc.isDied;
this.timeDelay += t;
if (this.timeDelay > .016) {
this.timeDelay = 0;
this.bossAction();
}
this.dashlight.opacity = 0;
if (this.dungeon && this.isDashing) {
this.dashlight.opacity = 128;
this.entity.Move.linearVelocity = this.currentlinearVelocitySpeed.clone();
}
this.dungeon && this.getNearPlayerDistance(this.dungeon.player.node) < 64 && !this.isHurt && (this.entity.Move.linearVelocity = cc.v2(0, 0));
this.sc.isDied && (this.entity.Move.linearVelocity = cc.Vec2.ZERO);
this.healthBar.node.active = !this.sc.isDied;
this.data.currentHealth < 1 && this.killed();
this.node.scaleY = this.scaleSize;
this.node.scaleX = this.isFaceRight ? this.scaleSize : -this.scaleSize;
this.isVenomTimeDelay(t) && this.isMoving && !this.meleeSkill.IsExcuting && this.getVenom(this.node.parent, this.entity.Transform.position);
if (this.isChildSlimeTimeDelay(t) && !this.sc.isDied && 0 == this.slimeType && this.dungeon) {
for (var e = 0, i = 0, o = this.dungeon.monsterManager.monsterList; i < o.length; i++) o[i].sc.isDied || e++;
if (e < 10 && this.dungeon.monsterManager.monsterList.length < 50) {
var a = c.default.getIndexInMap(this.entity.Transform.position.clone());
this.dungeon.monsterManager.addMonsterFromData(p.default.MONSTER_SLIME, a, this.dungeon, !0);
}
}
};
e.prototype.takeDamage = function(t) {
var e = this;
if (this.sc.isDied || !this.sc.isShow) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.isHurt = !0;
this.isDashing = !1;
this.scheduleOnce(function() {
e.node && (e.isHurt = !1);
}, .1);
this.anim.play("SlimeHit");
this.meleeSkill.IsExcuting = !1;
if (this.data.currentHealth < this.data.Common.MaxHealth / 2 && !this.isCrownFall && 0 == this.slimeType) {
this.isCrownFall = !0;
this.sc.isShow = !1;
this.scheduleOnce(function() {
e.sc.isShow = !0;
e.crown.opacity = 0;
}, 1);
this.anim.play("SlimeCrownFall");
}
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
var i = [ d.default.MONSTER_HIT, d.default.MONSTER_HIT1, d.default.MONSTER_HIT2 ];
d.default.play(i[l.default.getRandomNum(0, 2)]);
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
this.sc.isDied = !0;
this.isDashing = !1;
this.anim.play("SlimeDie");
this.getComponent(E.default).sensor = !0;
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
if (this.dungeon) {
if (0 == this.slimeType) {
var e = l.default.mapManager.getRandom4Save(this.seed);
g.default.addMonsterKillAchievement(this.data.resName);
s.EventHelper.emit(s.EventHelper.DUNGEON_ADD_OILGOLD, {
pos: this.entity.Transform.position,
count: 100
});
s.EventHelper.emit(s.EventHelper.DUNGEON_ADD_ITEM, {
pos: this.entity.Transform.position,
res: y.default.HEART
});
s.EventHelper.emit(s.EventHelper.DUNGEON_ADD_ITEM, {
pos: this.entity.Transform.position,
res: y.default.DREAM
});
this.dungeon.addEquipment(l.default.getRandomEquipType(e), c.default.getPosInMap(this.pos), null, 4);
}
if (this.slimeType < i.DIVIDE_COUNT) {
s.EventHelper.emit(s.EventHelper.DUNGEON_ADD_COIN, {
pos: this.entity.Transform.position,
count: 5
});
s.EventHelper.emit(s.EventHelper.BOSS_ADDSLIME, {
posIndex: this.pos.clone(),
slimeType: this.slimeType + 1
});
s.EventHelper.emit(s.EventHelper.BOSS_ADDSLIME, {
posIndex: this.pos.clone(),
slimeType: this.slimeType + 1
});
}
}
}
};
e.prototype.bossAction = function() {
var t = this;
if (!this.sc.isDied && this.dungeon && !this.isHurt) {
var e = cc.v3(0, 0);
e.x += l.default.getRandomNum(0, 2e3) - 1e3;
e.y += l.default.getRandomNum(0, 2e3) - 1e3;
var i = this.getNearPlayerDistance(this.dungeon.player.node);
this.entity.Transform.position = c.default.fixOuterMap(this.entity.Transform.position);
this.pos = c.default.getIndexInMap(this.entity.Transform.position);
this.changeZIndex();
var o = e.clone();
if (i < 64 + 50 * this.scaleSize && !this.dungeon.player.sc.isDied && !this.isDashing && this.sc.isShow && this.scaleSize >= 1) {
(o = this.dungeon.player.getCenterPosition().sub(this.entity.Transform.position)).equals(cc.Vec3.ZERO) || (o = o.normalizeSelf());
if (!this.anim.getAnimationState("SlimeAttack").isPlaying) {
this.meleeSkill.IsExcuting = !0;
this.anim.play("SlimeAttack");
}
}
var a = 6 - 1 * this.scaleSize;
a < 0 && (a = .5);
if (i > 128 + 35 * this.scaleSize && !this.dungeon.player.sc.isDied && !this.isDashing && this.sc.isShow && l.default.getHalfChance()) {
d.default.play(d.default.MELEE);
l.default.getHalfChance() && (o = this.dungeon.player.getCenterPosition().sub(this.entity.Transform.position));
this.move(o, 1.5 * a);
this.isDashing = !0;
this.scheduleOnce(function() {
t.node && (t.isDashing = !1);
}, 2);
}
l.default.getRandomNum(1, 10) < 3 && this.move(o, a);
}
};
e.prototype.move = function(t, e) {
if (!(this.sc.isDied || this.isHurt || this.isDashing || !this.sc.isShow || this.meleeSkill.IsExcuting || t.equals(cc.Vec3.ZERO))) {
t.equals(cc.Vec3.ZERO) || (this.pos = c.default.getIndexInMap(this.entity.Transform.position));
var i = t.x, o = t.y, a = (Math.abs(i), Math.abs(o), cc.v2(i, o));
a = a.normalize().mul(e);
this.entity.Move.linearVelocity = a.clone();
this.currentlinearVelocitySpeed = a.clone();
this.isMoving = 0 != i || 0 != o;
this.isMoving && (this.isFaceRight = i > 0);
var n = this.anim.getAnimationState("SlimeAttack").isPlaying;
this.anim.getAnimationState("SlimeIdle").isPlaying || n || this.anim.play("SlimeIdle");
this.changeZIndex();
}
};
e.prototype.actorName = function() {
return "史莱姆之王";
};
var i;
e.DIVIDE_COUNT = 4;
n([ D(cc.Prefab) ], e.prototype, "venom", void 0);
return i = n([ T ], e);
}(r.default);
i.default = S;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/FromData": "FromData",
"../item/Item": "Item",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/MonsterManager": "MonsterManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"../utils/NextStep": "NextStep",
"./Boss": "Boss",
"./SlimeVenom": "SlimeVenom"
} ],
SpecialManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e58b4559dND3JlWZESKg4rV", "SpecialManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../boss/SlimeVenom"), s = t("../data/DamageData"), l = t("./StatusManager"), c = t("../logic/NonPlayer"), u = t("../utils/IndexZ"), p = t("../actor/AreaOfEffect"), h = t("../data/AreaOfEffectData"), d = t("../logic/Logic"), f = t("../logic/EventHelper"), g = t("../utils/AudioPlayer"), y = t("../collider/CCollider"), m = cc._decorator, v = m.ccclass, E = m.property, _ = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.aoe = null;
e.venom = null;
e.howl = null;
e.claw = null;
e.blade = null;
return e;
}
i = e;
e.prototype.clear = function() {};
e.prototype.addPlacement = function(t, e, o, a, n) {
if (this.dungeon) {
var r = this.node.convertToWorldSpaceAR(cc.v3(e, 0));
r = this.dungeon.node.convertToNodeSpaceAR(r);
switch (t) {
case i.AFTER_VENOM:
this.addVenom(r, o, a, n);
break;

case i.AFTER_CLAW:
this.addClaw(r, o, a, n);
break;

case i.AFTER_BLADE:
this.addBlade(r, o, a, n);
break;

case i.AFTER_ASH:
this.addAoe(r, new h.default().init(.3, .3, .1, n ? 4 : 3, u.default.getActorZIndex(this.node.parent.position), !0, !0, !0, !1, !1, new s.default(2), a, [ l.default.DIZZ ]), [ "ash001", "ash002", "ash003", "ash004" ], !1, o);
f.EventHelper.emit(f.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: !0
});

case i.AFTER_ICE:
g.default.play(g.default.ICEBOOM);
this.addAoe(r, new h.default().init(.8, 1, .2, n ? 3 : 2, u.default.getActorZIndex(this.node.parent.position), !0, !0, !0, !1, !1, new s.default(3), a, [ l.default.FROZEN ]), [ "ice001", "ice002", "ice002", "ice003", "ice004" ], !1, o);
f.EventHelper.emit(f.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: !1
});
break;

case i.AFTER_DOWN:
g.default.play(g.default.ZOMBIE_FALL);
this.addAoe(r, new h.default().init(.3, 1, .1, n ? 2 : 1, u.default.getActorZIndex(this.node.parent.position), !0, !0, !0, !1, !1, new s.default(1), a, [ l.default.FALLEN_DOWN ]), [ "ash001", "ash002", "ash003", "ash004" ], !1, o);
f.EventHelper.emit(f.EventHelper.CAMERA_SHAKE, {
isHeavyShaking: !1
});
break;

case i.AFTER_SWORD:
r.y += 32;
this.addAoe(r, new h.default().init(.4, .1, 0, n ? 3 : 2, u.default.getActorZIndex(this.node.parent.position), !0, !0, !0, !1, !1, new s.default(4), a, [ l.default.BLEEDING ]), [ "specialswordlight001", "specialswordlight002", "specialswordlight003", "specialswordlight004" ], !1, o);
}
}
};
e.prototype.addEffect = function(t, e, o, a, n) {
if (this.dungeon) {
var r = this.node.convertToWorldSpaceAR(cc.v3(e, 0));
r = this.dungeon.node.convertToNodeSpaceAR(r);
switch (t) {
case i.BEFORE_HOWL:
this.addHowl(r, o, a, n);
}
}
};
e.prototype.addVenom = function(t, e, i, o) {
var a = cc.instantiate(this.venom);
a.getComponent(r.default).target = this.dungeon.player;
a.getComponent(r.default).isForever = !1;
a.getComponent(r.default).from.valueCopy(i);
a.parent = this.dungeon.node;
a.position = t;
a.zIndex = u.default.ACTOR;
a.scale = 0;
cc.tween(a).to(.5, {
scale: o ? 3 : 2
}).start();
g.default.play(g.default.ZOMBIE_SPITTING1);
};
e.prototype.addHowl = function(t, e, i, o) {
var a = this.node.parent.getComponent(c.default);
a && a.addStatus(l.default.WEREWOLFDEFENCE, i);
var n = cc.instantiate(this.howl);
n.getComponent(p.default).show(this.dungeon.node, t, cc.v2(1, 0), 0, new h.default().init(0, 2, 1.5, o ? 3 : 2, u.default.getActorZIndex(n.position), !0, !1, !0, !1, !1, new s.default(1), i, [ l.default.DIZZ ]));
};
e.prototype.addClaw = function(t, e, i, o) {
var a = cc.instantiate(this.claw);
t.y += 32;
a.getComponent(p.default).show(this.dungeon.node, t, cc.v2(1, 0), 0, new h.default().init(0, .15, .1, o ? 2 : 1, u.default.getActorZIndex(a.position), !0, !1, !0, !1, !1, new s.default(2), i, [ l.default.BLEEDING ]));
};
e.prototype.addAoe = function(t, e, i, o, a) {
var n = cc.instantiate(this.aoe);
t.y += 32;
var r = n.getChildByName("sprite").getComponent(cc.Sprite), s = n.getComponent(y.default);
if (i.length > 0) {
var l = d.default.spriteFrameRes(i[0]);
r.node.width = l.getOriginalSize().width;
r.node.height = l.getOriginalSize().height;
r.node.scale = 4;
r.node.scaleX = a ? 4 : -4;
s.w = 3 * r.node.width;
s.h = 3 * r.node.height;
}
for (var c = cc.tween(), u = function(t) {
c.then(cc.tween().delay(.2).call(function() {
r.spriteFrame = d.default.spriteFrameRes(t);
}));
}, h = 0, f = i; h < f.length; h++) u(f[h]);
o ? cc.tween(n).repeatForever(c).start() : cc.tween(n).then(c).delay(.2).call(function() {
r.spriteFrame = null;
}).start();
n.getComponent(p.default).show(this.dungeon.node, t, cc.v2(1, 0), 0, e);
};
e.prototype.addBlade = function(t, e, i, o) {
var a = cc.instantiate(this.blade);
t.y += 64;
a.scaleX = e ? 1 : -1;
a.getComponent(p.default).show(this.dungeon.node, t, cc.v2(1, 0), 0, new h.default().init(0, .2, .1, o ? 2 : 1, u.default.getActorZIndex(a.position), !0, !1, !0, !1, !1, new s.default(2), i, []));
};
var i;
e.BEFORE_HOWL = "special015";
e.AFTER_VENOM = "special019";
e.AFTER_CLAW = "special024";
e.AFTER_BLADE = "special008";
e.AFTER_ASH = "special030";
e.AFTER_ICE = "special031";
e.AFTER_DOWN = "special032";
e.AFTER_SWORD = "special033";
n([ E(cc.Prefab) ], e.prototype, "aoe", void 0);
n([ E(cc.Prefab) ], e.prototype, "venom", void 0);
n([ E(cc.Prefab) ], e.prototype, "howl", void 0);
n([ E(cc.Prefab) ], e.prototype, "claw", void 0);
n([ E(cc.Prefab) ], e.prototype, "blade", void 0);
return i = n([ v ], e);
}(cc.Component);
i.default = _;
cc._RF.pop();
}, {
"../actor/AreaOfEffect": "AreaOfEffect",
"../boss/SlimeVenom": "SlimeVenom",
"../collider/CCollider": "CCollider",
"../data/AreaOfEffectData": "AreaOfEffectData",
"../data/DamageData": "DamageData",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../logic/NonPlayer": "NonPlayer",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/IndexZ": "IndexZ",
"./StatusManager": "StatusManager"
} ],
Sphinx: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "613334RiSdNUKEp1LtYmQ1e", "Sphinx");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Boss"), s = t("../logic/Shooter"), l = t("../logic/Dungeon"), c = t("../manager/StatusManager"), u = t("../utils/NextStep"), p = t("../manager/MonsterManager"), h = t("../utils/AudioPlayer"), d = t("../data/FromData"), f = t("../logic/Achievement"), g = t("../logic/Logic"), y = cc._decorator, m = y.ccclass, v = (y.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.timeDelay = 0;
e.isMoving = !1;
e.stormSkill = new u.default();
e.summonSkill = new u.default();
e.actionTimeDelay = 0;
return e;
}
e.prototype.init = function() {
throw new Error("Method not implemented.");
};
e.prototype.onLoad = function() {
this.sc.isDied = !1;
this.sc.isShow = !1;
this.anim = this.getComponent(cc.Animation);
this.shooter01 = this.node.getChildByName("Shooter01").getComponent(s.default);
this.statusManager = this.node.getChildByName("StatusManager").getComponent(c.default);
this.shooter01.from.valueCopy(d.default.getClone(this.actorName(), "sphinxhead"));
};
e.prototype.start = function() {};
e.prototype.takeDamage = function(t) {
if (this.sc.isDied || !this.sc.isShow) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.playHit(this.node.getChildByName("sprite"));
var e = [ h.default.MONSTER_HIT, h.default.MONSTER_HIT1, h.default.MONSTER_HIT2 ];
h.default.play(e[g.default.getRandomNum(0, 2)]);
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
f.default.addMonsterKillAchievement(this.data.resName);
this.sc.isDied = !0;
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
this.getLoot();
}
};
e.prototype.bossAction = function() {
if (!this.sc.isDied && this.sc.isShow && this.dungeon) {
this.changeZIndex();
this.fireStorm();
this.summonMonster();
}
};
e.prototype.summonMonster = function() {
var t = this;
this.dungeon.getMonsterAliveNum() > 1 || this.summonSkill.next(function() {
h.default.play(h.default.MELEE);
t.summonSkill.IsExcuting = !0;
var e = l.default.getIndexInMap(t.entity.Transform.position.clone());
t.dungeon.monsterManager.addMonsterFromData(p.default.MONSTER_SANDSTATUE, cc.v3(e.x, e.y - 1), t.dungeon, !0);
t.dungeon.monsterManager.addMonsterFromData(p.default.MONSTER_SANDSTATUE, cc.v3(e.x + 1, e.y - 1), t.dungeon, !0);
t.dungeon.monsterManager.addMonsterFromData(p.default.MONSTER_SANDSTATUE, cc.v3(e.x - 1, e.y - 1), t.dungeon, !0);
t.dungeon.monsterManager.addMonsterFromData(p.default.MONSTER_ANUBIS, cc.v3(e.x - 1, e.y - 2), t.dungeon, !0);
t.dungeon.monsterManager.addMonsterFromData(p.default.MONSTER_ANUBIS, cc.v3(e.x + 1, e.y - 2), t.dungeon, !0);
}, 15, !0);
};
e.prototype.fireStorm = function() {
var t = this;
this.stormSkill.next(function() {
t.stormSkill.IsExcuting = !0;
t.anim.play("SphinxStorm");
t.scheduleOnce(function() {
var e = t.entity.Transform.position.clone().add(t.shooter01.node.position), i = t.dungeon.player.getCenterPosition().sub(e);
if (!i.equals(cc.Vec3.ZERO)) {
t.shooter01.setHv(cc.v2(i).normalize());
t.fireShooter(t.shooter01, "bullet023", 0, -20);
t.fireShooter(t.shooter01, "bullet123", 0, 0, 0);
t.fireShooter(t.shooter01, "bullet223", 0, 0, 20);
}
}, .3);
t.scheduleOnce(function() {
t.stormSkill.IsExcuting = !1;
t.anim.play("SphinxIdle");
}, 2);
}, 8, !0);
};
e.prototype.fireShooter = function(t, e, i, o, a) {
t.dungeon = this.dungeon;
t.actor = this;
t.data.bulletType = e;
t.data.bulletArcExNum = i;
t.data.bulletLineExNum = o;
t.fireBullet(a, cc.Vec3.ZERO);
};
e.prototype.showBoss = function() {
this.sc.isShow = !0;
this.entity.NodeRender.node = this.node;
this.entity.Move.damping = 6;
if (this.healthBar) {
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.healthBar.node.active = !this.sc.isDied;
}
};
e.prototype.isActionTimeDelay = function(t) {
this.actionTimeDelay += t;
if (this.actionTimeDelay > .2) {
this.actionTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t) {
this.timeDelay += t;
this.timeDelay > 1 && (this.timeDelay = 0);
this.isActionTimeDelay(t) && this.bossAction();
this.data.currentHealth < 1 && this.killed();
this.healthBar.node.active = !this.sc.isDied;
this.entity.Move.linearVelocity = cc.Vec2.ZERO;
};
e.prototype.actorName = function() {
return "斯芬克斯";
};
return n([ m ], e);
}(r.default));
i.default = v;
cc._RF.pop();
}, {
"../data/FromData": "FromData",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../manager/MonsterManager": "MonsterManager",
"../manager/StatusManager": "StatusManager",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/NextStep": "NextStep",
"./Boss": "Boss"
} ],
StackStateMachine: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9d89awtDlhAe5Rtlx6ayPx5", "StackStateMachine");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = function(t) {
a(e, t);
function e(e, i, o) {
return t.call(this, e, i, o) || this;
}
e.prototype.setInitialState = function(t) {
this.stateStack = new Array();
this.currentState = t;
};
e.prototype.getCurrentState = function() {
return this.currentState;
};
e.prototype.getPreviousState = function() {
return 0 == this.stateStack.length ? null : this.stateStack[this.stateStack.length - 1];
};
e.prototype.changeState = function(t) {
this._changeState(t, !0);
};
e.prototype.revertToPreviousState = function() {
if (0 == this.stateStack.length) return !1;
var t = this.stateStack.pop();
this._changeState(t, !1);
return !0;
};
e.prototype._changeState = function(t, e) {
e && this.currentState && this.stateStack.push(this.currentState);
this.currentState && this.currentState.exit(this.owner);
this.currentState = t;
this.currentState.enter(this.owner);
};
return e;
}(t("./DefaultStateMachine").default);
i.default = n;
cc._RF.pop();
}, {
"./DefaultStateMachine": "DefaultStateMachine"
} ],
Stairs: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "6eb54rEXhdB+LOy8sHLgpbr", "Stairs");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("./Building"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.root = null;
e.wall = null;
return e;
}
e.prototype.init = function(t) {
var e = parseInt(t[5]) * r.default.TILE_SIZE / 2;
this.root.y = e;
this.entity.Move.gravity = 0;
this.wall.height = e;
for (var i = 0, o = this.ccolliders; i < o.length; i++) o[i].zHeight += e;
};
e.TYPE_FRONT = "V000";
e.TYPE_BEHIND = "V001";
e.TYPE_LEFT = "V002";
e.TYPE_RIGHT = "V003";
e.TYPE_PLATFORM = "V004";
n([ u(cc.Node) ], e.prototype, "root", void 0);
n([ u(cc.Node) ], e.prototype, "wall", void 0);
return n([ c ], e);
}(s.default);
i.default = p;
cc._RF.pop();
}, {
"../logic/Dungeon": "Dungeon",
"./Building": "Building"
} ],
StartBackground: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "0b0949K3dtID5hiTr0pvVWm", "StartBackground");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Logic"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.bg1 = null;
e.bg2 = null;
e.bg3 = null;
e.bg4 = null;
e.bg5 = null;
e.bg6 = null;
e.bg7 = null;
e.defaultArr = [ cc.v3(0, -120), cc.v3(0, -120), cc.v3(800, -120), cc.v3(0, 0), cc.v3(0, 0), cc.v3(0, -600), cc.v3(0, 0) ];
e.bgArr = [];
e.isStarted = !1;
e.touchPos = cc.v2(0, 0);
e.LENGTH = 720;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.bgArr.push(this.bg1);
this.bgArr.push(this.bg2);
this.bgArr.push(this.bg3);
this.bgArr.push(this.bg4);
this.bgArr.push(this.bg5);
this.bgArr.push(this.bg6);
this.bgArr.push(this.bg7);
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
t.isStarted || (t.touchPos = t.node.convertToNodeSpaceAR(e.getLocation()));
}, this);
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
t.isStarted || (t.touchPos = t.node.convertToNodeSpaceAR(e.getLocation()));
}, this);
this.node.on(cc.Node.EventType.TOUCH_END, function() {
t.touchPos = cc.v2(0, 0);
}, this);
this.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {
t.touchPos = cc.v2(0, 0);
}, this);
};
e.prototype.startPressed = function() {
if (!this.isStarted) {
this.isStarted = !0;
for (var t = 0; t < this.bgArr.length; t++) {
var e = this.defaultArr[t].clone();
this.bgArr[t].position = e;
}
this.getComponent(cc.Animation).play();
}
};
e.prototype.update = function(t) {
if (!this.isStarted) for (var e = 0; e < this.bgArr.length; e++) {
var i = this.defaultArr[e].clone(), o = this.touchPos.x / this.LENGTH * 60 * e;
i.x += o;
this.bgArr[e].position = r.default.lerpPos(this.bgArr[e].position, i, t * e * 2);
}
};
n([ c(cc.Node) ], e.prototype, "bg1", void 0);
n([ c(cc.Node) ], e.prototype, "bg2", void 0);
n([ c(cc.Node) ], e.prototype, "bg3", void 0);
n([ c(cc.Node) ], e.prototype, "bg4", void 0);
n([ c(cc.Node) ], e.prototype, "bg5", void 0);
n([ c(cc.Node) ], e.prototype, "bg6", void 0);
n([ c(cc.Node) ], e.prototype, "bg7", void 0);
return n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"../logic/Logic": "Logic"
} ],
Start: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e1b90/rohdEk4SdmmEZANaD", "Start");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = t("../utils/AudioPlayer"), l = t("../ui/dialog/NoticeDialog"), c = t("../ui/StartBackground"), u = t("../ui/CursorArea"), p = t("../ui/dialog/SaveSlotDialog"), h = t("../utils/LocalStorage"), d = t("../data/ExitData"), f = cc._decorator, g = f.ccclass, y = f.property, m = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.title = null;
e.startButton = null;
e.continueButton = null;
e.cheatButton = null;
e.debugButton = null;
e.tourButton = null;
e.achieveButton = null;
e.noticeButton = null;
e.noticeDialog = null;
e.startBg = null;
e.cursorAreaPrefab = null;
e.saveSlotDialog = null;
e.cheatClickCount = 0;
e.debugClickCount = 0;
e.tourClickCount = 0;
return e;
}
e.prototype.onLoad = function() {
var t = this;
u.default.init(this.cursorAreaPrefab);
this.cheatButton.opacity = r.default.isCheatMode ? 255 : 0;
this.debugButton.opacity = r.default.isDebug ? 255 : 0;
this.noticeDialog.node.active = !1;
this.saveSlotDialog.node.active = !1;
this.saveSlotDialog.onItemSelectListener(function(e) {
t._startShow();
t.scheduleOnce(function() {
r.default.jumpSlotIndex = e;
r.default.resetData();
if (r.default.profileManager.hasSaveData) t.scheduleOnce(function() {
r.default.loadingNextLevel(d.default.getRealWorldExitDataFromDream(r.default.chapterIndex, r.default.level));
}, .5); else {
r.default.jumpSlotIndex = e;
cc.director.loadScene("pickavatar");
}
}, .5);
});
};
e.prototype.start = function() {
var t = this;
if (this.continueButton) {
r.default.jumpSlotIndex = h.default.getLastSaveSlotKey();
r.default.resetData();
this.continueButton.active = r.default.profileManager.hasSaveData;
this.continueButton.active ? this.scheduleOnce(function() {
t.continueButton.getComponent(cc.Animation).play();
}, 2) : this.scheduleOnce(function() {
t.startButton.getComponent(cc.Animation).play();
}, 2);
}
};
e.prototype._startShow = function() {
this.startBg.startPressed();
cc.tween(this.title).to(.5, {
opacity: 0
}).start();
cc.tween(this.startButton).to(.5, {
opacity: 0
}).start();
cc.tween(this.continueButton).to(.5, {
opacity: 0
}).start();
cc.tween(this.achieveButton).to(.5, {
opacity: 0
}).start();
cc.tween(this.noticeButton).to(.5, {
opacity: 0
}).start();
};
e.prototype.startGame = function() {
s.default.play(s.default.SELECT);
this.saveSlotDialog.show();
};
e.prototype.chooseChapter = function() {
s.default.play(s.default.SELECT);
cc.director.loadScene("chapter");
};
e.prototype.achievementScene = function() {
s.default.play(s.default.SELECT);
this._startShow();
this.scheduleOnce(function() {
cc.director.loadScene("achievement");
}, .5);
};
e.prototype.continueGame = function() {
r.default.jumpSlotIndex = h.default.getLastSaveSlotKey();
r.default.resetData();
r.default.isFirst = 1;
s.default.play(s.default.SELECT);
this._startShow();
this.scheduleOnce(function() {
r.default.loadingNextLevel(d.default.getRealWorldExitDataFromDream(r.default.chapterIndex, r.default.level));
}, .5);
};
e.prototype.cheatModeChange = function() {
if (this.cheatButton) if (r.default.isCheatMode) {
r.default.isCheatMode = !1;
this.cheatClickCount = 0;
} else {
this.cheatClickCount++;
this.cheatClickCount > 2 && (r.default.isCheatMode = !0);
}
};
e.prototype.debugModeChange = function() {
if (this.debugButton) if (r.default.isDebug) {
r.default.isDebug = !1;
this.debugClickCount = 0;
} else {
this.debugClickCount++;
if (this.debugClickCount > 2) {
r.default.isDebug = !0;
cc.debug.setDisplayStats(!0);
}
}
};
e.prototype.update = function() {
this.debugButton && (this.debugButton.opacity = r.default.isDebug ? 255 : 0);
this.cheatButton && (this.cheatButton.opacity = r.default.isCheatMode ? 255 : 0);
this.tourButton && (this.tourButton.opacity = r.default.isTour ? 255 : 0);
cc.director.getScheduler().setTimeScale(1);
};
e.prototype.tourChange = function() {
if (this.tourButton) if (r.default.isTour) {
r.default.isTour = !1;
this.tourClickCount = 0;
} else {
this.tourClickCount++;
this.tourClickCount > 2 && (r.default.isTour = !0);
}
};
e.prototype.showNotice = function() {
this.noticeDialog && this.noticeDialog.show();
};
e.prototype.goTest = function() {
cc.director.loadScene("test");
};
e.prototype.goQuestEditor = function() {
cc.director.loadScene("questeditor");
};
n([ y(cc.Node) ], e.prototype, "title", void 0);
n([ y(cc.Node) ], e.prototype, "startButton", void 0);
n([ y(cc.Node) ], e.prototype, "continueButton", void 0);
n([ y(cc.Node) ], e.prototype, "cheatButton", void 0);
n([ y(cc.Node) ], e.prototype, "debugButton", void 0);
n([ y(cc.Node) ], e.prototype, "tourButton", void 0);
n([ y(cc.Node) ], e.prototype, "achieveButton", void 0);
n([ y(cc.Node) ], e.prototype, "noticeButton", void 0);
n([ y(l.default) ], e.prototype, "noticeDialog", void 0);
n([ y(c.default) ], e.prototype, "startBg", void 0);
n([ y(cc.Prefab) ], e.prototype, "cursorAreaPrefab", void 0);
n([ y(p.default) ], e.prototype, "saveSlotDialog", void 0);
return n([ g ], e);
}(cc.Component);
i.default = m;
cc._RF.pop();
}, {
"../data/ExitData": "ExitData",
"../ui/CursorArea": "CursorArea",
"../ui/StartBackground": "StartBackground",
"../ui/dialog/NoticeDialog": "NoticeDialog",
"../ui/dialog/SaveSlotDialog": "SaveSlotDialog",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/LocalStorage": "LocalStorage",
"./Logic": "Logic"
} ],
StateContext: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "355460dkOZEM7Y62EU2S7oe", "StateContext");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function() {
this.isShow = !1;
this.isDied = !1;
this.isAttacking = !1;
this.isDisguising = !1;
this.isMoving = !1;
this.isDodging = !1;
this.isHurting = !1;
this.isDashing = !1;
this.isDizzing = !1;
this.isFalling = !1;
this.isBlinking = !1;
this.isJumping = !1;
this.isVanishing = !1;
this.isTalking = !1;
this.isFlying = !1;
};
cc._RF.pop();
}, {} ],
StateMachine: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d6268XDmGFEdZj+80HdRhZG", "StateMachine");
Object.defineProperty(i, "__esModule", {
value: !0
});
cc._RF.pop();
}, {} ],
State: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "ee6413dVQ9N85ndee/MSlIy", "State");
Object.defineProperty(i, "__esModule", {
value: !0
});
cc._RF.pop();
}, {} ],
StatusConditionType: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "cfb92WuPb1L4plYKZHdFxR/", "StatusConditionType");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.StatusConditionType = void 0;
(function(t) {
t[t.SUITS1 = 0] = "SUITS1";
t[t.SUITS2 = 1] = "SUITS2";
t[t.SUITS3 = 2] = "SUITS3";
t[t.ITEM_REMOVE = 3] = "ITEM_REMOVE";
t[t.ITEM_TICK = 4] = "ITEM_TICK";
t[t.ITEM_USE = 5] = "ITEM_USE";
t[t.MELEE_ATTACK = 6] = "MELEE_ATTACK";
t[t.MELEE_COMBO = 7] = "MELEE_COMBO";
t[t.MELEE_KILL = 8] = "MELEE_KILL";
t[t.REMOTE_ATTACK = 9] = "REMOTE_ATTACK";
t[t.REMOTE_HIT = 10] = "REMOTE_HIT";
t[t.REMOTE_KILL = 11] = "REMOTE_KILL";
t[t.REMOTE_COMBO = 12] = "REMOTE_COMBO";
t[t.SKILL_START = 13] = "SKILL_START";
t[t.SKILL_END = 14] = "SKILL_END";
t[t.SKILL_TICK = 15] = "SKILL_TICK";
t[t.TAKE_DAMAGE = 16] = "TAKE_DAMAGE";
t[t.AOE_HIT = 17] = "AOE_HIT";
t[t.AOE_ADD = 18] = "AOE_ADD";
t[t.AOE_REMOVE = 19] = "AOE_REMOVE";
t[t.AOE_TICK = 20] = "AOE_TICK";
t[t.AOE_KILL = 21] = "AOE_KILL";
t[t.STATUS_KILL = 22] = "STATUS_KILL";
t[t.STANDSTILL = 23] = "STANDSTILL";
t[t.MOVE = 24] = "MOVE";
t[t.DREAM_OUT = 25] = "DREAM_OUT";
t[t.DREAM_FULL = 26] = "DREAM_FULL";
t[t.HEALTH_OUT = 27] = "HEALTH_OUT";
t[t.HEALTH_FULL = 28] = "HEALTH_FULL";
t[t.HEALTH_HALF = 29] = "HEALTH_HALF";
t[t.DISPEL = 30] = "DISPEL";
})(i.StatusConditionType || (i.StatusConditionType = {}));
cc._RF.pop();
}, {} ],
StatusData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e6cc1ffzwVEGqcTbp1oM4Mh", "StatusData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("./CommonData"), n = t("./FromData"), r = function() {
function t() {
this.id = 0;
this.type = 0;
this.nameCn = "";
this.nameEn = "";
this.duration = 0;
this.desc = "";
this.spriteFrameName = "";
this.info1 = "";
this.info2 = "";
this.info3 = "";
this.extraInfo = "";
this.infobase = "";
this.infocolor1 = "#ffffff";
this.infocolor2 = "#ffffff";
this.infocolor3 = "#ffffff";
this.infobasecolor = "#ffffff";
this.physicalDamageDirect = 0;
this.physicalDamageOvertime = 0;
this.missRate = 0;
this.realDamageDirect = 0;
this.realDamageOvertime = 0;
this.dreamDirect = 0;
this.dreamOvertime = 0;
this.magicDamageDirect = 0;
this.magicDamageOvertime = 0;
this.dizzDurationDirect = 0;
this.dizzDurationOvertime = 0;
this.invisibleDuratonDirect = 0;
this.variation = 0;
this.finishStatus = "";
this.unique = 0;
this.exOilGold = 0;
this.clearHealth = 0;
this.avoidDeath = 0;
this.sanityDirect = 0;
this.sanityOvertime = 0;
this.solidDirect = 0;
this.solidOvertime = 0;
this.liquidDirect = 0;
this.liquidOvertime = 0;
this.stackable = 0;
this.common = new a.default();
this.from = new n.default();
}
Object.defineProperty(t.prototype, "Common", {
get: function() {
return this.common;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(t.prototype, "From", {
get: function() {
return this.from;
},
enumerable: !1,
configurable: !0
});
t.prototype.valueCopy = function(t) {
if (t) {
var e = this.nameCn;
o.default.baseCopy(this, t);
this.common.valueCopy(t.common);
this.from.valueCopy(t.from);
this.nameCn = t.nameCn ? t.nameCn : e;
this.infocolor1 = t.infocolor1 ? t.infocolor1 : "#ffffff";
this.infocolor2 = t.infocolor2 ? t.infocolor2 : "#ffffff";
this.infocolor3 = t.infocolor3 ? t.infocolor3 : "#ffffff";
this.infobasecolor = t.infobasecolor ? t.infobasecolor : "#ffffff";
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = r;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./CommonData": "CommonData",
"./FromData": "FromData"
} ],
StatusEventType: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e9268x4uqpM3ZwTAm8dK3a3", "StatusEventType");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.StatusEventType = void 0;
(function(t) {
t[t.INIT = 0] = "INIT";
t[t.DIED = 1] = "DIED";
t[t.ITEM_ADD = 2] = "ITEM_ADD";
t[t.ITEM_REMOVE = 3] = "ITEM_REMOVE";
t[t.ITEM_TICK = 4] = "ITEM_TICK";
t[t.ITEM_USE = 5] = "ITEM_USE";
t[t.MELEE_ATTACK = 6] = "MELEE_ATTACK";
t[t.MELEE_COMBO = 7] = "MELEE_COMBO";
t[t.MELEE_KILL = 8] = "MELEE_KILL";
t[t.REMOTE_ATTACK = 9] = "REMOTE_ATTACK";
t[t.REMOTE_HIT = 10] = "REMOTE_HIT";
t[t.REMOTE_KILL = 11] = "REMOTE_KILL";
t[t.REMOTE_COMBO = 12] = "REMOTE_COMBO";
t[t.SKILL_START = 13] = "SKILL_START";
t[t.SKILL_END = 14] = "SKILL_END";
t[t.SKILL_TICK = 15] = "SKILL_TICK";
t[t.TAKE_DAMAGE = 16] = "TAKE_DAMAGE";
t[t.DODGE = 17] = "DODGE";
t[t.BLOCK = 18] = "BLOCK";
t[t.PRARRY = 19] = "PRARRY";
t[t.AOE_HIT = 20] = "AOE_HIT";
t[t.AOE_ADD = 21] = "AOE_ADD";
t[t.AOE_REMOVE = 22] = "AOE_REMOVE";
t[t.AOE_TICK = 23] = "AOE_TICK";
t[t.AOE_KILL = 24] = "AOE_KILL";
t[t.STATUS_KILL = 25] = "STATUS_KILL";
t[t.STANDSTILL = 26] = "STANDSTILL";
t[t.MOVE = 27] = "MOVE";
t[t.DREAM_OUT = 28] = "DREAM_OUT";
t[t.DREAM_FULL = 29] = "DREAM_FULL";
t[t.HEALTH_OUT = 30] = "HEALTH_OUT";
t[t.HEALTH_FULL = 31] = "HEALTH_FULL";
t[t.HEALTH_HALF = 32] = "HEALTH_HALF";
t[t.DISPEL = 33] = "DISPEL";
})(i.StatusEventType || (i.StatusEventType = {}));
cc._RF.pop();
}, {} ],
StatusIconDialog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "0334bGPnhpIAJMTQdBZ2+gl", "StatusIconDialog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.layout = null;
e.labelTitle = null;
e.infoBase = null;
e.info1 = null;
e.info2 = null;
e.info3 = null;
e.extraInfo = null;
e.infoDesc = null;
e.count = null;
e.iconNode = null;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.refreshStatusInfo = function(t) {
this.layout.color = cc.Color.WHITE;
this.infoBase.node.active = !0;
this.info1.node.active = !0;
this.info2.node.active = !0;
this.info3.node.active = !0;
this.extraInfo.node.active = !0;
this.labelTitle.string = t.nameCn;
this.infoBase.string = "" + t.infobase;
this.infoBase.node.color = this.infoBase.node.color.fromHEX(t.infobasecolor);
this.info1.string = t.info1;
this.info1.node.color = this.info1.node.color.fromHEX(t.infocolor1);
this.info2.string = t.info2;
this.info2.node.color = this.info2.node.color.fromHEX(t.infocolor2);
this.info3.string = t.info3;
this.info3.node.color = this.info3.node.color.fromHEX(t.infocolor3);
this.extraInfo.string = t.extraInfo;
this.infoDesc.string = t.desc;
this.infoBase.node.active = this.infoBase.string.length > 0;
this.info1.node.active = this.info1.string.length > 0;
this.info2.node.active = this.info2.string.length > 0;
this.info3.node.active = this.info3.string.length > 0;
this.extraInfo.node.active = this.extraInfo.string.length > 0;
this.count.string = "" + (t.duration > -1 ? t.duration : "∞");
this.labelTitle.node.color = this.labelTitle.node.color.fromHEX("#F4C021");
};
e.prototype.showDialog = function(t, e, i) {
this.iconNode = t;
this.refreshStatusInfo(i);
this.node.active = !0;
this.node.position = e.clone();
};
e.prototype.hideDialog = function() {
this.node.active = !1;
};
e.prototype.update = function() {
this.iconNode && cc.isValid(this.iconNode) || this.hideDialog();
};
n([ l(cc.Node) ], e.prototype, "layout", void 0);
n([ l(cc.Label) ], e.prototype, "labelTitle", void 0);
n([ l(cc.Label) ], e.prototype, "infoBase", void 0);
n([ l(cc.Label) ], e.prototype, "info1", void 0);
n([ l(cc.Label) ], e.prototype, "info2", void 0);
n([ l(cc.Label) ], e.prototype, "info3", void 0);
n([ l(cc.Label) ], e.prototype, "extraInfo", void 0);
n([ l(cc.Label) ], e.prototype, "infoDesc", void 0);
n([ l(cc.Label) ], e.prototype, "count", void 0);
return n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
StatusIconList: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "7943ajtValDxKKH09iraTc/", "StatusIconList");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./dialog/StatusIconDialog"), s = t("./StatusIcon"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.iconPrefab = null;
e.dialogPrefab = null;
e.layout = null;
return e;
}
e.prototype.onLoad = function() {
this.dialog = this.initDialog();
};
e.prototype.initDialog = function() {
var t = cc.instantiate(this.dialogPrefab);
t.parent = this.node;
var e = t.getComponent(r.default);
e.hideDialog();
return e;
};
e.prototype.getIcon = function() {
var t = cc.instantiate(this.iconPrefab);
t.parent = this.layout;
t.active = !0;
var e = t.getComponent(s.default);
this.addIconTouchEvent(e);
return e;
};
e.prototype.addIconTouchEvent = function(t) {
var e = this;
t.node.on(cc.Node.EventType.TOUCH_START, function() {
var i = t.data;
if (i) {
var o = e.node.convertToNodeSpaceAR(t.node.parent.convertToWorldSpaceAR(cc.Vec3.ZERO));
e.dialog.showDialog(t.node, o.add(cc.v3(64, 0)), i);
}
});
t.node.on(cc.Node.EventType.TOUCH_END, function() {
e.dialog.hideDialog();
});
t.node.on(cc.Node.EventType.TOUCH_CANCEL, function() {
e.dialog.hideDialog();
});
};
n([ u(cc.Prefab) ], e.prototype, "iconPrefab", void 0);
n([ u(cc.Prefab) ], e.prototype, "dialogPrefab", void 0);
n([ u(cc.Node) ], e.prototype, "layout", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"./StatusIcon": "StatusIcon",
"./dialog/StatusIconDialog": "StatusIconDialog"
} ],
StatusIcon: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "932dcHgnxxMzY9ASpbEVLeG", "StatusIcon");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/StatusData"), s = t("../logic/Logic"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.stateRunning = !1;
e.sprite = null;
e.data = new r.default();
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
this.label = this.node.getChildByName("sprite").getChildByName("label").getComponent(cc.Label);
this.anim = this.getComponent(cc.Animation);
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
this.label = this.node.getChildByName("sprite").getChildByName("label").getComponent(cc.Label);
this.anim = this.getComponent(cc.Animation);
};
e.prototype.start = function() {};
e.prototype.showStatus = function(t) {
if (this.anim) {
this.data = t;
this.sprite.spriteFrame = s.default.spriteFrameRes(t.spriteFrameName);
this.anim.playAdditive("StatusShow");
this.stateRunning = !0;
this.label.string = "" + (t.duration > -1 ? t.duration : "");
this.label.node.opacity = t.duration < 0 || t.duration > 30 ? 0 : 255;
}
};
e.prototype.stopStatus = function() {
this.node && this.stateRunning && this.node.destroy();
};
e.prototype.updateLogic = function(t) {
var e = this;
this.data = t;
this.label.string = "" + (t.duration > 0 ? t.duration : "");
this.label.node.opacity = t.duration < 0 || t.duration > 30 ? 0 : 255;
if (0 == t.duration && this.stateRunning) {
this.stateRunning = !1;
this.anim.play("StatusHide");
this.scheduleOnce(function() {
e.node && e.node.destroy();
}, .5);
}
};
return n([ c ], e);
}(cc.Component));
i.default = u;
cc._RF.pop();
}, {
"../data/StatusData": "StatusData",
"../logic/Logic": "Logic"
} ],
StatusManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "70cfczADURLkqYmvLLsshT9", "StatusManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/StatusData"), s = t("../logic/Logic"), l = t("../data/FromData"), c = t("../status/Status"), u = t("../base/Actor"), p = t("../utils/ActorUtils"), h = cc._decorator, d = h.ccclass, f = h.property, g = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.statusPrefab = null;
e.totalStatusData = new r.default();
e.timeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.statusMap = new Map();
this.actor = this.node.parent.getComponent(u.default);
};
e.prototype.start = function() {};
e.prototype.addCustomStatus = function(t, e) {
if (t) {
var i = new r.default();
i.valueCopy(t);
i.From.valueCopy(e);
this.stopOtherUniqueStatus(i.unique) && this.showStatus(i, !1);
}
};
e.prototype.addStatus = function(t, e, i) {
if (!(t.length < 1)) {
var o = new r.default();
o.valueCopy(s.default.status[t]);
o.From.valueCopy(e);
this.stopOtherUniqueStatus(o.unique) && this.showStatus(o, i);
}
};
e.prototype.addStatusListFromSave = function(t) {
if (t && t.length > 0) for (var e = 0, i = t; e < i.length; e++) {
var o = i[e], a = new r.default();
a.valueCopy(o);
a.From.valueCopy(new l.default());
this.stopOtherUniqueStatus(a.unique) && this.showStatus(a, !0);
}
};
e.prototype.hasStatus = function(t) {
var e = new r.default();
e.valueCopy(s.default.status[t]);
if (this.statusMap.has(e.id)) for (var i = 0, o = this.statusMap.get(e.id); i < o.length; i++) {
var a = o[i];
if (a && a.node && a.isValid && a.isStatusRunning()) return !0;
}
return !1;
};
e.prototype.stopStatus = function(t) {
var e = new r.default();
e.valueCopy(s.default.status[t]);
if (this.statusMap.has(e.id)) for (var i = 0, o = this.statusMap.get(e.id); i < o.length; i++) {
var a = o[i];
a && a.node && a.isValid && a.isStatusRunning() && a.data.id == e.id && a.stopStatus();
}
};
e.prototype.stopOtherUniqueStatus = function(t) {
if (t < 1) return !0;
var e = !0;
this.statusMap.forEach(function(i) {
for (var o = 0, a = i; o < a.length; o++) {
var n = a[o];
if (n && n.data && n.data.unique == t) if (n.data.duration < 0) e = !1; else {
n.stopStatus();
e = !0;
}
}
});
return e;
};
e.prototype.stopAllStatus = function() {
this.statusMap.forEach(function(t) {
for (var e = 0, i = t; e < i.length; e++) i[e].stopStatus();
});
};
e.prototype.stopAllBuffs = function() {
this.statusMap.forEach(function(t) {
for (var e = 0, i = t; e < i.length; e++) {
var o = i[e];
o && o.data && o.data.type == c.default.BUFF && o.stopStatus();
}
});
};
e.prototype.stopAllDebuffs = function() {
this.statusMap.forEach(function(t) {
for (var e = 0, i = t; e < i.length; e++) {
var o = i[e];
o && o.data && o.data.type == c.default.DEBUFF && o.stopStatus();
}
});
};
e.prototype.showStatus = function(t, e) {
var i = this;
this.statusMap.forEach(function(t, e) {
for (var o = t.length - 1; o >= 0; o--) {
var a = t[o];
a && a.node && a.isValid || t.splice(o, 1);
}
t.length < 1 && i.statusMap.delete(e);
});
if (this.statusMap.has(t.id)) {
for (var o = this.statusMap.get(t.id), a = 0, n = 0, r = o; n < r.length; n++) {
var s = r[n];
s && s.node && s.isValid && s.isStatusRunning() && s.data.id == t.id && a++;
}
a > t.stackable && o.pop().stopStatus();
} else this.statusMap.set(t.id, []);
var l = cc.instantiate(this.statusPrefab);
l.parent = this.node;
l.active = !0;
var u = l.getComponent(c.default);
this.statusMap.get(t.id).unshift(u);
if (this.statusIconList) {
var p = this.statusIconList.getIcon();
u.icon = p;
}
u.showStatus(t, this.actor, e);
};
e.prototype.update = function(t) {
if (!s.default.isGamePause) {
this.node.parent && (this.node.scaleX = this.node.parent.scaleX > 0 ? 1 : -1);
if (this.isTimeDelay(t) && this.actor) {
var e = this.updateStatus();
this.actor.updateStatus(e, this.totalStatusData);
}
}
};
e.prototype.isTimeDelay = function(t) {
this.timeDelay += t;
if (this.timeDelay > 1) {
this.timeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateStatus = function() {
var t = this;
this.totalStatusData = new r.default();
var e = new Array();
this.statusMap.forEach(function(i) {
for (var o = 0, a = i; o < a.length; o++) {
var n = a[o];
if (n && n.node && n.isValid) {
n.updateLogic();
if (0 == n.data.duration) t.addStatus(n.data.finishStatus, n.data.From); else {
t.totalStatusData.missRate += n.data.missRate ? n.data.missRate : 0;
t.totalStatusData.variation += n.data.variation ? n.data.variation : 0;
t.totalStatusData.exOilGold += n.data.exOilGold ? n.data.exOilGold : 0;
t.totalStatusData.clearHealth += n.data.clearHealth ? n.data.clearHealth : 0;
t.totalStatusData.avoidDeath += n.data.avoidDeath ? n.data.avoidDeath : 0;
t.totalStatusData.Common.add(n.data.Common);
e.push(n.data.clone());
}
}
}
});
return e;
};
e.addStatus2NearEnemy = function(t, e, i) {
if (t) {
var o = p.default.getNearestEnemyActor(t.node.position, !1, t.dungeon);
o && o.node && o.node.active && !o.sc.isDied && !o.sc.isDisguising && o.addStatus(e, i);
}
};
e.addStatus2NearEnemies = function(t, e, i, o, a) {
if (t) {
for (var n = 0, r = t.dungeon.monsterManager.monsterList; n < r.length; n++) {
var l = r[n], c = s.default.getDistanceNoSqrt(e.position, l.node.position);
l && l.node && l.node.active && c < o && !l.sc.isDied && !l.sc.isDisguising && l.addStatus(i, a);
}
for (var u = 0, p = t.dungeon.monsterManager.bossList; u < p.length; u++) {
var h = p[u];
(c = s.default.getDistanceNoSqrt(e.position, h.node.position)) < o && !h.sc.isDied && h.addStatus(i, a);
}
}
};
e.addStatus2NearAllies = function(t, e, i, o, a) {
if (t) for (var n = 0, r = t.dungeon.nonPlayerManager.nonPlayerList; n < r.length; n++) {
var l = r[n], c = s.default.getDistanceNoSqrt(e.position, l.node.position);
l && l.node && l.node.active && c < o && !l.sc.isDied && !l.sc.isDisguising && l.addStatus(i, a);
}
};
e.FROZEN = "status001";
e.BURNING = "status002";
e.DIZZ = "status003";
e.TOXICOSIS = "status004";
e.CURSING = "status005";
e.BLEEDING = "status006";
e.ATTACKPLUS = "status007";
e.FASTMOVE = "status008";
e.FASTATTACK = "status009";
e.PERFECTDEFENCE = "status010";
e.HEALING = "status011";
e.RECOVERY = "status012";
e.STONE = "status013";
e.TWINE = "status014";
e.SHIELD_NORMAL = "status015";
e.SHIELD_LONG = "status016";
e.BOTTLE_HEALING = "status017";
e.TALENT_AIMED = "status018";
e.SHOES_SPEED = "status019";
e.CLOTHES_RECOVERY = "status020";
e.WEREWOLFDEFENCE = "status021";
e.GOLDAPPLE = "status022";
e.MAGIC_WEAPON = "status023";
e.MAGIC_WEAPON_STRONG = "status024";
e.FROZEN_STRONG = "status025";
e.TALENT_INVISIBLE = "status026";
e.SHIELD_PARRY = "status027";
e.TALENT_FLASH_DIZZ = "status028";
e.TALENT_FLASH_SPEED = "status029";
e.BOTTLE_REMOTE = "status030";
e.WINE_CLOUD = "status033";
e.FALLEN_DOWN = "status034";
e.DIZZ_LONG = "status035";
e.PET_DOG = "status037";
e.REAGENT = "status038";
e.REAGENT_SIDE_EFFECT = "status039";
e.AVOID_DEATH = "status065";
e.CAMP_FIRE = "status066";
e.HOLOGRAPHIC_DODGE = "status067";
e.DRINK = "status068";
e.SANITY_UP = "status069";
e.SANITY_DOWN = "status070";
e.EAT = "status071";
e.INSANE = "status072";
n([ f(cc.Prefab) ], e.prototype, "statusPrefab", void 0);
return n([ d ], e);
}(cc.Component);
i.default = g;
cc._RF.pop();
}, {
"../base/Actor": "Actor",
"../data/FromData": "FromData",
"../data/StatusData": "StatusData",
"../logic/Logic": "Logic",
"../status/Status": "Status",
"../utils/ActorUtils": "ActorUtils"
} ],
Status: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "71809qjadJJZIMwM9M2G6cL", "Status");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/DamageData"), s = t("../data/StatusData"), l = t("../logic/Logic"), c = t("../manager/EquipmentManager"), u = t("../utils/DataUtils"), p = cc._decorator, h = p.ccclass, d = (p.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.stateRunning = !1;
e.sprite = null;
e.data = new s.default();
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.node.getChildByName("sprite").getComponent(cc.Sprite);
this.label = this.node.getChildByName("sprite").getChildByName("label").getComponent(cc.Label);
this.anim = this.getComponent(cc.Animation);
};
e.prototype.start = function() {};
e.prototype.showStatus = function(t, e, i) {
if (this.anim) {
this.data = t;
this.actor = e;
this.sprite.spriteFrame = l.default.spriteFrameRes(t.spriteFrameName);
this.anim.play("StatusShow");
i || this.doStatusDamage(!0);
this.stateRunning = !0;
this.label.string = "" + (this.data.duration > 0 ? this.data.duration : "");
this.label.node.opacity = this.data.duration < 0 || this.data.duration > 500 ? 0 : 255;
if (this.icon) {
var o = t.Common;
t.infobase = c.default.getInfoBase(o);
t.info1 = c.default.getInfo1(o);
t.info2 = c.default.getInfo2(o, null);
t.info3 = c.default.getInfo3(o);
t.infobasecolor = "#fffff0";
t.infocolor1 = "#9370DB";
t.infocolor2 = "#87CEFA";
t.infocolor3 = "#BC8F8F";
t.extraInfo = this.getInfo(t);
this.icon.showStatus(t);
}
}
};
e.prototype.getInfo = function(t) {
var e = "";
e += u.default.getinfoNum2String(0 == t.stackable, "最大层数为", t.stackable, "");
e += u.default.getinfoNum2String(0 == t.physicalDamageOvertime, "每秒受到", t.physicalDamageOvertime, "点物理伤害\n");
t.realDamageOvertime > 0 ? e += u.default.getinfoNum2String(0 == t.realDamageOvertime, "每秒受到", t.realDamageOvertime, "点流血伤害\n") : e += u.default.getinfoNum2String(0 == t.realDamageOvertime, "每秒恢复", -t.realDamageOvertime, "点生命\n");
e += u.default.getinfoNum2String(0 == t.magicDamageOvertime, "每秒受到", t.magicDamageOvertime, "点魔法伤害\n");
e += u.default.getinfoNum2String(0 == t.missRate, "攻击丢失几率", t.missRate, "%\n");
e += u.default.getinfoNum2String(0 == t.dizzDurationOvertime, "眩晕", t.dizzDurationOvertime, "秒\n");
e += u.default.getinfoNum2String(0 == t.invisibleDuratonDirect, "隐身", t.invisibleDuratonDirect, "秒\n");
e += u.default.getinfoNum2String(0 == t.variation, "变异", t.variation, "秒\n");
e += u.default.getinfoNum2String(0 == t.dreamOvertime, "持续", t.dreamOvertime, "秒恢复梦境\n");
e += u.default.getinfoNum2String(0 == t.exOilGold, "额外经验获取", t.exOilGold, "点\n");
return (e += u.default.getinfoNum2String(0 == t.clearHealth, "清理完房间回复生命\n")) + u.default.getinfoNum2String(0 == t.avoidDeath, "抵挡致命伤");
};
e.prototype.stopStatus = function() {
if (this.node) {
this.data.duration = 0;
if (this.stateRunning) {
this.node.destroy();
this.icon && this.icon.node.destroy();
}
}
};
e.prototype.isStatusRunning = function() {
return this.data.duration > 0 || -1 == this.data.duration;
};
e.prototype.doStatusDamage = function(t) {
if (this.data) {
var e = t ? this.getDamageDirect() : this.getDamageOverTime(), i = t ? this.data.dizzDurationDirect : this.data.dizzDurationOvertime, o = t ? this.data.dreamDirect : this.data.dreamOvertime;
if (this.actor) {
0 != e.getTotalDamage() && this.actor.takeDamage(e, this.data.From);
i > 0 && this.actor.takeDizz(i);
o && 0 != o && this.actor.updateDream(o);
this.data.invisibleDuratonDirect > 0 && this.actor.hideSelf(this.data.invisibleDuratonDirect);
t ? this.actor.updateLife(this.data.sanityDirect, this.data.solidDirect, this.data.liquidDirect) : this.actor.updateLife(this.data.sanityOvertime, this.data.solidOvertime, this.data.liquidOvertime);
}
}
};
e.prototype.updateLogic = function() {
var t = this;
this.label.string = "" + (this.data.duration > 0 ? this.data.duration : "");
this.label.node.opacity = this.data.duration < 0 || this.data.duration > 500 ? 0 : 255;
if (this.icon) {
this.icon.updateLogic(this.data);
-1 == this.data.duration && (this.node.active = !1);
}
if (this.data.duration > 0) {
-1 != this.data.duration && this.data.duration--;
this.doStatusDamage(!1);
}
if (0 == this.data.duration && this.stateRunning) {
this.stateRunning = !1;
this.anim.play("StatusHide");
this.scheduleOnce(function() {
if (t.node) {
t.node.destroy();
t.icon && t.icon.node.destroy();
}
}, .5);
}
};
e.prototype.getDamageDirect = function() {
var t = new r.default();
t.realDamage = this.data.realDamageDirect ? this.data.realDamageDirect : 0;
t.physicalDamage = this.data.physicalDamageDirect ? this.data.physicalDamageDirect : 0;
t.magicDamage = this.data.magicDamageDirect ? this.data.magicDamageDirect : 0;
return t;
};
e.prototype.getDamageOverTime = function() {
var t = new r.default();
t.realDamage = this.data.realDamageOvertime ? this.data.realDamageOvertime : 0;
t.physicalDamage = this.data.physicalDamageOvertime ? this.data.physicalDamageOvertime : 0;
t.magicDamage = this.data.magicDamageOvertime ? this.data.magicDamageOvertime : 0;
return t;
};
e.BUFF = 0;
e.DEBUFF = 1;
return n([ h ], e);
}(cc.Component));
i.default = d;
cc._RF.pop();
}, {
"../data/DamageData": "DamageData",
"../data/StatusData": "StatusData",
"../logic/Logic": "Logic",
"../manager/EquipmentManager": "EquipmentManager",
"../utils/DataUtils": "DataUtils"
} ],
SuitData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f9543VeOPVDfIOgvubFIjVk", "SuitData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("./BaseData"), r = t("./EquipmentData"), s = t("../utils/DataUtils"), l = function(t) {
a(e, t);
function e() {
var e = t.call(this) || this;
e.nameCn = "";
e.nameEn = "";
e.suitType = "";
e.suitNames = "";
e.desc = "";
e.count = 0;
e.equipList = [];
return e;
}
Object.defineProperty(e.prototype, "EquipList", {
get: function() {
return this.equipList;
},
enumerable: !1,
configurable: !0
});
e.prototype.valueCopy = function(t) {
if (t) {
s.default.baseCopy(this, t);
for (var e = 0, i = t.equipList; e < i.length; e++) {
var o = i[e], a = new r.default();
a.valueCopy(o);
this.equipList.push(a);
}
}
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
return e;
}(n.default);
i.default = l;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData",
"./EquipmentData": "EquipmentData"
} ],
TalentDash: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "52ac4HK4rpMhYIJb8+wkG1J", "TalentDash");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("./Talent"), l = t("../item/DashShadow"), c = t("../data/DamageData"), u = t("../manager/StatusManager"), p = t("../utils/AudioPlayer"), h = t("../data/FromData"), d = t("../utils/ActorUtils"), f = t("../base/BaseAvatar"), g = cc._decorator, y = g.ccclass, m = g.property, v = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.dashShadow = null;
return e;
}
e.prototype.onLoad = function() {};
e.prototype.init = function(e) {
t.prototype.init.call(this, e);
this.dashShadow.node.active = !1;
this.node.parent = this.player.node.parent;
this.dashShadow.init(this);
};
e.prototype.skillCanUse = function() {
return !0;
};
e.prototype.useSKill = function() {
this.doSkill();
};
e.prototype.doSkill = function() {
var t = this;
if (this.talentSkill && !this.talentSkill.IsExcuting) {
var e = 3;
this.hashTalent(s.default.DASH_13) && (e = 2);
var i = 24;
this.hashTalent(s.default.DASH_14) && (i = 48);
this.talentSkill.next(function() {
t.talentSkill.IsExcuting = !0;
r.EventHelper.emit(r.EventHelper.PLAY_AUDIO, {
name: p.default.DASH
});
t.schedule(function() {
t.player.getWalkSmoke(t.node.parent, t.node.position);
}, .05, 4, 0);
var e = t.player.entity.Move.linearVelocity.clone();
t.player.sc.isMoving = !1;
e = e.equals(cc.Vec2.ZERO) ? t.player.isFaceRight ? cc.v2(1, 0) : cc.v2(-1, 0) : e.normalizeSelf();
var o = cc.v2(e.x, e.y);
if (t.hashTalent(s.default.DASH_08)) {
i = 2;
t.showShadow(o);
}
t.hv = o.clone();
e = e.mul(i);
t.player.entity.Move.linearVelocity = e;
t.scheduleOnce(function() {
t.player.entity.Move.linearVelocity = cc.Vec2.ZERO;
t.player.playerAnim(f.default.STATE_IDLE, t.player.currentDir);
t.IsExcuting = !1;
}, .5);
}, e, !0);
}
};
e.prototype.showShadow = function(t) {
if (this.dashShadow) {
this.dashShadow.setHv(t.clone());
this.dashShadow.show();
}
};
e.prototype.changePerformance = function() {};
e.prototype.onColliderEnter = function(t) {
this.hashTalent(s.default.DASH_02) && !this.hashTalent(s.default.DASH_08) && this.attacking(t, this.node);
};
e.prototype.attacking = function(t, e) {
if (t && e.active) {
var i = new c.default(1);
this.hashTalent(s.default.DASH_07) && (i.realDamage = 5);
var o = d.default.getEnemyActorByNode(t.node, !0);
if (o && !o.sc.isDied && o.takeDamage(i)) {
this.beatBack(o);
this.addTargetAllStatus(o);
}
}
};
e.prototype.beatBack = function(t) {
if (this.hashTalent(s.default.DASH_04)) {
var e = this.hv.clone();
e = e.normalizeSelf().mul(20);
t.entity.Move.linearVelocity = cc.v2(e.x, e.y);
}
};
e.prototype.addTargetAllStatus = function(t) {
this.addTargetStatus(s.default.DASH_05, t, u.default.FROZEN);
this.addTargetStatus(s.default.DASH_06, t, u.default.DIZZ);
this.addTargetStatus(s.default.DASH_03, t, u.default.BLEEDING);
};
e.prototype.addTargetStatus = function(t, e, i) {
this.hashTalent(t) && e.addStatus(i, new h.default());
};
e.prototype.takeDamage = function() {
return !1;
};
n([ m(l.default) ], e.prototype, "dashShadow", void 0);
return n([ y ], e);
}(s.default);
i.default = v;
cc._RF.pop();
}, {
"../base/BaseAvatar": "BaseAvatar",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../item/DashShadow": "DashShadow",
"../logic/EventHelper": "EventHelper",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"./Talent": "Talent"
} ],
TalentData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "337bcbBGB9GS4DrPZ+ZKu25", "TalentData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = t("./CommonData"), n = function() {
function t() {
this.desc = "";
this.nameCn = "";
this.nameEn = "";
this.resName = "";
this.cooldown = 0;
this.passive = 0;
this.lastTime = 0;
this.cost = 1;
this.storePoint = 0;
this.useCount = 0;
this.common = new a.default();
}
Object.defineProperty(t.prototype, "Common", {
get: function() {
return this.common;
},
enumerable: !1,
configurable: !0
});
t.prototype.valueCopy = function(t) {
if (t) {
var e = this.nameCn, i = this.nameEn, a = this.desc;
o.default.baseCopy(this, t);
this.common.valueCopy(t.common);
this.nameCn = t.nameCn ? t.nameCn : e;
this.nameEn = t.nameEn ? t.nameEn : i;
this.desc = t.desc ? t.desc : a;
this.storePoint = t.storePoint || 0 == t.storePoint ? t.storePoint : 1;
this.cost = t.cost || 0 == t.cost ? t.cost : 1;
}
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = n;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./CommonData": "CommonData"
} ],
TalentMagic: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d3909410aVM/oDLjAGklG7U", "TalentMagic");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = t("./Talent"), l = t("../manager/StatusManager"), c = t("../data/FromData"), u = t("./MagicCircle"), p = t("./MagicIce"), h = t("./FireGhost"), d = t("../logic/Logic"), f = t("./IceThron"), g = t("../utils/AudioPlayer"), y = cc._decorator, m = y.ccclass, v = y.property, E = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.magiccircle = null;
e.magicice = null;
e.icethron = null;
e.fireGhost = null;
e.magicLighteningCircle = null;
e.fireGhostNum = 0;
e.checkTimeDelay = 0;
return e;
}
i = e;
e.prototype.onLoad = function() {
var t = this;
this.ghostPool = new cc.NodePool(h.default);
r.EventHelper.on(r.EventHelper.POOL_DESTORY_FIREGHLOST, function(e) {
t.destroyGhost(e.targetNode);
});
};
e.prototype.destroyGhost = function(t) {
if (t) {
t.active = !1;
if (this.ghostPool) {
this.ghostPool.put(t);
this.fireGhostNum--;
cc.log("destroyGhost");
}
}
};
e.prototype.init = function(e) {
var o = this;
this.magicLighteningCircle.opacity = 0;
t.prototype.init.call(this, e);
this.scheduleOnce(function() {
o.hashTalent(s.default.MAGIC_07) && o.player.addStatus(o.hashTalent(i.MAGIC_06) ? l.default.MAGIC_WEAPON_STRONG : l.default.MAGIC_WEAPON, new c.default());
o.hashTalent(s.default.MAGIC_13) && !o.magicice.isShow && o.magicice.showIce();
o.hashTalent(s.default.MAGIC_10) && o.initFireGhosts();
o.hashTalent(i.MAGIC_16) && o.showLighteningCircle();
}, .2);
};
e.prototype.skillCanUse = function() {
return !0;
};
e.prototype.useSKill = function() {
this.doSkill();
};
e.prototype.doSkill = function() {
var t = this;
if (this.talentSkill && !this.talentSkill.IsExcuting) {
var e = 7;
this.hashTalent(s.default.MAGIC_04) && (e = 3);
this.talentSkill.next(function() {
t.talentSkill.IsExcuting = !0;
t.magiccircle.talentMaigc = t;
t.magiccircle.playMagic(t.hashTalent(s.default.MAGIC_03));
}, e, !0);
}
};
e.prototype.MagicFinish = function() {
var t = this;
if (this.hashTalent(s.default.MAGIC_09)) ; else if (this.hashTalent(s.default.MAGIC_08)) ; else if (this.hashTalent(s.default.MAGIC_12)) this.showIceThron(); else if (this.hashTalent(s.default.MAGIC_11)) this.showIceThron(); else if (this.hashTalent(s.default.MAGIC_15)) this.schedule(function() {
t.addLighteningFall(t.hashTalent(s.default.MAGIC_06), 8);
}, .2, this.hashTalent(s.default.MAGIC_02) ? 1 : 0); else if (this.hashTalent(s.default.MAGIC_14)) this.schedule(function() {
t.addLighteningFall(t.hashTalent(s.default.MAGIC_06), 5);
}, .2, this.hashTalent(s.default.MAGIC_02) ? 1 : 0); else if (this.hashTalent(s.default.MAGIC_01)) {
g.default.play(g.default.SKILL_MAGICBALL);
this.fire(this.player.shooterEx, 80, this.hashTalent(s.default.MAGIC_06) ? "bullet135" : "bullet035");
}
};
e.prototype.showIceThron = function() {
var t = this;
this.scheduleOnce(function() {
g.default.play(g.default.SKILL_ICETHRON);
}, 1);
var e = [ 0, 45, 90, 135, 180, 225, 270, 315 ], i = [ 15, 60, 105, 150, 195, 240, 285, 330 ], o = [ 100, 150 ], a = [ e, i ], n = [ e, i, e ], r = [ e ], l = [ 3 ], c = [ 100 ];
if (this.hashTalent(s.default.MAGIC_02)) {
r = a;
l = [ 3, 4 ];
c = o;
}
if (this.hashTalent(s.default.MAGIC_12)) {
r = a;
l = [ 3, 5 ];
c = o;
if (this.hashTalent(s.default.MAGIC_02)) {
r = n;
l = [ 3, 4, 5 ];
c = [ 100, 150, 200 ];
}
}
var u = 0;
this.schedule(function() {
for (var e = 0; e < r[u].length; e++) cc.instantiate(t.icethron).getComponent(f.default).show(t.player, r[u][e], c[u], l[u]);
u++;
}, .5, r.length - 1);
};
e.prototype.fire = function(t, e, i) {
t.data.bulletType = i;
t.data.bulletArcExNum = e;
this.hashTalent(s.default.MAGIC_02) && (t.data.bulletArcExNum = 80 == e ? 99 : 2);
t.data.bulletLineExNum = 0;
t.fireBullet(0);
};
e.prototype.changePerformance = function() {};
e.prototype.takeIce = function() {
if (this.hashTalent(s.default.MAGIC_13) && this.magicice.isShow) {
l.default.addStatus2NearEnemies(this.player, this.player.node, l.default.FROZEN, 300, new c.default());
this.magicice.breakIce();
return !0;
}
return !1;
};
e.prototype.takeDamage = function() {
return !1;
};
e.prototype.addLighteningFall = function(t, e) {
r.EventHelper.emit(r.EventHelper.DUNGEON_ADD_LIGHTENINGFALL, {
pos: this.getNearestEnemyPosition(),
showArea: t,
damage: e
});
};
e.prototype.getNearestEnemyPosition = function() {
for (var t, e = 99999, i = 0, o = this.player.weaponRight.meleeWeapon.dungeon.monsterManager.monsterList; i < o.length; i++) {
var a = o[i];
if (a && a.node && a.node.active && !a.sc.isDied && (l = d.default.getDistanceNoSqrt(this.node.position, a.node.position)) < e) {
e = l;
t = a.node;
}
}
for (var n = 0, r = this.player.weaponRight.meleeWeapon.dungeon.monsterManager.bossList; n < r.length; n++) {
var s = r[n];
if (!s.sc.isDied) {
var l;
if ((l = d.default.getDistanceNoSqrt(this.node.position, s.node.position)) < e) {
e = l;
t = s.node;
}
}
}
return t ? t.position : this.node.position.addSelf(cc.v3(d.default.getRandomNum(0, 600) - 300, d.default.getRandomNum(0, 600) - 300));
};
e.prototype.showLighteningCircle = function() {
var t = this;
this.magicLighteningCircle.opacity = 128;
this.magicLighteningCircle.scale = 1;
cc.tween(this.magicLighteningCircle).to(1, {
scale: 10
}).call(function() {
l.default.addStatus2NearEnemies(t.player, t.player.node, l.default.DIZZ, 300, new c.default());
t.magicLighteningCircle.opacity = 0;
t.magicLighteningCircle.scale = 1;
}).start();
};
e.prototype.initFireGhosts = function() {
for (var t = this.fireGhostNum, e = 0; e < 5 - t; e++) {
var i = null;
this.ghostPool.size() > 0 && (i = this.ghostPool.get());
i && !i.active || (i = cc.instantiate(this.fireGhost));
this.fireGhostNum++;
i.active = !0;
var o = i.getComponent(h.default);
o.initCollider();
this.player.node.parent.addChild(o.node);
o.init(this.player, 72 * e);
}
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 10) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
var i;
n([ v(u.default) ], e.prototype, "magiccircle", void 0);
n([ v(p.default) ], e.prototype, "magicice", void 0);
n([ v(cc.Prefab) ], e.prototype, "icethron", void 0);
n([ v(cc.Prefab) ], e.prototype, "fireGhost", void 0);
n([ v(cc.Node) ], e.prototype, "magicLighteningCircle", void 0);
return i = n([ m ], e);
}(s.default);
i.default = E;
cc._RF.pop();
}, {
"../data/FromData": "FromData",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../manager/StatusManager": "StatusManager",
"../utils/AudioPlayer": "AudioPlayer",
"./FireGhost": "FireGhost",
"./IceThron": "IceThron",
"./MagicCircle": "MagicCircle",
"./MagicIce": "MagicIce",
"./Talent": "Talent"
} ],
TalentManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "0c0baFsDZxK7LkydHOM4lr2", "TalentManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
return n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
TalentShield: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "9db0eWCt9hLa7XLpSo6xHBj", "TalentShield");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../manager/StatusManager"), s = t("../logic/Logic"), l = t("../data/DamageData"), c = t("./Talent"), u = t("../utils/AudioPlayer"), p = t("../data/FromData"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.shieldBackSprite = null;
e.shieldFrontSprite = null;
return e;
}
i = e;
e.prototype.onLoad = function() {};
e.prototype.init = function(e) {
t.prototype.init.call(this, e);
this.shieldBackSprite = this.getSpriteChildSprite([ "shieldback" ]);
this.shieldFrontSprite = this.getSpriteChildSprite([ "shieldfront" ]);
this.shieldBackSprite.node.opacity = 0;
this.shieldFrontSprite.node.opacity = 0;
this.sprites = new Array();
for (var i = [ 2, 3, 4, 5, 9, 12, 13, 14 ], o = 0; o < i.length; o++) {
var a = this.getSpriteChildSprite([ "shieldfront", "sprite" + i[o] ]);
a.node.opacity = 0;
this.sprites.push(a);
}
};
e.prototype.changePerformance = function() {
for (var t = 0, e = this.sprites; t < e.length; t++) e[t].node.opacity = 0;
this.shieldFrontSprite.node.color = cc.color(255, 255, 255);
this.changeRes("shield01");
};
e.prototype.changeRes = function(t) {
if (t && !(t.length < 1)) {
this.shieldBackSprite.spriteFrame = s.default.spriteFrameRes(t);
this.shieldFrontSprite.spriteFrame = s.default.spriteFrameRes(t);
}
};
e.prototype.skillCanUse = function() {
return !0;
};
e.prototype.useSKill = function() {
this.doSkill();
};
e.prototype.doSkill = function() {
var t = this;
if (this.talentSkill && !this.talentSkill.IsExcuting) {
var e = 7, o = 1;
this.hashTalent(i.SHIELD_13) && (e = 5);
this.talentSkill.next(function() {
var e = r.default.SHIELD_NORMAL, a = .1;
t.talentSkill.IsExcuting = !0;
var n = t.shieldFrontSprite.node.y;
t.shieldBackSprite.node.scaleX = 1;
t.shieldFrontSprite.node.scaleX = 0;
t.shieldBackSprite.node.opacity = 255;
t.shieldFrontSprite.node.opacity = 255;
t.shieldFrontSprite.node.x = -8;
if (t.hashTalent(i.SHIELD_14)) {
e = r.default.SHIELD_LONG;
o = 2;
}
if (t.hashTalent(i.SHIELD_06)) {
o = 0;
a = 0;
}
cc.tween(t.shieldBackSprite.node).to(.1, {
scaleX: 0,
scaleY: 1
}).to(.1, {
position: cc.v3(-16, n)
}).delay(o).to(a, {
position: cc.v3(-8, n)
}).to(a, {
scale: 1
}).start();
cc.tween(t.shieldFrontSprite.node).to(.1, {
scale: 1
}).to(.1, {
position: cc.v3(8, n)
}).delay(o).to(a, {
position: cc.v3(-8, n)
}).to(a, {
scaleX: 0,
scaleY: 1
}).start();
t.player.addStatus(e, new p.default());
t.scheduleOnce(function() {
u.default.play(u.default.MELEE);
}, .2);
t.scheduleOnce(function() {
t.talentSkill.IsExcuting = !1;
}, o + .2);
t.scheduleOnce(function() {
t.shieldBackSprite.node.opacity = 255;
}, 1);
}, e, !0);
}
};
e.prototype.canAddStatus = function(t) {
return !this.hashTalent(i.SHIELD_04) || !(t == r.default.FROZEN || t == r.default.BURNING || t == r.default.DIZZ || t == r.default.TOXICOSIS || t == r.default.CURSING || t == r.default.BLEEDING);
};
e.prototype.takeDamage = function(t, e) {
if (e && this.IsExcuting) {
if (this.hashTalent(i.SHIELD_05)) return e.takeDamage(new l.default(5));
if (this.hashTalent(i.SHIELD_02)) return e.takeDamage(new l.default(1));
}
return !1;
};
var i;
return i = n([ d ], e);
}(c.default));
i.default = f;
cc._RF.pop();
}, {
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/Logic": "Logic",
"../manager/StatusManager": "StatusManager",
"../utils/AudioPlayer": "AudioPlayer",
"./Talent": "Talent"
} ],
Talent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "11194HbWx5MlLwfYetzGt8W", "Talent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/NextStep"), s = t("../logic/Player"), l = t("../logic/EventHelper"), c = t("../ui/CoolDownView"), u = t("../utils/Utils"), p = t("../utils/AudioPlayer"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.talentSkill = new r.default();
e.coolDownId = c.default.PROFESSION;
e.checkTimeDelay = 0;
return e;
}
i = e;
Object.defineProperty(e.prototype, "IsExcuting", {
get: function() {
return this.talentSkill.IsExcuting;
},
set: function(t) {
this.talentSkill.IsExcuting = t;
},
enumerable: !1,
configurable: !0
});
e.prototype.onLoad = function() {};
e.prototype.init = function(t) {
this.player = this.getComponent(s.default);
this.data = t;
};
e.prototype.initCoolDown = function(t, e) {
var i = this;
this.talentSkill.init(!1, e, t.storePoint, t.cooldown, t.lastTime, function(e) {
i.updateCooldownAndHud(t.cooldown, e);
});
};
e.prototype.useSKill = function() {
var t = this;
if (this.talentSkill && !this.talentSkill.IsExcuting) if (this.player.data.currentDream >= this.data.cost && this.skillCanUse()) {
var e = this.data.cooldown;
this.talentSkill.next(function() {
t.data.lastTime = Date.now();
t.talentSkill.IsExcuting = !0;
t.player.updateDream(t.data.cost);
t.data.useCount++;
t.doSkill();
t.updateCooldownAndHud(e, t.data.lastTime);
}, e, !0, function(i) {
t.updateCooldownAndHud(e, i);
});
} else if (this.skillCanUse()) {
p.default.play(p.default.SELECT_FAIL);
l.EventHelper.emit(l.EventHelper.HUD_SHAKE_PLAYER_DREAMBAR);
u.default.toast("能量不足。");
} else p.default.play(p.default.SELECT_FAIL);
};
e.prototype.refreshCooldown = function() {
this.data.lastTime = this.talentSkill.refreshCoolDown(this.data.cooldown);
this.updateCooldownAndHud(this.data.cooldown, this.data.lastTime);
};
e.prototype.cutCooldown = function(t) {
this.data.lastTime = this.talentSkill.cutCoolDown(t);
this.updateCooldownAndHud(this.data.cooldown, this.data.lastTime);
};
e.prototype.updateCooldownAndHud = function(t, e) {
if (this.node) {
this.data.storePoint = this.talentSkill.StorePoint;
l.EventHelper.emit(l.EventHelper.HUD_CONTROLLER_COOLDOWN, {
id: this.coolDownId,
duration: t,
lastTime: e,
storePoint: this.talentSkill.StorePoint,
storePointMax: this.talentSkill.StorePointMax
});
}
};
e.prototype.getSpriteChildSprite = function(t) {
for (var e = this.node, i = 0, o = t; i < o.length; i++) {
var a = o[i];
e = e.getChildByName(a);
}
return e.getComponent(cc.Sprite);
};
e.prototype.hashTalent = function(t) {
var e;
return (null === (e = this.data) || void 0 === e ? void 0 : e.resName) == t;
};
e.prototype.shoot = function(t, e, i, o, a, n) {
t.data.bulletType = o;
t.data.bulletArcExNum = e;
t.data.bulletLineExNum = i;
t.fireBullet(0, null, 0, 0, a, n);
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > 1) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
var i;
e.DASH = "1000000";
e.SHIELD = "2000000";
e.MAGIC = "3000000";
e.ARCHER = "4000000";
e.DASH_01 = i.DASH + 1;
e.DASH_02 = i.DASH + 2;
e.DASH_03 = i.DASH + 3;
e.DASH_04 = i.DASH + 4;
e.DASH_05 = i.DASH + 5;
e.DASH_06 = i.DASH + 6;
e.DASH_07 = i.DASH + 7;
e.DASH_08 = i.DASH + 8;
e.DASH_09 = i.DASH + 9;
e.DASH_10 = i.DASH + 10;
e.DASH_11 = i.DASH + 11;
e.DASH_12 = i.DASH + 12;
e.DASH_13 = i.DASH + 13;
e.DASH_14 = i.DASH + 14;
e.SHIELD_01 = i.SHIELD + 1;
e.SHIELD_02 = i.SHIELD + 2;
e.SHIELD_03 = i.SHIELD + 3;
e.SHIELD_04 = i.SHIELD + 4;
e.SHIELD_05 = i.SHIELD + 5;
e.SHIELD_06 = i.SHIELD + 6;
e.SHIELD_07 = i.SHIELD + 7;
e.SHIELD_08 = i.SHIELD + 8;
e.SHIELD_09 = i.SHIELD + 9;
e.SHIELD_10 = i.SHIELD + 10;
e.SHIELD_11 = i.SHIELD + 11;
e.SHIELD_12 = i.SHIELD + 12;
e.SHIELD_13 = i.SHIELD + 13;
e.SHIELD_14 = i.SHIELD + 14;
e.MAGIC_01 = i.MAGIC + 1;
e.MAGIC_02 = i.MAGIC + 2;
e.MAGIC_03 = i.MAGIC + 3;
e.MAGIC_04 = i.MAGIC + 4;
e.MAGIC_05 = i.MAGIC + 5;
e.MAGIC_06 = i.MAGIC + 6;
e.MAGIC_07 = i.MAGIC + 7;
e.MAGIC_08 = i.MAGIC + 8;
e.MAGIC_09 = i.MAGIC + 9;
e.MAGIC_10 = i.MAGIC + 10;
e.MAGIC_11 = i.MAGIC + 11;
e.MAGIC_12 = i.MAGIC + 12;
e.MAGIC_13 = i.MAGIC + 13;
e.MAGIC_14 = i.MAGIC + 14;
e.MAGIC_15 = i.MAGIC + 15;
e.MAGIC_16 = i.MAGIC + 16;
e.TALENT_000 = "talent000";
e.TALENT_001 = "talent001";
e.TALENT_002 = "talent002";
e.TALENT_003 = "talent003";
e.TALENT_004 = "talent004";
e.TALENT_005 = "talent005";
e.TALENT_006 = "talent006";
e.TALENT_007 = "talent007";
e.TALENT_008 = "talent008";
e.TALENT_009 = "talent009";
e.TALENT_010 = "talent010";
e.TALENT_011 = "talent011";
e.TALENT_012 = "talent012";
e.TALENT_013 = "talent013";
e.TALENT_014 = "talent014";
e.TALENT_015 = "talent015";
e.TALENT_016 = "talent016";
e.TALENT_017 = "talent017";
e.TALENT_018 = "talent018";
e.TALENT_019 = "talent019";
e.TALENT_100 = "talent100";
e.TALENT_101 = "talent101";
e.TALENT_102 = "talent102";
e.TALENT_103 = "talent103";
e.TALENT_200 = "talent200";
e.TALENT_201 = "talent201";
return n([ d ], e);
}(cc.Component));
i.default = f;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper",
"../logic/Player": "Player",
"../ui/CoolDownView": "CoolDownView",
"../utils/AudioPlayer": "AudioPlayer",
"../utils/NextStep": "NextStep",
"../utils/Utils": "Utils"
} ],
TarotCard: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e4b2bYbHidG7bCWzE85sIMb", "TarotCard");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../data/TarotData"), s = cc._decorator, l = s.ccclass, c = (s.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.indexLabel = null;
e.anim = null;
e.frontNode = null;
e.backNode = null;
e.data = new r.default();
return e;
}
e.prototype.onLoad = function() {
this.anim = this.getComponent(cc.Animation);
this.frontNode = this.node.getChildByName("sprite").getChildByName("front");
this.backNode = this.node.getChildByName("sprite").getChildByName("back");
this.indexLabel = this.node.getChildByName("sprite").getChildByName("front").getChildByName("index").getComponent(cc.Label);
this.frontNode.scaleX = 0;
this.backNode.scaleY = 1;
};
e.prototype.initFromGround = function() {
this.anim || (this.anim = this.getComponent(cc.Animation));
this.anim.play("TarotIdle");
};
e.prototype.showCard = function() {
this.anim || (this.anim = this.getComponent(cc.Animation));
this.anim.play("TarotFilpToFront");
};
e.prototype.coverCard = function() {
this.anim || (this.anim = this.getComponent(cc.Animation));
this.anim.play("TarotFilpToBack");
};
e.prototype.start = function() {};
return n([ l ], e);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"../data/TarotData": "TarotData"
} ],
TarotData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "2921ee/FxFNuIPjZdXjGRw+", "TarotData");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../utils/DataUtils"), a = function() {
function t() {
this.nameCn = "";
this.nameEn = "";
this.desc = "";
this.resName = "";
this.index = 0;
this.word1 = "";
this.word2 = "";
this.word3 = "";
this.word4 = "";
this.word5 = "";
this.word6 = "";
}
t.prototype.valueCopy = function(t) {
t && o.default.baseCopy(this, t, !0);
};
t.prototype.clone = function() {
var e = new t();
e.valueCopy(this);
return e;
};
return t;
}();
i.default = a;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils"
} ],
TarotManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b67c009qhlE0oYcKSjCxjFX", "TarotManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../item/TarotCard"), s = t("../logic/Dungeon"), l = t("../utils/IndexZ"), c = cc._decorator, u = (c.ccclass, 
c.property), p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.card = null;
return e;
}
e.prototype.getCard = function(t, e) {
var i = cc.instantiate(this.card);
i.parent = this.node;
i.position = s.default.getPosInMap(e);
i.zIndex = l.default.getActorZIndex(i.position);
var o = i.getComponent(r.default);
o.data.resName = t;
return o;
};
e.THE_FOOL = "tarot00";
e.THE_MAGICIAN = "tarot01";
e.THE_HIGH_PRIESTESS = "tarot02";
e.THE_EMPRESS = "tarot03";
e.THE_EMPEROR = "tarot04";
e.THE_HIEROPHANT = "tarot05";
e.THE_LOVERS = "tarot06";
e.THE_CHARIOT = "tarot07";
e.STRENGTH = "tarot08";
e.THE_HERMIT = "tarot09";
e.THE_WHEEL_OF_FORTUNE = "tarot10";
e.JUSTICE = "tarot11";
e.THE_HANGEDMAN = "tarot12";
e.DEATH = "tarot13";
e.TEMPERANCE = "tarot14";
e.THE_DEVIL = "tarot15";
e.THE_TOWER = "tarot16";
e.THE_STAR = "tarot17";
e.THE_MOON = "tarot18";
e.THE_SUN = "tarot19";
e.JUDGEMENT = "tarot20";
e.THE_WORLD = "tarot21";
n([ u(cc.Prefab) ], e.prototype, "card", void 0);
return e;
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../item/TarotCard": "TarotCard",
"../logic/Dungeon": "Dungeon",
"../utils/IndexZ": "IndexZ"
} ],
TarotTable: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f0e8dVSyEpP0bI6DNiqwoQc", "TarotTable");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../ui/Tips"), l = t("./Building"), c = t("../utils/IndexZ"), u = cc._decorator, p = u.ccclass, h = (u.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.onLoad = function() {
var t = this;
this.anim = this.getComponent(cc.Animation);
this.tips = this.node.getChildByName("Tips").getComponent(s.default);
this.tips.onInteract(function() {
t.node && t.showCards();
});
};
e.prototype.start = function() {};
e.prototype.showCards = function() {
this.anim || (this.anim = this.getComponent(cc.Animation));
this.anim.play();
};
e.prototype.setPos = function(t) {
this.pos = t;
this.entity.Transform.position = r.default.getPosInMap(t);
this.node.position = this.entity.Transform.position.clone();
this.node.zIndex = c.default.getActorZIndex(this.entity.Transform.position);
};
return n([ p ], e);
}(l.default));
i.default = h;
cc._RF.pop();
}, {
"../logic/Dungeon": "Dungeon",
"../ui/Tips": "Tips",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
TestFog: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1aa806ypbFLYIf29yLJ7ObM", "TestFog");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.start = function() {};
e.prototype.show = function() {
this.mat || (this.mat = this.node.getComponent(cc.Sprite).getMaterial(0));
this.mat.setProperty("wh_ratio", this.node.width / this.node.height);
this.mat.setProperty("center", cc.v2(.5, .5));
this.mat.setProperty("radius", .5);
};
return n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
Test: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f27abc9Kq9M9YY+mw/i2T6U", "Test");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = r.property, c = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.graphics = null;
e.graphicsTest = null;
e.camera = null;
e.ray = null;
e.shadow = null;
e.shadowCamera = null;
e.bg = null;
e.radius = 200;
e.playerPos = cc.v2(640, 360);
e.zoomArr = [ 1, .5 ];
e.index = 0;
e.waveOffset = 0;
e.rad = 200;
return e;
}
e.prototype.onLoad = function() {
var t = this;
this.node.on(cc.Node.EventType.TOUCH_MOVE, function(e) {
var i = e.getLocation();
t.playerPos = i.clone();
}, this);
this.node.on(cc.Node.EventType.TOUCH_START, function(e) {
var i = e.getLocation();
t.playerPos = i.clone();
cc.log("playerPos:" + i.x + "," + i.y);
}, this);
this.mat2 = this.bg.getComponent(cc.Sprite).getMaterial(0);
this.bg.on(cc.Node.EventType.TOUCH_END, function(e) {
var i = t.camera.getWorldToScreenPoint(e.getLocation()), o = cc.view.getCanvasSize(), a = cc.view.getVisibleSize(), n = a.width / a.height, r = o.width / a.width;
t.mat2.setProperty("canvas_size", cc.v2(o.width, o.height));
t.mat2.setProperty("wh_ratio", n);
var s = cc.v2(i.x / a.width, i.y / a.height), l = Math.abs(s.y - .5) * a.height * r / o.height;
t.mat2.setProperty("center", cc.v2(s.x, s.y > .5 ? .5 + l : .5 - l));
t.waveOffset = 0;
}, this);
this.graphicsTest.strokeColor = cc.Color.RED;
this.graphicsTest.lineWidth = 32;
this.graphicsTest.moveTo(0, 0);
this.graphicsTest.lineTo(300, 0);
this.graphicsTest.stroke();
this.graphicsTest.lineWidth = 64;
this.graphicsTest.moveTo(0, 0);
this.graphicsTest.lineTo(1, 0);
this.graphicsTest.stroke();
this.graphicsTest.lineWidth = 64;
this.graphicsTest.moveTo(300, 0);
this.graphicsTest.lineTo(301, 0);
this.graphicsTest.stroke();
};
e.prototype.changeZoom = function() {
if (this.camera) {
this.camera.zoomRatio = this.zoomArr[this.index++];
this.index > this.zoomArr.length - 1 && (this.index = 0);
}
};
e.prototype.changeRayCast = function() {
this.graphicsTest.clear();
this.graphicsTest.fillColor = cc.color(255, 255, 255, 30);
this.graphicsTest.strokeColor = cc.color(255, 255, 255, 30);
this.rad -= 10;
this.graphicsTest.lineWidth = this.rad;
this.graphicsTest.moveTo(0, 0);
this.graphicsTest.lineTo(1, 0);
this.graphicsTest.stroke();
};
e.prototype.start = function() {
this.mat = this.graphics.getMaterial(0);
this.mat1 = this.ray.getMaterial(0);
this.render(this.playerPos);
var t = new cc.RenderTexture();
t.initWithSize(cc.visibleRect.width / 8, cc.visibleRect.height / 8);
t.setFilters(cc.Texture2D.Filter.NEAREST, cc.Texture2D.Filter.NEAREST);
this.shadowCamera.targetTexture = t;
this.shadowCamera.render();
this.shadow.spriteFrame = new cc.SpriteFrame(t);
};
e.prototype.render = function(t) {
var e = this.graphics.node.convertToNodeSpaceAR(t);
this.graphics.clear();
this.graphics.fillColor = cc.color(0, 255, 0);
this.graphics.moveTo(e.x - this.radius / 4, e.y);
this.graphics.lineTo(e.x - this.radius, e.y - this.radius);
this.graphics.lineTo(e.x + this.radius, e.y - this.radius);
this.graphics.lineTo(e.x + this.radius / 4, e.y);
this.graphics.close();
this.graphics.fill();
};
e.prototype.updateMat = function(t, e, i) {
var o = cc.view.getCanvasSize(), a = cc.view.getVisibleSize(), n = a.width / a.height, r = i / a.height, s = o.width / a.width;
t.setProperty("screen", cc.v2(o.width, o.height));
t.setProperty("maxRadius", r * this.camera.zoomRatio);
t.setProperty("whRatio", n);
var l = cc.v2(e.x / a.width, e.y / a.height), c = Math.abs(l.y - .5) * a.height * s / o.height;
t.setProperty("lightPos", cc.v2(l.x, l.y > .5 ? .5 + c : .5 - c));
};
e.prototype.lateUpdate = function() {
this.render(this.playerPos);
var t = this.camera.getWorldToScreenPoint(this.playerPos);
this.updateMat(this.mat, cc.v2(t.x, t.y), this.radius);
};
e.prototype.update = function(t) {
if (!(this.waveOffset > 2)) {
this.waveOffset += 2 * t;
this.mat2.setProperty("wave_offset", this.waveOffset);
}
};
n([ l(cc.Graphics) ], e.prototype, "graphics", void 0);
n([ l(cc.Graphics) ], e.prototype, "graphicsTest", void 0);
n([ l(cc.Camera) ], e.prototype, "camera", void 0);
n([ l(cc.Graphics) ], e.prototype, "ray", void 0);
n([ l(cc.Sprite) ], e.prototype, "shadow", void 0);
n([ l(cc.Camera) ], e.prototype, "shadowCamera", void 0);
n([ l(cc.Node) ], e.prototype, "bg", void 0);
return n([ s ], e);
}(cc.Component);
i.default = c;
cc._RF.pop();
}, {} ],
Tile: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f8047r9sJ5IqqTgIdjYi6dc", "Tile");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../utils/Random"), s = t("./Logic"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.isBroken = !1;
e.isAutoShow = !0;
e.isAnimPlaying = !1;
e.isBreakingNow = !1;
e.tileType = "*0000";
e.resName = "";
e.w = 1;
e.h = 1;
e.isWater = !1;
e.rect = cc.rect(0, 0, 128, 128);
return e;
}
e.prototype.onLoad = function() {
this.isAutoShow = !0;
this.anim = this.getComponent(cc.Animation);
this.floor = this.node.getChildByName("sprite").getChildByName("floor").getComponent(cc.Sprite);
};
e.prototype.start = function() {
this.changeRes(this.resName, this.w, this.h);
this.rect.x = this.node.position.x;
this.rect.y = this.node.position.y;
this.rect.width = this.floor.node.width * this.floor.node.scale;
this.rect.height = this.floor.node.height * this.floor.node.scale;
this.isWater && this.waterIdle();
};
e.prototype.TileBreak = function() {};
e.prototype.TileBreakFinish = function() {
var t = this;
this.isBroken = !0;
this.isAnimPlaying = !1;
this.isAutoShow && this.scheduleOnce(function() {
t.showTile();
}, 2);
};
e.prototype.TileShow = function() {
this.isAnimPlaying = !1;
};
e.prototype.breakTile = function() {
if (!this.isAnimPlaying && !this.isWater) {
this.anim.play("TileBreak");
this.isBreakingNow = !0;
this.isAnimPlaying = !0;
}
};
e.prototype.showTile = function() {
if (!this.isAnimPlaying && this.anim && !this.isWater) {
this.anim.play("TileShow");
this.isBroken = !1;
this.isBreakingNow = !1;
this.isAnimPlaying = !0;
}
};
e.prototype.containsRect = function(t) {
if (this.rect.containsRect(t)) return !0;
var e = cc.rect();
this.rect.intersection(e, t);
return e.width > .9 * t.width || e.height > .9 * t.height;
};
e.prototype.changeRes = function(t, e, i) {
this.floor.spriteFrame = s.default.spriteFrameRes(t);
null == this.floor.spriteFrame && (this.floor.spriteFrame = s.default.spriteFrameRes(t));
this.floor.node.width = 32 * e;
this.floor.node.height = 32 * i;
};
e.prototype.waterIdle = function() {
var t = this, e = cc.tween().delay(.2).call(function() {
t.changeRes("wateridle000", t.w, t.h);
}).delay(.2).call(function() {
t.changeRes("wateridle001", t.w, t.h);
}).delay(.2).call(function() {
t.changeRes("wateridle002", t.w, t.h);
}).delay(.2).call(function() {
t.changeRes("wateridle003", t.w, t.h);
});
this.floor.node.stopAllActions();
cc.tween(this.floor.node).repeatForever(e).start();
};
e.prototype.disappear = function() {
cc.tween(this.node).to(.5 + r.default.rand(), {
opacity: 0
}).start();
};
n([ u(cc.Label) ], e.prototype, "label", void 0);
return n([ c ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../utils/Random": "Random",
"./Logic": "Logic"
} ],
Tips: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "36c4bnGdrlOy4Y1XkbF9xfT", "Tips");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../base/BaseColliderComponent"), s = t("../collider/CCollider"), l = cc._decorator, c = l.ccclass, u = (l.property, 
function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.onLoad = function() {
t.prototype.onLoad.call(this);
this.node.opacity = 0;
this.entity && this.entity.Move && (this.entity.Move.isStatic = !0);
};
e.prototype.start = function() {};
e.prototype.next = function(t, e) {
this.node && this.node.active && this.interactCallback && this.interactCallback(t, e);
};
e.prototype.onInteract = function(t) {
this.interactCallback = t;
};
e.prototype.onEnter = function(t) {
this.enterCallback = t;
};
e.prototype.onExit = function(t) {
this.exitCallback = t;
};
e.prototype.onColliderEnter = function(t) {
if (t.tag == s.default.TAG.PLAYER_INTERACT) {
this.node.opacity = 255;
this.enterCallback && this.enterCallback(t.node);
}
};
e.prototype.onColliderExit = function(t) {
if (t.tag == s.default.TAG.PLAYER_INTERACT) {
this.node.opacity = 0;
this.exitCallback && this.exitCallback(t.node);
}
};
return n([ c ], e);
}(r.default));
i.default = u;
cc._RF.pop();
}, {
"../base/BaseColliderComponent": "BaseColliderComponent",
"../collider/CCollider": "CCollider"
} ],
Toast: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "2b27dQlgMFPKqLUuvpM/s/8", "Toast");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/EventHelper"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t, e, i) {
this.msg = t;
this.isCenter = e;
this.isTap = i;
}, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.messgeQueue = [];
e.isShowing = !1;
return e;
}
e.prototype.onLoad = function() {
var t = this;
r.EventHelper.on(r.EventHelper.HUD_TOAST, function(e) {
t.node && t.addToast(e.msg, e.isCenter, e.isTap);
});
};
e.prototype.addToast = function(t, e, i) {
if (!(t.length < 1)) {
var o = !1;
this.messgeQueue.length > 0 && t == this.messgeQueue[this.messgeQueue.length - 1].msg && (o = !0);
o || this.messgeQueue.splice(0, 0, new u(t, e, i));
}
};
e.prototype.showToast = function(t, e, i) {
var o = this;
if (!(t.length < 1)) {
this.isShowing = !0;
this.label.node.width = e ? 300 : 600;
var a = this.node;
a.stopAllActions();
var n = 3;
if (i) {
(n = .07 * t.length) < 3 && (n = 3);
var r = 0;
this.schedule(function() {
o.label.string = "" + t.substr(0, r++);
a.width = o.label.node.width + 10;
a.height = o.label.node.height + 10;
a.opacity = 255;
}, .05, t.length, .3);
} else this.scheduleOnce(function() {
o.label.string = "" + t;
a.width = o.label.node.width + 10;
a.height = o.label.node.height + 10;
a.opacity = 255;
}, .05);
var s = e ? 360 : 100;
a.y = s - 100;
a.scale = 0;
cc.tween(a).to(.1, {
scaleX: 1
}).to(.1, {
scaleY: 1
}).to(.2, {
y: s
}).delay(n).to(.1, {
scaleY: .1
}).to(.1, {
scaleX: 0
}).to(.1, {
opacity: 0
}).call(function() {
o.isShowing = !1;
}).start();
}
};
e.prototype.update = function() {
if (!this.isShowing && this.messgeQueue.length > 0) {
var t = this.messgeQueue.pop();
this.showToast(t.msg, t.isCenter, t.isTap);
}
};
n([ c(cc.Label) ], e.prototype, "label", void 0);
return n([ l ], e);
}(cc.Component);
i.default = p;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper"
} ],
TransformComponent: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "b88f7ydsjZIxpocDUXOvbUx", "TransformComponent");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
i.TransformComponent = void 0;
var r = t("../ECS"), s = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e._position = cc.Vec3.ZERO;
e._lastPosition = cc.Vec3.ZERO;
e.z = 0;
e.base = 0;
e.fixBase = 0;
return e;
}
Object.defineProperty(e.prototype, "position", {
get: function() {
return this._position;
},
set: function(t) {
this._position = t;
},
enumerable: !1,
configurable: !0
});
Object.defineProperty(e.prototype, "lastPosition", {
get: function() {
return this._lastPosition;
},
enumerable: !1,
configurable: !0
});
e.prototype.reset = function() {
this.position = cc.Vec3.ZERO;
this.z = 0;
};
return n([ r.ecs.register("Transform") ], e);
}(r.ecs.IComponent);
i.TransformComponent = s;
cc._RF.pop();
}, {
"../ECS": "ECS"
} ],
Trap: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "67e3dv84GNOwbSynhs23bOv", "Trap");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../logic/Dungeon"), s = t("../logic/Player"), l = t("../data/DamageData"), c = t("./Building"), u = t("../data/FromData"), p = t("../utils/IndexZ"), h = t("../manager/InventoryManager"), d = t("../collider/CCollider"), f = cc._decorator, g = f.ccclass, y = f.property, m = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.openSpriteFrame = null;
e.closeSpriteFrame = null;
e.halfSpriteFrame = null;
e.isOpen = !1;
e.pos = cc.v3(0, 0);
e.timeDelay = 0;
return e;
}
e.prototype.onLoad = function() {
this.sprite = this.node.getChildByName("sprite");
};
e.prototype.start = function() {};
e.prototype.setPos = function(t) {
this.pos = t;
this.entity.Transform.position = r.default.getPosInMap(t);
this.node.position = this.entity.Transform.position.clone();
this.node.zIndex = p.default.FLOOR;
};
e.prototype.openTrap = function() {
var t = this;
if (!this.isOpen) {
this.isOpen = !0;
this.sprite.getComponent(cc.Sprite).spriteFrame = this.openSpriteFrame;
this.scheduleOnce(function() {
t.isOpen = !1;
if (t.halfSpriteFrame) {
t.sprite.getComponent(cc.Sprite).spriteFrame = t.halfSpriteFrame;
t.scheduleOnce(function() {
t.closeSpriteFrame && (t.sprite.getComponent(cc.Sprite).spriteFrame = t.closeSpriteFrame);
}, .2);
}
}, .5);
}
};
e.prototype.onColliderStay = function(t) {
if (t.tag == d.default.TAG.PLAYER && this.isOpen) {
this.isOpen = !1;
var e = t.getComponent(s.default);
e && e.inventoryManager.getEquipBySuit(e.inventoryManager.equips[h.default.SHOES]).ignoreTrap < 1 && e.takeDamage(new l.default(1), u.default.getClone(this.actorName(), "trap001"), this);
}
};
e.prototype.update = function(t) {
this.timeDelay += t;
if (this.timeDelay > 3) {
this.openTrap();
this.timeDelay = 0;
}
};
e.prototype.actorName = function() {
return "尖刺";
};
n([ y(cc.SpriteFrame) ], e.prototype, "openSpriteFrame", void 0);
n([ y(cc.SpriteFrame) ], e.prototype, "closeSpriteFrame", void 0);
n([ y(cc.SpriteFrame) ], e.prototype, "halfSpriteFrame", void 0);
return n([ g ], e);
}(c.default);
i.default = m;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/Dungeon": "Dungeon",
"../logic/Player": "Player",
"../manager/InventoryManager": "InventoryManager",
"../utils/IndexZ": "IndexZ",
"./Building": "Building"
} ],
TriggerData: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "7d284fgMt1JO66faF7E9Mas", "TriggerData");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
});
Object.defineProperty(i, "__esModule", {
value: !0
});
var n = t("../utils/DataUtils"), r = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.name = "";
e.uuid = "";
e.res = "";
e.id = 0;
e.group = 0;
e.type = 0;
e.count = 0;
e.target = 0;
e.range = 0;
e.autoInterval = 0;
e.maxAmmo = 0;
e.bulletInterval = 0;
e.bulletAngle = 0;
e.bulletSize = 0;
e.bulletOffsetX = 0;
e.bulletArcOffsetX = 0;
e.bulletArcExNum = 0;
e.bulletLineExNum = 0;
e.bulletLineInterval = 0;
e.bulletSpeed = 0;
return e;
}
e.prototype.valueCopy = function(t) {
t && n.default.baseCopy(this, t);
};
e.prototype.clone = function() {
var t = new e();
t.valueCopy(this);
return t;
};
e.ID_STATUS = 0;
e.ID_BULLET = 1;
e.ID_TALENT = 2;
e.GROUP_ATTACK = 0;
e.GROUP_HIT = 1;
e.GROUP_HURT = 2;
e.GROUP_USE = 3;
e.GROUP_AUTO = 4;
e.GROUP_JUMP = 5;
e.TYPE_ATTACK_1 = 1;
e.TYPE_ATTACK_2 = 2;
e.TYPE_ATTACK_3 = 3;
e.TYPE_ATTTACK_REMOTE = 4;
e.TYPE_HIT = 0;
e.TYPE_HIT_CRIT = 1;
e.TYPE_HIT_BACK = 2;
e.TYPE_HIT_REMOTE = 3;
e.TYPE_HIT_CRIT_REMOTE = 4;
e.TYPE_HURT = 0;
e.TYPE_HURT_BLOCK = 1;
e.TYPE_HURT_PARRAY = 2;
e.TYPE_HURT_DODGE = 3;
e.TYPE_HURT_DREAM = 4;
e.TYPE_USE_ITEM = 0;
e.TYPE_USE_TALENT = 1;
e.TYPE_AUTO = 0;
e.TYPE_JUMP_START = 0;
e.TYPE_JUMP_HIGHEST = 1;
e.TYPE_JUMP_END = 2;
e.TARGET_SELF = 0;
e.TARGET_OTHER = 1;
e.TARGET_OTHER_NEAREST = 2;
e.TARGET_ALL = 3;
e.TARGET_ALL_ENEMY = 4;
e.TARGET_ALL_ALLY = 5;
return e;
}(t("./BaseData").default);
i.default = r;
cc._RF.pop();
}, {
"../utils/DataUtils": "DataUtils",
"./BaseData": "BaseData"
} ],
Utils: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "f719fThqrBMn6NkMcXey0jG", "Utils");
var o = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var a = t("../logic/EventHelper"), n = cc._decorator, r = n.ccclass, s = (n.property, 
function() {
function t() {}
e = t;
t.log = function(t) {
this.showLog && cc.log(t);
};
t.clearComponentArray = function(t) {
for (var e = 0, i = t; e < i.length; e++) {
var o = i[e];
o && o.isValid && o.destroy();
}
};
t.toast = function(t, e, i) {
a.EventHelper.emit(a.EventHelper.HUD_TOAST, {
msg: t,
isCenter: e,
isTap: i
});
};
t.getRotateAngle = function(t, e) {
var i = 180 * cc.v2(1, 0).signAngle(cc.v2(t.normalize())) / Math.PI;
return e ? -i : i;
};
t.getPlayTime = function(t) {
var i = Math.floor(t / 36e5), o = Math.floor((t - 36e5 * i) / 6e4), a = Math.floor((t - 36e5 * i - 6e4 * o) / 1e3);
return e.getNumberStr2(i) + ":" + e.getNumberStr2(o) + ":" + e.getNumberStr2(a);
};
t.getFullFormatTime = function(t) {
var i = new Date(t), o = i.getFullYear(), a = i.getMonth() + 1, n = i.getDate(), r = i.getHours() + 1;
r > 23 && (r = 0);
var s = i.getMinutes(), l = i.getSeconds();
return e.getNumberStr2(o) + "/" + e.getNumberStr2(a) + "/" + e.getNumberStr2(n) + " " + e.getNumberStr2(r) + ":" + e.getNumberStr2(s) + ":" + e.getNumberStr2(l);
};
t.getDay = function(t) {
var e = new Date(t), i = e.getMonth() + 1, o = e.getDate();
return (i < 10 ? "0" : "") + i + "月" + (o < 10 ? "0" : "") + o + "日 " + this.getWeek(e);
};
t.getHour = function(t) {
var e = new Date(t), i = e.getHours() + 1;
i > 23 && (i = 0);
var o = e.getMinutes();
return (i < 10 ? "0" : "") + i + ":" + (o < 10 ? "0" : "") + o;
};
t.getYear = function(t) {
return new Date(t).getFullYear() + "年";
};
t.getWeek = function(t) {
var e = "";
0 == t.getDay() && (e = "星期日");
1 == t.getDay() && (e = "星期一");
2 == t.getDay() && (e = "星期二");
3 == t.getDay() && (e = "星期三");
4 == t.getDay() && (e = "星期四");
5 == t.getDay() && (e = "星期五");
6 == t.getDay() && (e = "星期六");
return e;
};
t.clamp = function(t, e, i) {
return t > e ? e : t < i ? i : t;
};
t.clampPos = function(t, e, i) {
var o = t.clone();
t.x > e.x && (o.x = e.x);
t.y > e.y && (o.y = e.y);
t.x < i.x && (o.x = i.x);
t.y < i.y && (o.y = i.y);
return o;
};
t.isFirstEqual = function(t, e) {
return !!t && t[0] == e;
};
t.hasThe = function(t, e) {
return !!t && -1 != t.indexOf(e);
};
t.getNumberStr3 = function(t) {
return t < 10 ? "00" + t : t < 100 ? "0" + t : "" + t;
};
t.getNumberStr2 = function(t) {
return t < 10 ? "0" + t : "" + t;
};
t.getDashDistanceBySpeed = function(t, e) {
return 0 == e ? 0 : Math.abs(t * t * .5 / e);
};
t.getDashSpeedByDistance = function(t, e) {
return 0 == e ? 0 : Math.sqrt(t * e * 2);
};
t.getDashDistanceByTime = function(t, e, i) {
var o = i;
if (0 != e) {
var a = t / e;
o > a && (o = a);
}
return t * o - e * o * o * .5;
};
t.getJumpTimeBySpeedDistance = function(t, i, o) {
var a = e.getDashDistanceBySpeed(i, o);
return t < a ? 0 : (a = t - a) / i;
};
t.getDashTime = function(t, e) {
return 0 != e ? t / e : 0;
};
t.getDirByHv = function(t) {
var e = 4;
if (!t || t.equals(cc.Vec2.ZERO)) return e;
if (Math.abs(t.x) < Math.abs(t.y)) {
t.y > .3 && (e = 0);
t.y < -.3 && (e = 1);
}
if (Math.abs(t.x) > Math.abs(t.y)) {
t.x < -.3 && (e = 2);
t.x > .3 && (e = 3);
}
return e;
};
t.changeNodeGroups = function(t, e) {
if (t) {
t.group = e;
if (t.childrenCount > 0) for (var i = 0, o = t.children; i < o.length; i++) {
var a = o[i];
this.changeNodeGroups(a, e);
}
}
};
t.cloneKeyValue = function(t) {
var e = {};
for (var i in t) e[i] = t[i];
return e;
};
t.cloneKeyValueNumber = function(t) {
var e = {};
for (var i in t) e[i] = t[i];
return e;
};
var e;
t.showLog = !1;
return e = o([ r ], t);
}());
i.default = s;
cc._RF.pop();
}, {
"../logic/EventHelper": "EventHelper"
} ],
Vector: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "8b39avq6pdFOKx9CQMo7TwK", "Vector");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = function() {
function t(t, e) {
void 0 === t && (t = 0);
void 0 === e && (e = 0);
this.x = 0;
this.y = 0;
if (t && "object" == typeof t) {
this.x = t.x || 0;
this.y = t.y || 0;
} else {
this.x = t || 0;
this.y = e || 0;
}
}
t.prototype.clone = function() {
return new t(this.x, this.y);
};
t.prototype.equals = function(t) {
return t && this.x === t.x && this.y === t.y;
};
t.v2 = function(e, i) {
return new t(e, i);
};
return t;
}();
i.default = o;
cc._RF.pop();
}, {} ],
WalkSmoke: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "d3d56K96jBFs6t/GiwCmf8x", "WalkSmoke");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./EventHelper"), s = cc._decorator, l = s.ccclass, c = (s.property, function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
e.prototype.start = function() {
var t = this;
this.scheduleOnce(function() {
r.EventHelper.emit(r.EventHelper.POOL_DESTORY_WALKSMOKE, {
coinNode: t.node
});
}, .3);
};
return n([ l ], e);
}(cc.Component));
i.default = c;
cc._RF.pop();
}, {
"./EventHelper": "EventHelper"
} ],
WallPaint: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "8d015BSVUpN0Ib41MCFXakS", "WallPaint");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Building"), s = t("../logic/Logic"), l = cc._decorator, c = l.ccclass, u = l.property, p = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.RANGE = 3;
e.RANGE_PlAYER = 300;
e.frame = null;
e.paint = null;
return e;
}
e.prototype.init = function(t) {
this.entity.destroy();
this.mapStr = t;
var e = "wallpaint24x32_000";
switch (t[1]) {
case "0":
e = "wallpaint24x32_000";
break;

case "1":
e = "wallpaint24x32_001";
break;

case "2":
e = "wallpaint24x32_002";
break;

case "3":
e = "wallpaint24x32_003";
break;

case "4":
e = "wallpaint32x16_000";
break;

case "5":
e = "wallpaint24x32_005";
break;

case "6":
case "7":
case "8":
case "9":
e = "wallpaint24x32_000";
}
var i = s.default.spriteFrameRes(e);
if (i) {
this.paint.spriteFrame = i;
this.paint.node.width = i.getRect().width;
this.paint.node.height = i.getRect().height;
this.frame.node.width = this.paint.node.width + this.RANGE;
this.frame.node.height = this.paint.node.height + this.RANGE;
}
};
n([ u(cc.Sprite) ], e.prototype, "frame", void 0);
n([ u(cc.Sprite) ], e.prototype, "paint", void 0);
return n([ c ], e);
}(r.default);
i.default = p;
cc._RF.pop();
}, {
"../logic/Logic": "Logic",
"./Building": "Building"
} ],
Wall: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e7c06zRjp9J+piF+ZsFdjSH", "Wall");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./../logic/EventHelper"), s = t("../logic/Dungeon"), l = t("../logic/Logic"), c = t("./Building"), u = t("../collider/CCollider"), p = t("../utils/Utils"), h = cc._decorator, d = h.ccclass, f = (h.property, 
function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.half = !1;
e.mapStr = "##";
e.wallName = "";
e.roofName = "";
e.resNameSecond = "";
e.type = i.TYPE_EMPTY;
e.dir = 0;
e.isFence = !1;
e.alpha = 255;
return e;
}
i = e;
e.prototype.onLoad = function() {
this.wallsprite = this.node.getChildByName("sprite").getChildByName("wallsprite").getComponent(cc.Sprite);
this.roofsprite = this.node.getChildByName("sprite").getChildByName("roofsprite").getComponent(cc.Sprite);
this.shadowsprite = this.node.getChildByName("sprite").getChildByName("shadow").getComponent(cc.Sprite);
};
e.prototype.isEmptyWall = function() {
return this.type == i.TYPE_EMPTY;
};
e.prototype.changeRes = function(t) {
l.default.mapManager.getRandom4Save(this.seed);
var e = l.default.spriteFrameRes(t);
if (this.type != i.TYPE_EMPTY) if (this.type != i.TYPE_OTHER) if (p.default.hasThe(t, "fence")) {
this.isFence = !0;
this.roofsprite.node.opacity = 0;
this.wallsprite.spriteFrame = null;
this.wallsprite.trim = !1;
this.wallsprite.node.width = 16;
this.wallsprite.node.height = 32;
switch (this.type) {
case i.TYPE_INNER_CORNER_BOTTOM_RIGHT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim10");
break;

case i.TYPE_BOTTOM:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim1");
break;

case i.TYPE_INNER_CORNER_BOTTOM_LEFT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim11");
break;

case i.TYPE__RIGHT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim3");
break;

case i.TYPE_CENTER:
break;

case i.TYPE_LEFT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim2");
break;

case i.TYPE_INNER_CORNER_TOP_RIGHT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim9");
break;

case i.TYPE_TOP:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim0");
break;

case i.TYPE_INNER_CORNER_TOP_LEFT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim8");
break;

case i.TYPE_CORNER_TOP_LEFT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim4");
break;

case i.TYPE_CORNER_TOP_RIGHT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim5");
break;

case i.TYPE_CORNER_BOTTOM_LEFT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim7");
break;

case i.TYPE_CORNER_BOTTOM_RIGHT:
this.wallsprite.spriteFrame = l.default.spriteFrameRes(t + "anim6");
break;

case i.TYPE_INNER_CORNER_TOP_RIGHT_BOTTOM_LEFT:
case i.TYPE_INNER_CORNER_TOP_LEFT_BOTTOM_RIGHT:
}
this.ajustSpriteShow(!1);
} else {
var o = e.getRect(), a = e.clone(), n = e.clone();
this.roofsprite.trim = !0;
this.wallsprite.trim = !0;
this.roofsprite.node.width = 16;
this.roofsprite.node.height = 16;
this.wallsprite.node.width = 16;
this.wallsprite.node.height = 16;
this.roofsprite.spriteFrame = a;
this.wallsprite.spriteFrame = n;
var r = cc.v2(0, 0), s = cc.v2(0, 0);
switch (this.type) {
case i.TYPE_INNER_CORNER_BOTTOM_RIGHT:
r = cc.v2(0, 0);
s = cc.v2(1, 3);
break;

case i.TYPE_BOTTOM:
r = cc.v2(1, 0);
s = cc.v2(1, 3);
break;

case i.TYPE_INNER_CORNER_BOTTOM_LEFT:
r = cc.v2(2, 0);
s = cc.v2(1, 3);
break;

case i.TYPE__RIGHT:
r = cc.v2(0, 1);
s = cc.v2(1, 3);
break;

case i.TYPE_CENTER:
r = cc.v2(1, 1);
s = cc.v2(1, 3);
break;

case i.TYPE_LEFT:
r = cc.v2(2, 1);
s = cc.v2(1, 3);
break;

case i.TYPE_INNER_CORNER_TOP_RIGHT:
r = cc.v2(0, 2);
s = cc.v2(0, 3);
break;

case i.TYPE_TOP:
r = cc.v2(1, 2);
s = cc.v2(1, 3);
break;

case i.TYPE_INNER_CORNER_TOP_LEFT:
r = cc.v2(2, 2);
s = cc.v2(4, 3);
break;

case i.TYPE_CORNER_TOP_LEFT:
r = cc.v2(3, 0);
s = cc.v2(1, 3);
break;

case i.TYPE_CORNER_TOP_RIGHT:
r = cc.v2(4, 0);
s = cc.v2(1, 3);
break;

case i.TYPE_CORNER_BOTTOM_LEFT:
r = cc.v2(3, 1);
s = cc.v2(1, 3);
break;

case i.TYPE_CORNER_BOTTOM_RIGHT:
r = cc.v2(4, 1);
s = cc.v2(1, 3);
break;

case i.TYPE_INNER_CORNER_TOP_RIGHT_BOTTOM_LEFT:
r = cc.v2(3, 2);
s = cc.v2(1, 3);
break;

case i.TYPE_INNER_CORNER_TOP_LEFT_BOTTOM_RIGHT:
r = cc.v2(4, 2);
s = cc.v2(1, 3);
}
a.setRect(cc.rect(o.x + 16 * r.x, o.y + 16 * r.y, 16, 16));
n.setRect(cc.rect(o.x + 16 * s.x, o.y + 16 * s.y, 16, 16));
this.roofsprite.spriteFrame = a;
this.wallsprite.spriteFrame = n;
} else {
this.roofsprite.node.opacity = 0;
this.wallsprite.spriteFrame = e;
this.wallsprite.node.width = 16;
this.wallsprite.node.height = 32;
} else this.node.opacity = 0;
};
e.prototype.setPos = function(t) {
this.pos = t;
this.entity.Transform.position = s.default.getPosInMap(t);
this.node.position = this.entity.Transform.position.clone();
};
e.prototype.start = function() {};
e.prototype.ajustSpriteShow = function(t) {
this.wallsprite || (this.shadowsprite = this.node.getChildByName("sprite").getChildByName("shadow").getComponent(cc.Sprite));
this.shadowsprite.node.opacity = t ? 40 : 0;
};
e.typeNeedTransparent = function(t) {
return t == i.TYPE_INNER_CORNER_BOTTOM_RIGHT || t == i.TYPE_BOTTOM || t == i.TYPE_INNER_CORNER_BOTTOM_LEFT || t == i.TYPE_OTHER;
};
e.getType = function(t) {
i.TYPE_EMPTY;
return p.default.hasThe(t, "###") ? i.TYPE_EMPTY : p.default.hasThe(t, "##") ? i.TYPE_OTHER : parseInt(t.substring(3));
};
e.prototype.init = function(t, e, o, a, n) {
var s = this;
this.node.opacity = 255;
this.mapStr = t;
this.type = i.getType(t);
this.type == i.TYPE_OTHER ? this.wallName = e.getWallRes(parseInt(t.substring(2)), !0) : this.wallName = e.getWallRes(parseInt(t.substring(1, 3)));
this.changeRes(this.wallName);
this.setTargetTags(u.default.TAG.PLAYER, u.default.TAG.NONPLAYER, u.default.TAG.GOODNONPLAYER, u.default.TAG.BOSS, u.default.TAG.BUILDING, u.default.TAG.BULLET, u.default.TAG.PLAYER_HIT);
if (o) this.entity.destroy(); else if (a > 0) for (var l = 0, c = this.ccolliders; l < c.length; l++) {
var p = (f = c[l]).w / 2;
f.w += f.w * a;
f.offsetX = f.w / 2 - p;
} else if (n > 0) for (var h = 0, d = this.ccolliders; h < d.length; h++) {
var f;
if ((f = d[h]).sensor) f.offsetY += n * f.offsetY; else {
p = f.h / 2;
f.h += f.h * n;
f.offsetY = f.h / 2 - p;
}
}
if (this.combineWall) {
o || this.entity.destroy();
r.EventHelper.on(r.EventHelper.DUNGEON_WALL_COLLIDER + this.combineWall.node.uuid, function(t) {
s.node && (0 == t.type ? s.onColliderEnter(t.other, t.self) : 1 == t.type ? s.onColliderStay(t.other, t.self) : 2 == t.type && s.onColliderExit(t.other, t.self));
});
}
};
e.prototype.onColliderEnter = function(t, e) {
if (e.sensor && i.typeNeedTransparent(this.type) && (t.tag == u.default.TAG.PLAYER || t.tag == u.default.TAG.NONPLAYER)) {
this.combineWall || r.EventHelper.emit(r.EventHelper.DUNGEON_WALL_COLLIDER + this.node.uuid, {
type: 0,
other: t,
self: e
});
i.typeNeedTransparent(this.type) && (this.alpha = 80);
}
};
e.prototype.onColliderStay = function(t, e) {
if (e.sensor && (t.tag == u.default.TAG.PLAYER || t.tag == u.default.TAG.NONPLAYER)) {
this.combineWall || r.EventHelper.emit(r.EventHelper.DUNGEON_WALL_COLLIDER + this.node.uuid, {
type: 1,
other: t,
self: e
});
i.typeNeedTransparent(this.type) && (this.alpha = 80);
}
};
e.prototype.onColliderExit = function(t, e) {
if (e.sensor && (t.tag == u.default.TAG.PLAYER || t.tag == u.default.TAG.NONPLAYER)) {
this.combineWall || r.EventHelper.emit(r.EventHelper.DUNGEON_WALL_COLLIDER + this.node.uuid, {
type: 2,
other: t,
self: e
});
i.typeNeedTransparent(this.type) && (this.type == i.TYPE_OTHER || this.isFence, 
this.alpha = 255);
}
};
e.prototype.update = function(t) {
i.typeNeedTransparent(this.type) && (this.type == i.TYPE_OTHER || this.isFence ? this.wallsprite.node.opacity = l.default.lerp(this.wallsprite.node.opacity, this.alpha, 3 * t) : this.roofsprite.node.opacity = l.default.lerp(this.roofsprite.node.opacity, this.alpha, 5 * t));
};
var i;
e.TYPE_EMPTY = -1;
e.TYPE_INNER_CORNER_BOTTOM_RIGHT = 0;
e.TYPE_BOTTOM = 1;
e.TYPE_INNER_CORNER_BOTTOM_LEFT = 2;
e.TYPE__RIGHT = 3;
e.TYPE_CENTER = 4;
e.TYPE_LEFT = 5;
e.TYPE_INNER_CORNER_TOP_RIGHT = 6;
e.TYPE_TOP = 7;
e.TYPE_INNER_CORNER_TOP_LEFT = 8;
e.TYPE_CORNER_TOP_LEFT = 9;
e.TYPE_CORNER_TOP_RIGHT = 10;
e.TYPE_CORNER_BOTTOM_LEFT = 11;
e.TYPE_CORNER_BOTTOM_RIGHT = 12;
e.TYPE_INNER_CORNER_TOP_RIGHT_BOTTOM_LEFT = 13;
e.TYPE_INNER_CORNER_TOP_LEFT_BOTTOM_RIGHT = 14;
e.TYPE_OTHER = 30;
return i = n([ d ], e);
}(c.default));
i.default = f;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../utils/Utils": "Utils",
"./../logic/EventHelper": "EventHelper",
"./Building": "Building"
} ],
WarMachine: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "e27dcjzJmBGK54bflNR6COZ", "WarMachine");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Boss"), s = t("../data/DamageData"), l = t("../logic/Shooter"), c = t("../logic/Dungeon"), u = t("../logic/Logic"), p = t("../manager/StatusManager"), h = t("../utils/AudioPlayer"), d = t("../data/FromData"), f = t("../logic/Achievement"), g = t("../utils/ActorUtils"), y = t("../collider/CCollider"), m = cc._decorator, v = m.ccclass, E = m.property, _ = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.label = null;
e.text = "hello";
e.timeDelay = 0;
e.isMoving = !1;
e.isMissileCoolDown = !1;
e.isGatlingCoolDown = !1;
e.isMainGunCoolDown = !1;
e.isMoveRight = !1;
e.actionTimeDelay = 0;
return e;
}
e.prototype.init = function() {
throw new Error("Method not implemented.");
};
e.prototype.onLoad = function() {
this.sc.isDied = !1;
this.sc.isShow = !1;
this.anim = this.getComponent(cc.Animation);
this.shooter01 = this.node.getChildByName("Shooter01").getComponent(l.default);
this.shooter02 = this.node.getChildByName("Shooter02").getComponent(l.default);
this.shooter03 = this.node.getChildByName("Shooter03").getComponent(l.default);
this.shooter04 = this.node.getChildByName("Shooter04").getComponent(l.default);
this.shooter05 = this.node.getChildByName("Shooter05").getComponent(l.default);
this.statusManager = this.node.getChildByName("StatusManager").getComponent(p.default);
var t = d.default.getClone(this.actorName(), "bossmachinehead");
this.shooter01.from.valueCopy(t);
this.shooter02.from.valueCopy(t);
this.shooter03.from.valueCopy(t);
this.shooter04.from.valueCopy(t);
this.shooter05.from.valueCopy(t);
};
e.prototype.start = function() {
this.initGuns();
};
e.prototype.takeDamage = function(t) {
if (this.sc.isDied || !this.sc.isShow) return !1;
this.data.currentHealth -= this.data.getDamage(t).getTotalDamage();
this.data.currentHealth > this.data.Common.MaxHealth && (this.data.currentHealth = this.data.Common.MaxHealth);
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
var e = [ h.default.MONSTER_HIT, h.default.MONSTER_HIT1, h.default.MONSTER_HIT2 ];
h.default.play(e[u.default.getRandomNum(0, 2)]);
return !0;
};
e.prototype.killed = function() {
var t = this;
if (!this.sc.isDied) {
this.anim && this.anim.pause();
f.default.addMonsterKillAchievement(this.data.resName);
this.sc.isDied = !0;
this.scheduleOnce(function() {
t.node && (t.node.active = !1);
}, 5);
this.getLoot();
}
};
e.prototype.bossAction = function() {
if (!this.sc.isDied && this.sc.isShow && this.dungeon) {
this.changeZIndex();
var t = this.data.currentHealth < this.data.Common.MaxHealth / 2;
this.dungeon && u.default.getChance(90) && this.fireMainGun();
this.getNearPlayerDistance(this.dungeon.player.node) < 300 ? this.fireMissile(t) : u.default.getChance(20) && this.fireMissile(t);
this.fireGatling(t);
if (t) {
if (this.isMoveRight && this.pos.x - this.defaultPos.x > 2) {
this.isMoveRight = !1;
h.default.play(h.default.MELEE);
} else if (!this.isMoveRight && this.defaultPos.x - this.pos.x > 2) {
this.isMoveRight = !0;
h.default.play(h.default.MELEE);
}
var e = cc.v3(this.isMoveRight ? 1 : -1, 0);
if (!e.equals(cc.Vec3.ZERO)) {
e = e.normalizeSelf();
this.move(e, 8);
}
}
this.shooter01.setHv(cc.v2(0, -1));
var i = this.entity.Transform.position.clone().add(this.shooter01.node.position), o = this.dungeon.player.getCenterPosition().sub(i);
o.equals(cc.Vec3.ZERO) || this.shooter01.setHv(cc.v2(o).normalize());
}
};
e.prototype.initGuns = function() {
this.isMainGunCoolDown = !1;
this.isGatlingCoolDown = !1;
this.isMissileCoolDown = !1;
this.shooter01.setHv(cc.v2(0, -1));
this.shooter02.setHv(cc.v2(0, -1));
this.shooter03.setHv(cc.v2(0, -1));
this.shooter04.setHv(cc.v2(0, -1));
this.shooter05.setHv(cc.v2(0, -1));
var t = this.entity.Transform.position.clone().add(this.shooter01.node.position), e = this.dungeon.player.getCenterPosition().sub(t);
e.equals(cc.Vec3.ZERO) || this.shooter01.setHv(cc.v2(e).normalize());
};
e.prototype.fireMainGun = function() {
var t = this;
if (!this.isMainGunCoolDown) {
this.isMainGunCoolDown = !0;
this.anim.play("WarMachineMainGunShoot");
this.scheduleOnce(function() {
t.isMainGunCoolDown = !1;
}, 3);
}
};
e.prototype.MainGunShootFinish = function() {
this.shooter01.setHv(cc.v2(0, -1));
var t = this.entity.Transform.position.clone().add(this.shooter01.node.position), e = this.dungeon.player.getCenterPosition().sub(t);
if (!e.equals(cc.Vec3.ZERO)) {
this.shooter01.setHv(cc.v2(e).normalize());
this.fireShooter(this.shooter01, "bullet016", 0, 0, 0, cc.v3(48, 0));
}
this.anim.play("WarMachineIdle");
};
e.prototype.fireGatling = function(t) {
var e = this;
if (!this.isGatlingCoolDown) {
this.isGatlingCoolDown = !0;
this.shooter02.setHv(cc.v2(0, -1));
this.shooter03.setHv(cc.v2(0, -1));
this.shooter02.data.bulletLineInterval = .5;
this.shooter03.data.bulletLineInterval = .5;
var i = 6, o = u.default.getRandomNum(0, 15);
o = u.default.getHalfChance() ? o : -o;
if (t) {
this.fireShooter(this.shooter02, "bullet111", 0, 4);
this.fireShooter(this.shooter03, "bullet111", 0, 4);
i = 3;
} else {
this.fireShooter(this.shooter02, "bullet111", 2, 2);
this.fireShooter(this.shooter03, "bullet111", 2, 2);
}
this.scheduleOnce(function() {
e.isGatlingCoolDown = !1;
}, i);
}
};
e.prototype.fireMissile = function(t) {
var e = this;
if (!this.isMissileCoolDown) {
this.isMissileCoolDown = !0;
this.shooter04.setHv(cc.v2(0, -1));
this.shooter05.setHv(cc.v2(0, -1));
this.shooter04.data.bulletLineInterval = .5;
this.shooter05.data.bulletLineInterval = .5;
this.fireShooter(this.shooter04, "bullet015", 2, t ? 1 : 0);
this.fireShooter(this.shooter05, "bullet015", 2, t ? 1 : 0);
this.scheduleOnce(function() {
e.isMissileCoolDown = !1;
}, t ? 2 : 4);
}
};
e.prototype.fireShooter = function(t, e, i, o, a, n) {
t.dungeon = this.dungeon;
t.actor = this;
t.data.bulletType = e;
t.data.bulletArcExNum = i;
t.data.bulletLineExNum = o;
t.fireBullet(a, n);
};
e.prototype.showBoss = function() {
this.initGuns();
this.sc.isShow = !0;
this.entity.NodeRender.node = this.node;
this.entity.Move.damping = 6;
if (this.healthBar) {
this.healthBar.refreshHealth(this.data.currentHealth, this.data.Common.MaxHealth);
this.healthBar.node.active = !this.sc.isDied;
}
};
e.prototype.isActionTimeDelay = function(t) {
this.actionTimeDelay += t;
if (this.actionTimeDelay > .2) {
this.actionTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t) {
this.timeDelay += t;
this.timeDelay > 1 && (this.timeDelay = 0);
this.isActionTimeDelay(t) && this.bossAction();
this.data.currentHealth < 1 && this.killed();
this.healthBar.node.active = !this.sc.isDied;
};
e.prototype.move = function(t, e) {
if (!this.sc.isDied) {
t.equals(cc.Vec3.ZERO) || (this.pos = c.default.getIndexInMap(this.entity.Transform.position));
var i = t.x, o = t.y, a = (Math.abs(i), Math.abs(o), cc.v2(i, o));
a = a.normalize().mul(e);
this.entity.Move.linearVelocity = a;
this.isMoving = 0 != i || 0 != o;
this.changeZIndex();
}
};
e.prototype.onColliderEnter = function(t, e) {
if (e.tag == y.default.TAG.BOSS_HIT) {
var i = g.default.getEnemyCollisionTarget(t);
if (i && !this.sc.isDied) {
var o = new s.default();
o.physicalDamage = 8;
i.takeDamage(o, d.default.getClone(this.actorName(), "bossmachinehead"), this);
}
}
};
e.prototype.actorName = function() {
return "战争机器";
};
n([ E(cc.Label) ], e.prototype, "label", void 0);
n([ E ], e.prototype, "text", void 0);
return n([ v ], e);
}(r.default);
i.default = _;
cc._RF.pop();
}, {
"../collider/CCollider": "CCollider",
"../data/DamageData": "DamageData",
"../data/FromData": "FromData",
"../logic/Achievement": "Achievement",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../logic/Shooter": "Shooter",
"../manager/StatusManager": "StatusManager",
"../utils/ActorUtils": "ActorUtils",
"../utils/AudioPlayer": "AudioPlayer",
"./Boss": "Boss"
} ],
WeatherEffect: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4cf48SLNidBQ47BFZw5059s", "WeatherEffect");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = cc._decorator, s = r.ccclass, l = (r.property, function(t) {
a(e, t);
function e() {
return null !== t && t.apply(this, arguments) || this;
}
return n([ s ], e);
}(cc.Component));
i.default = l;
cc._RF.pop();
}, {} ],
WeatherManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "47cfd5ASC5GSaOZNk50q4sU", "WeatherManager");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("../effect/weather/WeatherEffect"), s = t("../effect/weather/WeatherRain"), l = t("../logic/Dungeon"), c = t("../logic/Logic"), u = t("../utils/IndexZ"), p = t("../utils/Utils"), h = t("./BaseManager"), d = cc._decorator, f = d.ccclass, g = d.property, y = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.rain = null;
e.effectList = [];
e.checkTimeDelay = 0;
return e;
}
e.prototype.clear = function() {
p.default.clearComponentArray(this.effectList);
this.effectList = new Array();
};
e.prototype.addRain = function(t, e) {
this.weatherRain = this.addWeatherEffect(this.rain, t).getComponent(s.default);
this.weatherRain.root.y = e;
};
e.prototype.addWeatherEffect = function(t, e) {
var i = cc.instantiate(t);
i.parent = this.node;
i.position = l.default.getPosInMap(e);
i.zIndex = u.default.FOG;
var o = i.getComponent(r.default);
this.effectList.push(o);
return i;
};
e.prototype.isCheckTimeDelay = function(t) {
this.checkTimeDelay += t;
if (this.checkTimeDelay > .2) {
this.checkTimeDelay = 0;
return !0;
}
return !1;
};
e.prototype.updateLogic = function(t, e) {
if (this.weatherRain) {
var i = e.node.position.clone();
e.entity && (i.y += e.entity.Transform.z);
this.weatherRain.node.setPosition(c.default.lerpPos(this.weatherRain.node.position, i, .05 * t));
}
};
n([ g(cc.Prefab) ], e.prototype, "rain", void 0);
return n([ f ], e);
}(h.default);
i.default = y;
cc._RF.pop();
}, {
"../effect/weather/WeatherEffect": "WeatherEffect",
"../effect/weather/WeatherRain": "WeatherRain",
"../logic/Dungeon": "Dungeon",
"../logic/Logic": "Logic",
"../utils/IndexZ": "IndexZ",
"../utils/Utils": "Utils",
"./BaseManager": "BaseManager"
} ],
WeatherRain: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1ce77NY0itO/48vBXouVEYC", "WeatherRain");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./WeatherEffect"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.root = null;
e.rain = null;
e.drop = null;
return e;
}
n([ c(cc.Node) ], e.prototype, "root", void 0);
n([ c(cc.ParticleSystem) ], e.prototype, "rain", void 0);
n([ c(cc.ParticleSystem) ], e.prototype, "drop", void 0);
return n([ l ], e);
}(r.default);
i.default = u;
cc._RF.pop();
}, {
"./WeatherEffect": "WeatherEffect"
} ],
WordManager: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "0c333CGNPJP0ov5KegA/Xzf", "WordManager");
Object.defineProperty(i, "__esModule", {
value: !0
});
i.default = function() {};
cc._RF.pop();
}, {} ],
WorldLoader: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "1da44Z4XqpEhJs0KUhYRpQR", "WorldLoader");
Object.defineProperty(i, "__esModule", {
value: !0
});
var o = t("../data/ChapterData"), a = t("../data/LevelData"), n = t("../logic/EventHelper"), r = t("../logic/Logic"), s = t("../ui/LoadingIcon"), l = function() {
function t() {
this.worldMap = [];
this.realWorldMap = new o.default(99);
this.isloaded = !1;
this.isloaded00 = !1;
this.isloaded01 = !1;
this.isloaded02 = !1;
this.isloaded03 = !1;
this.isloaded04 = !1;
this.isloaded05 = !1;
this.isloaded99 = !1;
this.isLoading = !1;
this.callbacks = [];
this.isloaded = !1;
}
t.prototype.emitCallbacks = function() {
for (var t = this.callbacks.length - 1; t >= 0; t--) {
var e = this.callbacks.pop();
e && e();
}
};
t.prototype.loadWorld = function(t) {
t && this.callbacks.push(t);
if (!this.isLoading) {
this.isLoading = !0;
if (this.worldMap.length > 0) {
this.emitCallbacks();
this.isloaded = !0;
this.isLoading = !1;
n.EventHelper.emit(n.EventHelper.LOADING_ICON, {
type: s.default.TYPE_MAP
});
} else {
this.worldMap = new Array();
for (var e = 0; e < 6; e++) {
var i = new o.default(e);
this.worldMap.push(i);
}
this.loadTileSets();
}
}
};
t.prototype.loadTileSets = function() {
var t = this;
cc.log("加载地图块");
cc.resources.load("Data/world/tileset", function(e, i) {
if (e) cc.error(e); else {
cc.log("加载地图块完成");
for (var o = {}, a = 0, n = i.json.tiles; a < n.length; a++) {
var r = n[a];
o[r.id] = r.type;
}
t.loadTiledMaps(o);
}
});
};
t.prototype.loadTiledMaps = function(t) {
var e = this;
cc.log("加载世界");
cc.resources.loadDir("Data/world/tiledmap", cc.JsonAsset, function(i, o) {
for (var r = 0, l = o; r < l.length; r++) {
var c = l[r], u = c.name.split("_"), p = parseInt(u[1]), h = 99 == p ? e.realWorldMap : e.worldMap[p], d = c.json.layers[1].properties;
if (!d.width) {
d = new a.default();
for (var f = 0, g = c.json.layers[1].properties; f < g.length; f++) {
var y = g[f];
y.name && (d[y.name] = y.value);
}
}
for (var m = new Array(), v = new Array(), E = new Array(), _ = d.width * d.roomWidth, T = d.height * d.roomHeight, D = 0; D < T; D++) {
m[D] = new Array();
v[D] = new Array();
E[D] = new Array();
for (var S = 0; S < _; S++) {
var O = c.json.layers[0].data[D * _ + S];
v[D][S] = t[O - 1];
var A = c.json.layers[1].data[D * _ + S];
m[D][S] = t[A - 1];
var R = c.json.layers[2].data[D * _ + S];
E[D][S] = t[R - 1];
}
}
var C = new Array(), P = new Array(), L = new Array();
for (D = 0; D < m[0].length; D++) {
P[D] = new Array();
C[D] = new Array();
L[D] = new Array();
for (S = 0; S < m.length; S++) {
P[D][m.length - 1 - S] = v[S][D];
C[D][m.length - 1 - S] = m[S][D];
L[D][E.length - 1 - S] = E[S][D];
}
}
d.map = C;
d.floormap = P;
var b = new Array(), I = new Array(), M = new Array();
for (D = 0; D < d.width; D++) {
b[D] = new Array();
I[D] = new Array();
M[D] = new Array();
for (S = 0; S < d.height; S++) {
b[D][S] = L[D * d.roomWidth][S * d.roomHeight];
I[D][S] = L[D * d.roomWidth + 1][S * d.roomHeight];
M[D][S] = 1 == L[D * d.roomWidth + 2][S * d.roomHeight];
}
}
d.roomTypes = b;
d.shadowMap = I;
d.outSideMap = M;
c.json.layers[3] && c.json.layers[3].objects && (d.lights = c.json.layers[3].objects);
var N = new a.default();
N.valueCopy(d);
h.list.push(N);
}
e.realWorldMap.list.sort(function(t, e) {
return t.index - e.index;
});
for (var w = 0, H = e.worldMap; w < H.length; w++) H[w].list.sort(function(t, e) {
return t.index - e.index;
});
e.emitCallbacks();
e.isloaded = !0;
e.isLoading = !1;
cc.log("加载世界完成");
n.EventHelper.emit(n.EventHelper.LOADING_ICON, {
type: s.default.TYPE_MAP
});
});
};
t.prototype.getChapterLength = function() {
return this.worldMap.length;
};
t.prototype.getChapterData = function(t) {
return t >= 99 ? this.realWorldMap : this.worldMap[t];
};
t.prototype.getLevelList = function(t) {
return this.getChapterData(t).list;
};
t.prototype.getLevelData = function(t, e) {
var i = this.getLevelList(t);
if (i.length < 1) return null;
i[e].chapter = t;
return i[e];
};
t.prototype.getCurrentLevelData = function() {
return this.getLevelData(r.default.chapterIndex, r.default.level);
};
return t;
}();
i.default = l;
cc._RF.pop();
}, {
"../data/ChapterData": "ChapterData",
"../data/LevelData": "LevelData",
"../logic/EventHelper": "EventHelper",
"../logic/Logic": "Logic",
"../ui/LoadingIcon": "LoadingIcon"
} ],
WxHelper: [ function(t, e, i) {
"use strict";
cc._RF.push(e, "4e113prls5Op7r/tgtPErZz", "WxHelper");
var o, a = this && this.__extends || (o = function(t, e) {
return (o = Object.setPrototypeOf || {
__proto__: []
} instanceof Array && function(t, e) {
t.__proto__ = e;
} || function(t, e) {
for (var i in e) Object.prototype.hasOwnProperty.call(e, i) && (t[i] = e[i]);
})(t, e);
}, function(t, e) {
o(t, e);
function i() {
this.constructor = t;
}
t.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}), n = this && this.__decorate || function(t, e, i, o) {
var a, n = arguments.length, r = n < 3 ? e : null === o ? o = Object.getOwnPropertyDescriptor(e, i) : o;
if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) r = Reflect.decorate(t, e, i, o); else for (var s = t.length - 1; s >= 0; s--) (a = t[s]) && (r = (n < 3 ? a(r) : n > 3 ? a(e, i, r) : a(e, i)) || r);
return n > 3 && r && Object.defineProperty(e, i, r), r;
};
Object.defineProperty(i, "__esModule", {
value: !0
});
var r = t("./Logic"), s = cc._decorator, l = s.ccclass, c = s.property, u = function(t) {
a(e, t);
function e() {
var e = null !== t && t.apply(this, arguments) || this;
e.wx = window.wx;
e.user = null;
e.startButtonNode = null;
e.rankList = null;
e.rankListOpen = !1;
return e;
}
e.prototype.start = function() {
if (this.rankList) {
this.CloseDialog();
this.rankList.node.active = this.rankListOpen;
}
if (this.wx) if (this.startButtonNode) {
var t = cc.size(this.startButtonNode.width + 10, this.startButtonNode.height + 10), e = cc.view.getFrameSize(), i = cc.director.getWinSize(), o = (.5 * i.width + this.startButtonNode.x - .5 * t.width) / i.width * e.width, a = (.5 * i.height - this.startButtonNode.y - .5 * t.height) / i.height * e.height, n = t.width / i.width * e.width, r = t.height / i.height * e.height, s = this.wx.createUserInfoButton({
type: "text",
text: "",
style: {
left: o,
top: a,
width: n,
height: r,
lineHeight: 0,
backgroundColor: "",
color: "#000000",
textAlign: "center",
fontSize: 10,
borderRadius: 3
}
}), l = this, c = null;
s.onTap(function(t) {
if (c) s.hide(); else switch (t.errMsg) {
case "getUserInfo:ok":
s.hide();
cc.sys.localStorage.setItem("hasUserInfo", "1");
var e = (c = t.userInfo).nickName, i = c.avatarUrl;
l.setUserConfig(e, i);
l.wx.getOpenDataContext().postMessage({
message: "User info get success."
});

default:
console.error(t.errMsg);
}
});
"1" == cc.sys.localStorage.getItem("hasUserInfo") && s.hide();
} else this.saveRankData();
};
e.prototype.setUserConfig = function(t, e) {
if (this.user) {
var i = this.user.getChildByName("mask").getComponentInChildren(cc.Sprite);
this.user.getChildByName("userName").getComponent(cc.Label).string = t;
cc.loader.load({
url: e,
type: "png"
}, function(t, e) {
t && console.error(t);
i.spriteFrame = new cc.SpriteFrame(e);
});
}
};
e.prototype.CloseDialog = function() {
if (this.wx && this.node && this.rankList && this.rankList.node) {
this.rankList.node.active = !1;
this.wx.getOpenDataContext().postMessage({
message: "close"
});
}
};
e.prototype.OpenDialog = function() {
if (this.wx && this.rankList) {
this.rankList.node.active = !0;
this.saveRankData();
}
};
e.prototype.saveRankData = function() {
if (this.wx) {
var t = this;
t.wx.setUserCloudStorage({
KVDataList: [ {
key: "score",
value: r.default.coins + ""
} ],
success: function(e) {
console.log("score" + r.default.coins);
console.log(e);
t.wx.getOpenDataContext().postMessage({
message: "updateMaxScore"
});
},
fail: function(t) {
console.log("failed" + r.default.coins);
console.log(t);
}
});
} else console.log("wx is empty");
};
n([ c(cc.Node) ], e.prototype, "user", void 0);
n([ c(cc.Node) ], e.prototype, "startButtonNode", void 0);
n([ c(cc.WXSubContextView) ], e.prototype, "rankList", void 0);
n([ c ], e.prototype, "rankListOpen", void 0);
return n([ l ], e);
}(cc.Component);
i.default = u;
cc._RF.pop();
}, {
"./Logic": "Logic"
} ],
use_reversed_rotateBy: [ function(t, e) {
"use strict";
cc._RF.push(e, "20f25G5HaZKk4Y2GuqawsGN", "use_reversed_rotateBy");
cc.RotateBy._reverse = !0;
cc._RF.pop();
}, {} ]
}, {}, [ "ActorAttackBox", "ActorBottomDir", "AreaDetector", "AreaOfEffect", "ColliderTag", "JumpingAbility", "NonPlayerActorState", "PlayerActorState", "ShadowPlayer", "Actor", "BaseAvatar", "BaseColliderComponent", "BaseNodeComponent", "BaseNonPlayerActorState", "BasePlayerActorState", "PlayActor", "StateContext", "DefaultStateMachine", "FsmEvent", "StackStateMachine", "State", "StateMachine", "Boss", "BossAttackCollider", "Captain", "CaptainSword", "Dragon", "Dryad", "DryadGrass", "EvilEye", "IceDemon", "IceDemonThron", "Kraken", "KrakenSwingHand", "Rah", "Slime", "SlimeVenom", "Sphinx", "WarMachine", "AirExit", "Box", "Building", "CampFire", "Chest", "DecorationFloor", "DecorationWall", "Door", "Emplacement", "EnergyShield", "ExitDoor", "FallStone", "FootBoard", "Furniture", "InteractBuilding", "Ladder", "LightBuilding", "MagicLightening", "MartCashier", "MartShelves", "MgCrack", "MgWentLine", "MonsterGenerator", "MushRoomChild", "NormalBuilding", "Portal", "RoomBed", "RoomClock", "RoomFishtank", "RoomKitchen", "RoomStool", "RoomTrashCan", "RoomTv", "RoomWaterDispenser", "SavePoint", "Saw", "ShopMart", "ShopTable", "Stairs", "TarotTable", "Trap", "Wall", "WallPaint", "CCollider", "OnContactListener", "Quadtree", "Vector", "AchievementData", "AreaOfEffectData", "AttributeData", "AvatarData", "BaseData", "BuildingData", "BulletData", "CellphoneData", "ChapterData", "ChunkData", "CommonData", "DamageData", "DialogueActorData", "DialogueButtonData", "DialogueData", "DialogueTextData", "DungeonStyleData", "EquipItemMapData", "EquipmentData", "EquipmentDescData", "EquipmentStringData", "ExitData", "FloatingLabelData", "FromData", "FurnitureData", "GoodsData", "GroundOilGoldData", "InventoryData", "ItemData", "LevelData", "LifeData", "MapData", "MapLightData", "MapManagerData", "NonPlayerData", "OilGoldData", "PlayerData", "ProfessionData", "ProfileData", "ProfileGlobalData", "SavePointData", "SettingsData", "StatusData", "SuitData", "TalentData", "TarotData", "TriggerData", "ECS", "ColliderComponent", "InputComponent", "MoveComponent", "NodeRenderComponent", "TransformComponent", "ActorEntity", "NodeEntity", "ColliderSystem", "GameWorldSystem", "InputSystem", "MoveSystem", "RayCastResult", "QuestAlertDialog", "QuestCard", "QuestConditionItem", "QuestDateInputItem", "QuestFileEditManager", "QuestFileEditor", "QuestInputItem", "QuestSpriteInfoDialog", "QuestSpriteItem", "QuestSpritePickDialog", "QuestConditionData", "QuestData", "QuestRewardData", "QuestTreeData", "BlockLight", "FloorPaper", "HitBlood", "Light", "ReflectLight", "ShadowOfSight", "WeatherEffect", "WeatherRain", "Equipment", "GameWorld", "Bullet", "Coin", "DashShadow", "Goods", "Item", "Laser", "OilGold", "TarotCard", "Achievement", "CameraControl", "Chapter", "CoinCount", "Controller", "Dungeon", "EventHelper", "FrameAvatar", "Game", "GameFinish", "GameOver", "HealthBar", "Inventory", "JoyController", "Joystick", "KeyboardController", "Loading", "Logic", "MeleeCollideHelper", "MeleeShadowWeapon", "MeleeWeapon", "NonPlayer", "OilGoldCount", "Player", "PlayerAvatar", "PlayerWeapon", "RealCoinCount", "Shield", "Shooter", "Start", "Test", "Tile", "WalkSmoke", "WxHelper", "AoeManager", "BaseManager", "BuildingManager", "DungeonStyleManager", "EffectItemManager", "EquipmentManager", "FloatingLabelManager", "InventoryManager", "ItemManager", "LightManager", "LoadingManager", "MapManager", "MonsterManager", "MonsterRandomAttr", "NonPlayerManager", "ProfileManager", "SpecialManager", "StatusManager", "TalentManager", "TarotManager", "WeatherManager", "WordManager", "Chunk", "ChunkLookCamera", "ChunkWorld", "Seeker", "WorldLoader", "OilLake", "PerlinNoise2D", "RectDoor", "RectDungeon", "RectRoom", "RoomType", "Status", "StatusConditionType", "StatusEventType", "EquipItemTalent", "FireGhost", "IceThron", "MagicCircle", "MagicIce", "OrganizationTalent", "ProfessionTalent", "Talent", "TalentDash", "TalentMagic", "TalentShield", "AchievementItem", "ActorIcon", "ActorIconList", "AttributeSelector", "BrightnessBar", "CellphoneItem", "CoolDownView", "CursorArea", "CutScene", "Dialogue", "Doll", "DollJoyStick", "FloatingLabel", "GameHud", "InventoryItem", "LoadingIcon", "MiniMap", "MiniTile", "PaletteSelector", "ParallaxBackground", "PickAvatar", "PlayerInfoDialog", "SatietyView", "SaveSlotItem", "StartBackground", "StatusIcon", "StatusIconList", "TestFog", "Tips", "Toast", "AchievementItemDialog", "ActionSettingDialog", "BaseDialog", "CellphoneDialog", "DollMachineDialog", "EquipmentAndItemDialog", "InventoryDialog", "MartShelvesDialog", "NoticeDialog", "SaveSlotDialog", "SettingsDialog", "StatusIconDialog", "ActorUtils", "AudioPlayer", "DataUtils", "IndexZ", "LocalStorage", "NextStep", "NodeKey", "Random", "Random4Save", "Utils", "use_reversed_rotateBy" ]);