CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        size: { value: [500.0, 500.0], editor: { tooltip: '节点尺寸' } }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif
 
  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  uniform Properties {
    vec2 size;
  };
  
  float getA(vec2 pos){
    vec4 color = texture2D(texture, pos);
    float a = 0.0;
    if(color.r == 1.0&&color.g == 1.0&&color.b == 1.0){
      a = 0.0;
    }else{
      a = 1.0;
    }
    return a;
  }
  float blur13(vec2 pos){
    float alpha = 0.0;
    vec2 off1 = vec2(1.411764705882353);
    vec2 off2 = vec2(3.2941176470588234);
    vec2 off3 = vec2(5.176470588235294);
    vec2 off4 = vec2(-1.411764705882353,1.411764705882353);
    vec2 off5 = vec2(-3.2941176470588234,3.2941176470588234);
    vec2 off6 = vec2(-5.176470588235294,5.176470588235294);
    alpha += getA(pos) * 0.1964825501511404;
    alpha += getA(pos + (off1 / size)) * 0.1484534823364172;
    alpha += getA(pos - (off1 / size)) * 0.1484534823364172;
    alpha += getA(pos + (off2 / size)) * 0.04723519892522366;
    alpha += getA(pos - (off2 / size)) * 0.04723519892522366;
    alpha += getA(pos + (off3 / size)) * 0.00519068120057402;
    alpha += getA(pos - (off3 / size)) * 0.00519068120057402;
    alpha += getA(pos + (off4 / size)) * 0.1484534823364172;
    alpha += getA(pos - (off4 / size)) * 0.1484534823364172;
    alpha += getA(pos + (off5 / size)) * 0.04723519892522366;
    alpha += getA(pos - (off5 / size)) * 0.04723519892522366;
    alpha += getA(pos + (off6 / size)) * 0.00519068120057402;
    alpha += getA(pos - (off6 / size)) * 0.00519068120057402;
    return alpha;
  }
  void main () {
    vec4 o = vec4(1, 1, 1, 0.8);
    o *= v_color;
    o.a = o.a*blur13(v_uv0);
    // if(o.r == 1.0&&o.g == 1.0&&o.b == 1.0){
    //   o.a = 0.0;
    // }
    ALPHA_TEST(o);
    gl_FragColor = o;
    
  }
}%