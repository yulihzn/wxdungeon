// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
          blendSrc: one_minus_dst_color
          blendDst: one
          blendSrcAlpha: one_minus_dst_color
          blendDstAlpha: one
      rasterizerState:
        cullMode: none
      properties:
        alphaThreshold: { value: 0.5 }
        screen: {value: [1280.0,720.0]}
        lightPos: {value: [0.5,0.5]}
        maxRadius: {value: 0.75}
        whRatio: {value: 1.0}
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  
  in vec4 a_color;
  out vec4 v_color;

  in float a_dist;
  out float v_dist;

  void main () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * cc_matWorld * pos;

    v_color = a_color;
    v_dist = a_dist;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  #if CC_SUPPORT_standard_derivatives
    #extension GL_OES_standard_derivatives : enable
  #endif

  precision highp float;
  
  #include <alpha-test>

  in vec4 v_color;
  in float v_dist;
  uniform Props {
    vec2 screen;
    vec2 lightPos;
    float maxRadius;
    float whRatio;
  };
  
  void main () {
    vec4 o = v_color;


    #if CC_SUPPORT_standard_derivatives
      float aa = fwidth(v_dist);
    #else
      float aa = 0.05;
    #endif
    
    float alpha = 1. - smoothstep(-aa, 0., abs(v_dist) - 1.0);
    o.rgb *= o.a;
    o *= alpha;
    // if(o.r > 0.5){
    //   o.a = 0.0;
    // }
    ALPHA_TEST(o);
    gl_FragColor = o;
  }
}%
