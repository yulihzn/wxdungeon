{
  "ver": "1.0.27",
  "uuid": "3a5df126-e02c-4eac-848c-4f809d6ec57a",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n#endif\nvarying vec4 v_color;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform vec4 outlineColor;\nuniform float outlineSize;\nuniform float textureSizeWidth;\nuniform float textureSizeHeight;\nint getIsStrokeWithAngel(float angel)\n{\n  int stroke = 0;\n  vec2 textureSize = vec2(textureSizeWidth,textureSizeHeight);\n  float rad = angel * 0.01745329252;\n  vec2 unit = 1.0 / textureSize.xy;\n  vec2 offset = vec2(outlineSize * cos(rad) * unit.x, outlineSize * sin(rad) * unit.y);\n  vec2 v = v_uv0 + offset;\n  vec4 curr_color = texture2D(texture, v);\n  if (curr_color.a < 0.5 )\n  {\n      stroke = 1;\n  }\n  if(curr_color.r == 0.0&&curr_color.g == 0.0&&curr_color.b == 0.0){\n      stroke = 1;\n  }\n  return stroke;\n}\nvoid main () {\n  vec4 curr_color = texture2D(texture, v_uv0);\n  if(curr_color.r == 0.0&&curr_color.g == 0.0&&curr_color.b == 0.0){\n      curr_color = vec4(0,0,0,0);\n      gl_FragColor = curr_color;\n      return;\n  }\n  if (curr_color.a < 0.5)\n  {\n      gl_FragColor = v_color*curr_color;\n      return;\n  }\n  if(v_uv0.x == 0.0||v_uv0.x==1.0||v_uv0.y==0.0||v_uv0.y==1.0)\n  {\n    curr_color = outlineColor;\n    gl_FragColor = v_color*curr_color;\n    return;\n  }\n  int strokeCount = 0;\n  strokeCount += getIsStrokeWithAngel(0.0);\n  strokeCount += getIsStrokeWithAngel(30.0);\n  strokeCount += getIsStrokeWithAngel(60.0);\n  strokeCount += getIsStrokeWithAngel(90.0);\n  strokeCount += getIsStrokeWithAngel(120.0);\n  strokeCount += getIsStrokeWithAngel(150.0);\n  strokeCount += getIsStrokeWithAngel(180.0);\n  strokeCount += getIsStrokeWithAngel(210.0);\n  strokeCount += getIsStrokeWithAngel(240.0);\n  strokeCount += getIsStrokeWithAngel(270.0);\n  strokeCount += getIsStrokeWithAngel(300.0);\n  strokeCount += getIsStrokeWithAngel(330.0);\n  if (strokeCount > 0)\n  {\n      curr_color = outlineColor;\n  }else {\n    curr_color = vec4(0,0,0,0.6);\n  }\n  gl_FragColor = v_color * curr_color;\n}"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nin vec4 v_color;\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nuniform Properties{\n  vec4 outlineColor;\n  float outlineSize;\n  float textureSizeWidth;\n  float textureSizeHeight;\n};\nint getIsStrokeWithAngel(float angel)\n{\n  int stroke = 0;\n  vec2 textureSize = vec2(textureSizeWidth,textureSizeHeight);\n  float rad = angel * 0.01745329252;\n  vec2 unit = 1.0 / textureSize.xy;\n  vec2 offset = vec2(outlineSize * cos(rad) * unit.x, outlineSize * sin(rad) * unit.y);\n  vec2 v = v_uv0 + offset;\n  vec4 curr_color = texture2D(texture, v);\n  if (curr_color.a < 0.5 )\n  {\n      stroke = 1;\n  }\n  if(curr_color.r == 0.0&&curr_color.g == 0.0&&curr_color.b == 0.0){\n      stroke = 1;\n  }\n  return stroke;\n}\nvoid main () {\n  vec4 curr_color = texture2D(texture, v_uv0);\n  if(curr_color.r == 0.0&&curr_color.g == 0.0&&curr_color.b == 0.0){\n      curr_color = vec4(0,0,0,0);\n      gl_FragColor = curr_color;\n      return;\n  }\n  if (curr_color.a < 0.5)\n  {\n      gl_FragColor = v_color*curr_color;\n      return;\n  }\n  if(v_uv0.x == 0.0||v_uv0.x==1.0||v_uv0.y==0.0||v_uv0.y==1.0)\n  {\n    curr_color = outlineColor;\n    gl_FragColor = v_color*curr_color;\n    return;\n  }\n  int strokeCount = 0;\n  strokeCount += getIsStrokeWithAngel(0.0);\n  strokeCount += getIsStrokeWithAngel(30.0);\n  strokeCount += getIsStrokeWithAngel(60.0);\n  strokeCount += getIsStrokeWithAngel(90.0);\n  strokeCount += getIsStrokeWithAngel(120.0);\n  strokeCount += getIsStrokeWithAngel(150.0);\n  strokeCount += getIsStrokeWithAngel(180.0);\n  strokeCount += getIsStrokeWithAngel(210.0);\n  strokeCount += getIsStrokeWithAngel(240.0);\n  strokeCount += getIsStrokeWithAngel(270.0);\n  strokeCount += getIsStrokeWithAngel(300.0);\n  strokeCount += getIsStrokeWithAngel(330.0);\n  if (strokeCount > 0)\n  {\n      curr_color = outlineColor;\n  }else {\n    curr_color = vec4(0,0,0,0.6);\n  }\n  gl_FragColor = v_color * curr_color;\n}"
      }
    }
  ],
  "subMetas": {}
}