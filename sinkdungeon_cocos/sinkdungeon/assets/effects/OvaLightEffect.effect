// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
        wh_ratio: {value: 1.0}
        radius: {value: 0.5}
        center: {value: [0.5,0.5]}
        angle: {value: 60.0}
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  uniform Properties{
    float wh_ratio;
    float radius;
    vec2 center;
    float angle;
  };
  #endif
  
  void main () {
    vec4 o = vec4(1, 1, 1, 1);
    o *= texture(texture, v_uv0);
    o *= v_color;
    float circle = radius * radius;
    float rx = center.x * wh_ratio;
    float ry = center.y;
    float blur = radius;//羽化
    float dis = (v_uv0.x * wh_ratio - rx) * (v_uv0.x * wh_ratio - rx) + (v_uv0.y  - ry) * (v_uv0.y - ry);
    float alpha = o.a;
    o.a = smoothstep(circle, circle - blur, dis);
    o.a*=alpha;
    float deg2rad = 0.017453;
    float x = v_uv0.x;
    float y = v_uv0.y;
    if(angle>180.0){
      if(y>0.5 && abs(0.5 - y) >= abs(0.5 - x) / tan((180.0 - angle / 2.0) * deg2rad)){
        o.a = 0.0;
      }
    } else{// 180度以内
        if(y>0.5 || abs(0.5 -y) < abs(0.5 - x) / tan(angle / 2.0 * deg2rad)){
          o.a = 0.0;
        }
    }
    gl_FragColor = o;
  }
}%
